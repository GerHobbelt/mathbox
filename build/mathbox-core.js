(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
module.exports = {"arrow.position": "uniform float worldUnit;\r\nuniform float lineDepth;\r\nuniform float lineWidth;\r\nuniform float focusDepth;\r\n\r\nuniform vec4 geometryClip;\r\nuniform float arrowSize;\r\nuniform float arrowSpace;\r\n\r\nattribute vec4 position4;\r\nattribute vec3 arrow;\r\nattribute vec2 attach;\r\n\r\n// External\r\nvec3 getPosition(vec4 xyzw, float canonical);\r\n\r\nvoid getArrowGeometry(vec4 xyzw, float near, float far, out vec3 left, out vec3 right, out vec3 start) {\r\n  right = getPosition(xyzw, 1.0);\r\n  left  = getPosition(vec4(near, xyzw.yzw), 0.0);\r\n  start = getPosition(vec4(far, xyzw.yzw), 0.0);\r\n}\r\n\r\nmat4 getArrowMatrix(vec3 left, vec3 right, vec3 start) {\r\n\r\n  float depth = focusDepth;\r\n  if (lineDepth < 1.0) {\r\n    // Depth blending\r\n    float z = max(0.00001, -right.z);\r\n    depth = mix(z, focusDepth, lineDepth);\r\n  }\r\n    \r\n  vec3 diff = left - right;\r\n  float l = length(diff);\r\n  if (l == 0.0) {\r\n    return mat4(1.0, 0.0, 0.0, 0.0,\r\n                0.0, 1.0, 0.0, 0.0,\r\n                0.0, 0.0, 1.0, 0.0,\r\n                0.0, 0.0, 0.0, 1.0);\r\n  }\r\n\r\n  // Construct TBN matrix around shaft\r\n  vec3 t = normalize(diff);\r\n  vec3 n = normalize(cross(t, t.yzx + vec3(.1, .2, .3)));\r\n  vec3 b = cross(n, t);\r\n  \r\n  // Shrink arrows when vector gets too small\r\n  // Approach linear scaling with cubic ease the smaller we get\r\n  float size = arrowSize * lineWidth * worldUnit * depth * 1.25;\r\n  diff = right - start;\r\n  l = length(diff) * arrowSpace;\r\n  float mini = clamp(1.0 - l / size * .333, 0.0, 1.0);\r\n  float scale = 1.0 - mini * mini * mini;\r\n  float range = size * scale;\r\n  \r\n  // Size to 2.5:1 ratio\r\n  float rangeNB = range / 2.5;\r\n\r\n  // Anchor at end position\r\n  return mat4(vec4(n * rangeNB,  0),\r\n              vec4(b * rangeNB,  0),\r\n              vec4(t * range, 0),\r\n              vec4(right,  1.0));\r\n}\r\n\r\nvec3 getArrowPosition() {\r\n  vec3 left, right, start;\r\n  \r\n  vec4 p = min(geometryClip, position4);\r\n  \r\n  getArrowGeometry(p, attach.x, attach.y, left, right, start);\r\n  mat4 matrix = getArrowMatrix(left, right, start);\r\n  return (matrix * vec4(arrow.xyz, 1.0)).xyz;\r\n\r\n}\r\n",
"axis.position": "uniform vec4 axisStep;\r\nuniform vec4 axisPosition;\r\n\r\nvec4 getAxisPosition(vec4 xyzw, inout vec4 stpq) {\r\n  return axisStep * xyzw.x + axisPosition;\r\n}\r\n",
"cartesian.position": "uniform mat4 viewMatrix;\r\n\r\nvec4 getCartesianPosition(vec4 position, inout vec4 stpq) {\r\n  return viewMatrix * vec4(position.xyz, 1.0);\r\n}\r\n",
"cartesian4.position": "uniform vec4 basisScale;\r\nuniform vec4 basisOffset;\r\nuniform vec4 viewScale;\r\nuniform vec4 viewOffset;\r\n\r\nvec4 getCartesian4Position(vec4 position, inout vec4 stpq) {\r\n  return position * basisScale + basisOffset;\r\n}\r\n",
"clamp.position": "uniform vec4 clampLimit;\r\n\r\nvec4 getClampXYZW(vec4 xyzw) {\r\n  return clamp(xyzw, vec4(0.0), clampLimit);\r\n}\r\n",
"color.opaque": "vec4 opaqueColor(vec4 color) {\r\n  return vec4(color.rgb, 1.0);\r\n}\r\n",
"face.position": "uniform vec4 geometryClip;\r\nattribute vec4 position4;\r\n\r\n// External\r\nvec3 getPosition(vec4 xyzw, float canonical);\r\n\r\nvec3 getFacePosition() {\r\n  vec4 p = min(geometryClip, position4);\r\n  return getPosition(p, 1.0);\r\n}\r\n",
"face.position.normal": "attribute vec4 position4;\r\n\r\n// External\r\nvec3 getPosition(vec4 xyzw, float canonical);\r\n\r\nvarying vec3 vNormal;\r\nvarying vec3 vLight;\r\nvarying vec3 vPosition;\r\n\r\nvoid getFaceGeometry(vec4 xyzw, out vec3 pos, out vec3 normal) {\r\n  vec3 a, b, c;\r\n\r\n  a   = getPosition(vec4(xyzw.xyz, 0.0), 0.0);\r\n  b   = getPosition(vec4(xyzw.xyz, 1.0), 0.0);\r\n  c   = getPosition(vec4(xyzw.xyz, 2.0), 0.0);\r\n\r\n  pos = getPosition(xyzw, 1.0);\r\n  normal = normalize(cross(c - a, b - a));\r\n}\r\n\r\nvec3 getFacePositionNormal() {\r\n  vec3 center, normal;\r\n\r\n  getFaceGeometry(position4, center, normal);\r\n  vNormal   = normal;\r\n  vLight    = normalize((viewMatrix * vec4(1.0, 2.0, 2.0, 0.0)).xyz);\r\n  vPosition = -center;\r\n\r\n  return center;\r\n}\r\n",
"float.encode": "/*\r\nFloat encoding technique by\r\nCarlos Scheidegger\r\nhttps://github.com/cscheid/lux/blob/master/src/shade/bits/encode_float.js\r\n\r\nConversion to GLSL by:\r\nhttp://concord-consortium.github.io/lab/experiments/webgl-gpgpu/script.js\r\n*/\r\n\r\nfloat shift_right(float v, float amt) { \r\n  v = floor(v) + 0.5; \r\n  return floor(v / exp2(amt)); \r\n}\r\n\r\nfloat shift_left(float v, float amt) { \r\n  return floor(v * exp2(amt) + 0.5); \r\n}\r\n\r\nfloat mask_last(float v, float bits) { \r\n  return mod(v, shift_left(1.0, bits)); \r\n}\r\n\r\nfloat extract_bits(float num, float from, float to) { \r\n  from = floor(from + 0.5); to = floor(to + 0.5); \r\n  return mask_last(shift_right(num, from), to - from); \r\n}\r\n\r\nvec4 encode_float(float val) { \r\n  if (val == 0.0) return vec4(0, 0, 0, 0); \r\n  float valuesign = val > 0.0 ? 0.0 : 1.0; \r\n  val = abs(val); \r\n  float exponent = floor(log2(val)); \r\n  float biased_exponent = exponent + 127.0; \r\n  float fraction = ((val / exp2(exponent)) - 1.0) * 8388608.0; \r\n  float t = biased_exponent / 2.0; \r\n  float last_bit_of_biased_exponent = fract(t) * 2.0; \r\n  float remaining_bits_of_biased_exponent = floor(t); \r\n  float byte4 = extract_bits(fraction, 0.0, 8.0) / 255.0; \r\n  float byte3 = extract_bits(fraction, 8.0, 16.0) / 255.0; \r\n  float byte2 = (last_bit_of_biased_exponent * 128.0 + extract_bits(fraction, 16.0, 23.0)) / 255.0; \r\n  float byte1 = (valuesign * 128.0 + remaining_bits_of_biased_exponent) / 255.0; \r\n  return vec4(byte4, byte3, byte2, byte1); \r\n}\r\n",
"float.index.pack": "uniform vec4 indexModulus;\r\n\r\nvec4 getSample(vec4 xyzw);\r\nvec4 getIndex(vec4 xyzw);\r\n\r\nvec4 floatPackIndex(vec4 xyzw) {\r\n  vec4 value = getSample(xyzw);\r\n  vec4 index = getIndex(xyzw);\r\n\r\n  vec4 offset = floor(index + .5) * indexModulus;\r\n  vec2 sum2 = offset.xy + offset.zw;\r\n  float sum = sum2.x + sum2.y;\r\n  return vec4(value.xyz, sum);\r\n}",
"float.stretch": "vec4 getSample(vec4 xyzw);\r\n\r\nfloat floatStretch(vec4 xyzw, float channelIndex) {\r\n  vec4 sample = getSample(xyzw);\r\n  vec2 xy = channelIndex > 1.5 ? sample.zw : sample.xy;\r\n  return mod(channelIndex, 2.0) > .5 ? xy.y : xy.x;\r\n}",
"fragment.clip.dashed": "varying float vClipStrokeWidth;\r\nvarying float vClipStrokeIndex;\r\nvarying vec3  vClipStrokeEven;\r\nvarying vec3  vClipStrokeOdd;\r\nvarying vec3  vClipStrokePosition;\r\n\r\nvoid clipStrokeFragment() {\r\n  bool odd = mod(vClipStrokeIndex, 2.0) >= 1.0;\r\n\r\n  vec3 tangent;\r\n  if (odd) {\r\n    tangent = vClipStrokeOdd;\r\n  }\r\n  else {\r\n    tangent = vClipStrokeEven;\r\n  }\r\n\r\n  float travel = dot(vClipStrokePosition, normalize(tangent)) / vClipStrokeWidth;\r\n  if (mod(travel, 16.0) > 8.0) {\r\n    discard;\r\n  }\r\n}\r\n",
"fragment.clip.dotted": "varying float vClipStrokeWidth;\r\nvarying float vClipStrokeIndex;\r\nvarying vec3  vClipStrokeEven;\r\nvarying vec3  vClipStrokeOdd;\r\nvarying vec3  vClipStrokePosition;\r\n\r\nvoid clipStrokeFragment() {\r\n  bool odd = mod(vClipStrokeIndex, 2.0) >= 1.0;\r\n\r\n  vec3 tangent;\r\n  if (odd) {\r\n    tangent = vClipStrokeOdd;\r\n  }\r\n  else {\r\n    tangent = vClipStrokeEven;\r\n  }\r\n\r\n  float travel = dot(vClipStrokePosition, normalize(tangent)) / vClipStrokeWidth;\r\n  if (mod(travel, 4.0) > 2.0) {\r\n    discard;\r\n  }\r\n}\r\n",
"fragment.clip.ends": "varying vec2 vClipEnds;\r\n\r\nvoid clipEndsFragment() {\r\n  if (vClipEnds.x < 0.0 || vClipEnds.y < 0.0) discard;\r\n}\r\n",
"fragment.clip.proximity": "varying float vClipProximity;\r\n\r\nvoid clipProximityFragment() {\r\n  if (vClipProximity >= 0.5) discard;\r\n}",
"fragment.color": "void setFragmentColor(vec4 color) {\r\n  gl_FragColor = color;\r\n}",
"fragment.map.rgba": "vec4 fragmentRGBA(vec4 rgba, vec4 stpq) {\r\n  return rgba;\r\n}",
"fragment.solid": "void setFragmentColor(vec4 color) {\r\n  if (color.a < 1.0) discard;\r\n  gl_FragColor = color;\r\n}",
"fragment.transparent": "void setFragmentColor(vec4 color) {\r\n  if (color.a >= 1.0) discard;\r\n  gl_FragColor = color;\r\n}",
"grid.position": "uniform vec4 gridPosition;\r\nuniform vec4 gridStep;\r\nuniform vec4 gridAxis;\r\n\r\nvec4 sampleData(vec2 xy);\r\n\r\nvec4 getGridPosition(vec4 xyzw) {\r\n  vec4 onAxis  = gridAxis * sampleData(vec2(xyzw.y, 0.0)).x;\r\n  vec4 offAxis = gridStep * xyzw.x + gridPosition;\r\n  return onAxis + offAxis;\r\n}\r\n",
"grow.position": "uniform float growScale;\r\nuniform vec4  growMask;\r\nuniform vec4  growAnchor;\r\n\r\nvec4 getSample(vec4 xyzw);\r\n\r\nvec4 getGrowSample(vec4 xyzw) {\r\n  vec4 anchor = xyzw * growMask + growAnchor;\r\n\r\n  vec4 position = getSample(xyzw);\r\n  vec4 center = getSample(anchor);\r\n\r\n  return mix(center, position, growScale);\r\n}",
"join.position": "uniform float joinStride;\r\nuniform float joinStrideInv;\r\n\r\nfloat getIndex(vec4 xyzw);\r\nvec4 getRest(vec4 xyzw);\r\nvec4 injectIndices(float a, float b);\r\n\r\nvec4 getJoinXYZW(vec4 xyzw) {\r\n\r\n  float a = getIndex(xyzw);\r\n  float b = a * joinStrideInv;\r\n\r\n  float integer  = floor(b);\r\n  float fraction = b - integer;\r\n  \r\n  return injectIndices(fraction * joinStride, integer) + getRest(xyzw);\r\n}\r\n",
"label.alpha": "varying float vPixelSize;\r\n\r\nvec4 getLabelAlphaColor(vec4 color, vec4 sample) {\r\n  float mask = clamp(sample.r * 1000.0, 0.0, 1.0);\r\n  float alpha = (sample.r - .5) * vPixelSize + .5;\r\n  float a = mask * alpha * color.a;\r\n  if (a <= 0.0) discard;\r\n  return vec4(color.xyz, a);\r\n}\r\n",
"label.map": "vec2 mapUV(vec4 uvwo, vec4 stpq) {\r\n  return uvwo.xy;\r\n}\r\n",
"label.outline": "uniform float outlineExpand;\r\nuniform float outlineStep;\r\nuniform vec3  outlineColor;\r\n\r\nvarying float vPixelSize;\r\n\r\nconst float PIXEL_STEP = 255.0 / 16.0;\r\n\r\nvec4 getLabelOutlineColor(vec4 color, vec4 sample) {\r\n  float ps = vPixelSize * PIXEL_STEP;\r\n  float os = outlineStep;\r\n\r\n  float sdf = sample.r - .5 + outlineExpand;\r\n  vec2  sdfs = vec2(sdf, sdf + os);\r\n  vec2  alpha = clamp(sdfs * ps + .5, 0.0, 1.0);\r\n\r\n  if (alpha.y <= 0.0) {\r\n    discard;\r\n  }\r\n\r\n  vec3 blend = color.xyz;\r\n  if (alpha.y > alpha.x) {\r\n    blend = sqrt(mix(outlineColor * outlineColor, blend * blend, alpha.x));\r\n  }\r\n  \r\n  return vec4(blend, alpha.y * color.a);\r\n}\r\n",
"layer.position": "uniform vec4 layerScale;\r\nuniform vec4 layerBias;\r\n\r\nvec4 layerPosition(vec4 position, inout vec4 stpq) {\r\n  return layerScale * position + layerBias;\r\n}\r\n",
"lerp.depth": "// External\r\nvec4 sampleData(vec4 xyzw);\r\n\r\nvec4 lerpDepth(vec4 xyzw) {\r\n  float x = xyzw.z;\r\n  float i = floor(x);\r\n  float f = x - i;\r\n    \r\n  vec4 xyzw1 = vec4(xyzw.xy, i, xyzw.w);\r\n  vec4 xyzw2 = vec4(xyzw.xy, i + 1.0, xyzw.w);\r\n  \r\n  vec4 a = sampleData(xyzw1);\r\n  vec4 b = sampleData(xyzw2);\r\n\r\n  return mix(a, b, f);\r\n}\r\n",
"lerp.height": "// External\r\nvec4 sampleData(vec4 xyzw);\r\n\r\nvec4 lerpHeight(vec4 xyzw) {\r\n  float x = xyzw.y;\r\n  float i = floor(x);\r\n  float f = x - i;\r\n    \r\n  vec4 xyzw1 = vec4(xyzw.x, i, xyzw.zw);\r\n  vec4 xyzw2 = vec4(xyzw.x, i + 1.0, xyzw.zw);\r\n  \r\n  vec4 a = sampleData(xyzw1);\r\n  vec4 b = sampleData(xyzw2);\r\n\r\n  return mix(a, b, f);\r\n}\r\n",
"lerp.items": "// External\r\nvec4 sampleData(vec4 xyzw);\r\n\r\nvec4 lerpItems(vec4 xyzw) {\r\n  float x = xyzw.w;\r\n  float i = floor(x);\r\n  float f = x - i;\r\n    \r\n  vec4 xyzw1 = vec4(xyzw.xyz, i);\r\n  vec4 xyzw2 = vec4(xyzw.xyz, i + 1.0);\r\n  \r\n  vec4 a = sampleData(xyzw1);\r\n  vec4 b = sampleData(xyzw2);\r\n\r\n  return mix(a, b, f);\r\n}\r\n",
"lerp.width": "// External\r\nvec4 sampleData(vec4 xyzw);\r\n\r\nvec4 lerpWidth(vec4 xyzw) {\r\n  float x = xyzw.x;\r\n  float i = floor(x);\r\n  float f = x - i;\r\n    \r\n  vec4 xyzw1 = vec4(i, xyzw.yzw);\r\n  vec4 xyzw2 = vec4(i + 1.0, xyzw.yzw);\r\n  \r\n  vec4 a = sampleData(xyzw1);\r\n  vec4 b = sampleData(xyzw2);\r\n\r\n  return mix(a, b, f);\r\n}\r\n",
"line.position": "// Units and calibration\r\nuniform float worldUnit;\r\nuniform float lineWidth;\r\nuniform float lineDepth;\r\nuniform float focusDepth;\r\n\r\n// General data index\r\nuniform vec4 geometryClip;\r\nattribute vec4 position4;\r\n\r\n// (Start/mid/end -1/0/1, top/bottom -1,1) \r\nattribute vec2 line;\r\n\r\n// 0...1 for round or bevel joins\r\n#ifdef LINE_JOIN_DETAIL\r\nattribute float joint;\r\n#else\r\nconst float joint = 0.0;\r\n#endif\r\n\r\n// Knock out excessively long line segments (e.g. for asymtpotes)\r\n#ifdef LINE_PROXIMITY\r\nuniform float lineProximity;\r\nvarying float vClipProximity;\r\n#endif\r\n\r\n// Ghetto line stroking (local only, not global)\r\n#ifdef LINE_STROKE\r\nvarying float vClipStrokeWidth;\r\nvarying float vClipStrokeIndex;\r\nvarying vec3  vClipStrokeEven;\r\nvarying vec3  vClipStrokeOdd;\r\nvarying vec3  vClipStrokePosition;\r\n#endif\r\n\r\n// External\r\nvec3 getPosition(vec4 xyzw, float canonical);\r\n\r\n// Clip line ends for arrows / decoration\r\n#ifdef LINE_CLIP\r\nuniform float clipRange;\r\nuniform vec2  clipStyle;\r\nuniform float clipSpace;\r\n\r\nattribute vec2 strip;\r\n\r\nvarying vec2 vClipEnds;\r\n\r\nvoid clipEnds(vec4 xyzw, vec3 center, vec3 pos) {\r\n\r\n  // Sample end of line strip\r\n  vec4 xyzwE = vec4(strip.y, xyzw.yzw);\r\n  vec3 end   = getPosition(xyzwE, 0.0);\r\n\r\n  // Sample start of line strip\r\n  vec4 xyzwS = vec4(strip.x, xyzw.yzw);\r\n  vec3 start = getPosition(xyzwS, 0.0);\r\n\r\n  // Measure length\r\n  vec3 diff = end - start;\r\n  float l = length(diff) * clipSpace;\r\n\r\n  // Arrow length (=2.5x radius)\r\n  float arrowSize = 1.25 * clipRange * lineWidth * worldUnit;\r\n\r\n  vClipEnds = vec2(1.0);\r\n\r\n  if (clipStyle.y > 0.0) {\r\n    // Depth blend end\r\n    float depth = focusDepth;\r\n    if (lineDepth < 1.0) {\r\n      float z = max(0.00001, -end.z);\r\n      depth = mix(z, focusDepth, lineDepth);\r\n    }\r\n    \r\n    // Absolute arrow length\r\n    float size = arrowSize * depth;\r\n\r\n    // Adjust clip range\r\n    // Approach linear scaling with cubic ease the smaller we get\r\n    float mini = clamp(1.0 - l / size * .333, 0.0, 1.0);\r\n    float scale = 1.0 - mini * mini * mini; \r\n    float invrange = 1.0 / (size * scale);\r\n  \r\n    // Clip end\r\n    diff = end - center;\r\n    if(diff == vec3(0.0))\r\n      vClipEnds.x = -1.0;\r\n    else {\r\n      diff = normalize(end - center);\r\n      float d = dot(end - pos, diff);\r\n      vClipEnds.x = d * invrange - 1.0;\r\n    }\r\n  }\r\n\r\n  if (clipStyle.x > 0.0) {\r\n    // Depth blend start\r\n    float depth = focusDepth;\r\n    if (lineDepth < 1.0) {\r\n      float z = max(0.00001, -start.z);\r\n      depth = mix(z, focusDepth, lineDepth);\r\n    }\r\n    \r\n    // Absolute arrow length\r\n    float size = arrowSize * depth;\r\n\r\n    // Adjust clip range\r\n    // Approach linear scaling with cubic ease the smaller we get\r\n    float mini = clamp(1.0 - l / size * .333, 0.0, 1.0);\r\n    float scale = 1.0 - mini * mini * mini; \r\n    float invrange = 1.0 / (size * scale);\r\n  \r\n    // Clip start \r\n    diff = center - start;\r\n    if(diff == vec3(0.0))\r\n      vClipEnds.y = -1.0;\r\n    else {\r\n      diff = normalize(center - start);\r\n      float d = dot(pos - start, diff);\r\n      vClipEnds.y = d * invrange - 1.0;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n#endif\r\n\r\n// Adjust left/center/right to be inside near/far z range\r\nconst float epsilon = 1e-5;\r\nvoid fixCenter(inout vec3 left, inout vec3 center, inout vec3 right) {\r\n  if (center.z >= 0.0) {\r\n    if (left.z < 0.0) {\r\n      float d = (center.z + epsilon) / (center.z - left.z);\r\n      center = mix(center, left, d);\r\n    }\r\n    else if (right.z < 0.0) {\r\n      float d = (center.z + epsilon) / (center.z - right.z);\r\n      center = mix(center, right, d);\r\n    }\r\n  }\r\n\r\n  if (left.z >= 0.0) {\r\n    if (center.z < 0.0) {\r\n      float d = (left.z + epsilon) / (left.z - center.z);\r\n      left = mix(left, center, d);\r\n    }\r\n  }\r\n\r\n  if (right.z >= 0.0) {\r\n    if (center.z < 0.0) {\r\n      float d = (right.z + epsilon) / (right.z - center.z);\r\n      right = mix(right, center, d);\r\n    }\r\n  }\r\n}\r\n\r\n// Sample the source data in an edge-aware manner\r\nvoid getLineGeometry(vec4 xyzw, float edge, out vec3 left, out vec3 center, out vec3 right) {\r\n  vec4 delta = vec4(1.0, 0.0, 0.0, 0.0);\r\n\r\n  center =                 getPosition(xyzw, 1.0);\r\n  left   = (edge > -0.5) ? getPosition(xyzw - delta, 0.0) : center;\r\n  right  = (edge < 0.5)  ? getPosition(xyzw + delta, 0.0) : center;\r\n}\r\n\r\n// Calculate the position for a vertex along the line, including joins\r\nvec3 getLineJoin(float edge, bool odd, vec3 left, vec3 center, vec3 right, float width, float offset, float joint) {\r\n  vec2 join = vec2(1.0, 0.0);\r\n\r\n  fixCenter(left, center, right);\r\n\r\n  vec4 a = vec4(left.xy, right.xy);\r\n  vec4 b = a / vec4(left.zz, right.zz);\r\n\r\n  vec2 l = b.xy;\r\n  vec2 r = b.zw;\r\n  vec2 c = center.xy / center.z;\r\n\r\n  vec4 d = vec4(l, c) - vec4(c, r);\r\n  float l1 = dot(d.xy, d.xy);\r\n  float l2 = dot(d.zw, d.zw);\r\n\r\n  if (l1 + l2 > 0.0) {\r\n    \r\n    if (edge > 0.5 || l2 == 0.0) {\r\n      vec2 nl = normalize(d.xy);\r\n      vec2 tl = vec2(nl.y, -nl.x);\r\n\r\n#ifdef LINE_PROXIMITY\r\n      vClipProximity = 1.0;\r\n#endif\r\n\r\n#ifdef LINE_STROKE\r\n      vClipStrokeEven = vClipStrokeOdd = normalize(left - center);\r\n#endif\r\n      join = tl;\r\n    }\r\n    else if (edge < -0.5 || l1 == 0.0) {\r\n      vec2 nr = normalize(d.zw);\r\n      vec2 tr = vec2(nr.y, -nr.x);\r\n\r\n#ifdef LINE_PROXIMITY\r\n      vClipProximity = 1.0;\r\n#endif\r\n\r\n#ifdef LINE_STROKE\r\n      vClipStrokeEven = vClipStrokeOdd = normalize(center - right);\r\n#endif\r\n      join = tr;\r\n    }\r\n    else {\r\n      // Limit join stretch for tiny segments\r\n      float lmin2 = min(l1, l2) / (width * width);\r\n\r\n      // Hide line segment if ratio of leg lengths exceeds promixity threshold\r\n#ifdef LINE_PROXIMITY\r\n      float lr     = l1 / l2;\r\n      float rl     = l2 / l1;\r\n      float ratio  = max(lr, rl);\r\n      float thresh = lineProximity + 1.0;\r\n      vClipProximity = (ratio > thresh * thresh) ? 1.0 : 0.0;\r\n#endif\r\n\r\n      // Calculate normals/tangents\r\n      vec2 nl = normalize(d.xy);\r\n      vec2 nr = normalize(d.zw);\r\n\r\n      // Calculate tangents\r\n      vec2 tl = vec2(nl.y, -nl.x);\r\n      vec2 tr = vec2(nr.y, -nr.x);\r\n\r\n#ifdef LINE_PROXIMITY\r\n      // Mix tangents according to leg lengths\r\n      vec2 tc = normalize(mix(tl, tr, l1/(l1+l2)));\r\n#else\r\n      // Average tangent\r\n      vec2 tc = normalize(tl + tr);\r\n#endif\r\n    \r\n      // Miter join\r\n      float cosA   = dot(nl, tc);\r\n      float sinA   = max(0.1, abs(dot(tl, tc)));\r\n      float factor = cosA / sinA;\r\n      float scale  = sqrt(1.0 + min(lmin2, factor * factor));\r\n\r\n      // Stroke normals\r\n#ifdef LINE_STROKE\r\n      vec3 stroke1 = normalize(left - center);\r\n      vec3 stroke2 = normalize(center - right);\r\n\r\n      if (odd) {\r\n        vClipStrokeEven = stroke1;\r\n        vClipStrokeOdd  = stroke2;\r\n      }\r\n      else {\r\n        vClipStrokeEven = stroke2;\r\n        vClipStrokeOdd  = stroke1;\r\n      }\r\n#endif\r\n\r\n#ifdef LINE_JOIN_MITER\r\n      // Apply straight up miter\r\n      join = tc * scale;\r\n#endif\r\n\r\n#ifdef LINE_JOIN_ROUND\r\n      // Slerp bevel join into circular arc\r\n      float dotProduct = dot(nl, nr);\r\n      float angle = acos(dotProduct);\r\n      float sinT  = sin(angle);\r\n      join = (sin((1.0 - joint) * angle) * tl + sin(joint * angle) * tr) / sinT;\r\n#endif\r\n\r\n#ifdef LINE_JOIN_BEVEL\r\n      // Direct bevel join between two flat ends\r\n      float dotProduct = dot(nl, nr);\r\n      join = mix(tl, tr, joint);\r\n#endif\r\n\r\n#ifdef LINE_JOIN_DETAIL\r\n      // Check if on inside or outside of joint\r\n      float crossProduct = nl.x * nr.y - nl.y * nr.x;\r\n      if (offset * crossProduct < 0.0) {\r\n        // For near-180-degree bends, correct back to a miter to avoid discontinuities\r\n        float ratio = clamp(-dotProduct * 2.0 - 1.0, 0.0, 1.0);\r\n        // Otherwise collapse the inside vertices into one.\r\n        join = mix(tc * scale, join, ratio * ratio * ratio);\r\n      }\r\n#endif\r\n\r\n    }\r\n    return vec3(join, 0.0);\r\n  }\r\n  else {\r\n    return vec3(0.0);\r\n  }\r\n\r\n}\r\n\r\n// Calculate final line position\r\nvec3 getLinePosition() {\r\n  vec3 left, center, right, join;\r\n\r\n  // left/center/right\r\n  float edge = line.x;\r\n  // up/down\r\n  float offset = line.y;\r\n\r\n  // Clip data\r\n  vec4 p = min(geometryClip, position4);\r\n  edge += max(0.0, position4.x - geometryClip.x);\r\n\r\n  // Get position + adjacent neighbours\r\n  getLineGeometry(p, edge, left, center, right);\r\n\r\n#ifdef LINE_STROKE\r\n  // Set parameters for line stroke fragment shader\r\n  vClipStrokePosition = center;\r\n  vClipStrokeIndex = p.x;\r\n  bool odd = mod(p.x, 2.0) >= 1.0;\r\n#else\r\n  bool odd = true;\r\n#endif\r\n\r\n  // Divide line width up/down\r\n  float width = lineWidth * 0.5;\r\n\r\n  float depth = focusDepth;\r\n  if (lineDepth < 1.0) {\r\n    // Depth blending\r\n    float z = max(0.00001, -center.z);\r\n    depth = mix(z, focusDepth, lineDepth);\r\n  }\r\n  width *= depth;\r\n\r\n  // Convert to world units\r\n  width *= worldUnit;\r\n\r\n  // Calculate line join\r\n  join = getLineJoin(edge, odd, left, center, right, width, offset, joint);\r\n  vec3 pos = center + join * offset * width;\r\n\r\n#ifdef LINE_STROKE\r\n  vClipStrokeWidth = width;\r\n#endif\r\n\r\n#ifdef LINE_CLIP\r\n  clipEnds(p, center, pos);\r\n#endif\r\n\r\n  return pos;\r\n}\r\n",
"map.2d.data": "uniform vec2 dataResolution;\r\nuniform vec2 dataPointer;\r\n\r\nvec2 map2DData(vec2 xy) {\r\n  return fract((xy + dataPointer) * dataResolution);\r\n}\r\n",
"map.2d.data.wrap": "uniform vec2 dataResolution;\r\nuniform vec2 dataPointer;\r\n\r\nvec2 map2DData(vec2 xy) {\r\n  return fract((xy + dataPointer) * dataResolution);\r\n}\r\n",
"map.xyzw.2dv": "void mapXyzw2DV(vec4 xyzw, out vec2 xy, out float z) {\r\n  xy = xyzw.xy;\r\n  z  = xyzw.z;\r\n}\r\n\r\n",
"map.xyzw.align": "vec4 alignXYZW(vec4 xyzw) {\r\n  return floor(xyzw + .5);\r\n}\r\n\r\n",
"map.xyzw.texture": "uniform float textureItems;\r\nuniform float textureHeight;\r\n\r\nvec2 mapXyzwTexture(vec4 xyzw) {\r\n  \r\n  float x = xyzw.x;\r\n  float y = xyzw.y;\r\n  float z = xyzw.z;\r\n  float i = xyzw.w;\r\n  \r\n  return vec2(i, y) + vec2(x, z) * vec2(textureItems, textureHeight);\r\n}\r\n\r\n",
"mesh.fragment.color": "varying vec4 vColor;\r\n\r\nvec4 getColor() {\r\n  return vColor;\r\n}\r\n",
"mesh.fragment.map": "#ifdef POSITION_STPQ\r\nvarying vec4 vSTPQ;\r\n#endif\r\n#ifdef POSITION_U\r\nvarying float vU;\r\n#endif\r\n#ifdef POSITION_UV\r\nvarying vec2 vUV;\r\n#endif\r\n#ifdef POSITION_UVW\r\nvarying vec3 vUVW;\r\n#endif\r\n#ifdef POSITION_UVWO\r\nvarying vec4 vUVWO;\r\n#endif\r\n\r\nvec4 getSample(vec4 uvwo, vec4 stpq);\r\n\r\nvec4 getMapColor() {\r\n  #ifdef POSITION_STPQ\r\n  vec4 stpq = vSTPQ;\r\n  #else\r\n  vec4 stpq = vec4(0.0);\r\n  #endif\r\n\r\n  #ifdef POSITION_U\r\n  vec4 uvwo = vec4(vU, 0.0, 0.0, 0.0);\r\n  #endif\r\n  #ifdef POSITION_UV\r\n  vec4 uvwo = vec4(vUV, 0.0, 0.0);\r\n  #endif\r\n  #ifdef POSITION_UVW\r\n  vec4 uvwo = vec4(vUVW, 0.0);\r\n  #endif\r\n  #ifdef POSITION_UVWO\r\n  vec4 uvwo = vec4(vUVWO);\r\n  #endif\r\n\r\n  return getSample(uvwo, stpq);\r\n}\r\n",
"mesh.fragment.mask": "varying float vMask;\r\n\r\nfloat ease(float t) {\r\n  t = clamp(t, 0.0, 1.0);\r\n  return t * t * (3.0 - 2.0 * t);\r\n}\r\n\r\nvec4 maskColor() {\r\n  if (vMask <= 0.0) discard;\r\n  return vec4(vec3(1.0), ease(vMask));\r\n}\r\n",
"mesh.fragment.material": "#ifdef POSITION_STPQ\r\nvarying vec4 vSTPQ;\r\n#endif\r\n#ifdef POSITION_U\r\nvarying float vU;\r\n#endif\r\n#ifdef POSITION_UV\r\nvarying vec2 vUV;\r\n#endif\r\n#ifdef POSITION_UVW\r\nvarying vec3 vUVW;\r\n#endif\r\n#ifdef POSITION_UVWO\r\nvarying vec4 vUVWO;\r\n#endif\r\n\r\nvec4 getSample(vec4 rgba, vec4 stpq);\r\n\r\nvec4 getMaterialColor(vec4 rgba) {\r\n  vec4 stpq = vec4(0.0);\r\n\r\n  #ifdef POSITION_U\r\n  stpq.x = vU;\r\n  #endif\r\n  #ifdef POSITION_UV\r\n  stpq.xy = vUV;\r\n  #endif\r\n  #ifdef POSITION_UVW\r\n  stpq.xyz = vUVW;\r\n  #endif\r\n  #ifdef POSITION_UVWO\r\n  stpq = vUVWO;\r\n  #endif\r\n\r\n  #ifdef POSITION_STPQ\r\n  stpq = vSTPQ;\r\n  #endif\r\n\r\n  return getSample(rgba, stpq);\r\n}\r\n",
"mesh.fragment.shaded": "varying vec3 vNormal;\r\nvarying vec3 vLight;\r\nvarying vec3 vPosition;\r\n\r\nvec3 offSpecular(vec3 color) {\r\n  vec3 c = 1.0 - color;\r\n  return 1.0 - c * c;\r\n}\r\n\r\nvec4 getShadedColor(vec4 rgba) {\r\n  \r\n  vec3 color = rgba.xyz;\r\n  vec3 color2 = offSpecular(rgba.xyz);\r\n\r\n  vec3 normal = normalize(vNormal);\r\n  vec3 light = normalize(vLight);\r\n  vec3 position = normalize(vPosition);\r\n  \r\n  float side    = gl_FrontFacing ? -1.0 : 1.0;\r\n  float cosine  = side * dot(normal, light);\r\n  float diffuse = mix(max(0.0, cosine), .5 + .5 * cosine, .1);\r\n  \r\n  vec3  halfLight = normalize(light + position);\r\n\tfloat cosineHalf = max(0.0, side * dot(normal, halfLight));\r\n\tfloat specular = pow(cosineHalf, 16.0);\r\n\t\r\n\treturn vec4(color * (diffuse * .9 + .05) + .25 * color2 * specular, rgba.a);\r\n}\r\n",
"mesh.fragment.texture": "",
"mesh.gamma.in": "vec4 getGammaInColor(vec4 rgba) {\r\n  return vec4(rgba.rgb * rgba.rgb, rgba.a);\r\n}\r\n",
"mesh.gamma.out": "vec4 getGammaOutColor(vec4 rgba) {\r\n  return vec4(sqrt(rgba.rgb), rgba.a);\r\n}\r\n",
"mesh.map.uvwo": "vec4 mapUVWO(vec4 uvwo, vec4 stpq) {\r\n  return uvwo;\r\n}\r\n",
"mesh.position": "uniform vec4 geometryClip;\r\nattribute vec4 position4;\r\n\r\n// External\r\nvec3 getPosition(vec4 xyzw, float canonical);\r\n\r\nvec3 getMeshPosition() {\r\n  vec4 p = min(geometryClip, position4);\r\n  return getPosition(p, 1.0);\r\n}\r\n",
"mesh.vertex.color": "attribute vec4 position4;\r\nuniform vec4 geometryClip;\r\nvarying vec4 vColor;\r\n\r\n// External\r\nvec4 getSample(vec4 xyzw);\r\n\r\nvoid vertexColor() {\r\n  vec4 p = min(geometryClip, position4);\r\n  vColor = getSample(p);\r\n}\r\n",
"mesh.vertex.mask": "attribute vec4 position4;\r\nuniform vec4 geometryResolution;\r\nuniform vec4 geometryClip;\r\nvarying float vMask;\r\n\r\n// External\r\nfloat getSample(vec4 xyzw);\r\n\r\nvoid maskLevel() {\r\n  vec4 p = min(geometryClip, position4);\r\n  vMask = getSample(p * geometryResolution);\r\n}\r\n",
"mesh.vertex.position": "uniform vec4 geometryResolution;\r\n\r\n#ifdef POSITION_STPQ\r\nvarying vec4 vSTPQ;\r\n#endif\r\n#ifdef POSITION_U\r\nvarying float vU;\r\n#endif\r\n#ifdef POSITION_UV\r\nvarying vec2 vUV;\r\n#endif\r\n#ifdef POSITION_UVW\r\nvarying vec3 vUVW;\r\n#endif\r\n#ifdef POSITION_UVWO\r\nvarying vec4 vUVWO;\r\n#endif\r\n\r\n// External\r\nvec3 getPosition(vec4 xyzw, in vec4 stpqIn, out vec4 stpqOut);\r\n\r\nvec3 getMeshPosition(vec4 xyzw, float canonical) {\r\n  vec4 stpqOut, stpqIn = xyzw * geometryResolution;\r\n  vec3 xyz = getPosition(xyzw, stpqIn, stpqOut);\r\n\r\n  #ifdef POSITION_MAP\r\n  if (canonical > 0.5) {\r\n    #ifdef POSITION_STPQ\r\n    vSTPQ = stpqOut;\r\n    #endif\r\n    #ifdef POSITION_U\r\n    vU = stpqOut.x;\r\n    #endif\r\n    #ifdef POSITION_UV\r\n    vUV = stpqOut.xy;\r\n    #endif\r\n    #ifdef POSITION_UVW\r\n    vUVW = stpqOut.xyz;\r\n    #endif\r\n    #ifdef POSITION_UVWO\r\n    vUVWO = stpqOut;\r\n    #endif\r\n  }\r\n  #endif\r\n  return xyz;\r\n}\r\n",
"move.position": "uniform float transitionEnter;\r\nuniform float transitionExit;\r\nuniform vec4  transitionScale;\r\nuniform vec4  transitionBias;\r\nuniform float transitionSkew;\r\nuniform float transitionActive;\r\n\r\nuniform vec4  moveFrom;\r\nuniform vec4  moveTo;\r\n\r\nfloat ease(float t) {\r\n  t = clamp(t, 0.0, 1.0);\r\n  return 1.0 - (2.0 - t) * t;\r\n}\r\n\r\nvec4 getTransitionPosition(vec4 xyzw, inout vec4 stpq) {\r\n  if (transitionActive < 0.5) return xyzw;\r\n\r\n  float enter   = transitionEnter;\r\n  float exit    = transitionExit;\r\n  float skew    = transitionSkew;\r\n  vec4  scale   = transitionScale;\r\n  vec4  bias    = transitionBias;\r\n\r\n  float factor  = 1.0 + skew;\r\n  float offset  = dot(vec4(1.0), stpq * scale + bias);\r\n\r\n  float a1 = ease(enter * factor - offset);\r\n  float a2 = ease(exit  * factor + offset - skew);\r\n\r\n  return xyzw + a1 * moveFrom + a2 * moveTo;\r\n}",
"object.mask.default": "vec4 getMask(vec4 xyzw) {\r\n  return vec4(1.0);\r\n}",
"point.alpha.circle": "varying float vPixelSize;\r\n\r\nfloat getDiscAlpha(float mask) {\r\n  // Approximation: 1 - x*x is approximately linear around x = 1 with slope 2\r\n  return vPixelSize * (1.0 - mask);\r\n  //  return vPixelSize * 2.0 * (1.0 - sqrt(mask));\r\n}\r\n",
"point.alpha.circle.hollow": "varying float vPixelSize;\r\n\r\nfloat getDiscHollowAlpha(float mask) {\r\n  return vPixelSize * (0.5 - 2.0 * abs(sqrt(mask) - .75));\r\n}\r\n",
"point.alpha.generic": "varying float vPixelSize;\r\n\r\nfloat getGenericAlpha(float mask) {\r\n  return vPixelSize * 2.0 * (1.0 - mask);\r\n}\r\n",
"point.alpha.generic.hollow": "varying float vPixelSize;\r\n\r\nfloat getGenericHollowAlpha(float mask) {\r\n  return vPixelSize * (0.5 - 2.0 * abs(mask - .75));\r\n}\r\n",
"point.edge": "varying vec2 vSprite;\r\n\r\nfloat getSpriteMask(vec2 xy);\r\nfloat getSpriteAlpha(float mask);\r\n\r\nvoid setFragmentColorFill(vec4 color) {\r\n  float mask = getSpriteMask(vSprite);\r\n  if (mask > 1.0) {\r\n    discard;\r\n  }\r\n  float alpha = getSpriteAlpha(mask);\r\n  if (alpha >= 1.0) {\r\n    discard;\r\n  }\r\n  gl_FragColor = vec4(color.rgb, alpha * color.a);\r\n}\r\n",
"point.fill": "varying vec2 vSprite;\r\n\r\nfloat getSpriteMask(vec2 xy);\r\nfloat getSpriteAlpha(float mask);\r\n\r\nvoid setFragmentColorFill(vec4 color) {\r\n  float mask = getSpriteMask(vSprite);\r\n  if (mask > 1.0) {\r\n    discard;\r\n  }\r\n  float alpha = getSpriteAlpha(mask);\r\n  if (alpha < 1.0) {\r\n    discard;\r\n  }\r\n  gl_FragColor = color;\r\n}\r\n\r\n",
"point.mask.circle": "varying float vPixelSize;\r\n\r\nfloat getCircleMask(vec2 uv) {\r\n  return dot(uv, uv);\r\n}\r\n",
"point.mask.diamond": "varying float vPixelSize;\r\n\r\nfloat getDiamondMask(vec2 uv) {\r\n  vec2 a = abs(uv);\r\n  return a.x + a.y;\r\n}\r\n",
"point.mask.down": "varying float vPixelSize;\r\n\r\nfloat getTriangleDownMask(vec2 uv) {\r\n  uv.y += .25;\r\n  return max(uv.y, abs(uv.x) * .866 - uv.y * .5 + .6);\r\n}\r\n",
"point.mask.left": "varying float vPixelSize;\r\n\r\nfloat getTriangleLeftMask(vec2 uv) {\r\n  uv.x += .25;\r\n  return max(uv.x, abs(uv.y) * .866 - uv.x * .5 + .6);\r\n}\r\n",
"point.mask.right": "varying float vPixelSize;\r\n\r\nfloat getTriangleRightMask(vec2 uv) {\r\n  uv.x -= .25;\r\n  return max(-uv.x, abs(uv.y) * .866 + uv.x * .5 + .6);\r\n}\r\n",
"point.mask.square": "varying float vPixelSize;\r\n\r\nfloat getSquareMask(vec2 uv) {\r\n  vec2 a = abs(uv);\r\n  return max(a.x, a.y);\r\n}\r\n",
"point.mask.up": "varying float vPixelSize;\r\n\r\nfloat getTriangleUpMask(vec2 uv) {\r\n  uv.y -= .25;\r\n  return max(-uv.y, abs(uv.x) * .866 + uv.y * .5 + .6);\r\n}\r\n",
"point.position": "uniform float pointDepth;\r\n\r\nuniform float pixelUnit;\r\nuniform float renderScale;\r\nuniform float renderScaleInv;\r\nuniform float focusDepth;\r\n\r\nuniform vec4 geometryClip;\r\nattribute vec4 position4;\r\nattribute vec2 sprite;\r\n\r\nvarying vec2 vSprite;\r\nvarying float vPixelSize;\r\n\r\nconst float pointScale = POINT_SHAPE_SCALE;\r\n\r\n// External\r\nfloat getPointSize(vec4 xyzw);\r\nvec3 getPosition(vec4 xyzw, float canonical);\r\n\r\nvec3 getPointPosition() {\r\n  vec4 p = min(geometryClip, position4);\r\n  vec3 center = getPosition(p, 1.0);\r\n\r\n  // Depth blending\r\n  // TODO: orthographic camera\r\n  // Workaround: set depth = 0\r\n  float z = -center.z;\r\n  float depth = mix(z, focusDepth, pointDepth);\r\n  \r\n  // Match device/unit mapping \r\n  // Sprite goes from -1..1, width = 2.\r\n  float pointSize = getPointSize(p);\r\n  float size = pointScale * pointSize * pixelUnit * .5;\r\n  float depthSize = depth * size;\r\n  \r\n  // Pad sprite by half a pixel to make the anti-aliasing straddle the pixel edge\r\n  // Note: pixelsize measures radius\r\n  float pixelSize = .5 * (pointDepth > 0.0 ? depthSize / z : size);\r\n  float paddedSize = pixelSize + 0.5;\r\n  float padFactor = paddedSize / pixelSize;\r\n\r\n  vPixelSize = paddedSize;\r\n  vSprite    = sprite;\r\n\r\n  return center + vec3(sprite * depthSize * renderScaleInv * padFactor, 0.0);\r\n}\r\n",
"point.size.uniform": "uniform float pointSize;\r\n\r\nfloat getPointSize(vec4 xyzw) {\r\n  return pointSize;\r\n}",
"point.size.varying": "uniform float pointSize;\r\n\r\nvec4 getSample(vec4 xyzw);\r\n\r\nfloat getPointSize(vec4 xyzw) {\r\n  return pointSize * getSample(xyzw).x;\r\n}",
"polar.position": "uniform float polarBend;\r\nuniform float polarFocus;\r\nuniform float polarAspect;\r\nuniform float polarHelix;\r\n\r\nuniform mat4 viewMatrix;\r\n\r\nvec4 getPolarPosition(vec4 position, inout vec4 stpq) {\r\n  if (polarBend > 0.0) {\r\n\r\n    if (polarBend < 0.001) {\r\n      // Factor out large addition/subtraction of polarFocus\r\n      // to avoid numerical error\r\n      // sin(x) ~ x\r\n      // cos(x) ~ 1 - x * x / 2\r\n      vec2 pb = position.xy * polarBend;\r\n      float ppbbx = pb.x * pb.x;\r\n      return viewMatrix * vec4(\r\n        position.x * (1.0 - polarBend + (pb.y * polarAspect)),\r\n        position.y * (1.0 - .5 * ppbbx) - (.5 * ppbbx) * polarFocus / polarAspect,\r\n        position.z + position.x * polarHelix * polarBend,\r\n        1.0\r\n      );\r\n    }\r\n    else {\r\n      vec2 xy = position.xy * vec2(polarBend, polarAspect);\r\n      float radius = polarFocus + xy.y;\r\n      return viewMatrix * vec4(\r\n        sin(xy.x) * radius,\r\n        (cos(xy.x) * radius - polarFocus) / polarAspect,\r\n        position.z + position.x * polarHelix * polarBend,\r\n        1.0\r\n      );\r\n    }\r\n  }\r\n  else {\r\n    return viewMatrix * vec4(position.xyz, 1.0);\r\n  }\r\n}",
"project.position": "uniform float styleZBias;\r\nuniform float styleZIndex;\r\n\r\nvoid setPosition(vec3 position) {\r\n  vec4 pos = projectionMatrix * vec4(position, 1.0);\r\n\r\n  // Apply relative Z bias\r\n  float bias  = (1.0 - styleZBias / 32768.0);\r\n  pos.z *= bias;\r\n  \r\n  // Apply large scale Z index changes\r\n  if (styleZIndex > 0.0) {\r\n    float z = pos.z / pos.w;\r\n    pos.z = ((z + 1.0) / (styleZIndex + 1.0) - 1.0) * pos.w;\r\n  }\r\n  \r\n  gl_Position = pos;\r\n}",
"project.readback": "// This is three.js' global uniform, missing from fragment shaders.\r\nuniform mat4 projectionMatrix;\r\n\r\nvec4 readbackPosition(vec3 position, vec4 stpq) {\r\n  vec4 pos = projectionMatrix * vec4(position, 1.0);\r\n  vec3 final = pos.xyz / pos.w;\r\n  if (final.z < -1.0) {\r\n    return vec4(0.0, 0.0, 0.0, -1.0);\r\n  }\r\n  else {\r\n    return vec4(final, -position.z);\r\n  }\r\n}\r\n",
"raw.position.scale": "uniform vec4 geometryScale;\r\nattribute vec4 position4;\r\n\r\nvec4 getRawPositionScale() {\r\n  return geometryScale * position4;\r\n}\r\n",
"repeat.position": "uniform vec4 repeatModulus;\r\n\r\nvec4 getRepeatXYZW(vec4 xyzw) {\r\n  return mod(xyzw + .5, repeatModulus) - .5;\r\n}\r\n",
"resample.padding": "uniform vec4 resampleBias;\r\n\r\nvec4 resamplePadding(vec4 xyzw) {\r\n  return xyzw + resampleBias;\r\n}",
"resample.relative": "uniform vec4 resampleFactor;\r\n\r\nvec4 resampleRelative(vec4 xyzw) {\r\n  return xyzw * resampleFactor;\r\n}",
"reveal.mask": "uniform float transitionEnter;\r\nuniform float transitionExit;\r\nuniform vec4  transitionScale;\r\nuniform vec4  transitionBias;\r\nuniform float transitionSkew;\r\nuniform float transitionActive;\r\n\r\nfloat getTransitionSDFMask(vec4 stpq) {\r\n  if (transitionActive < 0.5) return 1.0;\r\n\r\n  float enter   = transitionEnter;\r\n  float exit    = transitionExit;\r\n  float skew    = transitionSkew;\r\n  vec4  scale   = transitionScale;\r\n  vec4  bias    = transitionBias;\r\n\r\n  float factor  = 1.0 + skew;\r\n  float offset  = dot(vec4(1.0), stpq * scale + bias);\r\n\r\n  vec2 d = vec2(enter, exit) * factor + vec2(-offset, offset - skew);\r\n  if (exit  == 1.0) return d.x;\r\n  if (enter == 1.0) return d.y;\r\n  return min(d.x, d.y);\r\n}",
"root.position": "vec3 getRootPosition(vec4 position, in vec4 stpqIn, out vec4 stpqOut) {\r\n  stpqOut = stpqIn; // avoid inout confusion\r\n  return position.xyz;\r\n}",
"sample.2d": "uniform sampler2D dataTexture;\r\n\r\nvec4 sample2D(vec2 uv) {\r\n  return texture2D(dataTexture, uv);\r\n}\r\n",
"scale.position": "uniform vec4 scaleAxis;\r\nuniform vec4 scaleOffset;\r\n\r\nvec4 sampleData(float x);\r\n\r\nvec4 getScalePosition(vec4 xyzw) {\r\n  return scaleAxis * sampleData(xyzw.x).x + scaleOffset;\r\n}\r\n",
"screen.map.stpq": "uniform vec4 remapSTPQScale;\r\n\r\nvec4 screenMapSTPQ(vec4 xyzw, out vec4 stpq) {\r\n  stpq = xyzw * remapSTPQScale;\r\n  return xyzw;\r\n}\r\n",
"screen.map.xy": "uniform vec2 remapUVScale;\r\n\r\nvec4 screenMapXY(vec4 uvwo, vec4 stpq) {\r\n  return vec4(floor(remapUVScale * uvwo.xy), 0.0, 0.0);\r\n}\r\n",
"screen.map.xyzw": "uniform vec2 remapUVScale;\r\nuniform vec2 remapModulus;\r\nuniform vec2 remapModulusInv;\r\n\r\nvec4 screenMapXYZW(vec4 uvwo, vec4 stpq) {\r\n  vec2 st = floor(remapUVScale * uvwo.xy);\r\n  vec2 xy = st * remapModulusInv;\r\n  vec2 ixy = floor(xy);\r\n  vec2 fxy = xy - ixy;\r\n  vec2 zw = fxy * remapModulus;\r\n  return vec4(ixy.x, zw.y, ixy.y, zw.x);\r\n}\r\n",
"screen.pass.uv": "vec2 screenPassUV(vec4 uvwo, vec4 stpq) {\r\n  return uvwo.xy;\r\n}\r\n",
"screen.position": "void setScreenPosition(vec4 position) {\r\n  gl_Position = vec4(position.xy * 2.0 - 1.0, 0.5, 1.0);\r\n}\r\n",
"slice.position": "uniform vec4 sliceOffset;\r\n\r\nvec4 getSliceOffset(vec4 xyzw) {\r\n  return xyzw + sliceOffset;\r\n}\r\n",
"spherical.position": "uniform float sphericalBend;\r\nuniform float sphericalFocus;\r\nuniform float sphericalAspectX;\r\nuniform float sphericalAspectY;\r\nuniform float sphericalScaleY;\r\n\r\nuniform mat4 viewMatrix;\r\n\r\nvec4 getSphericalPosition(vec4 position, inout vec4 stpq) {\r\n  if (sphericalBend > 0.0001) {\r\n\r\n    vec3 xyz = position.xyz * vec3(sphericalBend, sphericalBend / sphericalAspectY * sphericalScaleY, sphericalAspectX);\r\n    float radius = sphericalFocus + xyz.z;\r\n    float cosine = cos(xyz.y) * radius;\r\n\r\n    return viewMatrix * vec4(\r\n      sin(xyz.x) * cosine,\r\n      sin(xyz.y) * radius * sphericalAspectY,\r\n      (cos(xyz.x) * cosine - sphericalFocus) / sphericalAspectX,\r\n      1.0\r\n    );\r\n  }\r\n  else {\r\n    return viewMatrix * vec4(position.xyz, 1.0);\r\n  }\r\n}",
"split.position": "uniform float splitStride;\r\n\r\nvec2 getIndices(vec4 xyzw);\r\nvec4 getRest(vec4 xyzw);\r\nvec4 injectIndex(float v);\r\n\r\nvec4 getSplitXYZW(vec4 xyzw) {\r\n  vec2 uv = getIndices(xyzw);\r\n  float offset = uv.x + uv.y * splitStride;\r\n  return injectIndex(offset) + getRest(xyzw);\r\n}\r\n",
"spread.position": "uniform vec4 spreadOffset;\r\nuniform mat4 spreadMatrix;\r\n\r\n// External\r\nvec4 getSample(vec4 xyzw);\r\n\r\nvec4 getSpreadSample(vec4 xyzw) {\r\n  vec4 sample = getSample(xyzw);\r\n  return sample + spreadMatrix * (spreadOffset + xyzw);\r\n}\r\n",
"sprite.fragment": "varying vec2 vSprite;\r\n\r\nvec4 getSample(vec2 xy);\r\n\r\nvec4 getSpriteColor() {\r\n  return getSample(vSprite);\r\n}",
"sprite.position": "uniform vec2 spriteOffset;\r\nuniform float spriteScale;\r\nuniform float spriteDepth;\r\nuniform float spriteSnap;\r\n\r\nuniform vec2 renderOdd;\r\nuniform float renderScale;\r\nuniform float renderScaleInv;\r\nuniform float pixelUnit;\r\nuniform float focusDepth;\r\n\r\nuniform vec4 geometryClip;\r\nattribute vec4 position4;\r\nattribute vec2 sprite;\r\n\r\nvarying float vPixelSize;\r\n\r\n// External\r\nvec3 getPosition(vec4 xyzw, float canonical);\r\nvec4 getSprite(vec4 xyzw);\r\n\r\nvec3 getSpritePosition() {\r\n  // Clip points\r\n  vec4 p = min(geometryClip, position4);\r\n  float diff = length(position4 - p);\r\n  if (diff > 0.0) {\r\n    return vec3(0.0, 0.0, 1000.0);\r\n  }\r\n\r\n  // Make sprites\r\n  vec3 center = getPosition(p, 1.0);\r\n  vec4 atlas = getSprite(p);\r\n\r\n  // Sprite goes from -1..1, width = 2.\r\n  // -1..1 -> -0.5..0.5\r\n  vec2 halfSprite = sprite * .5;\r\n  vec2 halfFlipSprite = vec2(halfSprite.x, -halfSprite.y);\r\n\r\n#ifdef POSITION_UV\r\n  // Assign UVs\r\n  vUV = atlas.xy + atlas.zw * (halfFlipSprite + .5);\r\n#endif\r\n\r\n  // Depth blending\r\n  // TODO: orthographic camera\r\n  // Workaround: set depth = 0\r\n  float depth = focusDepth, z;\r\n  z = -center.z;\r\n  if (spriteDepth < 1.0) {\r\n    depth = mix(z, focusDepth, spriteDepth);\r\n  }\r\n  \r\n  // Match device/unit mapping \r\n  float size = pixelUnit * spriteScale;\r\n  float depthSize = depth * size;\r\n\r\n  // Calculate pixelSize for anti-aliasing\r\n  float pixelSize = (spriteDepth > 0.0 ? depthSize / z : size);\r\n  vPixelSize = pixelSize;\r\n\r\n  // Position sprite\r\n  vec2 atlasOdd = fract(atlas.zw / 2.0);\r\n  vec2 offset = (spriteOffset + halfSprite * atlas.zw) * depthSize;\r\n  if (spriteSnap > 0.5) {\r\n    // Snap to pixel (w/ epsilon shift to avoid jitter)\r\n    return vec3(((floor(center.xy / center.z * renderScale + 0.001) + renderOdd + atlasOdd) * center.z + offset) * renderScaleInv, center.z);\r\n  }\r\n  else {\r\n    // Place directly\r\n    return center + vec3(offset * renderScaleInv, 0.0);\r\n  }\r\n\r\n}\r\n",
"stereographic.position": "uniform float stereoBend;\r\n\r\nuniform mat4 viewMatrix;\r\n\r\nvec4 getStereoPosition(vec4 position, inout vec4 stpq) {\r\n  if (stereoBend > 0.0001) {\r\n\r\n    vec3 pos = position.xyz;\r\n    float r = length(pos);\r\n    float z = r + pos.z;\r\n    vec3 project = vec3(pos.xy / z, r);\r\n    \r\n    vec3 lerped = mix(pos, project, stereoBend);\r\n\r\n    return viewMatrix * vec4(lerped, 1.0);\r\n  }\r\n  else {\r\n    return viewMatrix * vec4(position.xyz, 1.0);\r\n  }\r\n}",
"stereographic4.position": "uniform float stereoBend;\r\nuniform vec4 basisScale;\r\nuniform vec4 basisOffset;\r\nuniform mat4 viewMatrix;\r\nuniform vec2 view4D;\r\n\r\nvec4 getStereographic4Position(vec4 position, inout vec4 stpq) {\r\n  \r\n  vec4 transformed;\r\n  if (stereoBend > 0.0001) {\r\n\r\n    float r = length(position);\r\n    float w = r + position.w;\r\n    vec4 project = vec4(position.xyz / w, r);\r\n    \r\n    transformed = mix(position, project, stereoBend);\r\n  }\r\n  else {\r\n    transformed = position;\r\n  }\r\n\r\n  vec4 pos4 = transformed * basisScale - basisOffset;\r\n  vec3 xyz = (viewMatrix * vec4(pos4.xyz, 1.0)).xyz;\r\n  return vec4(xyz, pos4.w * view4D.y + view4D.x);\r\n}\r\n",
"stpq.sample.2d": "varying vec2 vST;\r\n\r\nvec4 getSample(vec2 st);\r\n\r\nvec4 getSTSample() {\r\n  return getSample(vST);\r\n}\r\n",
"stpq.xyzw.2d": "varying vec2 vUV;\r\n\r\nvoid setRawUV(vec4 xyzw) {\r\n  vUV = xyzw.xy;\r\n}\r\n",
"strip.position.normal": "uniform vec4 geometryClip;\r\nattribute vec4 position4;\r\nattribute vec3 strip;\r\n\r\n// External\r\nvec3 getPosition(vec4 xyzw, float canonical);\r\n\r\nvarying vec3 vNormal;\r\nvarying vec3 vLight;\r\nvarying vec3 vPosition;\r\n\r\nvoid getStripGeometry(vec4 xyzw, vec3 strip, out vec3 pos, out vec3 normal) {\r\n  vec3 a, b, c;\r\n\r\n  a   = getPosition(xyzw, 1.0);\r\n  b   = getPosition(vec4(xyzw.xyz, strip.x), 0.0);\r\n  c   = getPosition(vec4(xyzw.xyz, strip.y), 0.0);\r\n\r\n  normal = normalize(cross(c - a, b - a)) * strip.z;\r\n  \r\n  pos = a;\r\n}\r\n\r\nvec3 getStripPositionNormal() {\r\n  vec3 center, normal;\r\n\r\n  vec4 p = min(geometryClip, position4);\r\n\r\n  getStripGeometry(p, strip, center, normal);\r\n  vNormal   = normal;\r\n  vLight    = normalize((viewMatrix * vec4(1.0, 2.0, 2.0, 0.0)).xyz);\r\n  vPosition = -center;\r\n\r\n  return center;\r\n}\r\n",
"style.color": "uniform vec3 styleColor;\r\nuniform float styleOpacity;\r\n\r\nvec4 getStyleColor() {\r\n  return vec4(styleColor, styleOpacity);\r\n}\r\n",
"subdivide.depth": "uniform float subdivideBevel;\r\n\r\n// External\r\nvec4 sampleData(vec4 xyzw);\r\n\r\nvec4 subdivideDepth(vec4 xyzw) {\r\n  float x = xyzw.z;\r\n  float i = floor(x);\r\n  float f = x - i;\r\n\r\n  float minf = subdivideBevel * min(f, 1.0 - f);\r\n  float g = (f > 0.5) ? 1.0 - minf : (f < 0.5) ? minf : 0.5;\r\n\r\n  return sampleData(vec4(xyzw.xy, i + g, xyzw.w));\r\n}\r\n",
"subdivide.depth.lerp": "uniform float subdivideBevel;\r\n\r\n// External\r\nvec4 sampleData(vec4 xyzw);\r\n\r\nvec4 subdivideDepthLerp(vec4 xyzw) {\r\n  float x = xyzw.z;\r\n  float i = floor(x);\r\n  float f = x - i;\r\n\r\n  float minf = subdivideBevel * min(f, 1.0 - f);\r\n  float g = (f > 0.5) ? 1.0 - minf : (f < 0.5) ? minf : 0.5;\r\n\r\n  vec4 xyzw1 = vec4(xyzw.xy, i, xyzw.w);\r\n  vec4 xyzw2 = vec4(xyzw.xy, i + 1.0, xyzw.w);\r\n  \r\n  vec4 a = sampleData(xyzw1);\r\n  vec4 b = sampleData(xyzw2);\r\n\r\n  return mix(a, b, g);\r\n}\r\n",
"subdivide.height": "uniform float subdivideBevel;\r\n\r\n// External\r\nvec4 sampleData(vec4 xyzw);\r\n\r\nvec4 subdivideHeight(vec4 xyzw) {\r\n  float x = xyzw.y;\r\n  float i = floor(x);\r\n  float f = x - i;\r\n\r\n  float minf = subdivideBevel * min(f, 1.0 - f);\r\n  float g = (f > 0.5) ? 1.0 - minf : (f < 0.5) ? minf : 0.5;\r\n\r\n  return sampleData(vec4(xyzw.x, i + g, xyzw.zw));\r\n}\r\n",
"subdivide.height.lerp": "uniform float subdivideBevel;\r\n\r\n// External\r\nvec4 sampleData(vec4 xyzw);\r\n\r\nvec4 subdivideHeightLerp(vec4 xyzw) {\r\n  float x = xyzw.y;\r\n  float i = floor(x);\r\n  float f = x - i;\r\n\r\n  float minf = subdivideBevel * min(f, 1.0 - f);\r\n  float g = (f > 0.5) ? 1.0 - minf : (f < 0.5) ? minf : 0.5;\r\n\r\n  vec4 xyzw1 = vec4(xyzw.x, i, xyzw.zw);\r\n  vec4 xyzw2 = vec4(xyzw.x, i + 1.0, xyzw.zw);\r\n  \r\n  vec4 a = sampleData(xyzw1);\r\n  vec4 b = sampleData(xyzw2);\r\n\r\n  return mix(a, b, g);\r\n}\r\n",
"subdivide.items": "uniform float subdivideBevel;\r\n\r\n// External\r\nvec4 sampleData(vec4 xyzw);\r\n\r\nvec4 subdivideItems(vec4 xyzw) {\r\n  float x = xyzw.w;\r\n  float i = floor(x);\r\n  float f = x - i;\r\n\r\n  float minf = subdivideBevel * min(f, 1.0 - f);\r\n  float g = (f > 0.5) ? 1.0 - minf : (f < 0.5) ? minf : 0.5;\r\n\r\n  return sampleData(vec4(xyzw.xyz, i + g));\r\n}\r\n",
"subdivide.items.lerp": "uniform float subdivideBevel;\r\n\r\n// External\r\nvec4 sampleData(vec4 xyzw);\r\n\r\nvec4 subdivideItemsLerp(vec4 xyzw) {\r\n  float x = xyzw.w;\r\n  float i = floor(x);\r\n  float f = x - i;\r\n\r\n  float minf = subdivideBevel * min(f, 1.0 - f);\r\n  float g = (f > 0.5) ? 1.0 - minf : (f < 0.5) ? minf : 0.5;\r\n\r\n  vec4 xyzw1 = vec4(xyzw.xyz, i);\r\n  vec4 xyzw2 = vec4(xyzw.xyz, i + 1.0);\r\n  \r\n  vec4 a = sampleData(xyzw1);\r\n  vec4 b = sampleData(xyzw2);\r\n\r\n  return mix(a, b, g);\r\n}\r\n",
"subdivide.width": "uniform float subdivideBevel;\r\n\r\n// External\r\nvec4 sampleData(vec4 xyzw);\r\n\r\nvec4 subdivideWidth(vec4 xyzw) {\r\n  float x = xyzw.x;\r\n  float i = floor(x);\r\n  float f = x - i;\r\n\r\n  float minf = subdivideBevel * min(f, 1.0 - f);\r\n  float g = (f > 0.5) ? 1.0 - minf : (f < 0.5) ? minf : 0.5;\r\n\r\n  return sampleData(vec4(i + g, xyzw.yzw));\r\n}\r\n",
"subdivide.width.lerp": "uniform float subdivideBevel;\r\n\r\n// External\r\nvec4 sampleData(vec4 xyzw);\r\n\r\nvec4 subdivideWidthLerp(vec4 xyzw) {\r\n  float x = xyzw.x;\r\n  float i = floor(x);\r\n  float f = x - i;\r\n\r\n  float minf = subdivideBevel * min(f, 1.0 - f);\r\n  float g = (f > 0.5) ? 1.0 - minf : (f < 0.5) ? minf : 0.5;\r\n\r\n  vec4 xyzw1 = vec4(i, xyzw.yzw);\r\n  vec4 xyzw2 = vec4(i + 1.0, xyzw.yzw);\r\n  \r\n  vec4 a = sampleData(xyzw1);\r\n  vec4 b = sampleData(xyzw2);\r\n\r\n  return mix(a, b, g);\r\n}\r\n",
"surface.mask.hollow": "attribute vec4 position4;\r\n\r\nfloat getSurfaceHollowMask(vec4 xyzw) {\r\n  vec4 df = abs(fract(position4) - .5);\r\n  vec2 df2 = min(df.xy, df.zw);\r\n  float df3 = min(df2.x, df2.y);\r\n  return df3;\r\n}",
"surface.position": "uniform vec4 geometryClip;\r\nuniform vec4 geometryResolution;\r\nuniform vec4 mapSize;\r\n\r\nattribute vec4 position4;\r\n\r\n// External\r\nvec3 getPosition(vec4 xyzw, float canonical);\r\n\r\nvec3 getSurfacePosition() {\r\n  vec4 p = min(geometryClip, position4);\r\n  vec3 xyz = getPosition(p, 1.0);\r\n\r\n  // Overwrite UVs\r\n#ifdef POSITION_UV\r\n#ifdef POSITION_UV_INT\r\n  vUV = -.5 + (position4.xy * geometryResolution.xy) * mapSize.xy;\r\n#else\r\n  vUV = position4.xy * geometryResolution.xy;\r\n#endif\r\n#endif\r\n\r\n  return xyz;\r\n}\r\n",
"surface.position.normal": "uniform vec4 mapSize;\r\nuniform vec4 geometryResolution;\r\nuniform vec4 geometryClip;\r\nattribute vec4 position4;\r\nattribute vec2 surface;\r\n\r\n// External\r\nvec3 getPosition(vec4 xyzw, float canonical);\r\n\r\nvoid getSurfaceGeometry(vec4 xyzw, float edgeX, float edgeY, out vec3 left, out vec3 center, out vec3 right, out vec3 up, out vec3 down) {\r\n  vec4 deltaX = vec4(1.0, 0.0, 0.0, 0.0);\r\n  vec4 deltaY = vec4(0.0, 1.0, 0.0, 0.0);\r\n\r\n  /*\r\n  // high quality, 5 tap\r\n  center =                  getPosition(xyzw, 1.0);\r\n  left   = (edgeX > -0.5) ? getPosition(xyzw - deltaX, 0.0) : center;\r\n  right  = (edgeX < 0.5)  ? getPosition(xyzw + deltaX, 0.0) : center;\r\n  down   = (edgeY > -0.5) ? getPosition(xyzw - deltaY, 0.0) : center;\r\n  up     = (edgeY < 0.5)  ? getPosition(xyzw + deltaY, 0.0) : center;\r\n  */\r\n  \r\n  // low quality, 3 tap\r\n  center =                  getPosition(xyzw, 1.0);\r\n  left   =                  center;\r\n  down   =                  center;\r\n  right  = (edgeX < 0.5)  ? getPosition(xyzw + deltaX, 0.0) : (2.0 * center - getPosition(xyzw - deltaX, 0.0));\r\n  up     = (edgeY < 0.5)  ? getPosition(xyzw + deltaY, 0.0) : (2.0 * center - getPosition(xyzw - deltaY, 0.0));\r\n}\r\n\r\nvec3 getSurfaceNormal(vec3 left, vec3 center, vec3 right, vec3 up, vec3 down) {\r\n  vec3 dx = right - left;\r\n  vec3 dy = up    - down;\r\n  vec3 n = cross(dy, dx);\r\n  if (length(n) > 0.0) {\r\n    return normalize(n);\r\n  }\r\n  return vec3(0.0, 1.0, 0.0);\r\n}\r\n\r\nvarying vec3 vNormal;\r\nvarying vec3 vLight;\r\nvarying vec3 vPosition;\r\n\r\nvec3 getSurfacePositionNormal() {\r\n  vec3 left, center, right, up, down;\r\n\r\n  vec4 p = min(geometryClip, position4);\r\n\r\n  getSurfaceGeometry(p, surface.x, surface.y, left, center, right, up, down);\r\n  vNormal   = getSurfaceNormal(left, center, right, up, down);\r\n  vLight    = normalize((viewMatrix * vec4(1.0, 2.0, 2.0, 0.0)).xyz); // hardcoded directional light\r\n  vPosition = -center;\r\n\r\n#ifdef POSITION_UV\r\n#ifdef POSITION_UV_INT\r\n  vUV = -.5 + (position4.xy * geometryResolution.xy) * mapSize.xy;\r\n#else\r\n  vUV = position4.xy * geometryResolution.xy;\r\n#endif\r\n#endif\r\n  \r\n  return center;\r\n}\r\n",
"ticks.position": "uniform float worldUnit;\r\nuniform float focusDepth;\r\nuniform float tickSize;\r\nuniform float tickEpsilon;\r\nuniform vec3  tickNormal;\r\nuniform vec2  tickStrip;\r\n\r\nvec4 getSample(vec4 xyzw);\r\n\r\nvec3 transformPosition(vec4 position, in vec4 stpqIn, out vec4 stpqOut);\r\n\r\nvec3 getTickPosition(vec4 xyzw, in vec4 stpqIn, out vec4 stpqOut) {\r\n  float epsilon = tickEpsilon;\r\n\r\n  // determine tick direction\r\n  float leftX  = max(tickStrip.x, xyzw.y - 1.0);\r\n  float rightX = min(tickStrip.y, xyzw.y + 1.0);\r\n  \r\n  vec4 left    = getSample(vec4(leftX,  xyzw.zw, 0.0));\r\n  vec4 right   = getSample(vec4(rightX, xyzw.zw, 0.0));\r\n  vec4 diff    = right - left;\r\n\r\n  vec3 normal  = cross(normalize(diff.xyz + vec3(diff.w)), tickNormal);\r\n  float bias   = max(0.0, 1.0 - length(normal) * 2.0);\r\n       normal  = mix(normal, tickNormal.yzx, bias * bias);\r\n  \r\n  // transform (point) and (point + delta)\r\n  vec4 center  = getSample(vec4(xyzw.yzw, 0.0));\r\n  vec4 delta   = vec4(normal, 0.0) * epsilon;\r\n\r\n  vec4 a = center;\r\n  vec4 b = center + delta;\r\n\r\n  vec4 _;\r\n  vec3 c = transformPosition(a, stpqIn, stpqOut);\r\n  vec3 d = transformPosition(b, stpqIn, _);\r\n  \r\n  // sample on either side to create line\r\n  float line = xyzw.x - .5;\r\n  vec3  mid  = c;\r\n  vec3  side = normalize(d - c);\r\n\r\n  return mid + side * line * tickSize * worldUnit * focusDepth;\r\n}\r\n",
"transform3.position": "uniform mat4 transformMatrix;\r\n\r\nvec4 transformPosition(vec4 position, inout vec4 stpq) {\r\n  return transformMatrix * vec4(position.xyz, 1.0);\r\n}\r\n",
"transform4.position": "uniform mat4 transformMatrix;\r\nuniform vec4 transformOffset;\r\n\r\nvec4 transformPosition(vec4 position, inout vec4 stpq) {\r\n  return transformMatrix * position + transformOffset;\r\n}\r\n",
"view.position": "// Implicit three.js uniform\r\n// uniform mat4 viewMatrix;\r\n\r\nvec4 getViewPosition(vec4 position, inout vec4 stpq) {\r\n  return (viewMatrix * vec4(position.xyz, 1.0));\r\n}\r\n"};

},{}],2:[function(require,module,exports){
var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

;(function (exports) {
	'use strict';

  var Arr = (typeof Uint8Array !== 'undefined')
    ? Uint8Array
    : Array

	var PLUS   = '+'.charCodeAt(0)
	var SLASH  = '/'.charCodeAt(0)
	var NUMBER = '0'.charCodeAt(0)
	var LOWER  = 'a'.charCodeAt(0)
	var UPPER  = 'A'.charCodeAt(0)
	var PLUS_URL_SAFE = '-'.charCodeAt(0)
	var SLASH_URL_SAFE = '_'.charCodeAt(0)

	function decode (elt) {
		var code = elt.charCodeAt(0)
		if (code === PLUS ||
		    code === PLUS_URL_SAFE)
			return 62 // '+'
		if (code === SLASH ||
		    code === SLASH_URL_SAFE)
			return 63 // '/'
		if (code < NUMBER)
			return -1 //no match
		if (code < NUMBER + 10)
			return code - NUMBER + 26 + 26
		if (code < UPPER + 26)
			return code - UPPER
		if (code < LOWER + 26)
			return code - LOWER + 26
	}

	function b64ToByteArray (b64) {
		var i, j, l, tmp, placeHolders, arr

		if (b64.length % 4 > 0) {
			throw new Error('Invalid string. Length must be a multiple of 4')
		}

		// the number of equal signs (place holders)
		// if there are two placeholders, than the two characters before it
		// represent one byte
		// if there is only one, then the three characters before it represent 2 bytes
		// this is just a cheap hack to not do indexOf twice
		var len = b64.length
		placeHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0

		// base64 is 4/3 + up to two characters of the original data
		arr = new Arr(b64.length * 3 / 4 - placeHolders)

		// if there are placeholders, only get up to the last complete 4 chars
		l = placeHolders > 0 ? b64.length - 4 : b64.length

		var L = 0

		function push (v) {
			arr[L++] = v
		}

		for (i = 0, j = 0; i < l; i += 4, j += 3) {
			tmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))
			push((tmp & 0xFF0000) >> 16)
			push((tmp & 0xFF00) >> 8)
			push(tmp & 0xFF)
		}

		if (placeHolders === 2) {
			tmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)
			push(tmp & 0xFF)
		} else if (placeHolders === 1) {
			tmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)
			push((tmp >> 8) & 0xFF)
			push(tmp & 0xFF)
		}

		return arr
	}

	function uint8ToBase64 (uint8) {
		var i,
			extraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes
			output = "",
			temp, length

		function encode (num) {
			return lookup.charAt(num)
		}

		function tripletToBase64 (num) {
			return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)
		}

		// go through the array every three bytes, we'll deal with trailing stuff later
		for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {
			temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
			output += tripletToBase64(temp)
		}

		// pad the end with zeros, but make sure to not forget the extra bytes
		switch (extraBytes) {
			case 1:
				temp = uint8[uint8.length - 1]
				output += encode(temp >> 2)
				output += encode((temp << 4) & 0x3F)
				output += '=='
				break
			case 2:
				temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])
				output += encode(temp >> 10)
				output += encode((temp >> 4) & 0x3F)
				output += encode((temp << 2) & 0x3F)
				output += '='
				break
		}

		return output
	}

	exports.toByteArray = b64ToByteArray
	exports.fromByteArray = uint8ToBase64
}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))

},{}],3:[function(require,module,exports){
module.exports = language

var tokenizer = require('./tokenizer')

function language(lookups, matchComparison) {
  return function(selector) {
    return parse(selector, remap(lookups),
                 matchComparison || caseSensitiveComparison)
  }
}

function remap(opts) {
  for(var key in opts) if(opt_okay(opts, key)) {
    opts[key] = Function(
        'return function(node, attr) { return node.' + opts[key] + ' }'
    )
    opts[key] = opts[key]()
  }

  return opts
}

function opt_okay(opts, key) {
  return opts.hasOwnProperty(key) && typeof opts[key] === 'string'
}

function parse(selector, options, matchComparison) {
  var stream = tokenizer()
    , default_subj = true
    , selectors = [[]]
    , traversal
    , bits

  bits = selectors[0]

  traversal = {
      '': any_parents
    , '>': direct_parent
    , '+': direct_sibling
    , '~': any_sibling
  }

  stream
    .on('data', group)
    .end(selector)

  function group(token) {
    var crnt

    if(token.type === 'comma') {
      selectors.unshift(bits = [])

      return
    }

    if(token.type === 'op' || token.type === 'any-child') {
      bits.unshift(traversal[token.data])
      bits.unshift(check())

      return
    }

    bits[0] = bits[0] || check()
    crnt = bits[0]

    if(token.type === '!') {
      crnt.subject =
      selectors[0].subject = true

      return
    }

    crnt.push(
        token.type === 'class' ? listContains(token.type, token.data) :
        token.type === 'attr' ? attr(token) :
        token.type === ':' || token.type === '::' ? pseudo(token) :
        token.type === '*' ? Boolean :
        matches(token.type, token.data, matchComparison)
    )
  }

  return selector_fn

  function selector_fn(node, as_boolean) {
    var current
      , length
      , orig
      , subj
      , set

    orig = node
    set = []

    for(var i = 0, len = selectors.length; i < len; ++i) {
      bits = selectors[i]
      current = entry
      length = bits.length
      node = orig
      subj = []

      for(var j = 0; j < length; j += 2) {
        node = current(node, bits[j], subj)

        if(!node) {
          break
        }

        current = bits[j + 1]
      }

      if(j >= length) {
        if(as_boolean) {
          return true
        }

        add(!bits.subject ? [orig] : subj)
      }
    }

    if(as_boolean) {
      return false
    }

    return !set.length ? false :
            set.length === 1 ? set[0] :
            set

    function add(items) {
      var next

      while(items.length) {
        next = items.shift()

        if(set.indexOf(next) === -1) {
          set.push(next)
        }
      }
    }
  }

  function check() {
    _check.bits = []
    _check.subject = false
    _check.push = function(token) {
      _check.bits.push(token)
    }

    return _check

    function _check(node, subj) {
      for(var i = 0, len = _check.bits.length; i < len; ++i) {
        if(!_check.bits[i](node)) {
          return false
        }
      }

      if(_check.subject) {
        subj.push(node)
      }

      return true
    }
  }

  function listContains(type, data) {
    return function(node) {
      var val = options[type](node)
      val =
        Array.isArray(val) ? val :
        val ? val.toString().split(/\s+/) :
        []
      return val.indexOf(data) >= 0
    }
  }

  function attr(token) {
    return token.data.lhs ?
      valid_attr(
          options.attr
        , token.data.lhs
        , token.data.cmp
        , token.data.rhs
      ) :
      valid_attr(options.attr, token.data)
  }

  function matches(type, data, matchComparison) {
    return function(node) {
      return matchComparison(type, options[type](node), data);
    }
  }

  function any_parents(node, next, subj) {
    do {
      node = options.parent(node)
    } while(node && !next(node, subj))

    return node
  }

  function direct_parent(node, next, subj) {
    node = options.parent(node)

    return node && next(node, subj) ? node : null
  }

  function direct_sibling(node, next, subj) {
    var parent = options.parent(node)
      , idx = 0
      , children

    children = options.children(parent)

    for(var i = 0, len = children.length; i < len; ++i) {
      if(children[i] === node) {
        idx = i

        break
      }
    }

    return children[idx - 1] && next(children[idx - 1], subj) ?
      children[idx - 1] :
      null
  }

  function any_sibling(node, next, subj) {
    var parent = options.parent(node)
      , children

    children = options.children(parent)

    for(var i = 0, len = children.length; i < len; ++i) {
      if(children[i] === node) {
        return null
      }

      if(next(children[i], subj)) {
        return children[i]
      }
    }

    return null
  }

  function pseudo(token) {
    return valid_pseudo(options, token.data, matchComparison)
  }

}

function entry(node, next, subj) {
  return next(node, subj) ? node : null
}

function valid_pseudo(options, match, matchComparison) {
  switch(match) {
    case 'empty': return valid_empty(options)
    case 'first-child': return valid_first_child(options)
    case 'last-child': return valid_last_child(options)
    case 'root': return valid_root(options)
  }

  if(match.indexOf('contains') === 0) {
    return valid_contains(options, match.slice(9, -1))
  }

  if(match.indexOf('any') === 0) {
    return valid_any_match(options, match.slice(4, -1), matchComparison)
  }

  if(match.indexOf('not') === 0) {
    return valid_not_match(options, match.slice(4, -1), matchComparison)
  }

  if(match.indexOf('nth-child') === 0) {
    return valid_nth_child(options, match.slice(10, -1))
  }

  return function() {
    return false
  }
}

function valid_not_match(options, selector, matchComparison) {
  var fn = parse(selector, options, matchComparison)

  return not_function

  function not_function(node) {
    return !fn(node, true)
  }
}

function valid_any_match(options, selector, matchComparison) {
  var fn = parse(selector, options, matchComparison)

  return fn
}

function valid_attr(fn, lhs, cmp, rhs) {
  return function(node) {
    var attr = fn(node, lhs)

    if(!cmp) {
      return !!attr
    }

    if(cmp.length === 1) {
      return attr == rhs
    }

    if(attr === void 0 || attr === null) {
      return false
    }

    return checkattr[cmp.charAt(0)](attr, rhs)
  }
}

function valid_first_child(options) {
  return function(node) {
    return options.children(options.parent(node))[0] === node
  }
}

function valid_last_child(options) {
  return function(node) {
    var children = options.children(options.parent(node))

    return children[children.length - 1] === node
  }
}

function valid_empty(options) {
  return function(node) {
    return options.children(node).length === 0
  }
}

function valid_root(options) {
  return function(node) {
    return !options.parent(node)
  }
}

function valid_contains(options, contents) {
  return function(node) {
    return options.contents(node).indexOf(contents) !== -1
  }
}

function valid_nth_child(options, nth) {
  var test = function(){ return false }
  if (nth == 'odd') {
    nth = '2n+1'
  } else if (nth == 'even') {
    nth = '2n'
  }
  var regexp = /( ?([-|\+])?(\d*)n)? ?((\+|-)? ?(\d+))? ?/
  var matches = nth.match(regexp)
  if (matches) {
    var growth = 0;
    if (matches[1]) {
      var positiveGrowth = (matches[2] != '-')
      growth = parseInt(matches[3] == '' ? 1 : matches[3])
      growth = growth * (positiveGrowth ? 1 : -1)
    }
    var offset = 0
    if (matches[4]) {
      offset = parseInt(matches[6])
      var positiveOffset = (matches[5] != '-')
      offset = offset * (positiveOffset ? 1 : -1)
    }
    if (growth == 0) {
      if (offset != 0) {
        test = function(children, node) {
          return children[offset - 1] === node
        }
      }
    } else {
      test = function(children, node) {
        var validPositions = []
        var len = children.length
        for (var position=1; position <= len; position++) {
          var divisible = ((position - offset) % growth) == 0;
          if (divisible) {
            if (growth > 0) {
              validPositions.push(position);
            } else {
              if ((position - offset) / growth >= 0) {
                validPositions.push(position);
              }
            }
          }
        }
        for(var i=0; i < validPositions.length; i++) {
          if (children[validPositions[i] - 1] === node) {
            return true
          }
        }
        return false
      }
    }
  }
  return function(node) {
    var children = options.children(options.parent(node))

    return test(children, node)
  }
}

var checkattr = {
    '$': check_end
  , '^': check_beg
  , '*': check_any
  , '~': check_spc
  , '|': check_dsh
}

function check_end(l, r) {
  return l.slice(l.length - r.length) === r
}

function check_beg(l, r) {
  return l.slice(0, r.length) === r
}

function check_any(l, r) {
  return l.indexOf(r) > -1
}

function check_spc(l, r) {
  return l.split(/\s+/).indexOf(r) > -1
}

function check_dsh(l, r) {
  return l.split('-').indexOf(r) > -1
}

function caseSensitiveComparison(type, pattern, data) {
  return pattern === data;
}

},{"./tokenizer":4}],4:[function(require,module,exports){
module.exports = tokenize

var through = require('through')

var PSEUDOSTART = 'pseudo-start'
  , ATTR_START = 'attr-start'
  , ANY_CHILD = 'any-child'
  , ATTR_COMP = 'attr-comp'
  , ATTR_END = 'attr-end'
  , PSEUDOPSEUDO = '::'
  , PSEUDOCLASS = ':'
  , READY = '(ready)'
  , OPERATION = 'op'
  , CLASS = 'class'
  , COMMA = 'comma'
  , ATTR = 'attr'
  , SUBJECT = '!'
  , TAG = 'tag'
  , STAR = '*'
  , ID = 'id'

function tokenize() {
  var escaped = false
    , gathered = []
    , state = READY 
    , data = []
    , idx = 0
    , stream
    , length
    , quote
    , depth
    , lhs
    , rhs
    , cmp
    , c

  return stream = through(ondata, onend)

  function ondata(chunk) {
    data = data.concat(chunk.split(''))
    length = data.length

    while(idx < length && (c = data[idx++])) {
      switch(state) {
        case READY: state_ready(); break
        case ANY_CHILD: state_any_child(); break
        case OPERATION: state_op(); break
        case ATTR_START: state_attr_start(); break
        case ATTR_COMP: state_attr_compare(); break
        case ATTR_END: state_attr_end(); break
        case PSEUDOCLASS:
        case PSEUDOPSEUDO: state_pseudo(); break
        case PSEUDOSTART: state_pseudostart(); break
        case ID:
        case TAG:
        case CLASS: state_gather(); break
      }
    }

    data = data.slice(idx)
  }

  function onend(chunk) {
    if(arguments.length) {
      ondata(chunk)
    }

    if(gathered.length) {
      stream.queue(token())
    }
  }

  function state_ready() {
    switch(true) {
      case '#' === c: state = ID; break
      case '.' === c: state = CLASS; break
      case ':' === c: state = PSEUDOCLASS; break
      case '[' === c: state = ATTR_START; break
      case '!' === c: subject(); break
      case '*' === c: star(); break
      case ',' === c: comma(); break
      case /[>\+~]/.test(c): state = OPERATION; break
      case /\s/.test(c): state = ANY_CHILD; break
      case /[\w\d\-_]/.test(c): state = TAG; --idx; break
    }
  }

  function subject() {
    state = SUBJECT
    gathered = ['!']
    stream.queue(token())
    state = READY
  }

  function star() {
    state = STAR
    gathered = ['*']
    stream.queue(token())
    state = READY
  }

  function comma() {
    state = COMMA
    gathered = [',']
    stream.queue(token())
    state = READY
  }

  function state_op() {
    if(/[>\+~]/.test(c)) {
      return gathered.push(c)
    }

    // chomp down the following whitespace.
    if(/\s/.test(c)) {
      return
    }

    stream.queue(token())
    state = READY
    --idx
  }

  function state_any_child() {
    if(/\s/.test(c)) {
      return
    }

    if(/[>\+~]/.test(c)) {
      return --idx, state = OPERATION
    }

    stream.queue(token())
    state = READY
    --idx
  }

  function state_pseudo() {
    rhs = state
    state_gather(true)

    if(state !== READY) {
      return
    }

    if(c === '(') {
      lhs = gathered.join('')
      state = PSEUDOSTART
      gathered.length = 0
      depth = 1
      ++idx

      return
    }

    state = PSEUDOCLASS
    stream.queue(token())
    state = READY
  }

  function state_pseudostart() {
    if(gathered.length === 0 && !quote) {
      quote = /['"]/.test(c) ? c : null

      if(quote) {
        return
      }
    }

    if(quote) {
      if(!escaped && c === quote) {
        quote = null

        return
      }

      if(c === '\\') {
        escaped ? gathered.push(c) : (escaped = true)

        return
      }

      escaped = false
      gathered.push(c)

      return
    }

    gathered.push(c)

    if(c === '(') {
      ++depth
    } else if(c === ')') {
      --depth
    }
    
    if(!depth) {
      gathered.pop()
      stream.queue({
          type: rhs 
        , data: lhs + '(' + gathered.join('') + ')'
      })

      state = READY
      lhs = rhs = cmp = null
      gathered.length = 0
    }

    return 
  }

  function state_attr_start() {
    state_gather(true)

    if(state !== READY) {
      return
    }

    if(c === ']') {
      state = ATTR
      stream.queue(token())
      state = READY

      return
    }

    lhs = gathered.join('')
    gathered.length = 0
    state = ATTR_COMP
  }

  function state_attr_compare() {
    if(/[=~|$^*]/.test(c)) {
      gathered.push(c)
    }

    if(gathered.length === 2 || c === '=') {
      cmp = gathered.join('')
      gathered.length = 0
      state = ATTR_END
      quote = null

      return
    }
  }

  function state_attr_end() {
    if(!gathered.length && !quote) {
      quote = /['"]/.test(c) ? c : null

      if(quote) {
        return
      }
    }

    if(quote) {
      if(!escaped && c === quote) {
        quote = null

        return
      }

      if(c === '\\') {
        if(escaped) {
          gathered.push(c)
        }

        escaped = !escaped

        return
      }

      escaped = false
      gathered.push(c)

      return
    }

    state_gather(true)

    if(state !== READY) {
      return
    }

    stream.queue({
        type: ATTR
      , data: {
            lhs: lhs
          , rhs: gathered.join('')
          , cmp: cmp
        }
    })

    state = READY
    lhs = rhs = cmp = null
    gathered.length = 0

    return 
  }

  function state_gather(quietly) {
    if(/[^\d\w\-_]/.test(c) && !escaped) {
      if(c === '\\') {
        escaped = true
      } else {
        !quietly && stream.queue(token())
        state = READY
        --idx
      }

      return
    }

    escaped = false
    gathered.push(c)
  }

  function token() {
    var data = gathered.join('')

    gathered.length = 0

    return {
        type: state
      , data: data
    }
  }
}

},{"through":18}],5:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      }
      throw TypeError('Uncaught, unspecified "error" event.');
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        len = arguments.length;
        args = new Array(len - 1);
        for (i = 1; i < len; i++)
          args[i - 1] = arguments[i];
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    len = arguments.length;
    args = new Array(len - 1);
    for (i = 1; i < len; i++)
      args[i - 1] = arguments[i];

    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    var m;
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.listenerCount = function(emitter, type) {
  var ret;
  if (!emitter._events || !emitter._events[type])
    ret = 0;
  else if (isFunction(emitter._events[type]))
    ret = 1;
  else
    ret = emitter._events[type].length;
  return ret;
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}

},{}],6:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var Buffer = require('buffer').Buffer;

function assertEncoding(encoding) {
  if (encoding && !Buffer.isEncoding(encoding)) {
    throw new Error('Unknown encoding: ' + encoding);
  }
}

var StringDecoder = exports.StringDecoder = function(encoding) {
  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
  assertEncoding(encoding);
  switch (this.encoding) {
    case 'utf8':
      // CESU-8 represents each of Surrogate Pair by 3-bytes
      this.surrogateSize = 3;
      break;
    case 'ucs2':
    case 'utf16le':
      // UTF-16 represents each of Surrogate Pair by 2-bytes
      this.surrogateSize = 2;
      this.detectIncompleteChar = utf16DetectIncompleteChar;
      break;
    case 'base64':
      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.
      this.surrogateSize = 3;
      this.detectIncompleteChar = base64DetectIncompleteChar;
      break;
    default:
      this.write = passThroughWrite;
      return;
  }

  this.charBuffer = new Buffer(6);
  this.charReceived = 0;
  this.charLength = 0;
};


StringDecoder.prototype.write = function(buffer) {
  var charStr = '';
  var offset = 0;

  // if our last write ended with an incomplete multibyte character
  while (this.charLength) {
    // determine how many remaining bytes this buffer has to offer for this char
    var i = (buffer.length >= this.charLength - this.charReceived) ?
                this.charLength - this.charReceived :
                buffer.length;

    // add the new bytes to the char buffer
    buffer.copy(this.charBuffer, this.charReceived, offset, i);
    this.charReceived += (i - offset);
    offset = i;

    if (this.charReceived < this.charLength) {
      // still not enough chars in this buffer? wait for more ...
      return '';
    }

    // get the character that was split
    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);

    // lead surrogate (D800-DBFF) is also the incomplete character
    var charCode = charStr.charCodeAt(charStr.length - 1);
    if (charCode >= 0xD800 && charCode <= 0xDBFF) {
      this.charLength += this.surrogateSize;
      charStr = '';
      continue;
    }
    this.charReceived = this.charLength = 0;

    // if there are no more bytes in this buffer, just emit our char
    if (i == buffer.length) return charStr;

    // otherwise cut off the characters end from the beginning of this buffer
    buffer = buffer.slice(i, buffer.length);
    break;
  }

  var lenIncomplete = this.detectIncompleteChar(buffer);

  var end = buffer.length;
  if (this.charLength) {
    // buffer the incomplete character bytes we got
    buffer.copy(this.charBuffer, 0, buffer.length - lenIncomplete, end);
    this.charReceived = lenIncomplete;
    end -= lenIncomplete;
  }

  charStr += buffer.toString(this.encoding, 0, end);

  var end = charStr.length - 1;
  var charCode = charStr.charCodeAt(end);
  // lead surrogate (D800-DBFF) is also the incomplete character
  if (charCode >= 0xD800 && charCode <= 0xDBFF) {
    var size = this.surrogateSize;
    this.charLength += size;
    this.charReceived += size;
    this.charBuffer.copy(this.charBuffer, size, 0, size);
    this.charBuffer.write(charStr.charAt(charStr.length - 1), this.encoding);
    return charStr.substring(0, end);
  }

  // or just emit the charStr
  return charStr;
};

StringDecoder.prototype.detectIncompleteChar = function(buffer) {
  // determine how many bytes we have to check at the end of this buffer
  var i = (buffer.length >= 3) ? 3 : buffer.length;

  // Figure out if one of the last i bytes of our buffer announces an
  // incomplete char.
  for (; i > 0; i--) {
    var c = buffer[buffer.length - i];

    // See http://en.wikipedia.org/wiki/UTF-8#Description

    // 110XXXXX
    if (i == 1 && c >> 5 == 0x06) {
      this.charLength = 2;
      break;
    }

    // 1110XXXX
    if (i <= 2 && c >> 4 == 0x0E) {
      this.charLength = 3;
      break;
    }

    // 11110XXX
    if (i <= 3 && c >> 3 == 0x1E) {
      this.charLength = 4;
      break;
    }
  }

  return i;
};

StringDecoder.prototype.end = function(buffer) {
  var res = '';
  if (buffer && buffer.length)
    res = this.write(buffer);

  if (this.charReceived) {
    var cr = this.charReceived;
    var buf = this.charBuffer;
    var enc = this.encoding;
    res += buf.slice(0, cr).toString(enc);
  }

  return res;
};

function passThroughWrite(buffer) {
  return buffer.toString(this.encoding);
}

function utf16DetectIncompleteChar(buffer) {
  var incomplete = this.charReceived = buffer.length % 2;
  this.charLength = incomplete ? 2 : 0;
  return incomplete;
}

function base64DetectIncompleteChar(buffer) {
  var incomplete = this.charReceived = buffer.length % 3;
  this.charLength = incomplete ? 3 : 0;
  return incomplete;
}

},{"buffer":7}],7:[function(require,module,exports){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = Buffer
exports.INSPECT_MAX_BYTES = 50
Buffer.poolSize = 8192

/**
 * If `Buffer._useTypedArrays`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (compatible down to IE6)
 */
Buffer._useTypedArrays = (function () {
  // Detect if browser supports Typed Arrays. Supported browsers are IE 10+, Firefox 4+,
  // Chrome 7+, Safari 5.1+, Opera 11.6+, iOS 4.2+. If the browser does not support adding
  // properties to `Uint8Array` instances, then that's the same as no `Uint8Array` support
  // because we need to be able to add all the node Buffer API methods. This is an issue
  // in Firefox 4-29. Now fixed: https://bugzilla.mozilla.org/show_bug.cgi?id=695438
  try {
    var buf = new ArrayBuffer(0)
    var arr = new Uint8Array(buf)
    arr.foo = function () { return 42 }
    return 42 === arr.foo() &&
        typeof arr.subarray === 'function' // Chrome 9-10 lack `subarray`
  } catch (e) {
    return false
  }
})()

/**
 * Class: Buffer
 * =============
 *
 * The Buffer constructor returns instances of `Uint8Array` that are augmented
 * with function properties for all the node `Buffer` API functions. We use
 * `Uint8Array` so that square bracket notation works as expected -- it returns
 * a single octet.
 *
 * By augmenting the instances, we can avoid modifying the `Uint8Array`
 * prototype.
 */
function Buffer (subject, encoding, noZero) {
  if (!(this instanceof Buffer))
    return new Buffer(subject, encoding, noZero)

  var type = typeof subject

  // Workaround: node's base64 implementation allows for non-padded strings
  // while base64-js does not.
  if (encoding === 'base64' && type === 'string') {
    subject = stringtrim(subject)
    while (subject.length % 4 !== 0) {
      subject = subject + '='
    }
  }

  // Find the length
  var length
  if (type === 'number')
    length = coerce(subject)
  else if (type === 'string')
    length = Buffer.byteLength(subject, encoding)
  else if (type === 'object')
    length = coerce(subject.length) // assume that object is array-like
  else
    throw new Error('First argument needs to be a number, array or string.')

  var buf
  if (Buffer._useTypedArrays) {
    // Preferred: Return an augmented `Uint8Array` instance for best performance
    buf = Buffer._augment(new Uint8Array(length))
  } else {
    // Fallback: Return THIS instance of Buffer (created by `new`)
    buf = this
    buf.length = length
    buf._isBuffer = true
  }

  var i
  if (Buffer._useTypedArrays && typeof subject.byteLength === 'number') {
    // Speed optimization -- use set if we're copying from a typed array
    buf._set(subject)
  } else if (isArrayish(subject)) {
    // Treat array-ish objects as a byte array
    for (i = 0; i < length; i++) {
      if (Buffer.isBuffer(subject))
        buf[i] = subject.readUInt8(i)
      else
        buf[i] = subject[i]
    }
  } else if (type === 'string') {
    buf.write(subject, 0, encoding)
  } else if (type === 'number' && !Buffer._useTypedArrays && !noZero) {
    for (i = 0; i < length; i++) {
      buf[i] = 0
    }
  }

  return buf
}

// STATIC METHODS
// ==============

Buffer.isEncoding = function (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'binary':
    case 'base64':
    case 'raw':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.isBuffer = function (b) {
  return !!(b !== null && b !== undefined && b._isBuffer)
}

Buffer.byteLength = function (str, encoding) {
  var ret
  str = str + ''
  switch (encoding || 'utf8') {
    case 'hex':
      ret = str.length / 2
      break
    case 'utf8':
    case 'utf-8':
      ret = utf8ToBytes(str).length
      break
    case 'ascii':
    case 'binary':
    case 'raw':
      ret = str.length
      break
    case 'base64':
      ret = base64ToBytes(str).length
      break
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      ret = str.length * 2
      break
    default:
      throw new Error('Unknown encoding')
  }
  return ret
}

Buffer.concat = function (list, totalLength) {
  assert(isArray(list), 'Usage: Buffer.concat(list, [totalLength])\n' +
      'list should be an Array.')

  if (list.length === 0) {
    return new Buffer(0)
  } else if (list.length === 1) {
    return list[0]
  }

  var i
  if (typeof totalLength !== 'number') {
    totalLength = 0
    for (i = 0; i < list.length; i++) {
      totalLength += list[i].length
    }
  }

  var buf = new Buffer(totalLength)
  var pos = 0
  for (i = 0; i < list.length; i++) {
    var item = list[i]
    item.copy(buf, pos)
    pos += item.length
  }
  return buf
}

// BUFFER INSTANCE METHODS
// =======================

function _hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  assert(strLen % 2 === 0, 'Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; i++) {
    var byte = parseInt(string.substr(i * 2, 2), 16)
    assert(!isNaN(byte), 'Invalid hex string')
    buf[offset + i] = byte
  }
  Buffer._charsWritten = i * 2
  return i
}

function _utf8Write (buf, string, offset, length) {
  var charsWritten = Buffer._charsWritten =
    blitBuffer(utf8ToBytes(string), buf, offset, length)
  return charsWritten
}

function _asciiWrite (buf, string, offset, length) {
  var charsWritten = Buffer._charsWritten =
    blitBuffer(asciiToBytes(string), buf, offset, length)
  return charsWritten
}

function _binaryWrite (buf, string, offset, length) {
  return _asciiWrite(buf, string, offset, length)
}

function _base64Write (buf, string, offset, length) {
  var charsWritten = Buffer._charsWritten =
    blitBuffer(base64ToBytes(string), buf, offset, length)
  return charsWritten
}

function _utf16leWrite (buf, string, offset, length) {
  var charsWritten = Buffer._charsWritten =
    blitBuffer(utf16leToBytes(string), buf, offset, length)
  return charsWritten
}

Buffer.prototype.write = function (string, offset, length, encoding) {
  // Support both (string, offset, length, encoding)
  // and the legacy (string, encoding, offset, length)
  if (isFinite(offset)) {
    if (!isFinite(length)) {
      encoding = length
      length = undefined
    }
  } else {  // legacy
    var swap = encoding
    encoding = offset
    offset = length
    length = swap
  }

  offset = Number(offset) || 0
  var remaining = this.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }
  encoding = String(encoding || 'utf8').toLowerCase()

  var ret
  switch (encoding) {
    case 'hex':
      ret = _hexWrite(this, string, offset, length)
      break
    case 'utf8':
    case 'utf-8':
      ret = _utf8Write(this, string, offset, length)
      break
    case 'ascii':
      ret = _asciiWrite(this, string, offset, length)
      break
    case 'binary':
      ret = _binaryWrite(this, string, offset, length)
      break
    case 'base64':
      ret = _base64Write(this, string, offset, length)
      break
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      ret = _utf16leWrite(this, string, offset, length)
      break
    default:
      throw new Error('Unknown encoding')
  }
  return ret
}

Buffer.prototype.toString = function (encoding, start, end) {
  var self = this

  encoding = String(encoding || 'utf8').toLowerCase()
  start = Number(start) || 0
  end = (end !== undefined)
    ? Number(end)
    : end = self.length

  // Fastpath empty strings
  if (end === start)
    return ''

  var ret
  switch (encoding) {
    case 'hex':
      ret = _hexSlice(self, start, end)
      break
    case 'utf8':
    case 'utf-8':
      ret = _utf8Slice(self, start, end)
      break
    case 'ascii':
      ret = _asciiSlice(self, start, end)
      break
    case 'binary':
      ret = _binarySlice(self, start, end)
      break
    case 'base64':
      ret = _base64Slice(self, start, end)
      break
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      ret = _utf16leSlice(self, start, end)
      break
    default:
      throw new Error('Unknown encoding')
  }
  return ret
}

Buffer.prototype.toJSON = function () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function (target, target_start, start, end) {
  var source = this

  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (!target_start) target_start = 0

  // Copy 0 bytes; we're done
  if (end === start) return
  if (target.length === 0 || source.length === 0) return

  // Fatal error conditions
  assert(end >= start, 'sourceEnd < sourceStart')
  assert(target_start >= 0 && target_start < target.length,
      'targetStart out of bounds')
  assert(start >= 0 && start < source.length, 'sourceStart out of bounds')
  assert(end >= 0 && end <= source.length, 'sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length)
    end = this.length
  if (target.length - target_start < end - start)
    end = target.length - target_start + start

  var len = end - start

  if (len < 100 || !Buffer._useTypedArrays) {
    for (var i = 0; i < len; i++)
      target[i + target_start] = this[i + start]
  } else {
    target._set(this.subarray(start, start + len), target_start)
  }
}

function _base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function _utf8Slice (buf, start, end) {
  var res = ''
  var tmp = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    if (buf[i] <= 0x7F) {
      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])
      tmp = ''
    } else {
      tmp += '%' + buf[i].toString(16)
    }
  }

  return res + decodeUtf8Char(tmp)
}

function _asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++)
    ret += String.fromCharCode(buf[i])
  return ret
}

function _binarySlice (buf, start, end) {
  return _asciiSlice(buf, start, end)
}

function _hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; i++) {
    out += toHex(buf[i])
  }
  return out
}

function _utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i+1] * 256)
  }
  return res
}

Buffer.prototype.slice = function (start, end) {
  var len = this.length
  start = clamp(start, len, 0)
  end = clamp(end, len, len)

  if (Buffer._useTypedArrays) {
    return Buffer._augment(this.subarray(start, end))
  } else {
    var sliceLen = end - start
    var newBuf = new Buffer(sliceLen, undefined, true)
    for (var i = 0; i < sliceLen; i++) {
      newBuf[i] = this[i + start]
    }
    return newBuf
  }
}

// `get` will be removed in Node 0.13+
Buffer.prototype.get = function (offset) {
  console.log('.get() is deprecated. Access using array indexes instead.')
  return this.readUInt8(offset)
}

// `set` will be removed in Node 0.13+
Buffer.prototype.set = function (v, offset) {
  console.log('.set() is deprecated. Access using array indexes instead.')
  return this.writeUInt8(v, offset)
}

Buffer.prototype.readUInt8 = function (offset, noAssert) {
  if (!noAssert) {
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset < this.length, 'Trying to read beyond buffer length')
  }

  if (offset >= this.length)
    return

  return this[offset]
}

function _readUInt16 (buf, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 1 < buf.length, 'Trying to read beyond buffer length')
  }

  var len = buf.length
  if (offset >= len)
    return

  var val
  if (littleEndian) {
    val = buf[offset]
    if (offset + 1 < len)
      val |= buf[offset + 1] << 8
  } else {
    val = buf[offset] << 8
    if (offset + 1 < len)
      val |= buf[offset + 1]
  }
  return val
}

Buffer.prototype.readUInt16LE = function (offset, noAssert) {
  return _readUInt16(this, offset, true, noAssert)
}

Buffer.prototype.readUInt16BE = function (offset, noAssert) {
  return _readUInt16(this, offset, false, noAssert)
}

function _readUInt32 (buf, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 3 < buf.length, 'Trying to read beyond buffer length')
  }

  var len = buf.length
  if (offset >= len)
    return

  var val
  if (littleEndian) {
    if (offset + 2 < len)
      val = buf[offset + 2] << 16
    if (offset + 1 < len)
      val |= buf[offset + 1] << 8
    val |= buf[offset]
    if (offset + 3 < len)
      val = val + (buf[offset + 3] << 24 >>> 0)
  } else {
    if (offset + 1 < len)
      val = buf[offset + 1] << 16
    if (offset + 2 < len)
      val |= buf[offset + 2] << 8
    if (offset + 3 < len)
      val |= buf[offset + 3]
    val = val + (buf[offset] << 24 >>> 0)
  }
  return val
}

Buffer.prototype.readUInt32LE = function (offset, noAssert) {
  return _readUInt32(this, offset, true, noAssert)
}

Buffer.prototype.readUInt32BE = function (offset, noAssert) {
  return _readUInt32(this, offset, false, noAssert)
}

Buffer.prototype.readInt8 = function (offset, noAssert) {
  if (!noAssert) {
    assert(offset !== undefined && offset !== null,
        'missing offset')
    assert(offset < this.length, 'Trying to read beyond buffer length')
  }

  if (offset >= this.length)
    return

  var neg = this[offset] & 0x80
  if (neg)
    return (0xff - this[offset] + 1) * -1
  else
    return this[offset]
}

function _readInt16 (buf, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 1 < buf.length, 'Trying to read beyond buffer length')
  }

  var len = buf.length
  if (offset >= len)
    return

  var val = _readUInt16(buf, offset, littleEndian, true)
  var neg = val & 0x8000
  if (neg)
    return (0xffff - val + 1) * -1
  else
    return val
}

Buffer.prototype.readInt16LE = function (offset, noAssert) {
  return _readInt16(this, offset, true, noAssert)
}

Buffer.prototype.readInt16BE = function (offset, noAssert) {
  return _readInt16(this, offset, false, noAssert)
}

function _readInt32 (buf, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 3 < buf.length, 'Trying to read beyond buffer length')
  }

  var len = buf.length
  if (offset >= len)
    return

  var val = _readUInt32(buf, offset, littleEndian, true)
  var neg = val & 0x80000000
  if (neg)
    return (0xffffffff - val + 1) * -1
  else
    return val
}

Buffer.prototype.readInt32LE = function (offset, noAssert) {
  return _readInt32(this, offset, true, noAssert)
}

Buffer.prototype.readInt32BE = function (offset, noAssert) {
  return _readInt32(this, offset, false, noAssert)
}

function _readFloat (buf, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset + 3 < buf.length, 'Trying to read beyond buffer length')
  }

  return ieee754.read(buf, offset, littleEndian, 23, 4)
}

Buffer.prototype.readFloatLE = function (offset, noAssert) {
  return _readFloat(this, offset, true, noAssert)
}

Buffer.prototype.readFloatBE = function (offset, noAssert) {
  return _readFloat(this, offset, false, noAssert)
}

function _readDouble (buf, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset + 7 < buf.length, 'Trying to read beyond buffer length')
  }

  return ieee754.read(buf, offset, littleEndian, 52, 8)
}

Buffer.prototype.readDoubleLE = function (offset, noAssert) {
  return _readDouble(this, offset, true, noAssert)
}

Buffer.prototype.readDoubleBE = function (offset, noAssert) {
  return _readDouble(this, offset, false, noAssert)
}

Buffer.prototype.writeUInt8 = function (value, offset, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset < this.length, 'trying to write beyond buffer length')
    verifuint(value, 0xff)
  }

  if (offset >= this.length) return

  this[offset] = value
}

function _writeUInt16 (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 1 < buf.length, 'trying to write beyond buffer length')
    verifuint(value, 0xffff)
  }

  var len = buf.length
  if (offset >= len)
    return

  for (var i = 0, j = Math.min(len - offset, 2); i < j; i++) {
    buf[offset + i] =
        (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
            (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function (value, offset, noAssert) {
  _writeUInt16(this, value, offset, true, noAssert)
}

Buffer.prototype.writeUInt16BE = function (value, offset, noAssert) {
  _writeUInt16(this, value, offset, false, noAssert)
}

function _writeUInt32 (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 3 < buf.length, 'trying to write beyond buffer length')
    verifuint(value, 0xffffffff)
  }

  var len = buf.length
  if (offset >= len)
    return

  for (var i = 0, j = Math.min(len - offset, 4); i < j; i++) {
    buf[offset + i] =
        (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function (value, offset, noAssert) {
  _writeUInt32(this, value, offset, true, noAssert)
}

Buffer.prototype.writeUInt32BE = function (value, offset, noAssert) {
  _writeUInt32(this, value, offset, false, noAssert)
}

Buffer.prototype.writeInt8 = function (value, offset, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset < this.length, 'Trying to write beyond buffer length')
    verifsint(value, 0x7f, -0x80)
  }

  if (offset >= this.length)
    return

  if (value >= 0)
    this.writeUInt8(value, offset, noAssert)
  else
    this.writeUInt8(0xff + value + 1, offset, noAssert)
}

function _writeInt16 (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 1 < buf.length, 'Trying to write beyond buffer length')
    verifsint(value, 0x7fff, -0x8000)
  }

  var len = buf.length
  if (offset >= len)
    return

  if (value >= 0)
    _writeUInt16(buf, value, offset, littleEndian, noAssert)
  else
    _writeUInt16(buf, 0xffff + value + 1, offset, littleEndian, noAssert)
}

Buffer.prototype.writeInt16LE = function (value, offset, noAssert) {
  _writeInt16(this, value, offset, true, noAssert)
}

Buffer.prototype.writeInt16BE = function (value, offset, noAssert) {
  _writeInt16(this, value, offset, false, noAssert)
}

function _writeInt32 (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 3 < buf.length, 'Trying to write beyond buffer length')
    verifsint(value, 0x7fffffff, -0x80000000)
  }

  var len = buf.length
  if (offset >= len)
    return

  if (value >= 0)
    _writeUInt32(buf, value, offset, littleEndian, noAssert)
  else
    _writeUInt32(buf, 0xffffffff + value + 1, offset, littleEndian, noAssert)
}

Buffer.prototype.writeInt32LE = function (value, offset, noAssert) {
  _writeInt32(this, value, offset, true, noAssert)
}

Buffer.prototype.writeInt32BE = function (value, offset, noAssert) {
  _writeInt32(this, value, offset, false, noAssert)
}

function _writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 3 < buf.length, 'Trying to write beyond buffer length')
    verifIEEE754(value, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }

  var len = buf.length
  if (offset >= len)
    return

  ieee754.write(buf, value, offset, littleEndian, 23, 4)
}

Buffer.prototype.writeFloatLE = function (value, offset, noAssert) {
  _writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function (value, offset, noAssert) {
  _writeFloat(this, value, offset, false, noAssert)
}

function _writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 7 < buf.length,
        'Trying to write beyond buffer length')
    verifIEEE754(value, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }

  var len = buf.length
  if (offset >= len)
    return

  ieee754.write(buf, value, offset, littleEndian, 52, 8)
}

Buffer.prototype.writeDoubleLE = function (value, offset, noAssert) {
  _writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function (value, offset, noAssert) {
  _writeDouble(this, value, offset, false, noAssert)
}

// fill(value, start=0, end=buffer.length)
Buffer.prototype.fill = function (value, start, end) {
  if (!value) value = 0
  if (!start) start = 0
  if (!end) end = this.length

  if (typeof value === 'string') {
    value = value.charCodeAt(0)
  }

  assert(typeof value === 'number' && !isNaN(value), 'value is not a number')
  assert(end >= start, 'end < start')

  // Fill 0 bytes; we're done
  if (end === start) return
  if (this.length === 0) return

  assert(start >= 0 && start < this.length, 'start out of bounds')
  assert(end >= 0 && end <= this.length, 'end out of bounds')

  for (var i = start; i < end; i++) {
    this[i] = value
  }
}

Buffer.prototype.inspect = function () {
  var out = []
  var len = this.length
  for (var i = 0; i < len; i++) {
    out[i] = toHex(this[i])
    if (i === exports.INSPECT_MAX_BYTES) {
      out[i + 1] = '...'
      break
    }
  }
  return '<Buffer ' + out.join(' ') + '>'
}

/**
 * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.
 * Added in Node 0.12. Only available in browsers that support ArrayBuffer.
 */
Buffer.prototype.toArrayBuffer = function () {
  if (typeof Uint8Array !== 'undefined') {
    if (Buffer._useTypedArrays) {
      return (new Buffer(this)).buffer
    } else {
      var buf = new Uint8Array(this.length)
      for (var i = 0, len = buf.length; i < len; i += 1)
        buf[i] = this[i]
      return buf.buffer
    }
  } else {
    throw new Error('Buffer.toArrayBuffer not supported in this browser')
  }
}

// HELPER FUNCTIONS
// ================

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

var BP = Buffer.prototype

/**
 * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods
 */
Buffer._augment = function (arr) {
  arr._isBuffer = true

  // save reference to original Uint8Array get/set methods before overwriting
  arr._get = arr.get
  arr._set = arr.set

  // deprecated, will be removed in node 0.13+
  arr.get = BP.get
  arr.set = BP.set

  arr.write = BP.write
  arr.toString = BP.toString
  arr.toLocaleString = BP.toString
  arr.toJSON = BP.toJSON
  arr.copy = BP.copy
  arr.slice = BP.slice
  arr.readUInt8 = BP.readUInt8
  arr.readUInt16LE = BP.readUInt16LE
  arr.readUInt16BE = BP.readUInt16BE
  arr.readUInt32LE = BP.readUInt32LE
  arr.readUInt32BE = BP.readUInt32BE
  arr.readInt8 = BP.readInt8
  arr.readInt16LE = BP.readInt16LE
  arr.readInt16BE = BP.readInt16BE
  arr.readInt32LE = BP.readInt32LE
  arr.readInt32BE = BP.readInt32BE
  arr.readFloatLE = BP.readFloatLE
  arr.readFloatBE = BP.readFloatBE
  arr.readDoubleLE = BP.readDoubleLE
  arr.readDoubleBE = BP.readDoubleBE
  arr.writeUInt8 = BP.writeUInt8
  arr.writeUInt16LE = BP.writeUInt16LE
  arr.writeUInt16BE = BP.writeUInt16BE
  arr.writeUInt32LE = BP.writeUInt32LE
  arr.writeUInt32BE = BP.writeUInt32BE
  arr.writeInt8 = BP.writeInt8
  arr.writeInt16LE = BP.writeInt16LE
  arr.writeInt16BE = BP.writeInt16BE
  arr.writeInt32LE = BP.writeInt32LE
  arr.writeInt32BE = BP.writeInt32BE
  arr.writeFloatLE = BP.writeFloatLE
  arr.writeFloatBE = BP.writeFloatBE
  arr.writeDoubleLE = BP.writeDoubleLE
  arr.writeDoubleBE = BP.writeDoubleBE
  arr.fill = BP.fill
  arr.inspect = BP.inspect
  arr.toArrayBuffer = BP.toArrayBuffer

  return arr
}

// slice(start, end)
function clamp (index, len, defaultValue) {
  if (typeof index !== 'number') return defaultValue
  index = ~~index;  // Coerce to integer.
  if (index >= len) return len
  if (index >= 0) return index
  index += len
  if (index >= 0) return index
  return 0
}

function coerce (length) {
  // Coerce length to a number (possibly NaN), round up
  // in case it's fractional (e.g. 123.456) then do a
  // double negate to coerce a NaN to 0. Easy, right?
  length = ~~Math.ceil(+length)
  return length < 0 ? 0 : length
}

function isArray (subject) {
  return (Array.isArray || function (subject) {
    return Object.prototype.toString.call(subject) === '[object Array]'
  })(subject)
}

function isArrayish (subject) {
  return isArray(subject) || Buffer.isBuffer(subject) ||
      subject && typeof subject === 'object' &&
      typeof subject.length === 'number'
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    var b = str.charCodeAt(i)
    if (b <= 0x7F)
      byteArray.push(str.charCodeAt(i))
    else {
      var start = i
      if (b >= 0xD800 && b <= 0xDFFF) i++
      var h = encodeURIComponent(str.slice(start, i+1)).substr(1).split('%')
      for (var j = 0; j < h.length; j++)
        byteArray.push(parseInt(h[j], 16))
    }
  }
  return byteArray
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(str)
}

function blitBuffer (src, dst, offset, length) {
  var pos
  for (var i = 0; i < length; i++) {
    if ((i + offset >= dst.length) || (i >= src.length))
      break
    dst[i + offset] = src[i]
  }
  return i
}

function decodeUtf8Char (str) {
  try {
    return decodeURIComponent(str)
  } catch (err) {
    return String.fromCharCode(0xFFFD) // UTF 8 invalid char
  }
}

/*
 * We have to make sure that the value is a valid integer. This means that it
 * is non-negative. It has no fractional component and that it does not
 * exceed the maximum allowed value.
 */
function verifuint (value, max) {
  assert(typeof value === 'number', 'cannot write a non-number as a number')
  assert(value >= 0, 'specified a negative value for writing an unsigned value')
  assert(value <= max, 'value is larger than maximum value for type')
  assert(Math.floor(value) === value, 'value has a fractional component')
}

function verifsint (value, max, min) {
  assert(typeof value === 'number', 'cannot write a non-number as a number')
  assert(value <= max, 'value larger than maximum allowed value')
  assert(value >= min, 'value smaller than minimum allowed value')
  assert(Math.floor(value) === value, 'value has a fractional component')
}

function verifIEEE754 (value, max, min) {
  assert(typeof value === 'number', 'cannot write a non-number as a number')
  assert(value <= max, 'value larger than maximum allowed value')
  assert(value >= min, 'value smaller than minimum allowed value')
}

function assert (test, message) {
  if (!test) throw new Error(message || 'Failed assertion')
}

},{"base64-js":2,"ieee754":16}],8:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};

process.nextTick = (function () {
    var canSetImmediate = typeof window !== 'undefined'
    && window.setImmediate;
    var canPost = typeof window !== 'undefined'
    && window.postMessage && window.addEventListener
    ;

    if (canSetImmediate) {
        return function (f) { return window.setImmediate(f) };
    }

    if (canPost) {
        var queue = [];
        window.addEventListener('message', function (ev) {
            var source = ev.source;
            if ((source === window || source === null) && ev.data === 'process-tick') {
                ev.stopPropagation();
                if (queue.length > 0) {
                    var fn = queue.shift();
                    fn();
                }
            }
        }, true);

        return function nextTick(fn) {
            queue.push(fn);
            window.postMessage('process-tick', '*');
        };
    }

    return function nextTick(fn) {
        setTimeout(fn, 0);
    };
})();

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
}

// TODO(shtylman)
process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};

},{}],9:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

module.exports = Duplex;
var inherits = require('inherits');
var setImmediate = require('process/browser.js').nextTick;
var Readable = require('./readable.js');
var Writable = require('./writable.js');

inherits(Duplex, Readable);

Duplex.prototype.write = Writable.prototype.write;
Duplex.prototype.end = Writable.prototype.end;
Duplex.prototype._write = Writable.prototype._write;

function Duplex(options) {
  if (!(this instanceof Duplex))
    return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false)
    this.readable = false;

  if (options && options.writable === false)
    this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false)
    this.allowHalfOpen = false;

  this.once('end', onend);
}

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended)
    return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  var self = this;
  setImmediate(function () {
    self.end();
  });
}

},{"./readable.js":13,"./writable.js":15,"inherits":17,"process/browser.js":11}],10:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('./readable.js');
Stream.Writable = require('./writable.js');
Stream.Duplex = require('./duplex.js');
Stream.Transform = require('./transform.js');
Stream.PassThrough = require('./passthrough.js');

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"./duplex.js":9,"./passthrough.js":12,"./readable.js":13,"./transform.js":14,"./writable.js":15,"events":5,"inherits":17}],11:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};

process.nextTick = (function () {
    var canSetImmediate = typeof window !== 'undefined'
    && window.setImmediate;
    var canPost = typeof window !== 'undefined'
    && window.postMessage && window.addEventListener
    ;

    if (canSetImmediate) {
        return function (f) { return window.setImmediate(f) };
    }

    if (canPost) {
        var queue = [];
        window.addEventListener('message', function (ev) {
            var source = ev.source;
            if ((source === window || source === null) && ev.data === 'process-tick') {
                ev.stopPropagation();
                if (queue.length > 0) {
                    var fn = queue.shift();
                    fn();
                }
            }
        }, true);

        return function nextTick(fn) {
            queue.push(fn);
            window.postMessage('process-tick', '*');
        };
    }

    return function nextTick(fn) {
        setTimeout(fn, 0);
    };
})();

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];

process.binding = function (name) {
    throw new Error('process.binding is not supported');
}

// TODO(shtylman)
process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};

},{}],12:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

module.exports = PassThrough;

var Transform = require('./transform.js');
var inherits = require('inherits');
inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough))
    return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function(chunk, encoding, cb) {
  cb(null, chunk);
};

},{"./transform.js":14,"inherits":17}],13:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Readable;
Readable.ReadableState = ReadableState;

var EE = require('events').EventEmitter;
var Stream = require('./index.js');
var Buffer = require('buffer').Buffer;
var setImmediate = require('process/browser.js').nextTick;
var StringDecoder;

var inherits = require('inherits');
inherits(Readable, Stream);

function ReadableState(options, stream) {
  options = options || {};

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;

  // cast to ints.
  this.highWaterMark = ~~this.highWaterMark;

  this.buffer = [];
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = false;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // In streams that never have any data, and do push(null) right away,
  // the consumer can miss the 'end' event if they do some I/O before
  // consuming the stream.  So, we don't emit('end') until some reading
  // happens.
  this.calledRead = false;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, becuase any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;


  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // when piping, we only care about 'readable' events that happen
  // after read()ing all the bytes and not getting any pushback.
  this.ranOut = false;

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder)
      StringDecoder = require('string_decoder').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  if (!(this instanceof Readable))
    return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  Stream.call(this);
}

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function(chunk, encoding) {
  var state = this._readableState;

  if (typeof chunk === 'string' && !state.objectMode) {
    encoding = encoding || state.defaultEncoding;
    if (encoding !== state.encoding) {
      chunk = new Buffer(chunk, encoding);
      encoding = '';
    }
  }

  return readableAddChunk(this, state, chunk, encoding, false);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function(chunk) {
  var state = this._readableState;
  return readableAddChunk(this, state, chunk, '', true);
};

function readableAddChunk(stream, state, chunk, encoding, addToFront) {
  var er = chunkInvalid(state, chunk);
  if (er) {
    stream.emit('error', er);
  } else if (chunk === null || chunk === undefined) {
    state.reading = false;
    if (!state.ended)
      onEofChunk(stream, state);
  } else if (state.objectMode || chunk && chunk.length > 0) {
    if (state.ended && !addToFront) {
      var e = new Error('stream.push() after EOF');
      stream.emit('error', e);
    } else if (state.endEmitted && addToFront) {
      var e = new Error('stream.unshift() after end event');
      stream.emit('error', e);
    } else {
      if (state.decoder && !addToFront && !encoding)
        chunk = state.decoder.write(chunk);

      // update the buffer info.
      state.length += state.objectMode ? 1 : chunk.length;
      if (addToFront) {
        state.buffer.unshift(chunk);
      } else {
        state.reading = false;
        state.buffer.push(chunk);
      }

      if (state.needReadable)
        emitReadable(stream);

      maybeReadMore(stream, state);
    }
  } else if (!addToFront) {
    state.reading = false;
  }

  return needMoreData(state);
}



// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended &&
         (state.needReadable ||
          state.length < state.highWaterMark ||
          state.length === 0);
}

// backwards compatibility.
Readable.prototype.setEncoding = function(enc) {
  if (!StringDecoder)
    StringDecoder = require('string_decoder').StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
};

// Don't raise the hwm > 128MB
var MAX_HWM = 0x800000;
function roundUpToNextPowerOf2(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2
    n--;
    for (var p = 1; p < 32; p <<= 1) n |= n >> p;
    n++;
  }
  return n;
}

function howMuchToRead(n, state) {
  if (state.length === 0 && state.ended)
    return 0;

  if (state.objectMode)
    return n === 0 ? 0 : 1;

  if (isNaN(n) || n === null) {
    // only flow one buffer at a time
    if (state.flowing && state.buffer.length)
      return state.buffer[0].length;
    else
      return state.length;
  }

  if (n <= 0)
    return 0;

  // If we're asking for more than the target buffer level,
  // then raise the water mark.  Bump up to the next highest
  // power of 2, to prevent increasing it excessively in tiny
  // amounts.
  if (n > state.highWaterMark)
    state.highWaterMark = roundUpToNextPowerOf2(n);

  // don't have that much.  return null, unless we've ended.
  if (n > state.length) {
    if (!state.ended) {
      state.needReadable = true;
      return 0;
    } else
      return state.length;
  }

  return n;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function(n) {
  var state = this._readableState;
  state.calledRead = true;
  var nOrig = n;

  if (typeof n !== 'number' || n > 0)
    state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 &&
      state.needReadable &&
      (state.length >= state.highWaterMark || state.ended)) {
    emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0)
      endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;

  // if we currently have less than the highWaterMark, then also read some
  if (state.length - n <= state.highWaterMark)
    doRead = true;

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading)
    doRead = false;

  if (doRead) {
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0)
      state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
  }

  // If _read called its callback synchronously, then `reading`
  // will be false, and we need to re-evaluate how much data we
  // can return to the user.
  if (doRead && !state.reading)
    n = howMuchToRead(nOrig, state);

  var ret;
  if (n > 0)
    ret = fromList(n, state);
  else
    ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  }

  state.length -= n;

  // If we have nothing in the buffer, then we want to know
  // as soon as we *do* get something into the buffer.
  if (state.length === 0 && !state.ended)
    state.needReadable = true;

  // If we happened to read() exactly the remaining amount in the
  // buffer, and the EOF has been seen at this point, then make sure
  // that we emit 'end' on the very next tick.
  if (state.ended && !state.endEmitted && state.length === 0)
    endReadable(this);

  return ret;
};

function chunkInvalid(state, chunk) {
  var er = null;
  if (!Buffer.isBuffer(chunk) &&
      'string' !== typeof chunk &&
      chunk !== null &&
      chunk !== undefined &&
      !state.objectMode &&
      !er) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}


function onEofChunk(stream, state) {
  if (state.decoder && !state.ended) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // if we've ended and we have some data left, then emit
  // 'readable' now to make sure it gets picked up.
  if (state.length > 0)
    emitReadable(stream);
  else
    endReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (state.emittedReadable)
    return;

  state.emittedReadable = true;
  if (state.sync)
    setImmediate(function() {
      emitReadable_(stream);
    });
  else
    emitReadable_(stream);
}

function emitReadable_(stream) {
  stream.emit('readable');
}


// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    setImmediate(function() {
      maybeReadMore_(stream, state);
    });
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended &&
         state.length < state.highWaterMark) {
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;
    else
      len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function(n) {
  this.emit('error', new Error('not implemented'));
};

Readable.prototype.pipe = function(dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;

  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&
              dest !== process.stdout &&
              dest !== process.stderr;

  var endFn = doEnd ? onend : cleanup;
  if (state.endEmitted)
    setImmediate(endFn);
  else
    src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable) {
    if (readable !== src) return;
    cleanup();
  }

  function onend() {
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  function cleanup() {
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', cleanup);

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (!dest._writableState || dest._writableState.needDrain)
      ondrain();
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  // check for listeners before emit removes one-time listeners.
  var errListeners = EE.listenerCount(dest, 'error');
  function onerror(er) {
    unpipe();
    if (errListeners === 0 && EE.listenerCount(dest, 'error') === 0)
      dest.emit('error', er);
  }
  dest.once('error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    // the handler that waits for readable events after all
    // the data gets sucked out in flow.
    // This would be easier to follow with a .once() handler
    // in flow(), but that is too slow.
    this.on('readable', pipeOnReadable);

    state.flowing = true;
    setImmediate(function() {
      flow(src);
    });
  }

  return dest;
};

function pipeOnDrain(src) {
  return function() {
    var dest = this;
    var state = src._readableState;
    state.awaitDrain--;
    if (state.awaitDrain === 0)
      flow(src);
  };
}

function flow(src) {
  var state = src._readableState;
  var chunk;
  state.awaitDrain = 0;

  function write(dest, i, list) {
    var written = dest.write(chunk);
    if (false === written) {
      state.awaitDrain++;
    }
  }

  while (state.pipesCount && null !== (chunk = src.read())) {

    if (state.pipesCount === 1)
      write(state.pipes, 0, null);
    else
      forEach(state.pipes, write);

    src.emit('data', chunk);

    // if anyone needs a drain, then we have to wait for that.
    if (state.awaitDrain > 0)
      return;
  }

  // if every destination was unpiped, either before entering this
  // function, or in the while loop, then stop flowing.
  //
  // NB: This is a pretty rare edge case.
  if (state.pipesCount === 0) {
    state.flowing = false;

    // if there were data event listeners added, then switch to old mode.
    if (EE.listenerCount(src, 'data') > 0)
      emitDataEvents(src);
    return;
  }

  // at this point, no one needed a drain, so we just ran out of data
  // on the next readable event, start it over again.
  state.ranOut = true;
}

function pipeOnReadable() {
  if (this._readableState.ranOut) {
    this._readableState.ranOut = false;
    flow(this);
  }
}


Readable.prototype.unpipe = function(dest) {
  var state = this._readableState;

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0)
    return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes)
      return this;

    if (!dest)
      dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    this.removeListener('readable', pipeOnReadable);
    state.flowing = false;
    if (dest)
      dest.emit('unpipe', this);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    this.removeListener('readable', pipeOnReadable);
    state.flowing = false;

    for (var i = 0; i < len; i++)
      dests[i].emit('unpipe', this);
    return this;
  }

  // try to find the right one.
  var i = indexOf(state.pipes, dest);
  if (i === -1)
    return this;

  state.pipes.splice(i, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1)
    state.pipes = state.pipes[0];

  dest.emit('unpipe', this);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function(ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data' && !this._readableState.flowing)
    emitDataEvents(this);

  if (ev === 'readable' && this.readable) {
    var state = this._readableState;
    if (!state.readableListening) {
      state.readableListening = true;
      state.emittedReadable = false;
      state.needReadable = true;
      if (!state.reading) {
        this.read(0);
      } else if (state.length) {
        emitReadable(this, state);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function() {
  emitDataEvents(this);
  this.read(0);
  this.emit('resume');
};

Readable.prototype.pause = function() {
  emitDataEvents(this, true);
  this.emit('pause');
};

function emitDataEvents(stream, startPaused) {
  var state = stream._readableState;

  if (state.flowing) {
    // https://github.com/isaacs/readable-stream/issues/16
    throw new Error('Cannot switch to old mode now.');
  }

  var paused = startPaused || false;
  var readable = false;

  // convert to an old-style stream.
  stream.readable = true;
  stream.pipe = Stream.prototype.pipe;
  stream.on = stream.addListener = Stream.prototype.on;

  stream.on('readable', function() {
    readable = true;

    var c;
    while (!paused && (null !== (c = stream.read())))
      stream.emit('data', c);

    if (c === null) {
      readable = false;
      stream._readableState.needReadable = true;
    }
  });

  stream.pause = function() {
    paused = true;
    this.emit('pause');
  };

  stream.resume = function() {
    paused = false;
    if (readable)
      setImmediate(function() {
        stream.emit('readable');
      });
    else
      this.read(0);
    this.emit('resume');
  };

  // now make it start, just in case it hadn't already.
  stream.emit('readable');
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function(stream) {
  var state = this._readableState;
  var paused = false;

  var self = this;
  stream.on('end', function() {
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length)
        self.push(chunk);
    }

    self.push(null);
  });

  stream.on('data', function(chunk) {
    if (state.decoder)
      chunk = state.decoder.write(chunk);
    if (!chunk || !state.objectMode && !chunk.length)
      return;

    var ret = self.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (typeof stream[i] === 'function' &&
        typeof this[i] === 'undefined') {
      this[i] = function(method) { return function() {
        return stream[method].apply(stream, arguments);
      }}(i);
    }
  }

  // proxy certain important events.
  var events = ['error', 'close', 'destroy', 'pause', 'resume'];
  forEach(events, function(ev) {
    stream.on(ev, function (x) {
      return self.emit.apply(self, ev, x);
    });
  });

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  self._read = function(n) {
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return self;
};



// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
function fromList(n, state) {
  var list = state.buffer;
  var length = state.length;
  var stringMode = !!state.decoder;
  var objectMode = !!state.objectMode;
  var ret;

  // nothing in the list, definitely empty.
  if (list.length === 0)
    return null;

  if (length === 0)
    ret = null;
  else if (objectMode)
    ret = list.shift();
  else if (!n || n >= length) {
    // read it all, truncate the array.
    if (stringMode)
      ret = list.join('');
    else
      ret = Buffer.concat(list, length);
    list.length = 0;
  } else {
    // read just some of it.
    if (n < list[0].length) {
      // just take a part of the first list item.
      // slice is the same for buffers and strings.
      var buf = list[0];
      ret = buf.slice(0, n);
      list[0] = buf.slice(n);
    } else if (n === list[0].length) {
      // first list is a perfect match
      ret = list.shift();
    } else {
      // complex case.
      // we have enough to cover it, but it spans past the first buffer.
      if (stringMode)
        ret = '';
      else
        ret = new Buffer(n);

      var c = 0;
      for (var i = 0, l = list.length; i < l && c < n; i++) {
        var buf = list[0];
        var cpy = Math.min(n - c, buf.length);

        if (stringMode)
          ret += buf.slice(0, cpy);
        else
          buf.copy(ret, c, 0, cpy);

        if (cpy < buf.length)
          list[0] = buf.slice(cpy);
        else
          list.shift();

        c += cpy;
      }
    }
  }

  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0)
    throw new Error('endReadable called on non-empty stream');

  if (!state.endEmitted && state.calledRead) {
    state.ended = true;
    setImmediate(function() {
      // Check that we didn't get one last unshift.
      if (!state.endEmitted && state.length === 0) {
        state.endEmitted = true;
        stream.readable = false;
        stream.emit('end');
      }
    });
  }
}

function forEach (xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf (xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}

}).call(this,require("2ionoC"))
},{"./index.js":10,"2ionoC":8,"buffer":7,"events":5,"inherits":17,"process/browser.js":11,"string_decoder":6}],14:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

module.exports = Transform;

var Duplex = require('./duplex.js');
var inherits = require('inherits');
inherits(Transform, Duplex);


function TransformState(options, stream) {
  this.afterTransform = function(er, data) {
    return afterTransform(stream, er, data);
  };

  this.needTransform = false;
  this.transforming = false;
  this.writecb = null;
  this.writechunk = null;
}

function afterTransform(stream, er, data) {
  var ts = stream._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb)
    return stream.emit('error', new Error('no writecb in Transform class'));

  ts.writechunk = null;
  ts.writecb = null;

  if (data !== null && data !== undefined)
    stream.push(data);

  if (cb)
    cb(er);

  var rs = stream._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    stream._read(rs.highWaterMark);
  }
}


function Transform(options) {
  if (!(this instanceof Transform))
    return new Transform(options);

  Duplex.call(this, options);

  var ts = this._transformState = new TransformState(options, this);

  // when the writable side finishes, then flush out anything remaining.
  var stream = this;

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  this.once('finish', function() {
    if ('function' === typeof this._flush)
      this._flush(function(er) {
        done(stream, er);
      });
    else
      done(stream);
  });
}

Transform.prototype.push = function(chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function(chunk, encoding, cb) {
  throw new Error('not implemented');
};

Transform.prototype._write = function(chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform ||
        rs.needReadable ||
        rs.length < rs.highWaterMark)
      this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function(n) {
  var ts = this._transformState;

  if (ts.writechunk && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};


function done(stream, er) {
  if (er)
    return stream.emit('error', er);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  var ws = stream._writableState;
  var rs = stream._readableState;
  var ts = stream._transformState;

  if (ws.length)
    throw new Error('calling transform done when ws.length != 0');

  if (ts.transforming)
    throw new Error('calling transform done when still transforming');

  return stream.push(null);
}

},{"./duplex.js":9,"inherits":17}],15:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, cb), and it'll handle all
// the drain event emission and buffering.

module.exports = Writable;
Writable.WritableState = WritableState;

var isUint8Array = typeof Uint8Array !== 'undefined'
  ? function (x) { return x instanceof Uint8Array }
  : function (x) {
    return x && x.constructor && x.constructor.name === 'Uint8Array'
  }
;
var isArrayBuffer = typeof ArrayBuffer !== 'undefined'
  ? function (x) { return x instanceof ArrayBuffer }
  : function (x) {
    return x && x.constructor && x.constructor.name === 'ArrayBuffer'
  }
;

var inherits = require('inherits');
var Stream = require('./index.js');
var setImmediate = require('process/browser.js').nextTick;
var Buffer = require('buffer').Buffer;

inherits(Writable, Stream);

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
}

function WritableState(options, stream) {
  options = options || {};

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  // cast to ints.
  this.highWaterMark = ~~this.highWaterMark;

  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, becuase any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function(er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.buffer = [];
}

function Writable(options) {
  // Writable ctor is applied to Duplexes, though they're not
  // instanceof Writable, they're instanceof Readable.
  if (!(this instanceof Writable) && !(this instanceof Stream.Duplex))
    return new Writable(options);

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function() {
  this.emit('error', new Error('Cannot pipe. Not readable.'));
};


function writeAfterEnd(stream, state, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  setImmediate(function() {
    cb(er);
  });
}

// If we get something that is not a buffer, string, null, or undefined,
// and we're not in objectMode, then that's an error.
// Otherwise stream chunks are all considered to be of length=1, and the
// watermarks determine how many objects to keep in the buffer, rather than
// how many bytes or characters.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  if (!Buffer.isBuffer(chunk) &&
      'string' !== typeof chunk &&
      chunk !== null &&
      chunk !== undefined &&
      !state.objectMode) {
    var er = new TypeError('Invalid non-string/buffer chunk');
    stream.emit('error', er);
    setImmediate(function() {
      cb(er);
    });
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function(chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (!Buffer.isBuffer(chunk) && isUint8Array(chunk))
    chunk = new Buffer(chunk);
  if (isArrayBuffer(chunk) && typeof Uint8Array !== 'undefined')
    chunk = new Buffer(new Uint8Array(chunk));
  
  if (Buffer.isBuffer(chunk))
    encoding = 'buffer';
  else if (!encoding)
    encoding = state.defaultEncoding;

  if (typeof cb !== 'function')
    cb = function() {};

  if (state.ended)
    writeAfterEnd(this, state, cb);
  else if (validChunk(this, state, chunk, cb))
    ret = writeOrBuffer(this, state, chunk, encoding, cb);

  return ret;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode &&
      state.decodeStrings !== false &&
      typeof chunk === 'string') {
    chunk = new Buffer(chunk, encoding);
  }
  return chunk;
}

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, chunk, encoding, cb) {
  chunk = decodeChunk(state, chunk, encoding);
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  state.needDrain = !ret;

  if (state.writing)
    state.buffer.push(new WriteReq(chunk, encoding, cb));
  else
    doWrite(stream, state, len, chunk, encoding, cb);

  return ret;
}

function doWrite(stream, state, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  if (sync)
    setImmediate(function() {
      cb(er);
    });
  else
    cb(er);

  stream.emit('error', er);
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er)
    onwriteError(stream, state, sync, er, cb);
  else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(stream, state);

    if (!finished && !state.bufferProcessing && state.buffer.length)
      clearBuffer(stream, state);

    if (sync) {
      setImmediate(function() {
        afterWrite(stream, state, finished, cb);
      });
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished)
    onwriteDrain(stream, state);
  cb();
  if (finished)
    finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}


// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;

  for (var c = 0; c < state.buffer.length; c++) {
    var entry = state.buffer[c];
    var chunk = entry.chunk;
    var encoding = entry.encoding;
    var cb = entry.callback;
    var len = state.objectMode ? 1 : chunk.length;

    doWrite(stream, state, len, chunk, encoding, cb);

    // if we didn't call the onwrite immediately, then
    // it means that we need to wait until it does.
    // also, that means that the chunk and cb are currently
    // being processed, so move the buffer counter past them.
    if (state.writing) {
      c++;
      break;
    }
  }

  state.bufferProcessing = false;
  if (c < state.buffer.length)
    state.buffer = state.buffer.slice(c);
  else
    state.buffer.length = 0;
}

Writable.prototype._write = function(chunk, encoding, cb) {
  cb(new Error('not implemented'));
};

Writable.prototype.end = function(chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (typeof chunk !== 'undefined' && chunk !== null)
    this.write(chunk, encoding);

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished)
    endWritable(this, state, cb);
};


function needFinish(stream, state) {
  return (state.ending &&
          state.length === 0 &&
          !state.finished &&
          !state.writing);
}

function finishMaybe(stream, state) {
  var need = needFinish(stream, state);
  if (need) {
    state.finished = true;
    stream.emit('finish');
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished)
      setImmediate(cb);
    else
      stream.once('finish', cb);
  }
  state.ended = true;
}

},{"./index.js":10,"buffer":7,"inherits":17,"process/browser.js":11}],16:[function(require,module,exports){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],17:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],18:[function(require,module,exports){
(function (process){
var Stream = require('stream')

// through
//
// a stream that does nothing but re-emit the input.
// useful for aggregating a series of changing but not ending streams into one stream)

exports = module.exports = through
through.through = through

//create a readable writable stream.

function through (write, end, opts) {
  write = write || function (data) { this.queue(data) }
  end = end || function () { this.queue(null) }

  var ended = false, destroyed = false, buffer = [], _ended = false
  var stream = new Stream()
  stream.readable = stream.writable = true
  stream.paused = false

//  stream.autoPause   = !(opts && opts.autoPause   === false)
  stream.autoDestroy = !(opts && opts.autoDestroy === false)

  stream.write = function (data) {
    write.call(this, data)
    return !stream.paused
  }

  function drain() {
    while(buffer.length && !stream.paused) {
      var data = buffer.shift()
      if(null === data)
        return stream.emit('end')
      else
        stream.emit('data', data)
    }
  }

  stream.queue = stream.push = function (data) {
//    console.error(ended)
    if(_ended) return stream
    if(data === null) _ended = true
    buffer.push(data)
    drain()
    return stream
  }

  //this will be registered as the first 'end' listener
  //must call destroy next tick, to make sure we're after any
  //stream piped from here.
  //this is only a problem if end is not emitted synchronously.
  //a nicer way to do this is to make sure this is the last listener for 'end'

  stream.on('end', function () {
    stream.readable = false
    if(!stream.writable && stream.autoDestroy)
      process.nextTick(function () {
        stream.destroy()
      })
  })

  function _end () {
    stream.writable = false
    end.call(stream)
    if(!stream.readable && stream.autoDestroy)
      stream.destroy()
  }

  stream.end = function (data) {
    if(ended) return
    ended = true
    if(arguments.length) stream.write(data)
    _end() // will emit or queue
    return stream
  }

  stream.destroy = function () {
    if(destroyed) return
    destroyed = true
    ended = true
    buffer.length = 0
    stream.writable = stream.readable = false
    stream.emit('close')
    return stream
  }

  stream.pause = function () {
    if(stream.paused) return
    stream.paused = true
    return stream
  }

  stream.resume = function () {
    if(stream.paused) {
      stream.paused = false
      stream.emit('resume')
    }
    drain()
    //may have become paused again,
    //as drain emits 'data'.
    if(!stream.paused)
      stream.emit('drain')
    return stream
  }
  return stream
}


}).call(this,require("2ionoC"))
},{"2ionoC":8,"stream":10}],19:[function(require,module,exports){
var indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

exports.setOrigin = function(vec, dimensions, origin) {
  var w, x, y, z;
  if (+dimensions === dimensions) {
    dimensions = [dimensions];
  }
  x = indexOf.call(dimensions, 1) >= 0 ? 0 : origin.x;
  y = indexOf.call(dimensions, 2) >= 0 ? 0 : origin.y;
  z = indexOf.call(dimensions, 3) >= 0 ? 0 : origin.z;
  w = indexOf.call(dimensions, 4) >= 0 ? 0 : origin.w;
  return vec.set(x, y, z, w);
};

exports.addOrigin = (function() {
  var v;
  v = new THREE.Vector4;
  return function(vec, dimension, origin) {
    exports.setOrigin(v, dimension, origin);
    return vec.add(v);
  };
})();

exports.setDimension = function(vec, dimension) {
  var w, x, y, z;
  x = dimension === 1 ? 1 : 0;
  y = dimension === 2 ? 1 : 0;
  z = dimension === 3 ? 1 : 0;
  w = dimension === 4 ? 1 : 0;
  return vec.set(x, y, z, w);
};

exports.setDimensionNormal = function(vec, dimension) {
  var w, x, y, z;
  x = dimension === 1 ? 1 : 0;
  y = dimension === 2 ? 1 : 0;
  z = dimension === 3 ? 1 : 0;
  w = dimension === 4 ? 1 : 0;
  return vec.set(y, z + x, w, 0);
};

exports.recenterAxis = (function() {
  var axis;
  axis = [0, 0];
  return function(x, dx, bend, f) {
    var abs, fabs, max, min, x1, x2;
    if (f == null) {
      f = 0;
    }
    if (bend > 0) {
      x1 = x;
      x2 = x + dx;
      abs = Math.max(Math.abs(x1), Math.abs(x2));
      fabs = abs * f;
      min = Math.min(x1, x2);
      max = Math.max(x1, x2);
      x = min + (-abs + fabs - min) * bend;
      dx = max + (abs + fabs - max) * bend - x;
    }
    axis[0] = x;
    axis[1] = dx;
    return axis;
  };
})();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXFV0aWxcXGF4aXMuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXFV0aWxcXGF4aXMuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUE7O0FBQUEsT0FBTyxDQUFDLFNBQVIsR0FBb0IsU0FBQyxHQUFELEVBQU0sVUFBTixFQUFrQixNQUFsQjtBQUNsQixNQUFBO0VBQUEsSUFBNkIsQ0FBQyxVQUFELEtBQWUsVUFBNUM7SUFBQSxVQUFBLEdBQWEsQ0FBQyxVQUFELEVBQWI7O0VBQ0EsQ0FBQSxHQUFPLGFBQUssVUFBTCxFQUFBLENBQUEsTUFBSCxHQUF3QixDQUF4QixHQUErQixNQUFNLENBQUM7RUFDMUMsQ0FBQSxHQUFPLGFBQUssVUFBTCxFQUFBLENBQUEsTUFBSCxHQUF3QixDQUF4QixHQUErQixNQUFNLENBQUM7RUFDMUMsQ0FBQSxHQUFPLGFBQUssVUFBTCxFQUFBLENBQUEsTUFBSCxHQUF3QixDQUF4QixHQUErQixNQUFNLENBQUM7RUFDMUMsQ0FBQSxHQUFPLGFBQUssVUFBTCxFQUFBLENBQUEsTUFBSCxHQUF3QixDQUF4QixHQUErQixNQUFNLENBQUM7U0FDMUMsR0FBRyxDQUFDLEdBQUosQ0FBUSxDQUFSLEVBQVcsQ0FBWCxFQUFjLENBQWQsRUFBaUIsQ0FBakI7QUFOa0I7O0FBUXBCLE9BQU8sQ0FBQyxTQUFSLEdBQXVCLENBQUEsU0FBQTtBQUNyQixNQUFBO0VBQUEsQ0FBQSxHQUFJLElBQUksS0FBSyxDQUFDO1NBQ2QsU0FBQyxHQUFELEVBQU0sU0FBTixFQUFpQixNQUFqQjtJQUNFLE9BQU8sQ0FBQyxTQUFSLENBQWtCLENBQWxCLEVBQXFCLFNBQXJCLEVBQWdDLE1BQWhDO1dBQ0EsR0FBRyxDQUFDLEdBQUosQ0FBUSxDQUFSO0VBRkY7QUFGcUIsQ0FBQSxDQUFILENBQUE7O0FBTXBCLE9BQU8sQ0FBQyxZQUFSLEdBQXVCLFNBQUMsR0FBRCxFQUFNLFNBQU47QUFDckIsTUFBQTtFQUFBLENBQUEsR0FBTyxTQUFBLEtBQWEsQ0FBaEIsR0FBdUIsQ0FBdkIsR0FBOEI7RUFDbEMsQ0FBQSxHQUFPLFNBQUEsS0FBYSxDQUFoQixHQUF1QixDQUF2QixHQUE4QjtFQUNsQyxDQUFBLEdBQU8sU0FBQSxLQUFhLENBQWhCLEdBQXVCLENBQXZCLEdBQThCO0VBQ2xDLENBQUEsR0FBTyxTQUFBLEtBQWEsQ0FBaEIsR0FBdUIsQ0FBdkIsR0FBOEI7U0FDbEMsR0FBRyxDQUFDLEdBQUosQ0FBUSxDQUFSLEVBQVcsQ0FBWCxFQUFjLENBQWQsRUFBaUIsQ0FBakI7QUFMcUI7O0FBT3ZCLE9BQU8sQ0FBQyxrQkFBUixHQUE2QixTQUFDLEdBQUQsRUFBTSxTQUFOO0FBRTNCLE1BQUE7RUFBQSxDQUFBLEdBQU8sU0FBQSxLQUFhLENBQWhCLEdBQXVCLENBQXZCLEdBQThCO0VBQ2xDLENBQUEsR0FBTyxTQUFBLEtBQWEsQ0FBaEIsR0FBdUIsQ0FBdkIsR0FBOEI7RUFDbEMsQ0FBQSxHQUFPLFNBQUEsS0FBYSxDQUFoQixHQUF1QixDQUF2QixHQUE4QjtFQUNsQyxDQUFBLEdBQU8sU0FBQSxLQUFhLENBQWhCLEdBQXVCLENBQXZCLEdBQThCO1NBQ2xDLEdBQUcsQ0FBQyxHQUFKLENBQVEsQ0FBUixFQUFXLENBQUEsR0FBSSxDQUFmLEVBQWtCLENBQWxCLEVBQXFCLENBQXJCO0FBTjJCOztBQVE3QixPQUFPLENBQUMsWUFBUixHQUEwQixDQUFBLFNBQUE7QUFDeEIsTUFBQTtFQUFBLElBQUEsR0FBTyxDQUFDLENBQUQsRUFBSSxDQUFKO1NBRVAsU0FBQyxDQUFELEVBQUksRUFBSixFQUFRLElBQVIsRUFBYyxDQUFkO0FBQ0UsUUFBQTs7TUFEWSxJQUFJOztJQUNoQixJQUFHLElBQUEsR0FBTyxDQUFWO01BQ0UsRUFBQSxHQUFLO01BQ0wsRUFBQSxHQUFLLENBQUEsR0FBSTtNQUVULEdBQUEsR0FBTSxJQUFJLENBQUMsR0FBTCxDQUFTLElBQUksQ0FBQyxHQUFMLENBQVMsRUFBVCxDQUFULEVBQXVCLElBQUksQ0FBQyxHQUFMLENBQVMsRUFBVCxDQUF2QjtNQUNOLElBQUEsR0FBTyxHQUFBLEdBQU07TUFFYixHQUFBLEdBQU0sSUFBSSxDQUFDLEdBQUwsQ0FBUyxFQUFULEVBQWEsRUFBYjtNQUNOLEdBQUEsR0FBTSxJQUFJLENBQUMsR0FBTCxDQUFTLEVBQVQsRUFBYSxFQUFiO01BRU4sQ0FBQSxHQUFLLEdBQUEsR0FBTSxDQUFDLENBQUMsR0FBRCxHQUFPLElBQVAsR0FBYyxHQUFmLENBQUEsR0FBc0I7TUFDakMsRUFBQSxHQUFLLEdBQUEsR0FBTSxDQUFDLEdBQUEsR0FBTSxJQUFOLEdBQWEsR0FBZCxDQUFBLEdBQXFCLElBQTNCLEdBQWtDLEVBWHpDOztJQWFBLElBQUssQ0FBQSxDQUFBLENBQUwsR0FBVTtJQUNWLElBQUssQ0FBQSxDQUFBLENBQUwsR0FBVTtXQUNWO0VBaEJGO0FBSHdCLENBQUEsQ0FBSCxDQUFBIn0=

},{}],20:[function(require,module,exports){
var getSizes;

exports.getSizes = getSizes = function(data) {
  var array, sizes;
  sizes = [];
  array = data;
  while (typeof array !== 'string' && ((array != null ? array.length : void 0) != null)) {
    sizes.push(array.length);
    array = array[0];
  }
  return sizes;
};

exports.getDimensions = function(data, spec) {
  var channels, depth, dims, height, items, levels, n, nesting, ref, ref1, ref2, ref3, ref4, sizes, width;
  if (spec == null) {
    spec = {};
  }
  items = spec.items, channels = spec.channels, width = spec.width, height = spec.height, depth = spec.depth;
  dims = {};
  if (!data || !data.length) {
    return {
      items: items,
      channels: channels,
      width: width != null ? width : 0,
      height: height != null ? height : 0,
      depth: depth != null ? depth : 0
    };
  }
  sizes = getSizes(data);
  nesting = sizes.length;
  dims.channels = channels !== 1 && sizes.length > 1 ? sizes.pop() : channels;
  dims.items = items !== 1 && sizes.length > 1 ? sizes.pop() : items;
  dims.width = width !== 1 && sizes.length > 1 ? sizes.pop() : width;
  dims.height = height !== 1 && sizes.length > 1 ? sizes.pop() : height;
  dims.depth = depth !== 1 && sizes.length > 1 ? sizes.pop() : depth;
  levels = nesting;
  if (channels === 1) {
    levels++;
  }
  if (items === 1 && levels > 1) {
    levels++;
  }
  if (width === 1 && levels > 2) {
    levels++;
  }
  if (height === 1 && levels > 3) {
    levels++;
  }
  n = (ref = sizes.pop()) != null ? ref : 1;
  if (levels <= 1) {
    n /= (ref1 = dims.channels) != null ? ref1 : 1;
  }
  if (levels <= 2) {
    n /= (ref2 = dims.items) != null ? ref2 : 1;
  }
  if (levels <= 3) {
    n /= (ref3 = dims.width) != null ? ref3 : 1;
  }
  if (levels <= 4) {
    n /= (ref4 = dims.height) != null ? ref4 : 1;
  }
  n = Math.floor(n);
  if (dims.width == null) {
    dims.width = n;
    n = 1;
  }
  if (dims.height == null) {
    dims.height = n;
    n = 1;
  }
  if (dims.depth == null) {
    dims.depth = n;
    n = 1;
  }
  return dims;
};

exports.repeatCall = function(call, times) {
  switch (times) {
    case 0:
      return function() {
        return true;
      };
    case 1:
      return function() {
        return call();
      };
    case 2:
      return function() {
        call();
        return call();
      };
    case 3:
      return function() {
        call();
        call();
        call();
        return call();
      };
    case 4:
      return function() {
        call();
        call();
        call();
        return call();
      };
    case 6:
      return function() {
        call();
        call();
        call();
        call();
        call();
        return call();
      };
    case 8:
      return function() {
        call();
        call();
        call();
        call();
        call();
        return call();
      };
  }
};

exports.makeEmitter = function(thunk, items, channels) {
  var inner, n, next, outer;
  inner = (function() {
    switch (channels) {
      case 0:
        return function() {
          return true;
        };
      case 1:
        return function(emit) {
          return emit(thunk());
        };
      case 2:
        return function(emit) {
          return emit(thunk(), thunk());
        };
      case 3:
        return function(emit) {
          return emit(thunk(), thunk(), thunk());
        };
      case 4:
        return function(emit) {
          return emit(thunk(), thunk(), thunk(), thunk());
        };
      case 6:
        return function(emit) {
          return emit(thunk(), thunk(), thunk(), thunk(), thunk(), thunk());
        };
      case 8:
        return function(emit) {
          return emit(thunk(), thunk(), thunk(), thunk(), thunk(), thunk(), thunk(), thunk());
        };
    }
  })();
  next = null;
  while (items > 0) {
    n = Math.min(items, 8);
    outer = (function() {
      switch (n) {
        case 1:
          return function(emit) {
            return inner(emit);
          };
        case 2:
          return function(emit) {
            inner(emit);
            return inner(emit);
          };
        case 3:
          return function(emit) {
            inner(emit);
            inner(emit);
            return inner(emit);
          };
        case 4:
          return function(emit) {
            inner(emit);
            inner(emit);
            inner(emit);
            return inner(emit);
          };
        case 5:
          return function(emit) {
            inner(emit);
            inner(emit);
            inner(emit);
            inner(emit);
            return inner(emit);
          };
        case 6:
          return function(emit) {
            inner(emit);
            inner(emit);
            inner(emit);
            inner(emit);
            inner(emit);
            return inner(emit);
          };
        case 7:
          return function(emit) {
            inner(emit);
            inner(emit);
            inner(emit);
            inner(emit);
            inner(emit);
            inner(emit);
            return inner(emit);
          };
        case 8:
          return function(emit) {
            inner(emit);
            inner(emit);
            inner(emit);
            inner(emit);
            inner(emit);
            inner(emit);
            inner(emit);
            return inner(emit);
          };
      }
    })();
    if (next != null) {
      next = (function(outer, next) {
        return function(emit) {
          outer(emit);
          return next(emit);
        };
      })(outer, next);
    } else {
      next = outer;
    }
    items -= n;
  }
  outer = next != null ? next : function() {
    return true;
  };
  outer.reset = thunk.reset;
  outer.rebind = thunk.rebind;
  return outer;
};

exports.getThunk = function(data) {
  var a, b, c, d, done, first, fourth, i, j, k, l, m, nesting, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, second, sizes, third, thunk;
  sizes = getSizes(data);
  nesting = sizes.length;
  a = sizes.pop();
  b = sizes.pop();
  c = sizes.pop();
  d = sizes.pop();
  done = false;
  switch (nesting) {
    case 0:
      thunk = function() {
        return 0;
      };
      thunk.reset = function() {};
      break;
    case 1:
      i = 0;
      thunk = function() {
        return data[i++];
      };
      thunk.reset = function() {
        return i = 0;
      };
      break;
    case 2:
      i = j = 0;
      first = (ref = data[j]) != null ? ref : [];
      thunk = function() {
        var ref1, x;
        x = first[i++];
        if (i === a) {
          i = 0;
          j++;
          first = (ref1 = data[j]) != null ? ref1 : [];
        }
        return x;
      };
      thunk.reset = function() {
        var ref1;
        i = j = 0;
        first = (ref1 = data[j]) != null ? ref1 : [];
      };
      break;
    case 3:
      i = j = k = 0;
      second = (ref1 = data[k]) != null ? ref1 : [];
      first = (ref2 = second[j]) != null ? ref2 : [];
      thunk = function() {
        var ref3, ref4, x;
        x = first[i++];
        if (i === a) {
          i = 0;
          j++;
          if (j === b) {
            j = 0;
            k++;
            second = (ref3 = data[k]) != null ? ref3 : [];
          }
          first = (ref4 = second[j]) != null ? ref4 : [];
        }
        return x;
      };
      thunk.reset = function() {
        var ref3, ref4;
        i = j = k = 0;
        second = (ref3 = data[k]) != null ? ref3 : [];
        first = (ref4 = second[j]) != null ? ref4 : [];
      };
      break;
    case 4:
      i = j = k = l = 0;
      third = (ref3 = data[l]) != null ? ref3 : [];
      second = (ref4 = third[k]) != null ? ref4 : [];
      first = (ref5 = second[j]) != null ? ref5 : [];
      thunk = function() {
        var ref6, ref7, ref8, x;
        x = first[i++];
        if (i === a) {
          i = 0;
          j++;
          if (j === b) {
            j = 0;
            k++;
            if (k === c) {
              k = 0;
              l++;
              third = (ref6 = data[l]) != null ? ref6 : [];
            }
            second = (ref7 = third[k]) != null ? ref7 : [];
          }
          first = (ref8 = second[j]) != null ? ref8 : [];
        }
        return x;
      };
      thunk.reset = function() {
        var ref6, ref7, ref8;
        i = j = k = l = 0;
        third = (ref6 = data[l]) != null ? ref6 : [];
        second = (ref7 = third[k]) != null ? ref7 : [];
        first = (ref8 = second[j]) != null ? ref8 : [];
      };
      break;
    case 5:
      i = j = k = l = m = 0;
      fourth = (ref6 = data[m]) != null ? ref6 : [];
      third = (ref7 = fourth[l]) != null ? ref7 : [];
      second = (ref8 = third[k]) != null ? ref8 : [];
      first = (ref9 = second[j]) != null ? ref9 : [];
      thunk = function() {
        var ref10, ref11, ref12, ref13, x;
        x = first[i++];
        if (i === a) {
          i = 0;
          j++;
          if (j === b) {
            j = 0;
            k++;
            if (k === c) {
              k = 0;
              l++;
              if (l === d) {
                l = 0;
                m++;
                fourth = (ref10 = data[m]) != null ? ref10 : [];
              }
              third = (ref11 = fourth[l]) != null ? ref11 : [];
            }
            second = (ref12 = third[k]) != null ? ref12 : [];
          }
          first = (ref13 = second[j]) != null ? ref13 : [];
        }
        return x;
      };
      thunk.reset = function() {
        var ref10, ref11, ref12, ref13;
        i = j = k = l = m = 0;
        fourth = (ref10 = data[m]) != null ? ref10 : [];
        third = (ref11 = fourth[l]) != null ? ref11 : [];
        second = (ref12 = third[k]) != null ? ref12 : [];
        first = (ref13 = second[j]) != null ? ref13 : [];
      };
  }
  thunk.rebind = function(d) {
    data = d;
    sizes = getSizes(data);
    if (sizes.length) {
      a = sizes.pop();
    }
    if (sizes.length) {
      b = sizes.pop();
    }
    if (sizes.length) {
      c = sizes.pop();
    }
    if (sizes.length) {
      return d = sizes.pop();
    }
  };
  return thunk;
};

exports.getStreamer = function(array, samples, channels, items) {
  var consume, count, done, emit, i, j, limit, reset, skip;
  limit = i = j = 0;
  reset = function() {
    limit = samples * channels * items;
    return i = j = 0;
  };
  count = function() {
    return j;
  };
  done = function() {
    return limit - i <= 0;
  };
  skip = (function() {
    switch (channels) {
      case 1:
        return function(n) {
          i += n;
          j += n;
        };
      case 2:
        return function(n) {
          i += n * 2;
          j += n;
        };
      case 3:
        return function(n) {
          i += n * 3;
          j += n;
        };
      case 4:
        return function(n) {
          i += n * 4;
          j += n;
        };
    }
  })();
  consume = (function() {
    switch (channels) {
      case 1:
        return function(emit) {
          emit(array[i++]);
          ++j;
        };
      case 2:
        return function(emit) {
          emit(array[i++], array[i++]);
          ++j;
        };
      case 3:
        return function(emit) {
          emit(array[i++], array[i++], array[i++]);
          ++j;
        };
      case 4:
        return function(emit) {
          emit(array[i++], array[i++], array[i++], array[i++]);
          ++j;
        };
    }
  })();
  emit = (function() {
    switch (channels) {
      case 1:
        return function(x) {
          array[i++] = x;
          ++j;
        };
      case 2:
        return function(x, y) {
          array[i++] = x;
          array[i++] = y;
          ++j;
        };
      case 3:
        return function(x, y, z) {
          array[i++] = x;
          array[i++] = y;
          array[i++] = z;
          ++j;
        };
      case 4:
        return function(x, y, z, w) {
          array[i++] = x;
          array[i++] = y;
          array[i++] = z;
          array[i++] = w;
          ++j;
        };
    }
  })();
  consume.reset = reset;
  emit.reset = reset;
  reset();
  return {
    emit: emit,
    consume: consume,
    skip: skip,
    count: count,
    done: done,
    reset: reset
  };
};

exports.getLerpEmitter = function(expr1, expr2) {
  var args, emit1, emit2, emitter, lerp1, lerp2, p, q, r, s, scratch;
  scratch = new Float32Array(4096);
  lerp1 = lerp2 = 0.5;
  p = q = r = s = 0;
  emit1 = function(x, y, z, w) {
    r++;
    scratch[p++] = x * lerp1;
    scratch[p++] = y * lerp1;
    scratch[p++] = z * lerp1;
    return scratch[p++] = w * lerp1;
  };
  emit2 = function(x, y, z, w) {
    s++;
    scratch[q++] += x * lerp2;
    scratch[q++] += y * lerp2;
    scratch[q++] += z * lerp2;
    return scratch[q++] += w * lerp2;
  };
  args = Math.max(expr1.length, expr2.length);
  if (args <= 3) {
    emitter = function(emit, x, i) {
      var k, l, n, o, ref, results;
      p = q = r = s = 0;
      expr1(emit1, x, i);
      expr2(emit2, x, i);
      n = Math.min(r, s);
      l = 0;
      results = [];
      for (k = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; k = 0 <= ref ? ++o : --o) {
        results.push(emit(scratch[l++], scratch[l++], scratch[l++], scratch[l++]));
      }
      return results;
    };
  } else if (args <= 5) {
    emitter = function(emit, x, y, i, j) {
      var k, l, n, o, ref, results;
      p = q = r = s = 0;
      expr1(emit1, x, y, i, j);
      expr2(emit2, x, y, i, j);
      n = Math.min(r, s);
      l = 0;
      results = [];
      for (k = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; k = 0 <= ref ? ++o : --o) {
        results.push(emit(scratch[l++], scratch[l++], scratch[l++], scratch[l++]));
      }
      return results;
    };
  } else if (args <= 7) {
    emitter = function(emit, x, y, z, i, j, k) {
      var l, n, o, ref, results;
      p = q = r = s = 0;
      expr1(emit1, x, y, z, i, j, k);
      expr2(emit2, x, y, z, i, j, k);
      n = Math.min(r, s);
      l = 0;
      results = [];
      for (k = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; k = 0 <= ref ? ++o : --o) {
        results.push(emit(scratch[l++], scratch[l++], scratch[l++], scratch[l++]));
      }
      return results;
    };
  } else if (args <= 9) {
    emitter = function(emit, x, y, z, w, i, j, k, l) {
      var n, o, ref, results;
      p = q = r = s = 0;
      expr1(emit1, x, y, z, w, i, j, k, l);
      expr2(emit2, x, y, z, w, i, j, k, l);
      n = Math.min(r, s);
      l = 0;
      results = [];
      for (k = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; k = 0 <= ref ? ++o : --o) {
        results.push(emit(scratch[l++], scratch[l++], scratch[l++], scratch[l++]));
      }
      return results;
    };
  } else {
    emitter = function(emit, x, y, z, w, i, j, k, l, d, t) {
      var n, o, ref, results;
      p = q = 0;
      expr1(emit1, x, y, z, w, i, j, k, l, d, t);
      expr2(emit2, x, y, z, w, i, j, k, l, d, t);
      n = Math.min(r, s);
      l = 0;
      results = [];
      for (k = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; k = 0 <= ref ? ++o : --o) {
        results.push(emit(scratch[l++], scratch[l++], scratch[l++], scratch[l++]));
      }
      return results;
    };
  }
  emitter.lerp = function(f) {
    var ref;
    return ref = [1 - f, f], lerp1 = ref[0], lerp2 = ref[1], ref;
  };
  return emitter;
};

exports.getLerpThunk = function(data1, data2) {
  var n, n1, n2, scratch, thunk1, thunk2;
  n1 = exports.getSizes(data1).reduce(function(a, b) {
    return a * b;
  });
  n2 = exports.getSizes(data2).reduce(function(a, b) {
    return a * b;
  });
  n = Math.min(n1, n2);
  thunk1 = exports.getThunk(data1);
  thunk2 = exports.getThunk(data2);
  scratch = new Float32Array(n);
  scratch.lerp = function(f) {
    var a, b, i, results;
    thunk1.reset();
    thunk2.reset();
    i = 0;
    results = [];
    while (i < n) {
      a = thunk1();
      b = thunk2();
      results.push(scratch[i++] = a + (b - a) * f);
    }
    return results;
  };
  return scratch;
};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,

},{}],21:[function(require,module,exports){
var ease, π;

π = Math.PI;

ease = {
  clamp: function(x, a, b) {
    return Math.max(a, Math.min(b, x));
  },
  cosine: function(x) {
    return .5 - .5 * Math.cos(ease.clamp(x, 0, 1) * π);
  },
  binary: function(x) {
    return +(x >= .5);
  },
  hold: function(x) {
    return +(x >= 1);
  }
};

module.exports = ease;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXFV0aWxcXGVhc2UuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXFV0aWxcXGVhc2UuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUE7O0FBQUEsQ0FBQSxHQUFJLElBQUksQ0FBQzs7QUFFVCxJQUFBLEdBRUU7RUFBQSxLQUFBLEVBQVEsU0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVA7V0FBYSxJQUFJLENBQUMsR0FBTCxDQUFTLENBQVQsRUFBWSxJQUFJLENBQUMsR0FBTCxDQUFTLENBQVQsRUFBWSxDQUFaLENBQVo7RUFBYixDQUFSO0VBQ0EsTUFBQSxFQUFRLFNBQUMsQ0FBRDtXQUFPLEVBQUEsR0FBSyxFQUFBLEdBQUssSUFBSSxDQUFDLEdBQUwsQ0FBUyxJQUFJLENBQUMsS0FBTCxDQUFXLENBQVgsRUFBYyxDQUFkLEVBQWlCLENBQWpCLENBQUEsR0FBc0IsQ0FBL0I7RUFBakIsQ0FEUjtFQUVBLE1BQUEsRUFBUSxTQUFDLENBQUQ7V0FBTyxDQUFDLENBQUMsQ0FBQSxJQUFLLEVBQU47RUFBUixDQUZSO0VBR0EsSUFBQSxFQUFRLFNBQUMsQ0FBRDtXQUFPLENBQUMsQ0FBQyxDQUFBLElBQUssQ0FBTjtFQUFSLENBSFI7OztBQUtGLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{}],22:[function(require,module,exports){
var index, letters, parseOrder, toFloatString, toType,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

letters = 'xyzw'.split('');

index = {
  0: -1,
  x: 0,
  y: 1,
  z: 2,
  w: 3
};

parseOrder = function(order) {
  if (order === "" + order) {
    order = order.split('');
  }
  if (order === +order) {
    order = [order];
  }
  return order;
};

toType = function(type) {
  if (type === +type) {
    type = 'vec' + type;
  }
  if (type === 'vec1') {
    type = 'float';
  }
  return type;
};

toFloatString = function(value) {
  value = "" + value;
  if (value.indexOf('.') < 0) {
    return value += '.0';
  }
};

exports.mapByte2FloatOffset = function(stretch) {
  var factor;
  if (stretch == null) {
    stretch = 4;
  }
  factor = toFloatString(stretch);
  return "vec4 float2ByteIndex(vec4 xyzw, out float channelIndex) {\n  float relative = xyzw.w / " + factor + ";\n  float w = floor(relative);\n  channelIndex = (relative - w) * " + factor + ";\n  return vec4(xyzw.xyz, w);\n}";
};

exports.sample2DArray = function(textures) {
  var body, divide;
  divide = function(a, b) {
    var mid, out;
    if (a === b) {
      out = "return texture2D(dataTextures[" + a + "], uv);";
    } else {
      mid = Math.ceil(a + (b - a) / 2);
      out = "if (z < " + (mid - .5) + ") {\n  " + (divide(a, mid - 1)) + "\n}\nelse {\n  " + (divide(mid, b)) + "\n}";
    }
    return out = out.replace(/\n/g, "\n  ");
  };
  body = divide(0, textures - 1);
  return "uniform sampler2D dataTextures[" + textures + "];\n\nvec4 sample2DArray(vec2 uv, float z) {\n  " + body + "\n}";
};

exports.binaryOperator = function(type, op, curry) {
  type = toType(type);
  if (curry != null) {
    return type + " binaryOperator(" + type + " a) {\n  return a " + op + " " + curry + ";\n}";
  } else {
    return type + " binaryOperator(" + type + " a, " + type + " b) {\n  return a " + op + " b;\n}";
  }
};

exports.extendVec = function(from, to, value) {
  var ctor, diff, k, parts, results;
  if (value == null) {
    value = 0;
  }
  if (from > to) {
    return exports.truncateVec(from, to);
  }
  diff = to - from;
  from = toType(from);
  to = toType(to);
  value = toFloatString(value);
  parts = (function() {
    results = [];
    for (var k = 0; 0 <= diff ? k <= diff : k >= diff; 0 <= diff ? k++ : k--){ results.push(k); }
    return results;
  }).apply(this).map(function(x) {
    if (x) {
      return value;
    } else {
      return 'v';
    }
  });
  ctor = parts.join(',');
  return to + " extendVec(" + from + " v) { return " + to + "(" + ctor + "); }";
};

exports.truncateVec = function(from, to) {
  var swizzle;
  if (from < to) {
    return exports.extendVec(from, to);
  }
  swizzle = '.' + ('xyzw'.substr(0, to));
  from = toType(from);
  to = toType(to);
  return to + " truncateVec(" + from + " v) { return v" + swizzle + "; }";
};

exports.injectVec4 = function(order) {
  var args, channel, i, k, len, mask, swizzler;
  swizzler = ['0.0', '0.0', '0.0', '0.0'];
  order = parseOrder(order);
  order = order.map(function(v) {
    if (v === "" + v) {
      return index[v];
    } else {
      return v;
    }
  });
  for (i = k = 0, len = order.length; k < len; i = ++k) {
    channel = order[i];
    swizzler[channel] = ['a', 'b', 'c', 'd'][i];
  }
  mask = swizzler.slice(0, 4).join(', ');
  args = ['float a', 'float b', 'float c', 'float d'].slice(0, order.length);
  return "vec4 inject(" + args + ") {\n  return vec4(" + mask + ");\n}";
};

exports.swizzleVec4 = function(order, size) {
  var lookup, mask;
  if (size == null) {
    size = null;
  }
  lookup = ['0.0', 'xyzw.x', 'xyzw.y', 'xyzw.z', 'xyzw.w'];
  if (size == null) {
    size = order.length;
  }
  order = parseOrder(order);
  order = order.map(function(v) {
    var ref;
    if (ref = +v, indexOf.call([0, 1, 2, 3, 4], ref) >= 0) {
      v = +v;
    }
    if (v === "" + v) {
      v = index[v] + 1;
    }
    return lookup[v];
  });
  while (order.length < size) {
    order.push('0.0');
  }
  mask = order.join(', ');
  return ("vec" + size + " swizzle(vec4 xyzw) {\n  return vec" + size + "(" + mask + ");\n}").replace(/vec1/g, 'float');
};

exports.invertSwizzleVec4 = function(order) {
  var i, j, k, len, letter, mask, src, swizzler;
  swizzler = ['0.0', '0.0', '0.0', '0.0'];
  order = parseOrder(order);
  order = order.map(function(v) {
    if (v === +v) {
      return letters[v - 1];
    } else {
      return v;
    }
  });
  for (i = k = 0, len = order.length; k < len; i = ++k) {
    letter = order[i];
    src = letters[i];
    j = index[letter];
    swizzler[j] = "xyzw." + src;
  }
  mask = swizzler.join(', ');
  return "vec4 invertSwizzle(vec4 xyzw) {\n  return vec4(" + mask + ");\n}";
};

exports.identity = function(type) {
  var args;
  args = [].slice.call(arguments);
  if (args.length > 1) {
    args = args.map(function(t, i) {
      return ['inout', t, String.fromCharCode(97 + i)].join(' ');
    });
    args = args.join(', ');
    return "void identity(" + args + ") { }";
  } else {
    return type + " identity(" + type + " x) {\n  return x;\n}";
  }
};

exports.constant = function(type, value) {
  return type + " constant() {\n  return " + value + ";\n}";
};

exports.toType = toType;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXFV0aWxcXGdsc2wuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXFV0aWxcXGdsc2wuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsaURBQUE7RUFBQTs7QUFBQSxPQUFBLEdBQVUsTUFBTSxDQUFDLEtBQVAsQ0FBYSxFQUFiOztBQUVWLEtBQUEsR0FDRTtFQUFBLENBQUEsRUFBRyxDQUFDLENBQUo7RUFDQSxDQUFBLEVBQUcsQ0FESDtFQUVBLENBQUEsRUFBRyxDQUZIO0VBR0EsQ0FBQSxFQUFHLENBSEg7RUFJQSxDQUFBLEVBQUcsQ0FKSDs7O0FBTUYsVUFBQSxHQUFhLFNBQUMsS0FBRDtFQUNYLElBQTBCLEtBQUEsS0FBUyxFQUFBLEdBQUssS0FBeEM7SUFBQSxLQUFBLEdBQVEsS0FBSyxDQUFDLEtBQU4sQ0FBWSxFQUFaLEVBQVI7O0VBQ0EsSUFBMEIsS0FBQSxLQUFTLENBQUMsS0FBcEM7SUFBQSxLQUFBLEdBQVEsQ0FBQyxLQUFELEVBQVI7O1NBQ0E7QUFIVzs7QUFLYixNQUFBLEdBQVMsU0FBQyxJQUFEO0VBQ1AsSUFBdUIsSUFBQSxLQUFRLENBQUMsSUFBaEM7SUFBQSxJQUFBLEdBQU8sS0FBQSxHQUFRLEtBQWY7O0VBQ0EsSUFBa0IsSUFBQSxLQUFRLE1BQTFCO0lBQUEsSUFBQSxHQUFPLFFBQVA7O1NBQ0E7QUFITzs7QUFLVCxhQUFBLEdBQWdCLFNBQUMsS0FBRDtFQUNkLEtBQUEsR0FBUSxFQUFBLEdBQUs7RUFDYixJQUFpQixLQUFLLENBQUMsT0FBTixDQUFjLEdBQWQsQ0FBQSxHQUFxQixDQUF0QztXQUFBLEtBQUEsSUFBUyxLQUFUOztBQUZjOztBQUtoQixPQUFPLENBQUMsbUJBQVIsR0FBOEIsU0FBQyxPQUFEO0FBQzVCLE1BQUE7O0lBRDZCLFVB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

},{}],23:[function(require,module,exports){
exports.Axis = require('./axis');

exports.Data = require('./data');

exports.Ease = require('./ease');

exports.GLSL = require('./glsl');

exports.JS = require('./js');

exports.Pretty = require('./pretty');

exports.Three = require('./three');

exports.Ticks = require('./ticks');

exports.VDOM = require('./vdom');

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXFV0aWxcXGluZGV4LmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxVdGlsXFxpbmRleC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxDQUFDLElBQVIsR0FBaUIsT0FBQSxDQUFRLFFBQVI7O0FBQ2pCLE9BQU8sQ0FBQyxJQUFSLEdBQWlCLE9BQUEsQ0FBUSxRQUFSOztBQUNqQixPQUFPLENBQUMsSUFBUixHQUFpQixPQUFBLENBQVEsUUFBUjs7QUFDakIsT0FBTyxDQUFDLElBQVIsR0FBaUIsT0FBQSxDQUFRLFFBQVI7O0FBQ2pCLE9BQU8sQ0FBQyxFQUFSLEdBQWlCLE9BQUEsQ0FBUSxNQUFSOztBQUNqQixPQUFPLENBQUMsTUFBUixHQUFpQixPQUFBLENBQVEsVUFBUjs7QUFDakIsT0FBTyxDQUFDLEtBQVIsR0FBaUIsT0FBQSxDQUFRLFNBQVI7O0FBQ2pCLE9BQU8sQ0FBQyxLQUFSLEdBQWlCLE9BQUEsQ0FBUSxTQUFSOztBQUNqQixPQUFPLENBQUMsSUFBUixHQUFpQixPQUFBLENBQVEsUUFBUiJ9

},{"./axis":19,"./data":20,"./ease":21,"./glsl":22,"./js":24,"./pretty":25,"./three":26,"./ticks":27,"./vdom":28}],24:[function(require,module,exports){
exports.merge = function() {
  var i, k, len, obj, v, x;
  x = {};
  for (i = 0, len = arguments.length; i < len; i++) {
    obj = arguments[i];
    for (k in obj) {
      v = obj[k];
      x[k] = v;
    }
  }
  return x;
};

exports.clone = function(o) {
  return JSON.parse(JSON.serialize(o));
};

exports.parseQuoted = function(str) {
  var accum, char, chunk, i, len, list, munch, quote, token, unescape;
  accum = "";
  unescape = function(str) {
    return str = str.replace(/\\/g, '');
  };
  munch = function(next) {
    if (accum.length) {
      list.push(unescape(accum));
    }
    return accum = next != null ? next : "";
  };
  str = str.split(/(?=(?:\\.|["' ,]))/g);
  quote = false;
  list = [];
  for (i = 0, len = str.length; i < len; i++) {
    chunk = str[i];
    char = chunk[0];
    token = chunk.slice(1);
    switch (char) {
      case '"':
      case "'":
        if (quote) {
          if (quote === char) {
            quote = false;
            munch(token);
          } else {
            accum += chunk;
          }
        } else {
          if (accum !== '') {
            throw new Error("ParseError: String `" + str + "` does not contain comma-separated quoted tokens.");
          }
          quote = char;
          accum += token;
        }
        break;
      case ' ':
      case ',':
        if (!quote) {
          munch(token);
        } else {
          accum += chunk;
        }
        break;
      default:
        accum += chunk;
    }
  }
  munch();
  return list;
};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXFV0aWxcXGpzLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxVdGlsXFxqcy5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxDQUFDLEtBQVIsR0FBZ0IsU0FBQTtBQUNkLE1BQUE7RUFBQSxDQUFBLEdBQUk7QUFDSixPQUFBLDJDQUFBOztBQUFDLFNBQUEsUUFBQTs7TUFBQSxDQUFFLENBQUEsQ0FBQSxDQUFGLEdBQU87QUFBUDtBQUFEO1NBQ0E7QUFIYzs7QUFLaEIsT0FBTyxDQUFDLEtBQVIsR0FBZ0IsU0FBQyxDQUFEO1NBQU8sSUFBSSxDQUFDLEtBQUwsQ0FBVyxJQUFJLENBQUMsU0FBTCxDQUFlLENBQWYsQ0FBWDtBQUFQOztBQUVoQixPQUFPLENBQUMsV0FBUixHQUFzQixTQUFDLEdBQUQ7QUFFcEIsTUFBQTtFQUFBLEtBQUEsR0FBUTtFQUVSLFFBQUEsR0FBVyxTQUFDLEdBQUQ7V0FBUyxHQUFBLEdBQU0sR0FBRyxDQUFDLE9BQUosQ0FBWSxLQUFaLEVBQXFCLEVBQXJCO0VBQWY7RUFDWCxLQUFBLEdBQVEsU0FBQyxJQUFEO0lBQ04sSUFBNEIsS0FBSyxDQUFDLE1BQWxDO01BQUEsSUFBSSxDQUFDLElBQUwsQ0FBVSxRQUFBLENBQVMsS0FBVCxDQUFWLEVBQUE7O1dBQ0EsS0FBQSxrQkFBUSxPQUFPO0VBRlQ7RUFJUixHQUFBLEdBQU0sR0FBRyxDQUFDLEtBQUosQ0FBVSxxQkFBVjtFQUNOLEtBQUEsR0FBUTtFQUNSLElBQUEsR0FBTztBQUVQLE9BQUEscUNBQUE7O0lBQ0UsSUFBQSxHQUFRLEtBQU0sQ0FBQSxDQUFBO0lBQ2QsS0FBQSxHQUFRLEtBQUssQ0FBQyxLQUFOLENBQVksQ0FBWjtBQUNSLFlBQU8sSUFBUDtBQUFBLFdBQ08sR0FEUDtBQUFBLFdBQ1ksR0FEWjtRQUVJLElBQUcsS0FBSDtVQUNFLElBQUcsS0FBQSxLQUFTLElBQVo7WUFDRSxLQUFBLEdBQVE7WUFDUixLQUFBLENBQU0sS0FBTixFQUZGO1dBQUEsTUFBQTtZQUlFLEtBQUEsSUFBUyxNQUpYO1dBREY7U0FBQSxNQUFBO1VBT0UsSUFBRyxLQUFBLEtBQVMsRUFBWjtBQUNFLGtCQUFNLElBQUksS0FBSixDQUFVLHNCQUFBLEdBQXVCLEdBQXZCLEdBQTJCLG1EQUFyQyxFQURSOztVQUdBLEtBQUEsR0FBUTtVQUNSLEtBQUEsSUFBUyxNQVhYOztBQURRO0FBRFosV0FjTyxHQWRQO0FBQUEsV0FjWSxHQWRaO1FBZUksSUFBRyxDQUFDLEtBQUo7VUFDRSxLQUFBLENBQU0sS0FBTixFQURGO1NBQUEsTUFBQTtVQUdFLEtBQUEsSUFBUyxNQUhYOztBQURRO0FBZFo7UUFvQkksS0FBQSxJQUFTO0FBcEJiO0FBSEY7RUF3QkEsS0FBQSxDQUFBO1NBQ0E7QUF0Q29CIn0=

},{}],25:[function(require,module,exports){
var NUMBER_PRECISION, NUMBER_THRESHOLD, checkFactor, checkUnit, escapeHTML, formatFactors, formatFraction, formatMultiple, formatPrimes, prettyFormat, prettyJSXBind, prettyJSXPair, prettyJSXProp, prettyMarkup, prettyNumber, prettyPrint;

NUMBER_PRECISION = 5;

NUMBER_THRESHOLD = 0.0001;

checkFactor = function(v, f) {
  return Math.abs(v / f - Math.round(v / f)) < NUMBER_THRESHOLD;
};

checkUnit = function(v) {
  return checkFactor(v, 1);
};

formatMultiple = function(v, f, k, compact) {
  var d;
  d = Math.round(v / f);
  if (d === 1) {
    return "" + k;
  }
  if (d === -1) {
    return "-" + k;
  }
  if (k === '1') {
    return "" + d;
  }
  if (compact) {
    return "" + d + k;
  } else {
    return d + "*" + k;
  }
};

formatFraction = function(v, f, k, compact) {
  var d;
  d = Math.round(v * f);
  if (Math.abs(d) === 1) {
    d = d < 0 ? "-" : "";
    d += k;
  } else if (k !== '1') {
    d += compact ? "" + k : "*" + k;
  }
  return d + "/" + f;
};

formatFactors = [
  {
    1: 1
  }, {
    1: 1,
    τ: Math.PI * 2
  }, {
    1: 1,
    π: Math.PI
  }, {
    1: 1,
    τ: Math.PI * 2,
    π: Math.PI
  }, {
    1: 1,
    e: Math.E
  }, {
    1: 1,
    τ: Math.PI * 2,
    e: Math.E
  }, {
    1: 1,
    π: Math.PI,
    e: Math.E
  }, {
    1: 1,
    τ: Math.PI * 2,
    π: Math.PI,
    e: Math.E
  }
];

formatPrimes = [[2 * 2 * 3 * 5 * 7, [2, 3, 5, 7]], [2 * 2 * 2 * 3 * 3 * 5 * 5 * 7 * 7, [2, 3, 5, 7]], [2 * 2 * 3 * 5 * 7 * 11 * 13, [2, 3, 5, 7, 11, 13]], [2 * 2 * 17 * 19 * 23 * 29, [2, 17, 19, 23, 29]], [256 * 256, [2]], [1000000, [2, 5]]];

prettyNumber = function(options) {
  var cache, cacheIndex, compact, e, formatIndex, numberCache, pi, precision, tau, threshold;
  if (options) {
    cache = options.cache, compact = options.compact, tau = options.tau, pi = options.pi, e = options.e, threshold = options.threshold, precision = options.precision;
  }
  compact = +(!!(compact != null ? compact : true));
  tau = +(!!(tau != null ? tau : true));
  pi = +(!!(pi != null ? pi : true));
  e = +(!!(e != null ? e : true));
  cache = +(!!(cache != null ? cache : true));
  threshold = +(threshold != null ? threshold : NUMBER_THRESHOLD);
  precision = +(precision != null ? precision : NUMBER_PRECISION);
  formatIndex = tau + pi * 2 + e * 4;
  cacheIndex = formatIndex + threshold + precision;
  numberCache = cache ? {} : null;
  return function(v) {
    var best, cached, d, denom, f, i, j, k, len, len1, list, match, n, numer, out, p, ref, ref1;
    if (numberCache != null) {
      if ((cached = numberCache[v]) != null) {
        return cached;
      }
      if (v === Math.round(v)) {
        return numberCache[v] = "" + v;
      }
    }
    out = "" + v;
    best = out.length + out.indexOf('.') + 2;
    match = function(x) {
      var d;
      d = x.length;
      if (d <= best) {
        out = "" + x;
        return best = d;
      }
    };
    ref = formatFactors[formatIndex];
    for (k in ref) {
      f = ref[k];
      if (checkUnit(v / f)) {
        match("" + (formatMultiple(v / f, 1, k, compact)));
      } else {
        for (i = 0, len = formatPrimes.length; i < len; i++) {
          ref1 = formatPrimes[i], denom = ref1[0], list = ref1[1];
          numer = v / f * denom;
          if (checkUnit(numer)) {
            for (j = 0, len1 = list.length; j < len1; j++) {
              p = list[j];
              while (checkUnit(n = numer / p) && checkUnit(d = denom / p)) {
                numer = n;
                denom = d;
              }
            }
            match("" + (formatFraction(v / f, denom, k, compact)));
            break;
          }
        }
      }
    }
    if (("" + v).length > NUMBER_PRECISION) {
      match("" + (v.toPrecision(NUMBER_PRECISION)));
    }
    if (numberCache != null) {
      numberCache[v] = out;
    }
    return out;
  };
};

prettyPrint = function(markup, level) {
  if (level == null) {
    level = 'info';
  }
  markup = prettyMarkup(markup);
  return console[level].apply(console, markup);
};

prettyMarkup = function(markup) {
  var args, attr, nested, obj, quoted, str, tag, txt;
  tag = 'color:rgb(128,0,128)';
  attr = 'color:rgb(144,64,0)';
  str = 'color:rgb(0,0,192)';
  obj = 'color:rgb(0,70,156)';
  txt = 'color:inherit';
  quoted = false;
  nested = 0;
  args = [];
  markup = markup.replace(/(\\[<={}> "'])|(=>|[<={}> "'])/g, function(_, escape, char) {
    var res;
    if (escape != null ? escape.length : void 0) {
      return escape;
    }
    if (quoted && (char !== '"' && char !== "'")) {
      return char;
    }
    if (nested && (char !== '"' && char !== "'" && char !== '{' && char !== "}")) {
      return char;
    }
    return res = (function() {
      switch (char) {
        case '<':
          args.push(tag);
          return "%c<";
        case '>':
          args.push(tag);
          args.push(txt);
          return "%c>%c";
        case ' ':
          args.push(attr);
          return " %c";
        case '=':
        case '=>':
          args.push(tag);
          return "%c" + char;
        case '"':
        case "'":
          quoted = !quoted;
          if (quoted) {
            args.push(nested ? attr : str);
            return char + "%c";
          } else {
            args.push(nested ? obj : tag);
            return "%c" + char;
          }
          break;
        case '{':
          if (nested++ === 0) {
            args.push(obj);
            return "%c" + char;
          } else {
            return char;
          }
          break;
        case '}':
          if (--nested === 0) {
            args.push(tag);
            return char + "%c";
          } else {
            return char;
          }
          break;
        default:
          return char;
      }
    })();
  });
  return [markup].concat(args);
};

prettyJSXProp = function(k, v) {
  return prettyJSXPair(k, v, '=');
};

prettyJSXBind = function(k, v) {
  return prettyJSXPair(k, v, '=>');
};

prettyJSXPair = (function() {
  var formatNumber;
  formatNumber = prettyNumber({
    compact: false
  });
  return function(k, v, op) {
    var key, value, wrap;
    key = function(k) {
      if ((k === "" + +k) || k.match(/^[A-Za-z_][A-Za-z0-9]*$/)) {
        return k;
      } else {
        return JSON.stringify(k);
      }
    };
    wrap = function(v) {
      if (v.match('\n*"')) {
        return v;
      } else {
        return "{" + v + "}";
      }
    };
    value = function(v) {
      var kk, vv;
      if (v instanceof Array) {
        return "[" + (v.map(value).join(', ')) + "]";
      }
      switch (typeof v) {
        case 'string':
          if (v.match("\n")) {
            return "\"\n" + v + "\"\n";
          } else {
            return "\"" + v + "\"";
          }
          break;
        case 'function':
          v = "" + v;
          if (v.match("\n")) {
            "\n" + v + "\n";
          } else {
            "" + v;
          }
          v = v.replace(/^function (\([^)]+\))/, "$1 =>");
          return v = v.replace(/^(\([^)]+\)) =>\s*{\s*return\s*([^}]+)\s*;\s*}/, "$1 => $2");
        case 'number':
          return formatNumber(v);
        default:
          if ((v != null) && v !== !!v) {
            if (v._up != null) {
              return value(v.map(function(v) {
                return v;
              }));
            }
            if (v.toMarkup) {
              return v.toString();
            } else {
              return "{" + ((function() {
                var results;
                results = [];
                for (kk in v) {
                  vv = v[kk];
                  if (v.hasOwnProperty(kk)) {
                    results.push((key(kk)) + ": " + (value(vv)));
                  }
                }
                return results;
              })()).join(", ") + "}";
            }
          } else {
            return "" + (JSON.stringify(v));
          }
      }
    };
    return [k, op, wrap(value(v))].join('');
  };
})();

escapeHTML = function(str) {
  str = str.replace(/&/g, '&amp;');
  str = str.replace(/</g, '&lt;');
  return str = str.replace(/"/g, '&quot;');
};

prettyFormat = function(str) {
  var arg, args, i, len, out;
  args = [].slice.call(arguments);
  args.shift();
  out = "<span>";
  str = escapeHTML(str);
  for (i = 0, len = args.length; i < len; i++) {
    arg = args[i];
    str = str.replace(/%([a-z])/, function(_, f) {
      var v;
      v = args.shift();
      switch (f) {
        case 'c':
          return "</span><span style=\"" + (escapeHTML(v)) + "\">";
        default:
          return escapeHTML(v);
      }
    });
  }
  out += str;
  return out += "</span>";
};

module.exports = {
  markup: prettyMarkup,
  number: prettyNumber,
  print: prettyPrint,
  format: prettyFormat,
  JSX: {
    prop: prettyJSXProp,
    bind: prettyJSXBind
  }
};


/*
for x in [1, 2, 1/2, 3, 1/3, Math.PI, Math.PI / 2, Math.PI * 2, Math.PI * 3, Math.PI * 4, Math.PI * 3 / 4, Math.E * 100, Math.E / 100]
  console.log prettyNumber({})(x)
 */

//# sourceMappingURL=data:application/json;charset=utf-8;base64,

},{}],26:[function(require,module,exports){
exports.paramToGL = function(gl, p) {
  if (p === THREE.RepeatWrapping) {
    return gl.REPEAT;
  }
  if (p === THREE.ClampToEdgeWrapping) {
    return gl.CLAMP_TO_EDGE;
  }
  if (p === THREE.MirroredRepeatWrapping) {
    return gl.MIRRORED_REPEAT;
  }
  if (p === THREE.NearestFilter) {
    return gl.NEAREST;
  }
  if (p === THREE.NearestMipMapNearestFilter) {
    return gl.NEAREST_MIPMAP_NEAREST;
  }
  if (p === THREE.NearestMipMapLinearFilter) {
    return gl.NEAREST_MIPMAP_LINEAR;
  }
  if (p === THREE.LinearFilter) {
    return gl.LINEAR;
  }
  if (p === THREE.LinearMipMapNearestFilter) {
    return gl.LINEAR_MIPMAP_NEAREST;
  }
  if (p === THREE.LinearMipMapLinearFilter) {
    return gl.LINEAR_MIPMAP_LINEAR;
  }
  if (p === THREE.UnsignedByteType) {
    return gl.UNSIGNED_BYTE;
  }
  if (p === THREE.UnsignedShort4444Type) {
    return gl.UNSIGNED_SHORT_4_4_4_4;
  }
  if (p === THREE.UnsignedShort5551Type) {
    return gl.UNSIGNED_SHORT_5_5_5_1;
  }
  if (p === THREE.UnsignedShort565Type) {
    return gl.UNSIGNED_SHORT_5_6_5;
  }
  if (p === THREE.ByteType) {
    return gl.BYTE;
  }
  if (p === THREE.ShortType) {
    return gl.SHORT;
  }
  if (p === THREE.UnsignedShortType) {
    return gl.UNSIGNED_SHORT;
  }
  if (p === THREE.IntType) {
    return gl.INT;
  }
  if (p === THREE.UnsignedIntType) {
    return gl.UNSIGNED_INT;
  }
  if (p === THREE.FloatType) {
    return gl.FLOAT;
  }
  if (p === THREE.AlphaFormat) {
    return gl.ALPHA;
  }
  if (p === THREE.RGBFormat) {
    return gl.RGB;
  }
  if (p === THREE.RGBAFormat) {
    return gl.RGBA;
  }
  if (p === THREE.LuminanceFormat) {
    return gl.LUMINANCE;
  }
  if (p === THREE.LuminanceAlphaFormat) {
    return gl.LUMINANCE_ALPHA;
  }
  if (p === THREE.AddEquation) {
    return gl.FUNC_ADD;
  }
  if (p === THREE.SubtractEquation) {
    return gl.FUNC_SUBTRACT;
  }
  if (p === THREE.ReverseSubtractEquation) {
    return gl.FUNC_REVERSE_SUBTRACT;
  }
  if (p === THREE.ZeroFactor) {
    return gl.ZERO;
  }
  if (p === THREE.OneFactor) {
    return gl.ONE;
  }
  if (p === THREE.SrcColorFactor) {
    return gl.SRC_COLOR;
  }
  if (p === THREE.OneMinusSrcColorFactor) {
    return gl.ONE_MINUS_SRC_COLOR;
  }
  if (p === THREE.SrcAlphaFactor) {
    return gl.SRC_ALPHA;
  }
  if (p === THREE.OneMinusSrcAlphaFactor) {
    return gl.ONE_MINUS_SRC_ALPHA;
  }
  if (p === THREE.DstAlphaFactor) {
    return gl.DST_ALPHA;
  }
  if (p === THREE.OneMinusDstAlphaFactor) {
    return gl.ONE_MINUS_DST_ALPHA;
  }
  if (p === THREE.DstColorFactor) {
    return gl.DST_COLOR;
  }
  if (p === THREE.OneMinusDstColorFactor) {
    return gl.ONE_MINUS_DST_COLOR;
  }
  if (p === THREE.SrcAlphaSaturateFactor) {
    return gl.SRC_ALPHA_SATURATE;
  }
  return 0;
};

exports.paramToArrayStorage = function(type) {
  switch (type) {
    case THREE.UnsignedByteType:
      return Uint8Array;
    case THREE.ByteType:
      return Int8Array;
    case THREE.ShortType:
      return Int16Array;
    case THREE.UnsignedShortType:
      return Uint16Array;
    case THREE.IntType:
      return Int32Array;
    case THREE.UnsignedIntType:
      return Uint32Array;
    case THREE.FloatType:
      return Float32Array;
  }
};

exports.swizzleToEulerOrder = function(swizzle) {
  return swizzle.map(function(i) {
    return ['', 'X', 'Y', 'Z'][i];
  }).join('');
};

exports.transformComposer = function() {
  var euler, pos, quat, scl, transform;
  euler = new THREE.Euler;
  quat = new THREE.Quaternion;
  pos = new THREE.Vector3;
  scl = new THREE.Vector3;
  transform = new THREE.Matrix4;
  return function(position, rotation, quaternion, scale, matrix, eulerOrder) {
    if (eulerOrder == null) {
      eulerOrder = 'XYZ';
    }
    if (rotation != null) {
      if (eulerOrder instanceof Array) {
        eulerOrder = exports.swizzleToEulerOrder(eulerOrder);
      }
      euler.setFromVector3(rotation, eulerOrder);
      quat.setFromEuler(euler);
    } else {
      quat.set(0, 0, 0, 1);
    }
    if (quaternion != null) {
      quat.multiply(quaternion);
    }
    if (position != null) {
      pos.copy(position);
    } else {
      pos.set(0, 0, 0);
    }
    if (scale != null) {
      scl.copy(scale);
    } else {
      scl.set(1, 1, 1);
    }
    transform.compose(pos, quat, scl);
    if (matrix != null) {
      transform.multiplyMatrices(transform, matrix);
    }
    return transform;
  };
};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXFV0aWxcXHRocmVlLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxVdGlsXFx0aHJlZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxDQUFDLFNBQVIsR0FBb0IsU0FBQyxFQUFELEVBQUssQ0FBTDtFQUVsQixJQUFLLENBQUEsS0FBSyxLQUFLLENBQUMsY0FBaEI7QUFBc0MsV0FBTyxFQUFFLENBQUMsT0FBaEQ7O0VBQ0EsSUFBSyxDQUFBLEtBQUssS0FBSyxDQUFDLG1CQUFoQjtBQUEyQyxXQUFPLEVBQUUsQ0FBQyxjQUFyRDs7RUFDQSxJQUFLLENBQUEsS0FBSyxLQUFLLENBQUMsc0JBQWhCO0FBQThDLFdBQU8sRUFBRSxDQUFDLGdCQUF4RDs7RUFFQSxJQUFLLENBQUEsS0FBSyxLQUFLLENBQUMsYUFBaEI7QUFBcUMsV0FBTyxFQUFFLENBQUMsUUFBL0M7O0VBQ0EsSUFBSyxDQUFBLEtBQUssS0FBSyxDQUFDLDBCQUFoQjtBQUFrRCxXQUFPLEVBQUUsQ0FBQyx1QkFBNUQ7O0VBQ0EsSUFBSyxDQUFBLEtBQUssS0FBSyxDQUFDLHlCQUFoQjtBQUFpRCxXQUFPLEVBQUUsQ0FBQyxzQkFBM0Q7O0VBRUEsSUFBSyxDQUFBLEtBQUssS0FBSyxDQUFDLFlBQWhCO0FBQW9DLFdBQU8sRUFBRSxDQUFDLE9BQTlDOztFQUNBLElBQUssQ0FBQSxLQUFLLEtBQUssQ0FBQyx5QkFBaEI7QUFBaUQsV0FBTyxFQUFFLENBQUMsc0JBQTNEOztFQUNBLElBQUssQ0FBQSxLQUFLLEtBQUssQ0FBQyx3QkFBaEI7QUFBZ0QsV0FBTyxFQUFFLENBQUMscUJBQTFEOztFQUVBLElBQUssQ0FBQSxLQUFLLEtBQUssQ0FBQyxnQkFBaEI7QUFBd0MsV0FBTyxFQUFFLENBQUMsY0FBbEQ7O0VB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

},{}],27:[function(require,module,exports){

/*
 Generate equally spaced ticks in a range at sensible positions.
 
 @param min/max - Minimum and maximum of range
 @param n - Desired number of ticks in range
 @param unit - Base unit of scale (e.g. 1 or π).
 @param scale - Division scale (e.g. 2 = binary division, or 10 = decimal division).
 @param bias - Integer to bias divisions one or more levels up or down (to create nested scales)
 @param start - Whether to include a tick at the start
 @param end - Whether to include a tick at the end
 @param zero - Whether to include zero as a tick
 @param nice - Whether to round to a more reasonable interval
 */
var LINEAR, LOG, linear, log, make;

linear = function(min, max, n, unit, base, factor, start, end, zero, nice) {
  var distance, f, factors, i, ideal, ref, span, step, steps, ticks;
  if (nice == null) {
    nice = true;
  }
  n || (n = 10);
  unit || (unit = 1);
  base || (base = 10);
  factor || (factor = 1);
  span = max - min;
  ideal = span / n;
  if (!nice) {
    ticks = (function() {
      var j, ref1, results;
      results = [];
      for (i = j = 0, ref1 = n; 0 <= ref1 ? j <= ref1 : j >= ref1; i = 0 <= ref1 ? ++j : --j) {
        results.push(min + i * ideal);
      }
      return results;
    })();
    if (!start) {
      ticks.shift();
    }
    if (!end) {
      ticks.pop();
    }
    if (!zero) {
      ticks = ticks.filter(function(x) {
        return x !== 0;
      });
    }
    return ticks;
  }
  unit || (unit = 1);
  base || (base = 10);
  ref = unit * (Math.pow(base, Math.floor(Math.log(ideal / unit) / Math.log(base))));
  factors = base % 2 === 0 ? [base / 2, 1, 1 / 2] : base % 3 === 0 ? [base / 3, 1, 1 / 3] : [1];
  steps = (function() {
    var j, len, results;
    results = [];
    for (j = 0, len = factors.length; j < len; j++) {
      f = factors[j];
      results.push(ref * f);
    }
    return results;
  })();
  distance = 2e308;
  step = steps.reduce(function(ref, step) {
    var d;
    f = step / ideal;
    d = Math.max(f, 1 / f);
    if (d < distance) {
      distance = d;
      return step;
    } else {
      return ref;
    }
  }, ref);
  step *= factor;
  min = (Math.ceil((min / step) + +(!start))) * step;
  max = (Math.floor(max / step) - +(!end)) * step;
  n = Math.ceil((max - min) / step);
  ticks = (function() {
    var j, ref1, results;
    results = [];
    for (i = j = 0, ref1 = n; 0 <= ref1 ? j <= ref1 : j >= ref1; i = 0 <= ref1 ? ++j : --j) {
      results.push(min + i * step);
    }
    return results;
  })();
  if (!zero) {
    ticks = ticks.filter(function(x) {
      return x !== 0;
    });
  }
  return ticks;
};


/*
 Generate logarithmically spaced ticks in a range at sensible positions.
 */

log = function(min, max, n, unit, base, bias, start, end, zero, nice) {
  throw new Error("Log ticks not yet implemented.");
};

LINEAR = 0;

LOG = 1;

make = function(type, min, max, n, unit, base, bias, start, end, zero, nice) {
  switch (type) {
    case LINEAR:
      return linear(min, max, n, unit, base, bias, start, end, zero, nice);
    case LOG:
      return log(min, max, n, unit, base, bias, start, end, zero, nice);
  }
};

exports.make = make;

exports.linear = linear;

exports.log = log;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXFV0aWxcXHRpY2tzLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxVdGlsXFx0aWNrcy5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQTs7QUFjQSxNQUFBLEdBQVMsU0FBQyxHQUFELEVBQU0sR0FBTixFQUFXLENBQVgsRUFBYyxJQUFkLEVBQW9CLElBQXBCLEVBQTBCLE1BQTFCLEVBQWtDLEtBQWxDLEVBQXlDLEdBQXpDLEVBQThDLElBQTlDLEVBQW9ELElBQXBEO0FBRVAsTUFBQTs7SUFGMkQsT0FBTzs7RUFFbEUsTUFBQSxJQUFXO0VBQ1gsU0FBQSxPQUFXO0VBQ1gsU0FBQSxPQUFXO0VBQ1gsV0FBQSxTQUFXO0VBR1gsSUFBQSxHQUFPLEdBQUEsR0FBTTtFQUNiLEtBQUEsR0FBUSxJQUFBLEdBQU87RUFHZixJQUFHLENBQUMsSUFBSjtJQUNFLEtBQUE7O0FBQVM7V0FBeUIsaUZBQXpCO3FCQUFBLEdBQUEsR0FBTSxDQUFBLEdBQUk7QUFBVjs7O0lBQ1QsSUFBaUIsQ0FBQyxLQUFsQjtNQUFBLEtBQUssQ0FBQyxLQUFOLENBQUEsRUFBQTs7SUFDQSxJQUFpQixDQUFDLEdBQWxCO01BQUEsS0FBSyxDQUFDLEdBQU4sQ0FBQSxFQUFBOztJQUNBLElBQXVDLENBQUMsSUFBeEM7TUFBQSxLQUFBLEdBQVEsS0FBSyxDQUFDLE1BQU4sQ0FBYSxTQUFDLENBQUQ7ZUFBTyxDQUFBLEtBQUs7TUFBWixDQUFiLEVBQVI7O0FBQ0EsV0FBTyxNQUxUOztFQVFBLFNBQUEsT0FBUztFQUNULFNBQUEsT0FBUztFQUNULEdBQUEsR0FBTSxJQUFBLEdBQU8sQ0FBQyxJQUFJLENBQUMsR0FBTCxDQUFTLElBQVQsRUFBZSxJQUFJLENBQUMsS0FBTCxDQUFX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

},{}],28:[function(require,module,exports){
var HEAP, Types, apply, createClass, descriptor, element, hint, id, j, key, len, map, mount, prop, recycle, ref1, set, unmount, unset;

HEAP = [];

id = 0;

Types = {

  /*
   * el('example', props, children);
  example: MathBox.DOM.createClass({
    render: (el, props, children) ->
       * VDOM node
      return el('span', { className: "foo" }, "Hello World")
  })
   */
};

descriptor = function() {
  return {
    id: id++,
    type: null,
    props: null,
    children: null,
    rendered: null,
    instance: null
  };
};

hint = function(n) {
  var i, j, ref1, results;
  n *= 2;
  n = Math.max(0, HEAP.length - n);
  results = [];
  for (i = j = 0, ref1 = n; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {
    results.push(HEAP.push(descriptor()));
  }
  return results;
};

element = function(type, props, children) {
  var el;
  el = HEAP.length ? HEAP.pop() : descriptor();
  el.type = type != null ? type : 'div';
  el.props = props != null ? props : null;
  el.children = children != null ? children : null;
  return el;
};

recycle = function(el) {
  var child, children, j, len;
  if (!el.type) {
    return;
  }
  children = el.children;
  el.type = el.props = el.children = el.instance = null;
  HEAP.push(el);
  if (children != null) {
    for (j = 0, len = children.length; j < len; j++) {
      child = children[j];
      recycle(child);
    }
  }
};

apply = function(el, last, node, parent, index) {
  var base, child, childNodes, children, comp, dirty, i, j, k, key, l, len, len1, nextChildren, nextProps, nextState, prevProps, prevState, props, ref, ref1, ref2, ref3, ref4, ref5, same, should, type, v, value;
  if (el != null) {
    if (last == null) {
      return mount(el, parent, index);
    } else {
      if (el instanceof Node) {
        same = el === last;
        if (same) {
          return;
        }
      } else {
        same = typeof el === typeof last && last !== null && el !== null && el.type === last.type;
      }
      if (!same) {
        unmount(last.instance, node);
        node.remove();
        return mount(el, parent, index);
      } else {
        el.instance = last.instance;
        type = ((ref1 = el.type) != null ? ref1.isComponentClass : void 0) ? el.type : Types[el.type];
        props = last != null ? last.props : void 0;
        nextProps = el.props;
        children = (ref2 = last != null ? last.children : void 0) != null ? ref2 : null;
        nextChildren = el.children;
        if (nextProps != null) {
          nextProps.children = nextChildren;
        }
        if (type != null) {
          dirty = node._COMPONENT_DIRTY;
          if ((props != null) !== (nextProps != null)) {
            dirty = true;
          }
          if (children !== nextChildren) {
            dirty = true;
          }
          if ((props != null) && (nextProps != null)) {
            if (!dirty) {
              for (key in props) {
                if (!nextProps.hasOwnProperty(key)) {
                  dirty = true;
                }
              }
            }
            if (!dirty) {
              for (key in nextProps) {
                value = nextProps[key];
                if ((ref = props[key]) !== value) {
                  dirty = true;
                }
              }
            }
          }
          if (dirty) {
            comp = last.instance;
            if (el.props == null) {
              el.props = {};
            }
            ref3 = comp.defaultProps;
            for (k in ref3) {
              v = ref3[k];
              if ((base = el.props)[k] == null) {
                base[k] = v;
              }
            }
            el.props.children = el.children;
            if (typeof comp.willReceiveProps === "function") {
              comp.willReceiveProps(el.props);
            }
            should = node._COMPONENT_FORCE || ((ref4 = typeof comp.shouldUpdate === "function" ? comp.shouldUpdate(el.props) : void 0) != null ? ref4 : true);
            if (should) {
              nextState = comp.getNextState();
              if (typeof comp.willUpdate === "function") {
                comp.willUpdate(el.props, nextState);
              }
            }
            prevProps = comp.props;
            prevState = comp.applyNextState();
            comp.props = el.props;
            comp.children = el.children;
            if (should) {
              el = el.rendered = typeof comp.render === "function" ? comp.render(element, el.props, el.children) : void 0;
              apply(el, last.rendered, node, parent, index);
              if (typeof comp.didUpdate === "function") {
                comp.didUpdate(prevProps, prevState);
              }
            }
          }
          return;
        } else {
          if (props != null) {
            for (key in props) {
              if (!nextProps.hasOwnProperty(key)) {
                unset(node, key, props[key]);
              }
            }
          }
          if (nextProps != null) {
            for (key in nextProps) {
              value = nextProps[key];
              if ((ref = props[key]) !== value && key !== 'children') {
                set(node, key, value, ref);
              }
            }
          }
          if (nextChildren != null) {
            if ((ref5 = typeof nextChildren) === 'string' || ref5 === 'number') {
              if (nextChildren !== children) {
                node.textContent = nextChildren;
              }
            } else {
              if (nextChildren.type != null) {
                apply(nextChildren, children, node.childNodes[0], node, 0);
              } else {
                childNodes = node.childNodes;
                if (children != null) {
                  for (i = j = 0, len = nextChildren.length; j < len; i = ++j) {
                    child = nextChildren[i];
                    apply(child, children[i], childNodes[i], node, i);
                  }
                } else {
                  for (i = l = 0, len1 = nextChildren.length; l < len1; i = ++l) {
                    child = nextChildren[i];
                    apply(child, null, childNodes[i], node, i);
                  }
                }
              }
            }
          } else if (children != null) {
            unmount(null, node);
            node.innerHTML = '';
          }
        }
        return;
      }
    }
  }
  if (last != null) {
    unmount(last.instance, node);
    return last.node.remove();
  }
};

mount = function(el, parent, index) {
  var base, child, children, comp, ctor, i, j, k, key, len, node, ref1, ref2, ref3, ref4, ref5, ref6, type, v, value;
  if (index == null) {
    index = 0;
  }
  type = ((ref1 = el.type) != null ? ref1.isComponentClass : void 0) ? el.type : Types[el.type];
  if (el instanceof Node) {
    node = el;
  } else {
    if (type != null) {
      ctor = ((ref2 = el.type) != null ? ref2.isComponentClass : void 0) ? el.type : Types[el.type];
      if (!ctor) {
        el = el.rendered = element('noscript');
        node = mount(el, parent, index);
        return node;
      }
      el.instance = comp = new ctor(parent);
      if (el.props == null) {
        el.props = {};
      }
      ref3 = comp.defaultProps;
      for (k in ref3) {
        v = ref3[k];
        if ((base = el.props)[k] == null) {
          base[k] = v;
        }
      }
      el.props.children = el.children;
      comp.props = el.props;
      comp.children = el.children;
      comp.setState(typeof comp.getInitialState === "function" ? comp.getInitialState() : void 0);
      if (typeof comp.willMount === "function") {
        comp.willMount();
      }
      el = el.rendered = typeof comp.render === "function" ? comp.render(element, el.props, el.children) : void 0;
      node = mount(el, parent, index);
      if (typeof comp.didMount === "function") {
        comp.didMount(el);
      }
      node._COMPONENT = comp;
      return node;
    } else if ((ref4 = typeof el) === 'string' || ref4 === 'number') {
      node = document.createTextNode(el);
    } else {
      node = document.createElement(el.type);
      ref5 = el.props;
      for (key in ref5) {
        value = ref5[key];
        set(node, key, value);
      }
    }
    children = el.children;
    if (children != null) {
      if ((ref6 = typeof children) === 'string' || ref6 === 'number') {
        node.textContent = children;
      } else {
        if (children.type != null) {
          mount(children, node, 0);
        } else {
          for (i = j = 0, len = children.length; j < len; i = ++j) {
            child = children[i];
            mount(child, node, i);
          }
        }
      }
    }
  }
  parent.insertBefore(node, parent.childNodes[index]);
  return node;
};

unmount = function(comp, node) {
  var child, j, k, len, ref1, results;
  if (comp) {
    if (typeof comp.willUnmount === "function") {
      comp.willUnmount();
    }
    for (k in comp) {
      delete comp[k];
    }
  }
  ref1 = node.childNodes;
  results = [];
  for (j = 0, len = ref1.length; j < len; j++) {
    child = ref1[j];
    unmount(child._COMPONENT, child);
    results.push(delete child._COMPONENT);
  }
  return results;
};

prop = function(key) {
  var j, len, prefix, prefixes;
  if (typeof document === 'undefined') {
    return true;
  }
  if (document.documentElement.style[key] != null) {
    return key;
  }
  key = key[0].toUpperCase() + key.slice(1);
  prefixes = ['webkit', 'moz', 'ms', 'o'];
  for (j = 0, len = prefixes.length; j < len; j++) {
    prefix = prefixes[j];
    if (document.documentElement.style[prefix + key] != null) {
      return prefix + key;
    }
  }
};

map = {};

ref1 = ['transform'];
for (j = 0, len = ref1.length; j < len; j++) {
  key = ref1[j];
  map[key] = prop(key);
}

set = function(node, key, value, orig) {
  var k, ref2, v;
  if (key === 'style') {
    for (k in value) {
      v = value[k];
      if ((orig != null ? orig[k] : void 0) !== v) {
        node.style[(ref2 = map[k]) != null ? ref2 : k] = v;
      }
    }
    return;
  }
  if (node[key] != null) {
    node[key] = value;
    return;
  }
  if (node instanceof Node) {
    node.setAttribute(key, value);
  }
};

unset = function(node, key, orig) {
  var k, ref2, v;
  if (key === 'style') {
    for (k in orig) {
      v = orig[k];
      node.style[(ref2 = map[k]) != null ? ref2 : k] = '';
    }
    return;
  }
  if (node[key] != null) {
    node[key] = void 0;
  }
  if (node instanceof Node) {
    node.removeAttribute(key);
  }
};

createClass = function(prototype) {
  var Component, a, aliases, b, ref2;
  aliases = {
    willMount: 'componentWillMount',
    didMount: 'componentDidMount',
    willReceiveProps: 'componentWillReceiveProps',
    shouldUpdate: 'shouldComponentUpdate',
    willUpdate: 'componentWillUpdate',
    didUpdate: 'componentDidUpdate',
    willUnmount: 'componentWillUnmount'
  };
  for (a in aliases) {
    b = aliases[a];
    if (prototype[a] == null) {
      prototype[a] = prototype[b];
    }
  }
  Component = (function() {
    function Component(node, props1, state1, children1) {
      var bind, k, nextState, v;
      this.props = props1 != null ? props1 : {};
      this.state = state1 != null ? state1 : null;
      this.children = children1 != null ? children1 : null;
      bind = function(f, self) {
        if (typeof f === 'function') {
          return f.bind(self);
        } else {
          return f;
        }
      };
      for (k in prototype) {
        v = prototype[k];
        this[k] = bind(v, this);
      }
      nextState = null;
      this.setState = function(state) {
        if (nextState == null) {
          nextState = state ? nextState != null ? nextState : {} : null;
        }
        for (k in state) {
          v = state[k];
          nextState[k] = v;
        }
        node._COMPONENT_DIRTY = true;
      };
      this.forceUpdate = function() {
        var el, results;
        node._COMPONENT_FORCE = node._COMPONENT_DIRTY = true;
        el = node;
        results = [];
        while (el = el.parentNode) {
          if (el._COMPONENT) {
            results.push(el._COMPONENT_FORCE = true);
          } else {
            results.push(void 0);
          }
        }
        return results;
      };
      this.getNextState = function() {
        return nextState;
      };
      this.applyNextState = function() {
        var prevState, ref2;
        node._COMPONENT_FORCE = node._COMPONENT_DIRTY = false;
        prevState = this.state;
        ref2 = [null, nextState], nextState = ref2[0], this.state = ref2[1];
        return prevState;
      };
      return;
    }

    return Component;

  })();
  Component.isComponentClass = true;
  Component.prototype.defaultProps = (ref2 = typeof prototype.getDefaultProps === "function" ? prototype.getDefaultProps() : void 0) != null ? ref2 : {};
  return Component;
};

module.exports = {
  element: element,
  recycle: recycle,
  apply: apply,
  hint: hint,
  Types: Types,
  createClass: createClass
};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,

},{}],29:[function(require,module,exports){
var Context, Model, Overlay, Primitives, Render, Shaders, Stage, Util;

Model = require('./model');

Overlay = require('./overlay');

Primitives = require('./primitives');

Render = require('./render');

Shaders = require('./shaders');

Stage = require('./stage');

Util = require('./util');

Context = (function() {
  Context.Namespace = {
    Model: Model,
    Overlay: Overlay,
    Primitives: Primitives,
    Render: Render,
    Shaders: Shaders,
    Stage: Stage,
    Util: Util,
    DOM: Util.VDOM
  };

  function Context(renderer, scene, camera) {
    var canvas;
    if (scene == null) {
      scene = null;
    }
    if (camera == null) {
      camera = null;
    }
    this.canvas = canvas = renderer.domElement;
    this.element = null;
    this.shaders = new Shaders.Factory(Shaders.Snippets);
    this.renderables = new Render.Factory(Render.Classes, renderer, this.shaders);
    this.overlays = new Overlay.Factory(Overlay.Classes, canvas);
    this.scene = this.renderables.make('scene', {
      scene: scene
    });
    this.camera = this.defaultCamera = camera != null ? camera : new THREE.PerspectiveCamera();
    this.attributes = new Model.Attributes(Primitives.Types, this);
    this.primitives = new Primitives.Factory(Primitives.Types, this);
    this.root = this.primitives.make('root');
    this.model = new Model.Model(this.root);
    this.guard = new Model.Guard;
    this.controller = new Stage.Controller(this.model, this.primitives);
    this.animator = new Stage.Animator(this);
    this.api = new Stage.API(this);
    this.speed = 1;
    this.time = {
      now: +new Date() / 1000,
      time: 0,
      delta: 0,
      clock: 0,
      step: 0
    };
  }

  Context.prototype.init = function() {
    this.scene.inject();
    this.overlays.inject();
    return this;
  };

  Context.prototype.destroy = function() {
    this.scene.unject();
    this.overlays.unject();
    return this;
  };

  Context.prototype.resize = function(size) {

    /*
    {
      viewWidth, viewHeight, renderWidth, renderHeight, aspect, pixelRatio
    }
     */
    if (size == null) {
      size = {};
    }
    if (size.renderWidth == null) {
      size.renderWidth = size.viewWidth != null ? size.viewWidth : size.viewWidth = 1280;
    }
    if (size.renderHeight == null) {
      size.renderHeight = size.viewHeight != null ? size.viewHeight : size.viewHeight = 720;
    }
    if (size.pixelRatio == null) {
      size.pixelRatio = size.renderWidth / Math.max(.000001, size.viewWidth);
    }
    if (size.aspect == null) {
      size.aspect = size.viewWidth / Math.max(.000001, size.viewHeight);
    }
    this.root.controller.resize(size);
    return this;
  };

  Context.prototype.frame = function(time) {

    /*
    {
      now, clock, step
    }
     */
    this.pre(time);
    this.update();
    this.render();
    this.post();
    return this;
  };

  Context.prototype.pre = function(time) {
    var base;
    if (!time) {
      time = {
        now: +new Date() / 1000,
        time: 0,
        delta: 0,
        clock: 0,
        step: 0
      };
      time.delta = this.time.now != null ? time.now - this.time.now : 0;
      if (time.delta > 1) {
        time.delta = 1 / 60;
      }
      time.step = time.delta * this.speed;
      time.time = this.time.time + time.delta;
      time.clock = this.time.clock + time.step;
    }
    this.time = time;
    if (typeof (base = this.root.controller).pre === "function") {
      base.pre();
    }
    return this;
  };

  Context.prototype.update = function() {
    var base;
    this.animator.update();
    this.attributes.compute();
    this.guard.iterate({
      step: (function(_this) {
        return function() {
          var change;
          change = _this.attributes.digest();
          return change || (change = _this.model.digest());
        };
      })(this),
      last: function() {
        return {
          attribute: this.attributes.getLastTrigger(),
          model: this.model.getLastTrigger()
        };
      }
    });
    if (typeof (base = this.root.controller).update === "function") {
      base.update();
    }
    this.camera = this.root.controller.getCamera();
    this.speed = this.root.controller.getSpeed();
    return this;
  };

  Context.prototype.render = function() {
    var base;
    if (typeof (base = this.root.controller).render === "function") {
      base.render();
    }
    this.scene.render();
    return this;
  };

  Context.prototype.post = function() {
    var base;
    if (typeof (base = this.root.controller).post === "function") {
      base.post();
    }
    return this;
  };

  Context.prototype.setWarmup = function(n) {
    this.scene.warmup(n);
    return this;
  };

  Context.prototype.getPending = function() {
    return this.scene.pending.length;
  };

  return Context;

})();

module.exports = Context;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXGNvbnRleHQuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXGNvbnRleHQuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUE7O0FBQUEsS0FBQSxHQUFhLE9BQUEsQ0FBUSxTQUFSOztBQUNiLE9BQUEsR0FBYSxPQUFBLENBQVEsV0FBUjs7QUFDYixVQUFBLEdBQWEsT0FBQSxDQUFRLGNBQVI7O0FBQ2IsTUFBQSxHQUFhLE9BQUEsQ0FBUSxVQUFSOztBQUNiLE9BQUEsR0FBYSxPQUFBLENBQVEsV0FBUjs7QUFDYixLQUFBLEdBQWEsT0FBQSxDQUFRLFNBQVI7O0FBQ2IsSUFBQSxHQUFhLE9BQUEsQ0FBUSxRQUFSOztBQUVQO0VBRUosT0FBQyxDQUFBLFNBQUQsR0FBYTtJQUFFLE9BQUEsS0FBRjtJQUFTLFNBQUEsT0FBVDtJQUFrQixZQUFBLFVBQWxCO0lBQThCLFFBQUEsTUFBOUI7SUFBc0MsU0FBQSxPQUF0QztJQUErQyxPQUFBLEtBQS9DO0lBQXNELE1BQUEsSUFBdEQ7SUFBNEQsR0FBQSxFQUFLLElBQUksQ0FBQyxJQUF0RTs7O0VBS0EsaUJBQUMsUUFBRCxFQUFXLEtBQVgsRUFBeUIsTUFBekI7QUFHWCxRQUFBOztNQUhzQixRQUFROzs7TUFBTSxTQUFTOztJQUc3QyxJQUFDLENBQUEsTUFBRCxHQUFlLE1BQUEsR0FBVSxRQUFRLENBQUM7SUFDbEMsSUFBQyxDQUFBLE9BQUQsR0FBZTtJQUdmLElBQUMsQ0FBQSxPQUFELEdBQWUsSUFBSSxPQUFPLENBQUMsT0FBWixDQUF1QixPQUFPLENBQUMsUUFBL0I7SUFDZixJQUFDLENBQUEsV0FBRCxHQUFlLElBQUksTUFBTyxDQUFDLE9BQVosQ0FBdUIsTUFBTyxDQUFDLE9BQS9CLEVBQXdDLFFBQXhDLEVBQWtELElBQUMs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

},{"./model":34,"./overlay":40,"./primitives":43,"./render":149,"./shaders":164,"./stage":169,"./util":175}],30:[function(require,module,exports){
var Context, k, mathBox, ref, v;

mathBox = function(options) {
  var ref, three;
  three = THREE.Bootstrap(options);
  if (!three.fallback) {
    if (!three.Time) {
      three.install('time');
    }
    if (!three.MathBox) {
      three.install(['mathbox', 'splash']);
    }
  }
  return (ref = three.mathbox) != null ? ref : three;
};

window.π = Math.PI;

window.τ = π * 2;

window.e = Math.E;

window.MathBox = exports;

window.mathBox = exports.mathBox = mathBox;

exports.version = '0.0.5';

exports.Context = Context = require('./context');

ref = Context.Namespace;
for (k in ref) {
  v = ref[k];
  exports[k] = v;
}

require('./splash');

THREE.Bootstrap.registerPlugin('mathbox', {
  defaults: {
    init: true,
    warmup: 2,
    inspect: true,
    splash: true
  },
  listen: ['ready', 'pre', 'update', 'post', 'resize'],
  install: function(three) {
    var inited;
    inited = false;
    this.first = true;
    return three.MathBox = {
      init: (function(_this) {
        return function(options) {
          var camera, scene;
          if (inited) {
            return;
          }
          inited = true;
          scene = (options != null ? options.scene : void 0) || _this.options.scene || three.scene;
          camera = (options != null ? options.camera : void 0) || _this.options.camera || three.camera;
          _this.context = new Context(three.renderer, scene, camera);
          _this.context.api.three = three.three = three;
          _this.context.api.mathbox = three.mathbox = _this.context.api;
          _this.context.api.start = function() {
            return three.Loop.start();
          };
          _this.context.api.stop = function() {
            return three.Loop.stop();
          };
          _this.context.init();
          _this.context.resize(three.Size);
          _this.context.setWarmup(_this.options.warmup);
          _this.pending = 0;
          _this.warm = !_this.options.warmup;
          console.log('MathBox²', MathBox.version);
          return three.trigger({
            type: 'mathbox/init',
            version: MathBox.version,
            context: _this.context
          });
        };
      })(this),
      destroy: (function(_this) {
        return function() {
          if (!inited) {
            return;
          }
          inited = false;
          three.trigger({
            type: 'mathbox/destroy',
            context: _this.context
          });
          _this.context.destroy();
          delete three.mathbox;
          delete _this.context.api.three;
          return delete _this.context;
        };
      })(this),
      object: (function(_this) {
        return function() {
          var ref1;
          return (ref1 = _this.context) != null ? ref1.scene.root : void 0;
        };
      })(this)
    };
  },
  uninstall: function(three) {
    three.MathBox.destroy();
    return delete three.MathBox;
  },
  ready: function(event, three) {
    if (this.options.init) {
      three.MathBox.init();
      return setTimeout((function(_this) {
        return function() {
          if (_this.options.inspect) {
            return _this.inspect(three);
          }
        };
      })(this));
    }
  },
  inspect: function(three) {
    this.context.api.inspect();
    if (!this.options.warmup) {
      return this.info(three);
    }
  },
  info: function(three) {
    var fmt, info;
    fmt = function(x) {
      var out;
      out = [];
      while (x >= 1000) {
        out.unshift(("000" + (x % 1000)).slice(-3));
        x = Math.floor(x / 1000);
      }
      out.unshift(x);
      return out.join(',');
    };
    info = three.renderer.info.render;
    return console.log('Geometry  ', fmt(info.faces) + ' faces  ', fmt(info.vertices) + ' vertices  ', fmt(info.calls) + ' draw calls  ');
  },
  resize: function(event, three) {
    var ref1;
    return (ref1 = this.context) != null ? ref1.resize(three.Size) : void 0;
  },
  pre: function(event, three) {
    var ref1;
    return (ref1 = this.context) != null ? ref1.pre(three.Time) : void 0;
  },
  update: function(event, three) {
    var camera, ref1, ref2, ref3;
    if ((ref1 = this.context) != null) {
      ref1.update();
    }
    if ((camera = (ref2 = this.context) != null ? ref2.camera : void 0) && camera !== three.camera) {
      three.camera = camera;
    }
    three.Time.set({
      speed: this.context.speed
    });
    this.progress(this.context.getPending(), three);
    return (ref3 = this.context) != null ? ref3.render() : void 0;
  },
  post: function(event, three) {
    var ref1;
    return (ref1 = this.context) != null ? ref1.post() : void 0;
  },
  progress: function(remain, three) {
    var current, pending, total;
    if (!(remain || this.pending)) {
      return;
    }
    pending = Math.max(remain + this.options.warmup, this.pending);
    current = pending - remain;
    total = pending;
    three.trigger({
      type: 'mathbox/progress',
      current: pending - remain,
      total: pending
    });
    if (remain === 0) {
      pending = 0;
    }
    this.pending = pending;
    if (current === total && !this.warm) {
      this.warm = true;
      if (this.options.inspect) {
        return this.info(three);
      }
    }
  }
});

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXGluZGV4LmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxpbmRleC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsSUFBQTs7QUFBQSxPQUFBLEdBQVUsU0FBQyxPQUFEO0FBQ1IsTUFBQTtFQUFBLEtBQUEsR0FBUSxLQUFLLENBQUMsU0FBTixDQUFnQixPQUFoQjtFQUVSLElBQUcsQ0FBQyxLQUFLLENBQUMsUUFBVjtJQUNFLElBQXVDLENBQUMsS0FBSyxDQUFDLElBQTlDO01BQUEsS0FBSyxDQUFDLE9BQU4sQ0FBYyxNQUFkLEVBQUE7O0lBQ0EsSUFBdUMsQ0FBQyxLQUFLLENBQUMsT0FBOUM7TUFBQSxLQUFLLENBQUMsT0FBTixDQUFjLENBQUMsU0FBRCxFQUFZLFFBQVosQ0FBZCxFQUFBO0tBRkY7OytDQUlnQjtBQVBSOztBQVVWLE1BQU0sQ0FBQyxDQUFQLEdBQVcsSUFBSSxDQUFDOztBQUNoQixNQUFNLENBQUMsQ0FBUCxHQUFXLENBQUEsR0FBSTs7QUFDZixNQUFNLENBQUMsQ0FBUCxHQUFXLElBQUksQ0FBQzs7QUFHaEIsTUFBTSxDQUFDLE9BQVAsR0FBaUI7O0FBQ2pCLE1BQU0sQ0FBQyxPQUFQLEdBQWlCLE9BQU8sQ0FBQyxPQUFSLEdBQWtCOztBQUNuQyxPQUFPLENBQUMsT0FBUixHQUFrQjs7QUFHbEIsT0FBTyxDQUFDLE9BQVIsR0FBa0IsT0FBQSxHQUFVLE9BQUEsQ0FBUSxXQUFSOztBQUM1QjtBQUFBLEtBQUEsUUFBQTs7RUFBQSxPQUFRLENBQUEsQ0FBQSxDQUFSLEdBQWE7QUFBYjs7QUFJQSxPQUFBLENBQVEsVUFBUjs7QUFHQSxLQUFLLENBQUMsU0FBUyxDQUFDLGNBQWhCLENBQStCLFNBQS9CLEVBQ0U7RUFBQSxRQUFBLEVBQ0U7SUFBQSxJQUFBLEVB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

},{"./context":29,"./splash":165}],31:[function(require,module,exports){

/*
 Custom attribute model
 - Organizes attributes by trait in .attributes
 - Provides constant-time .props / .get() access to flat dictionary
 - Provides .get(key) with or without trait namespaces
 - Change attributes with .set(key) or .set(dictionary)
 - Validation is double-buffered and in-place to detect changes and nops
 - Change notifications are coalesced per object and per trait, digested later
 - Values are stored in three.js uniform-style objects so they can be bound as GL uniforms
 - Originally passed (unnormalized) values are preserved and can be fetched via .orig()
 - Attributes can be defined as final/const
 - Attributes can be computed from both public or private expressions with .bind(key, false/true)
 - Expressions are time-dependent, can be time-travelled with .evaluate()
 - This enables continous simulation and data logging despite choppy animation updates
 
  Actual type and trait definitions are injected from Primitives
 */
var Attributes, Data, shallowCopy;

Attributes = (function() {
  function Attributes(definitions, context) {
    this.context = context;
    this.traits = definitions.Traits;
    this.types = definitions.Types;
    this.pending = [];
    this.bound = [];
    this.last = null;
  }

  Attributes.prototype.make = function(type) {
    return {
      "enum": typeof type["enum"] === "function" ? type["enum"]() : void 0,
      type: typeof type.uniform === "function" ? type.uniform() : void 0,
      value: type.make()
    };
  };

  Attributes.prototype.apply = function(object, config) {
    return new Data(object, config, this);
  };

  Attributes.prototype.bind = function(callback) {
    return this.bound.push(callback);
  };

  Attributes.prototype.unbind = function(callback) {
    var cb;
    return this.bound = (function() {
      var j, len, ref, results;
      ref = this.bound;
      results = [];
      for (j = 0, len = ref.length; j < len; j++) {
        cb = ref[j];
        if (cb !== callback) {
          results.push(cb);
        }
      }
      return results;
    }).call(this);
  };

  Attributes.prototype.queue = function(callback, object, key, value) {
    this.lastObject = object;
    this.lastKey = key;
    this.lastValue = value;
    return this.pending.push(callback);
  };

  Attributes.prototype.invoke = function(callback) {
    return callback(this.context.time.clock, this.context.time.step);
  };

  Attributes.prototype.compute = function() {
    var cb, j, len, ref;
    if (this.bound.length) {
      ref = this.bound;
      for (j = 0, len = ref.length; j < len; j++) {
        cb = ref[j];
        this.invoke(cb);
      }
    }
  };

  Attributes.prototype.digest = function() {
    var callback, calls, j, len, ref;
    if (!this.pending.length) {
      return false;
    }
    ref = [this.pending, []], calls = ref[0], this.pending = ref[1];
    for (j = 0, len = calls.length; j < len; j++) {
      callback = calls[j];
      callback();
    }
    return true;
  };

  Attributes.prototype.getTrait = function(name) {
    return this.traits[name];
  };

  Attributes.prototype.getLastTrigger = function() {
    return (this.lastObject.toString()) + " - " + this.lastKey + "=`" + this.lastValue + "`";
  };

  return Attributes;

})();

shallowCopy = function(x) {
  var k, out, v;
  out = {};
  for (k in x) {
    v = x[k];
    out[k] = v;
  }
  return out;
};

Data = (function() {
  function Data(object, config, _attributes) {
    var _bound, _computed, _eval, _expr, _finals, addSpec, bind, change, changed, changes, constant, data, define, digest, dirty, equalors, equals, evaluate, event, expr, finals, flattened, freeform, get, getNS, j, key, len, list, makers, mapTo, name, ns, oldComputed, oldExpr, oldOrig, oldProps, originals, props, ref, ref1, set, shorthand, spec, to, touched, touches, trait, traits, unbind, unique, validate, validators, value, values;
    traits = config.traits, props = config.props, finals = config.finals, freeform = config.freeform;
    data = this;
    if ((object.props != null) && (object.expr != null) && (object.orig != null) && (object.computed != null) && (object.attributes != null)) {
      oldProps = shallowCopy(object.props);
      oldExpr = shallowCopy(object.expr);
      oldOrig = object.orig();
      oldComputed = object.computed();
      if ((ref = object.attributes) != null) {
        ref.dispose();
      }
    }
    flattened = {};
    originals = {};
    mapTo = {};
    to = function(name) {
      var ref1;
      return (ref1 = mapTo[name]) != null ? ref1 : name;
    };
    define = function(name, alias) {
      if (mapTo[alias]) {
        throw new Error((object.toString()) + " - Duplicate property `" + alias + "`");
      }
      return mapTo[alias] = name;
    };
    get = function(key) {
      var ref1, ref2, ref3;
      return (ref1 = (ref2 = data[key]) != null ? ref2.value : void 0) != null ? ref1 : (ref3 = data[to(key)]) != null ? ref3.value : void 0;
    };
    set = function(key, value, ignore, initial) {
      var attr, ref1, short, valid, validated;
      key = to(key);
      if ((attr = data[key]) == null) {
        if (!freeform) {
          throw new Error((object.toString()) + " - Setting unknown property `" + key + "={" + value + "}`");
        }
        attr = data[key] = {
          short: key,
          type: null,
          last: null,
          value: null
        };
        validators[key] = function(v) {
          return v;
        };
      }
      if (!ignore) {
        if (_expr[key]) {
          throw new Error((object.toString()) + " - Can't set bound property `" + key + "={" + value + "}`");
        }
        if (_computed[key]) {
          throw new Error((object.toString()) + " - Can't set computed property `" + key + "={" + value + "}`");
        }
        if (_finals[key]) {
          throw new Error((object.toString()) + " - Can't set final property `" + key + "={" + value + "}`");
        }
      }
      valid = true;
      validated = validate(key, value, attr.last, function() {
        valid = false;
        return null;
      });
      if (valid) {
        ref1 = [validated, attr.value], attr.value = ref1[0], attr.last = ref1[1];
        short = attr.short;
        flattened[short] = validated;
        if (!ignore) {
          originals[short] = value;
        }
        if (!(initial || equals(key, attr.value, attr.last))) {
          change(key, value);
        }
      }
      return valid;
    };
    constant = function(key, value, initial) {
      key = to(key);
      set(key, value, true, initial);
      return _finals[key] = true;
    };
    expr = {};
    _bound = {};
    _eval = {};
    _expr = {};
    _computed = {};
    _finals = {};
    bind = function(key, expression, computed) {
      var list, short;
      if (computed == null) {
        computed = false;
      }
      key = to(key);
      if (typeof expression !== 'function') {
        throw new Error((object.toString()) + " - Expression `" + key + "=>{" + expr + "}` is not a function");
      }
      if (_expr[key]) {
        throw new Error((object.toString()) + " - Property `" + key + "=>{" + expr + "}` is already bound");
      }
      if (_computed[key]) {
        throw new Error((object.toString()) + " - Property `" + key + "` is computed");
      }
      if (_finals[key]) {
        throw new Error((object.toString()) + " - Property `" + key + "` is final");
      }
      list = computed ? _computed : _expr;
      list[key] = expression;
      short = data[key] != null ? data[key].short : key;
      if (!computed) {
        expr[short] = expression;
      }
      _eval[key] = expression;
      expression = expression.bind(object);
      _bound[key] = function(t, d) {
        var clock, ref1;
        if (clock = (ref1 = object.clock) != null ? ref1.getTime() : void 0) {
          t = clock.clock;
          d = clock.step;
        }
        return object.set(key, expression(t, d), true);
      };
      return _attributes.bind(_bound[key]);
    };
    unbind = function(key, computed) {
      var list;
      if (computed == null) {
        computed = false;
      }
      key = to(key);
      list = computed ? _computed : _expr;
      if (!list[key]) {
        return;
      }
      _attributes.unbind(_bound[key]);
      delete _bound[key];
      delete list[key];
      if (data[key] != null) {
        key = data[key].short;
      }
      return delete expr[key];
    };
    evaluate = function(key, time) {
      var ref1;
      key = to(key);
      return (ref1 = typeof _eval[key] === "function" ? _eval[key](time, 0) : void 0) != null ? ref1 : data[key].value;
    };
    object.expr = expr;
    object.props = flattened;
    object.evaluate = function(key, time) {
      var out;
      if (key != null) {
        return evaluate(key, time);
      } else {
        out = {};
        for (key in props) {
          out[key] = evaluate(key, time);
        }
        return out;
      }
    };
    object.get = function(key) {
      if (key != null) {
        return get(key);
      } else {
        return flattened;
      }
    };
    object.set = function(key, value, ignore, initial) {
      var options;
      if (typeof key === 'string') {
        set(key, value, ignore, initial);
      } else {
        initial = ignore;
        ignore = value;
        options = key;
        for (key in options) {
          value = options[key];
          set(key, value, ignore, initial);
        }
      }
    };
    object.bind = function(key, expr, computed) {
      var binds;
      if (typeof key === 'string') {
        bind(key, expr, computed);
      } else {
        computed = expr;
        binds = key;
        for (key in binds) {
          expr = binds[key];
          bind(key, expr, computed);
        }
      }
    };
    object.unbind = function(key, computed) {
      var binds;
      if (typeof key === 'string') {
        unbind(key, computed);
      } else {
        computed = expr;
        binds = key;
        for (key in binds) {
          unbind(key, computed);
        }
      }
    };
    object.attribute = function(key) {
      if (key != null) {
        return data[to(key)];
      } else {
        return data;
      }
    };
    object.orig = function(key) {
      if (key != null) {
        return originals[to(key)];
      } else {
        return shallowCopy(originals);
      }
    };
    object.computed = function(key) {
      if (key != null) {
        return _computed[to(key)];
      } else {
        return shallowCopy(_computed);
      }
    };
    makers = {};
    validators = {};
    equalors = {};
    equals = function(key, value, target) {
      return equalors[key](value, target);
    };
    validate = function(key, value, target, invalid) {
      return validators[key](value, target, invalid);
    };
    object.validate = function(key, value) {
      var make, target;
      key = to(key);
      make = makers[key];
      if (make != null) {
        target = make();
      }
      return target = validate(key, value, target, function() {
        throw new Error((object.toString()) + " - Invalid value `" + key + "={" + value + "}`");
      });
    };
    dirty = false;
    changes = {};
    touches = {};
    changed = {};
    touched = {};
    getNS = function(key) {
      return key.split('.')[0];
    };
    change = function(key, value) {
      var trait;
      if (!dirty) {
        dirty = true;
        _attributes.queue(digest, object, key, value);
      }
      trait = getNS(key);
      changes[key] = true;
      return touches[trait] = true;
    };
    event = {
      type: 'change',
      changed: null,
      touched: null
    };
    digest = function() {
      var k, results, trait;
      event.changed = changes;
      event.touched = touches;
      changes = changed;
      touches = touched;
      changed = event.changed;
      touched = event.touched;
      dirty = false;
      for (k in changes) {
        changes[k] = false;
      }
      for (k in touches) {
        touches[k] = false;
      }
      event.type = 'change';
      object.trigger(event);
      results = [];
      for (trait in event.touched) {
        event.type = "change:" + trait;
        results.push(object.trigger(event));
      }
      return results;
    };
    shorthand = function(name) {
      var parts, suffix;
      parts = name.split(/\./g);
      suffix = parts.pop();
      parts.pop();
      parts.unshift(suffix);
      return parts.reduce(function(a, b) {
        return a + b.charAt(0).toUpperCase() + b.substring(1);
      });
    };
    addSpec = function(name, spec) {
      var attr, key, ref1, ref2, results, short, type, value;
      results = [];
      for (key in spec) {
        type = spec[key];
        key = [name, key].join('.');
        short = shorthand(key);
        data[key] = attr = {
          T: type,
          ns: name,
          short: short,
          "enum": typeof type["enum"] === "function" ? type["enum"]() : void 0,
          type: typeof type.uniform === "function" ? type.uniform() : void 0,
          last: type.make(),
          value: value = type.make()
        };
        define(key, short);
        flattened[short] = value;
        makers[key] = type.make;
        validators[key] = (ref1 = type.validate) != null ? ref1 : function(a) {
          return a;
        };
        results.push(equalors[key] = (ref2 = type.equals) != null ? ref2 : function(a, b) {
          return a === b;
        });
      }
      return results;
    };
    list = [];
    values = {};
    for (j = 0, len = traits.length; j < len; j++) {
      trait = traits[j];
      ref1 = trait.split(':'), trait = ref1[0], ns = ref1[1];
      name = ns ? [ns, trait].join('.') : trait;
      spec = _attributes.getTrait(trait);
      list.push(trait);
      if (spec != null) {
        addSpec(name, spec);
      }
    }
    if (props != null) {
      for (ns in props) {
        spec = props[ns];
        addSpec(ns, spec);
      }
    }
    unique = list.filter(function(object, i) {
      return list.indexOf(object) === i;
    });
    object.traits = unique;
    if (oldProps != null) {
      object.set(oldProps, true, true);
    }
    if (finals != null) {
      for (key in finals) {
        value = finals[key];
        constant(key, value, true);
      }
    }
    if (oldOrig != null) {
      object.set(oldOrig, false, true);
    }
    if (oldComputed != null) {
      object.bind(oldComputed, true);
    }
    if (oldExpr != null) {
      object.bind(oldExpr, false);
    }
    this.dispose = function() {
      for (key in _computed) {
        unbind(key, true);
      }
      for (key in _expr) {
        unbind(key, false);
      }
      props = {};
      delete object.attributes;
      delete object.get;
      return delete object.set;
    };
    null;
  }

  return Data;

})();

module.exports = Attributes;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,

},{}],32:[function(require,module,exports){
var Group, Node,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Node = require('./node');

Group = (function(superClass) {
  extend(Group, superClass);

  function Group(type, defaults, options, binds, config, attributes) {
    Group.__super__.constructor.call(this, type, defaults, options, binds, config, attributes);
    this.children = [];
    this.on('reindex', (function(_this) {
      return function(event) {
        var child, j, len, ref, results;
        ref = _this.children;
        results = [];
        for (j = 0, len = ref.length; j < len; j++) {
          child = ref[j];
          results.push(child.trigger(event));
        }
        return results;
      };
    })(this));
  }

  Group.prototype.add = function(node) {
    var ref;
    if ((ref = node.parent) != null) {
      ref.remove(node);
    }
    node._index(this.children.length, this);
    this.children.push(node);
    return node._added(this);
  };

  Group.prototype.remove = function(node) {
    var i, index, j, len, ref, ref1;
    if ((ref = node.children) != null ? ref.length : void 0) {
      node.empty();
    }
    index = this.children.indexOf(node);
    if (index === -1) {
      return;
    }
    this.children.splice(index, 1);
    node._index(null);
    node._removed(this);
    ref1 = this.children;
    for (i = j = 0, len = ref1.length; j < len; i = ++j) {
      node = ref1[i];
      if (i >= index) {
        node._index(i);
      }
    }
  };

  Group.prototype.empty = function() {
    var children, j, len, node;
    children = this.children.slice().reverse();
    for (j = 0, len = children.length; j < len; j++) {
      node = children[j];
      this.remove(node);
    }
  };

  return Group;

})(Node);

module.exports = Group;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXG1vZGVsXFxncm91cC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xcbW9kZWxcXGdyb3VwLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLFdBQUE7RUFBQTs7O0FBQUEsSUFBQSxHQUFPLE9BQUEsQ0FBUSxRQUFSOztBQUVEOzs7RUFDUyxlQUFDLElBQUQsRUFBTyxRQUFQLEVBQWlCLE9BQWpCLEVBQTBCLEtBQTFCLEVBQWlDLE1BQWpDLEVBQXlDLFVBQXpDO0lBQ1gsdUNBQU0sSUFBTixFQUFZLFFBQVosRUFBc0IsT0FBdEIsRUFBK0IsS0FBL0IsRUFBc0MsTUFBdEMsRUFBOEMsVUFBOUM7SUFFQSxJQUFDLENBQUEsUUFBRCxHQUFZO0lBQ1osSUFBQyxDQUFBLEVBQUQsQ0FBSSxTQUFKLEVBQWUsQ0FBQSxTQUFBLEtBQUE7YUFBQSxTQUFDLEtBQUQ7QUFBVyxZQUFBO0FBQUE7QUFBQTthQUFBLHFDQUFBOzt1QkFBQSxLQUFLLENBQUMsT0FBTixDQUFjLEtBQWQ7QUFBQTs7TUFBWDtJQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBZjtFQUpXOztrQkFNYixHQUFBLEdBQUssU0FBQyxJQUFEO0FBQ0gsUUFBQTs7U0FBVyxDQUFFLE1BQWIsQ0FBb0IsSUFBcEI7O0lBRUEsSUFBSSxDQUFDLE1BQUwsQ0FBWSxJQUFDLENBQUEsUUFBUSxDQUFDLE1BQXRCLEVBQThCLElBQTlCO0lBQ0EsSUFBQyxDQUFBLFFBQVEsQ0FBQyxJQUFWLENBQWUsSUFBZjtXQUNBLElBQUksQ0FBQyxNQUFMLENBQVksSUFBWjtFQUxHOztrQkFPTCxNQUFBLEdBQVEsU0FBQyxJQUFEO0FBQ04sUUFBQTtJQUFBLHVDQUE2QixDQUFFLGVBQS9CO01BQUEsSUFBSSxDQUFDLEtBQUwsQ0FBQSxFQUFBOztJQUVBLEtBQUEsR0FBUSxJQUFDLENBQUEsUUFBUSxDQUFDLE9BQVYsQ0FBa0IsSUFBbEI7SUFDUixJQUFVLEtBQUEsS0FBUyxDQUFDLENBQXBCO0FBQUEsYUFBQTs7SUFFQSxJQUFDLENBQUEsUUFBUSxDQUFDLE1BQVYsQ0FBaUIsS0FBakIsRUFBd0IsQ0FBeEI7SUFDQSxJQUFJLENBQUMsTUFBTCxDQUFZLElBQVo7SUFDQSxJQUFJLENBQUMsUUFBTCxDQUFjLElBQWQ7QUFFQTtBQUFBLFNBQUEsOENBQUE7O1VBQTRDLENBQUEsSUFBSztRQUFqRCxJQUFJLENBQUMsTUFBTCxDQUFZLENBQVo7O0FBQUE7RUFWTTs7a0JBYVIsS0FBQSxHQUFPLFNBQUE7QUFDTCxRQUFBO0lBQUEsUUFBQSxHQUFXLElBQUMsQ0FBQSxRQUFRLENBQUMsS0FBVixDQUFBLENBQWlCLENBQUMsT0FBbEIsQ0FBQTtBQUNYLFNBQUEsMENBQUE7O01BQUEsSUFBQyxDQUFBLE1BQUQsQ0FBUSxJQUFSO0FBQUE7RUFGSzs7OztHQTNCVzs7QUFnQ3BCLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{"./node":36}],33:[function(require,module,exports){
var Guard;

Guard = (function() {
  function Guard(limit1) {
    this.limit = limit1 != null ? limit1 : 10;
  }

  Guard.prototype.iterate = function(options) {
    var last, limit, run, step;
    step = options.step, last = options.last;
    limit = this.limit;
    while (run = step()) {
      if (!--limit) {
        console.warn("Last iteration", typeof last === "function" ? last() : void 0);
        throw new Error("Exceeded iteration limit.");
      }
    }
    return null;
  };

  return Guard;

})();

module.exports = Guard;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXG1vZGVsXFxndWFyZC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xcbW9kZWxcXGd1YXJkLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBOztBQUFNO0VBQ1MsZUFBQyxNQUFEO0lBQUMsSUFBQyxDQUFBLHlCQUFELFNBQVM7RUFBVjs7a0JBQ2IsT0FBQSxHQUFTLFNBQUMsT0FBRDtBQUNQLFFBQUE7SUFBQyxtQkFBRCxFQUFPO0lBRVAsS0FBQSxHQUFRLElBQUMsQ0FBQTtBQUNULFdBQU0sR0FBQSxHQUFNLElBQUEsQ0FBQSxDQUFaO01BQ0UsSUFBRyxDQUFDLEVBQUUsS0FBTjtRQUNFLE9BQU8sQ0FBQyxJQUFSLENBQWEsZ0JBQWIsK0JBQStCLGVBQS9CO0FBQ0EsY0FBTSxJQUFJLEtBQUosQ0FBVSwyQkFBVixFQUZSOztJQURGO1dBSUE7RUFSTzs7Ozs7O0FBVVgsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{}],34:[function(require,module,exports){
exports.Attributes = require('./attributes');

exports.Group = require('./group');

exports.Guard = require('./guard');

exports.Model = require('./model');

exports.Node = require('./node');

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXG1vZGVsXFxpbmRleC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xcbW9kZWxcXGluZGV4LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLENBQUMsVUFBUixHQUFxQixPQUFBLENBQVEsY0FBUjs7QUFDckIsT0FBTyxDQUFDLEtBQVIsR0FBcUIsT0FBQSxDQUFRLFNBQVI7O0FBQ3JCLE9BQU8sQ0FBQyxLQUFSLEdBQXFCLE9BQUEsQ0FBUSxTQUFSOztBQUNyQixPQUFPLENBQUMsS0FBUixHQUFxQixPQUFBLENBQVEsU0FBUjs7QUFDckIsT0FBTyxDQUFDLElBQVIsR0FBcUIsT0FBQSxDQUFRLFFBQVIifQ==

},{"./attributes":31,"./group":32,"./guard":33,"./model":35,"./node":36}],35:[function(require,module,exports){
var ALL, AUTO, CLASS, ID, Model, TRAIT, TYPE, cssauron, language,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

cssauron = require('cssauron');

ALL = '*';

ID = /^#([A-Za-z0-9_])$/;

CLASS = /^\.([A-Za-z0-9_]+)$/;

TRAIT = /^\[([A-Za-z0-9_]+)\]$/;

TYPE = /^[A-Za-z0-9_]+$/;

AUTO = /^<([0-9]+|<*)$/;

language = null;


/*

  Model that wraps a root node and its children.
  
  Monitors adds, removals and ID/class changes.
  Enables CSS selectors, both querying and watching.

  Watchers are primed differentially as changes come in,
  and fired with digest().
 */

Model = (function() {
  function Model(root) {
    var add, addClasses, addID, addNode, addTags, addTraits, addType, adopt, check, dispose, force, hashTags, prime, remove, removeClasses, removeID, removeNode, removeTags, removeTraits, removeType, unhashTags, update;
    this.root = root;
    this.root.model = this;
    this.root.root = this.root;
    this.ids = {};
    this.classes = {};
    this.traits = {};
    this.types = {};
    this.nodes = [];
    this.watchers = [];
    this.fire = false;
    this.lastNode = null;
    this.event = {
      type: 'update'
    };
    if (language == null) {
      language = cssauron({
        tag: 'type',
        id: 'id',
        "class": "classes.join(' ')",
        parent: 'parent',
        children: 'children',
        attr: 'traits.hash[attr]'
      });
    }
    add = (function(_this) {
      return function(event) {
        return adopt(event.node);
      };
    })(this);
    remove = (function(_this) {
      return function(event) {
        return dispose(event.node);
      };
    })(this);
    this.root.on('add', add);
    this.root.on('remove', remove);
    adopt = (function(_this) {
      return function(node) {
        addNode(node);
        addType(node);
        addTraits(node);
        node.on('change:node', update);
        update(null, node, true);
        return force(node);
      };
    })(this);
    dispose = (function(_this) {
      return function(node) {
        removeNode(node);
        removeType(node);
        removeTraits(node);
        removeID(node.id, node);
        removeClasses(node.classes, node);
        node.off('change:node', update);
        return force(node);
      };
    })(this);
    prime = (function(_this) {
      return function(node) {
        var i, len, ref, watcher;
        ref = _this.watchers;
        for (i = 0, len = ref.length; i < len; i++) {
          watcher = ref[i];
          watcher.match = watcher.matcher(node);
        }
        return null;
      };
    })(this);
    check = (function(_this) {
      return function(node) {
        var fire, i, len, ref, watcher;
        ref = _this.watchers;
        for (i = 0, len = ref.length; i < len; i++) {
          watcher = ref[i];
          fire = watcher.fire || (watcher.fire = watcher.match !== watcher.matcher(node));
          if (fire) {
            _this.lastNode = node;
          }
          _this.fire || (_this.fire = fire);
        }
        return null;
      };
    })(this);
    force = (function(_this) {
      return function(node) {
        var fire, i, len, ref, watcher;
        ref = _this.watchers;
        for (i = 0, len = ref.length; i < len; i++) {
          watcher = ref[i];
          fire = watcher.fire || (watcher.fire = watcher.matcher(node));
          if (fire) {
            _this.lastNode = node;
          }
          _this.fire || (_this.fire = fire);
        }
        return null;
      };
    })(this);
    this.digest = (function(_this) {
      return function() {
        var i, len, ref, watcher;
        if (!_this.fire) {
          return false;
        }
        ref = _this.watchers.slice();
        for (i = 0, len = ref.length; i < len; i++) {
          watcher = ref[i];
          if (!watcher.fire) {
            continue;
          }
          watcher.fire = false;
          watcher.handler();
        }
        _this.fire = false;
        return true;
      };
    })(this);
    update = (function(_this) {
      return function(event, node, init) {
        var _id, _klass, classes, id, klass, primed, ref, ref1;
        _id = init || event.changed['node.id'];
        _klass = init || event.changed['node.classes'];
        primed = false;
        if (_id) {
          id = node.get('node.id');
          if (id !== node.id) {
            if (!init) {
              prime(node);
            }
            primed = true;
            if (node.id != null) {
              removeID(node.id, node);
            }
            addID(id, node);
          }
        }
        if (_klass) {
          classes = (ref = node.get('node.classes')) != null ? ref : [];
          klass = classes.join(',');
          if (klass !== ((ref1 = node.classes) != null ? ref1.klass : void 0)) {
            classes = classes.slice();
            if (!(init || primed)) {
              prime(node);
            }
            primed = true;
            if (node.classes != null) {
              removeClasses(node.classes, node);
            }
            addClasses(classes, node);
            node.classes = classes;
            node.classes.klass = klass;
          }
        }
        if (!init && primed) {
          check(node);
        }
        return null;
      };
    })(this);
    addTags = function(sets, tags, node) {
      var i, k, len, list, ref;
      if (tags == null) {
        return;
      }
      for (i = 0, len = tags.length; i < len; i++) {
        k = tags[i];
        list = (ref = sets[k]) != null ? ref : [];
        list.push(node);
        sets[k] = list;
      }
      return null;
    };
    removeTags = function(sets, tags, node) {
      var i, index, k, len, list;
      if (tags == null) {
        return;
      }
      for (i = 0, len = tags.length; i < len; i++) {
        k = tags[i];
        list = sets[k];
        index = list.indexOf(node);
        if (index >= 0) {
          list.splice(index, 1);
        }
        if (list.length === 0) {
          delete sets[k];
        }
      }
      return null;
    };
    hashTags = function(array) {
      var hash, i, klass, len, results;
      if (!(array.length > 0)) {
        return;
      }
      hash = array.hash = {};
      results = [];
      for (i = 0, len = array.length; i < len; i++) {
        klass = array[i];
        results.push(hash[klass] = true);
      }
      return results;
    };
    unhashTags = function(array) {
      return delete array.hash;
    };
    addID = (function(_this) {
      return function(id, node) {
        if (_this.ids[id]) {
          throw new Error("Duplicate node id `" + id + "`");
        }
        if (id != null) {
          _this.ids[id] = [node];
        }
        return node.id = id != null ? id : node._id;
      };
    })(this);
    removeID = (function(_this) {
      return function(id, node) {
        if (id != null) {
          delete _this.ids[id];
        }
        return node.id = node._id;
      };
    })(this);
    addClasses = (function(_this) {
      return function(classes, node) {
        addTags(_this.classes, classes, node);
        if (classes != null) {
          return hashTags(classes);
        }
      };
    })(this);
    removeClasses = (function(_this) {
      return function(classes, node) {
        removeTags(_this.classes, classes, node);
        if (classes != null) {
          return unhashTags(classes);
        }
      };
    })(this);
    addNode = (function(_this) {
      return function(node) {
        return _this.nodes.push(node);
      };
    })(this);
    removeNode = (function(_this) {
      return function(node) {
        return _this.nodes.splice(_this.nodes.indexOf(node), 1);
      };
    })(this);
    addType = (function(_this) {
      return function(node) {
        return addTags(_this.types, [node.type], node);
      };
    })(this);
    removeType = (function(_this) {
      return function(node) {
        return removeTags(_this.types, [node.type], node);
      };
    })(this);
    addTraits = (function(_this) {
      return function(node) {
        addTags(_this.traits, node.traits, node);
        return hashTags(node.traits);
      };
    })(this);
    removeTraits = (function(_this) {
      return function(node) {
        removeTags(_this.traits, node.traits, node);
        return unhashTags(node.traits);
      };
    })(this);
    adopt(this.root);
    this.root.trigger({
      type: 'added'
    });
  }

  Model.prototype.filter = function(nodes, selector) {
    var i, len, matcher, node, results;
    matcher = this._matcher(selector);
    results = [];
    for (i = 0, len = nodes.length; i < len; i++) {
      node = nodes[i];
      if (matcher(node)) {
        results.push(node);
      }
    }
    return results;
  };

  Model.prototype.ancestry = function(nodes, parents) {
    var i, len, node, out, parent;
    out = [];
    for (i = 0, len = nodes.length; i < len; i++) {
      node = nodes[i];
      parent = node.parent;
      while (parent != null) {
        if (indexOf.call(parents, parent) >= 0) {
          out.push(node);
          break;
        }
        parent = parent.parent;
      }
    }
    return out;
  };

  Model.prototype.select = function(selector, parents) {
    var matches;
    matches = this._select(selector);
    if (parents != null) {
      matches = this.ancestry(matches, parents);
    }
    matches.sort(function(a, b) {
      return b.order - a.order;
    });
    return matches;
  };

  Model.prototype.watch = function(selector, handler) {
    var watcher;
    handler.unwatch = (function(_this) {
      return function() {
        return _this.unwatch(handler);
      };
    })(this);
    handler.watcher = watcher = {
      selector: selector,
      handler: handler,
      matcher: this._matcher(selector),
      match: false,
      fire: false
    };
    this.watchers.push(watcher);
    return this.select(selector);
  };

  Model.prototype.unwatch = function(handler) {
    var watcher;
    watcher = handler.watcher;
    if (watcher == null) {
      return;
    }
    this.watchers.splice(this.watchers.indexOf(watcher), 1);
    delete handler.unwatch;
    return delete handler.watcher;
  };

  Model.prototype._simplify = function(s) {
    var all, auto, found, id, klass, ref, ref1, ref2, ref3, ref4, trait, type;
    s = s.replace(/^\s+/, '');
    s = s.replace(/\s+$/, '');
    found = all = s === ALL;
    if (!found) {
      found = id = (ref = s.match(ID)) != null ? ref[1] : void 0;
    }
    if (!found) {
      found = klass = (ref1 = s.match(CLASS)) != null ? ref1[1] : void 0;
    }
    if (!found) {
      found = trait = (ref2 = s.match(TRAIT)) != null ? ref2[1] : void 0;
    }
    if (!found) {
      found = type = (ref3 = s.match(TYPE)) != null ? ref3[0] : void 0;
    }
    if (!found) {
      found = auto = (ref4 = s.match(AUTO)) != null ? ref4[0] : void 0;
    }
    return [all, id, klass, trait, type, auto];
  };

  Model.prototype._matcher = function(s) {
    var all, auto, id, klass, ref, trait, type;
    ref = this._simplify(s), all = ref[0], id = ref[1], klass = ref[2], trait = ref[3], type = ref[4], auto = ref[5];
    if (all) {
      return (function(node) {
        return true;
      });
    }
    if (id) {
      return (function(node) {
        return node.id === id;
      });
    }
    if (klass) {
      return (function(node) {
        var ref1, ref2;
        return (ref1 = node.classes) != null ? (ref2 = ref1.hash) != null ? ref2[klass] : void 0 : void 0;
      });
    }
    if (trait) {
      return (function(node) {
        var ref1, ref2;
        return (ref1 = node.traits) != null ? (ref2 = ref1.hash) != null ? ref2[trait] : void 0 : void 0;
      });
    }
    if (type) {
      return (function(node) {
        return node.type === type;
      });
    }
    if (auto) {
      throw "Auto-link matcher unsupported";
    }
    return language(s);
  };

  Model.prototype._select = function(s) {
    var all, id, klass, ref, ref1, ref2, ref3, ref4, trait, type;
    ref = this._simplify(s), all = ref[0], id = ref[1], klass = ref[2], trait = ref[3], type = ref[4];
    if (all) {
      return this.nodes;
    }
    if (id) {
      return (ref1 = this.ids[id]) != null ? ref1 : [];
    }
    if (klass) {
      return (ref2 = this.classes[klass]) != null ? ref2 : [];
    }
    if (trait) {
      return (ref3 = this.traits[trait]) != null ? ref3 : [];
    }
    if (type) {
      return (ref4 = this.types[type]) != null ? ref4 : [];
    }
    return this.filter(this.nodes, s);
  };

  Model.prototype.getRoot = function() {
    return this.root;
  };

  Model.prototype.getLastTrigger = function() {
    return this.lastNode.toString();
  };

  return Model;

})();

module.exports = Model;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,

},{"cssauron":3}],36:[function(require,module,exports){
var Binder, Node, Util, nodeIndex;

Util = require('../util');

nodeIndex = 0;

Node = (function() {
  function Node(type, defaults, options, binds, config, attributes) {
    this.type = type;
    this._id = (++nodeIndex).toString();
    this.configure(config, attributes);
    this.parent = this.root = this.path = this.index = null;
    this.set(defaults, true, true);
    this.set(options, false, true);
    this.bind(binds, false);
  }

  Node.prototype.configure = function(config, attributes) {
    var finals, freeform, props, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, traits;
    traits = config.traits, props = config.props, finals = config.finals, freeform = config.freeform;
    if (traits == null) {
      traits = (ref = (ref1 = this._config) != null ? ref1.traits : void 0) != null ? ref : [];
    }
    if (props == null) {
      props = (ref2 = (ref3 = this._config) != null ? ref3.props : void 0) != null ? ref2 : {};
    }
    if (finals == null) {
      finals = (ref4 = (ref5 = this._config) != null ? ref5.finals : void 0) != null ? ref4 : {};
    }
    if (freeform == null) {
      freeform = (ref6 = (ref7 = this._config) != null ? ref7.freeform : void 0) != null ? ref6 : false;
    }
    this._config = {
      traits: traits,
      props: props,
      finals: finals,
      freeform: freeform
    };
    return this.attributes = attributes.apply(this, this._config);
  };

  Node.prototype.dispose = function() {
    this.attributes.dispose();
    return this.attributes = null;
  };

  Node.prototype._added = function(parent) {
    var event;
    this.parent = parent;
    this.root = parent.root;
    event = {
      type: 'add',
      node: this,
      parent: this.parent
    };
    if (this.root) {
      this.root.trigger(event);
    }
    event.type = 'added';
    return this.trigger(event);
  };

  Node.prototype._removed = function() {
    var event;
    event = {
      type: 'remove',
      node: this
    };
    if (this.root) {
      this.root.trigger(event);
    }
    event.type = 'removed';
    this.trigger(event);
    return this.root = this.parent = null;
  };

  Node.prototype._index = function(index, parent) {
    var path, ref;
    if (parent == null) {
      parent = this.parent;
    }
    this.index = index;
    this.path = path = index != null ? ((ref = parent != null ? parent.path : void 0) != null ? ref : []).concat([index]) : null;
    this.order = path != null ? this._encode(path) : 2e308;
    if (this.root != null) {
      return this.trigger({
        type: 'reindex'
      });
    }
  };

  Node.prototype._encode = function(path) {
    var a, b, f, g, i, index, k, len, lerp, map, ref;
    k = 3;
    map = function(x) {
      return k / (x + k);
    };
    lerp = function(t) {
      return b + (a - b) * t;
    };
    a = 1 + 1 / k;
    b = 0;
    for (i = 0, len = path.length; i < len; i++) {
      index = path[i];
      f = map(index + 1);
      g = map(index + 2);
      ref = [lerp(f), lerp(g)], a = ref[0], b = ref[1];
    }
    return a;
  };

  Node.prototype.toString = function() {
    var _id, count, id, ref, ref1, ref2, tag;
    _id = (ref = this.id) != null ? ref : this._id;
    tag = (ref1 = this.type) != null ? ref1 : 'node';
    id = tag;
    id += "#" + _id;
    if ((ref2 = this.classes) != null ? ref2.length : void 0) {
      id += "." + (this.classes.join('.'));
    }
    if (this.children != null) {
      if (count = this.children.length) {
        return "<" + id + ">…(" + count + ")…</" + tag + ">";
      } else {
        return "<" + id + "></" + tag + ">";
      }
    } else {
      return "<" + id + " />";
    }
  };

  Node.prototype.toMarkup = function(selector, indent) {
    var attr, child, children, close, expr, k, open, orig, props, recurse, ref, ref1, ref2, ref3, tag, v;
    if (selector == null) {
      selector = null;
    }
    if (indent == null) {
      indent = '';
    }
    if (selector && typeof selector !== 'function') {
      selector = (ref = (ref1 = this.root) != null ? ref1.model._matcher(selector) : void 0) != null ? ref : function() {
        return true;
      };
    }
    tag = (ref2 = this.type) != null ? ref2 : 'node';
    expr = this.expr;
    orig = {
      id: this._id
    };
    ref3 = typeof this.orig === "function" ? this.orig() : void 0;
    for (k in ref3) {
      v = ref3[k];
      orig[k] = v;
    }
    props = (function() {
      var results;
      results = [];
      for (k in orig) {
        v = orig[k];
        if (!this.expr[k]) {
          results.push(Util.Pretty.JSX.prop(k, v));
        }
      }
      return results;
    }).call(this);
    expr = (function() {
      var results;
      results = [];
      for (k in expr) {
        v = expr[k];
        results.push(Util.Pretty.JSX.bind(k, v));
      }
      return results;
    })();
    attr = [''];
    if (props.length) {
      attr = attr.concat(props);
    }
    if (expr.length) {
      attr = attr.concat(expr);
    }
    attr = attr.join(' ');
    child = indent;
    recurse = (function(_this) {
      return function() {
        var children, ref4;
        if (!((ref4 = _this.children) != null ? ref4.length : void 0)) {
          return '';
        }
        return children = _this.children.map(function(x) {
          return x.toMarkup(selector, child);
        }).filter(function(x) {
          return (x != null) && x.length;
        }).join("\n");
      };
    })(this);
    if (selector && !selector(this)) {
      return recurse();
    }
    if (this.children != null) {
      open = "<" + tag + attr + ">";
      close = "</" + tag + ">";
      child = indent + '  ';
      children = recurse();
      if (children.length) {
        children = "\n" + children + "\n" + indent;
      }
      if (children == null) {
        children = '';
      }
      return indent + open + children + close;
    } else {
      return indent + "<" + tag + attr + " />";
    }
  };

  Node.prototype.print = function(selector, level) {
    return Util.Pretty.print(this.toMarkup(selector), level);
  };

  return Node;

})();

Binder = require('../util/binder');

Binder.apply(Node.prototype);

module.exports = Node;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXG1vZGVsXFxub2RlLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxtb2RlbFxcbm9kZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQTs7QUFBQSxJQUFBLEdBQU8sT0FBQSxDQUFRLFNBQVI7O0FBRVAsU0FBQSxHQUFZOztBQUVOO0VBQ1MsY0FBQyxJQUFELEVBQVEsUUFBUixFQUFrQixPQUFsQixFQUEyQixLQUEzQixFQUFrQyxNQUFsQyxFQUEwQyxVQUExQztJQUFDLElBQUMsQ0FBQSxPQUFEO0lBQ1osSUFBQyxDQUFBLEdBQUQsR0FBTyxDQUFDLEVBQUUsU0FBSCxDQUFhLENBQUMsUUFBZCxDQUFBO0lBRVAsSUFBQyxDQUFBLFNBQUQsQ0FBVyxNQUFYLEVBQW1CLFVBQW5CO0lBQ0EsSUFBQyxDQUFBLE1BQUQsR0FBVSxJQUFDLENBQUEsSUFBRCxHQUFRLElBQUMsQ0FBQSxJQUFELEdBQVEsSUFBQyxDQUFBLEtBQUQsR0FBUztJQUVuQyxJQUFDLENBQUEsR0FBRCxDQUFNLFFBQU4sRUFBZ0IsSUFBaEIsRUFBc0IsSUFBdEI7SUFDQSxJQUFDLENBQUEsR0FBRCxDQUFNLE9BQU4sRUFBZSxLQUFmLEVBQXNCLElBQXRCO0lBQ0EsSUFBQyxDQUFBLElBQUQsQ0FBTSxLQUFOLEVBQWEsS0FBYjtFQVJXOztpQkFVYixTQUFBLEdBQVcsU0FBQyxNQUFELEVBQVMsVUFBVDtBQUNULFFBQUE7SUFBQyxzQkFBRCxFQUFTLG9CQUFULEVBQWdCLHNCQUFoQixFQUF3Qjs7TUFDeEIsc0ZBQWlDOzs7TUFDakMsc0ZBQWlDOzs7TUFDakMsd0ZBQWlDOzs7TUFDakMsNEZBQWlDOztJQUVqQyxJQUFDLENBQUEsT0FBRCxHQUFjO01BQUMsUUFBQSxNQUFEO01BQVMsT0FBQSxLQUFUO01B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

},{"../util":175,"../util/binder":171}],37:[function(require,module,exports){
var Classes;

Classes = {
  dom: require('./dom')
};

module.exports = Classes;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXG92ZXJsYXlcXGNsYXNzZXMuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXG92ZXJsYXlcXGNsYXNzZXMuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUE7O0FBQUEsT0FBQSxHQUNFO0VBQUEsR0FBQSxFQUFLLE9BQUEsQ0FBUSxPQUFSLENBQUw7OztBQUVGLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{"./dom":38}],38:[function(require,module,exports){
var DOM, Overlay, VDOM,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Overlay = require('./overlay');

VDOM = require('../util').VDOM;

DOM = (function(superClass) {
  extend(DOM, superClass);

  function DOM() {
    return DOM.__super__.constructor.apply(this, arguments);
  }

  DOM.prototype.el = VDOM.element;

  DOM.prototype.hint = VDOM.hint;

  DOM.prototype.apply = VDOM.apply;

  DOM.prototype.recycle = VDOM.recycle;

  DOM.prototype.init = function(options) {
    return this.last = null;
  };

  DOM.prototype.dispose = function() {
    this.unmount();
    return DOM.__super__.dispose.apply(this, arguments);
  };

  DOM.prototype.mount = function() {
    var overlay;
    overlay = document.createElement('div');
    overlay.classList.add('mathbox-overlay');
    this.element.appendChild(overlay);
    return this.overlay = overlay;
  };

  DOM.prototype.unmount = function(overlay) {
    if (this.overlay.parentNode) {
      this.element.removeChild(this.overlay);
    }
    return this.overlay = null;
  };

  DOM.prototype.render = function(el) {
    var last, naked, node, overlay, parent, ref;
    if (!this.overlay) {
      this.mount();
    }
    if ((ref = typeof el) === 'string' || ref === 'number') {
      el = this.el('div', null, el);
    }
    if (el instanceof Array) {
      el = this.el('div', null, el);
    }
    naked = el.type === 'div';
    last = this.last;
    overlay = this.overlay;
    node = naked ? overlay : overlay.childNodes[0];
    parent = naked ? overlay.parentNode : overlay;
    if (!last && node) {
      last = this.el('div');
    }
    this.apply(el, last, node, parent, 0);
    this.last = el;
    if (last != null) {
      this.recycle(last);
    }
  };

  return DOM;

})(Overlay);

module.exports = DOM;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXG92ZXJsYXlcXGRvbS5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xcb3ZlcmxheVxcZG9tLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLGtCQUFBO0VBQUE7OztBQUFBLE9BQUEsR0FBVSxPQUFBLENBQVEsV0FBUjs7QUFDVCxPQUFTLE9BQUEsQ0FBUSxTQUFSOztBQUVKOzs7Ozs7O2dCQUNKLEVBQUEsR0FBUyxJQUFJLENBQUM7O2dCQUNkLElBQUEsR0FBUyxJQUFJLENBQUM7O2dCQUNkLEtBQUEsR0FBUyxJQUFJLENBQUM7O2dCQUNkLE9BQUEsR0FBUyxJQUFJLENBQUM7O2dCQUVkLElBQUEsR0FBTSxTQUFDLE9BQUQ7V0FDSixJQUFDLENBQUEsSUFBRCxHQUFRO0VBREo7O2dCQUdOLE9BQUEsR0FBUyxTQUFBO0lBQ1AsSUFBQyxDQUFBLE9BQUQsQ0FBQTtXQUNBLGtDQUFBLFNBQUE7RUFGTzs7Z0JBSVQsS0FBQSxHQUFPLFNBQUE7QUFDTCxRQUFBO0lBQUEsT0FBQSxHQUFVLFFBQVEsQ0FBQyxhQUFULENBQXVCLEtBQXZCO0lBQ1YsT0FBTyxDQUFDLFNBQVMsQ0FBQyxHQUFsQixDQUFzQixpQkFBdEI7SUFDQSxJQUFDLENBQUEsT0FBTyxDQUFDLFdBQVQsQ0FBcUIsT0FBckI7V0FDQSxJQUFDLENBQUEsT0FBRCxHQUFXO0VBSk47O2dCQU1QLE9BQUEsR0FBUyxTQUFDLE9BQUQ7SUFDUCxJQUFpQyxJQUFDLENBQUEsT0FBTyxDQUFDLFVBQTFDO01BQUEsSUFBQyxDQUFBLE9BQU8sQ0FBQyxXQUFULENBQXFCLElBQUMsQ0FBQSxPQUF0QixFQUFBOztXQUNBLElBQUMsQ0FBQSxPQUFELEdBQVc7RUFGSjs7Z0JBSVQsTUFBQSxHQUFRLFNBQUMsRUFBRDtBQUVOLFFBQUE7SUFBQSxJQUFZLENBQUMsSUFBQyxDQUFBLE9BQWQ7TUFBQSxJQUFDLENBQUEsS0FBRCxDQUFBLEVBQUE7O0lBR0EsV0FBaUMsT0FBTyxHQUFQLEtBQWMsUUFBZCxJQUFBLEdBQUEsS0FBd0IsUUFBekQ7TUFBQSxFQUFBLEdBQVUsSUFBQyxDQUFBLEVBQUQsQ0FBSSxLQUFKLEVBQVcsSUFBWCxFQUFpQixFQUFqQixFQUFWOztJQUNBLElBQWlDLEVBQUEsWUFBYyxLQUEvQztNQUFBLEVBQUEsR0FBVSxJQUFDLENBQUEsRUFBRCxDQUFJLEtBQUosRUFBVyxJQUFYLEVBQWlCLEVBQWpCLEVBQVY7O0lBR0EsS0FBQSxHQUFVLEVBQUUsQ0FBQyxJQUFILEtBQVc7SUFHckIsSUFBQSxHQUFVLElBQUMsQ0FBQTtJQUdYLE9BQUEsR0FBVSxJQUFDLENBQUE7SUFDWCxJQUFBLEdBQWEsS0FBSCxHQUFjLE9BQWQsR0FBMkIsT0FBTyxDQUFDLFVBQVcsQ0FBQSxDQUFBO0lBQ3hELE1BQUEsR0FBYSxLQUFILEdBQWMsT0FBTyxDQUFDLFVBQXRCLEdBQXNDO0lBR2hELElBQW9CLENBQUMsSUFBRCxJQUFTLElBQTdCO01BQUEsSUFBQSxHQUFPLElBQUMsQ0FBQSxFQUFELENBQUksS0FBSixFQUFQOztJQUdBLElBQUMsQ0FBQSxLQUFELENBQU8sRUFBUCxFQUFXLElBQVgsRUFBaUIsSUFBakIsRUFBdUIsTUFBdkIsRUFBK0IsQ0FBL0I7SUFDQSxJQUFDLENBQUEsSUFBRCxHQUFRO0lBR1IsSUFBaUIsWUFBakI7TUFBQSxJQUFDLENBQUEsT0FBRCxDQUFTLElBQVQsRUFBQTs7RUEzQk07Ozs7R0F2QlE7O0FBcURsQixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"../util":175,"./overlay":41}],39:[function(require,module,exports){
var OverlayFactory;

OverlayFactory = (function() {
  function OverlayFactory(classes, canvas) {
    var div;
    this.classes = classes;
    this.canvas = canvas;
    div = document.createElement('div');
    div.classList.add('mathbox-overlays');
    this.div = div;
  }

  OverlayFactory.prototype.inject = function() {
    var element;
    element = this.canvas.parentNode;
    if (!element) {
      throw new Error("Canvas not inserted into document.");
    }
    return element.insertBefore(this.div, this.canvas);
  };

  OverlayFactory.prototype.unject = function() {
    var element;
    element = this.div.parentNode;
    return element.removeChild(this.div);
  };

  OverlayFactory.prototype.getTypes = function() {
    return Object.keys(this.classes);
  };

  OverlayFactory.prototype.make = function(type, options) {
    return new this.classes[type](this.div, options);
  };

  return OverlayFactory;

})();

module.exports = OverlayFactory;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXG92ZXJsYXlcXGZhY3RvcnkuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXG92ZXJsYXlcXGZhY3RvcnkuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUE7O0FBQU07RUFDUyx3QkFBQyxPQUFELEVBQVcsTUFBWDtBQUNYLFFBQUE7SUFEWSxJQUFDLENBQUEsVUFBRDtJQUFVLElBQUMsQ0FBQSxTQUFEO0lBQ3RCLEdBQUEsR0FBTSxRQUFRLENBQUMsYUFBVCxDQUF1QixLQUF2QjtJQUNOLEdBQUcsQ0FBQyxTQUFTLENBQUMsR0FBZCxDQUFrQixrQkFBbEI7SUFDQSxJQUFDLENBQUEsR0FBRCxHQUFPO0VBSEk7OzJCQUtiLE1BQUEsR0FBUSxTQUFBO0FBQ04sUUFBQTtJQUFBLE9BQUEsR0FBVSxJQUFDLENBQUEsTUFBTSxDQUFDO0lBQ2xCLElBQXdELENBQUMsT0FBekQ7QUFBQSxZQUFNLElBQUksS0FBSixDQUFVLG9DQUFWLEVBQU47O1dBQ0EsT0FBTyxDQUFDLFlBQVIsQ0FBcUIsSUFBQyxDQUFBLEdBQXRCLEVBQTJCLElBQUMsQ0FBQSxNQUE1QjtFQUhNOzsyQkFLUixNQUFBLEdBQVEsU0FBQTtBQUNOLFFBQUE7SUFBQSxPQUFBLEdBQVUsSUFBQyxDQUFBLEdBQUcsQ0FBQztXQUNmLE9BQU8sQ0FBQyxXQUFSLENBQW9CLElBQUMsQ0FBQSxHQUFyQjtFQUZNOzsyQkFJUixRQUFBLEdBQVUsU0FBQTtXQUNSLE1BQU0sQ0FBQyxJQUFQLENBQVksSUFBQyxDQUFBLE9BQWI7RUFEUTs7MkJBR1YsSUFBQSxHQUFNLFNBQUMsSUFBRCxFQUFPLE9BQVA7V0FDSixJQUFJLElBQUMsQ0FBQSxPQUFRLENBQUEsSUFBQSxDQUFiLENBQW1CLElBQUMsQ0FBQSxHQUFwQixFQUF5QixPQUF6QjtFQURJOzs7Ozs7QUFHUixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{}],40:[function(require,module,exports){
exports.Factory = require('./factory');

exports.Classes = require('./classes');

exports.Overlay = require('./overlay');

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXG92ZXJsYXlcXGluZGV4LmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxvdmVybGF5XFxpbmRleC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxDQUFDLE9BQVIsR0FBcUIsT0FBQSxDQUFRLFdBQVI7O0FBQ3JCLE9BQU8sQ0FBQyxPQUFSLEdBQXFCLE9BQUEsQ0FBUSxXQUFSOztBQUNyQixPQUFPLENBQUMsT0FBUixHQUFxQixPQUFBLENBQVEsV0FBUiJ9

},{"./classes":37,"./factory":39,"./overlay":41}],41:[function(require,module,exports){
var Overlay;

Overlay = (function() {
  function Overlay(element, options) {
    this.element = element;
    if (typeof this.init === "function") {
      this.init(options);
    }
  }

  Overlay.prototype.dispose = function() {};

  return Overlay;

})();

module.exports = Overlay;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXG92ZXJsYXlcXG92ZXJsYXkuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXG92ZXJsYXlcXG92ZXJsYXkuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUE7O0FBQU07RUFDUyxpQkFBQyxPQUFELEVBQVcsT0FBWDtJQUFDLElBQUMsQ0FBQSxVQUFEOztNQUNaLElBQUMsQ0FBQSxLQUFNOztFQURJOztvQkFHYixPQUFBLEdBQVMsU0FBQSxHQUFBOzs7Ozs7QUFFWCxNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{}],42:[function(require,module,exports){
var PrimitiveFactory, Util;

Util = require('../util');

PrimitiveFactory = (function() {
  function PrimitiveFactory(definitions, context) {
    this.context = context;
    this.classes = definitions.Classes;
    this.helpers = definitions.Helpers;
  }

  PrimitiveFactory.prototype.getTypes = function() {
    return Object.keys(this.classes);
  };

  PrimitiveFactory.prototype.make = function(type, options, binds) {
    var klass, node, primitive;
    if (options == null) {
      options = {};
    }
    if (binds == null) {
      binds = null;
    }
    klass = this.classes[type];
    if (klass == null) {
      throw new Error("Unknown primitive class `" + type + "`");
    }
    node = new klass.model(type, klass.defaults, options, binds, klass, this.context.attributes);
    primitive = new klass(node, this.context, this.helpers);
    return node;
  };

  return PrimitiveFactory;

})();

module.exports = PrimitiveFactory;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXGZhY3RvcnkuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXGZhY3RvcnkuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUE7O0FBQUEsSUFBQSxHQUFPLE9BQUEsQ0FBUSxTQUFSOztBQUVEO0VBQ1MsMEJBQUMsV0FBRCxFQUFjLE9BQWQ7SUFBYyxJQUFDLENBQUEsVUFBRDtJQUN6QixJQUFDLENBQUEsT0FBRCxHQUFXLFdBQVcsQ0FBQztJQUN2QixJQUFDLENBQUEsT0FBRCxHQUFXLFdBQVcsQ0FBQztFQUZaOzs2QkFJYixRQUFBLEdBQVUsU0FBQTtXQUNSLE1BQU0sQ0FBQyxJQUFQLENBQVksSUFBQyxDQUFBLE9BQWI7RUFEUTs7NkJBR1YsSUFBQSxHQUFNLFNBQUMsSUFBRCxFQUFPLE9BQVAsRUFBcUIsS0FBckI7QUFDSixRQUFBOztNQURXLFVBQVU7OztNQUFJLFFBQVE7O0lBQ2pDLEtBQUEsR0FBUSxJQUFDLENBQUEsT0FBUSxDQUFBLElBQUE7SUFDakIsSUFBMkQsYUFBM0Q7QUFBQSxZQUFNLElBQUksS0FBSixDQUFVLDJCQUFBLEdBQTRCLElBQTVCLEdBQWlDLEdBQTNDLEVBQU47O0lBRUEsSUFBQSxHQUFZLElBQUksS0FBSyxDQUFDLEtBQVYsQ0FBZ0IsSUFBaEIsRUFBc0IsS0FBSyxDQUFDLFFBQTVCLEVBQXNDLE9BQXRDLEVBQStDLEtBQS9DLEVBQXNELEtBQXRELEVBQTZELElBQUMsQ0FBQSxPQUFPLENBQUMsVUFBdEU7SUFDWixTQUFBLEdBQVksSUFBSSxLQUFKLENBQVUsSUFBVixFQUFnQixJQUFDLENBQUEsT0FBakIsRUFBMEIsSUFBQyxDQUFBLE9BQTNCO1dBRVo7RUFQSTs7Ozs7O0FBU1IsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"../util":175}],43:[function(require,module,exports){
exports.Factory = require('./factory');

exports.Primitive = require('./primitive');

exports.Types = require('./types');

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXGluZGV4LmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxwcmltaXRpdmVzXFxpbmRleC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxDQUFDLE9BQVIsR0FBcUIsT0FBQSxDQUFRLFdBQVI7O0FBQ3JCLE9BQU8sQ0FBQyxTQUFSLEdBQXFCLE9BQUEsQ0FBUSxhQUFSOztBQUNyQixPQUFPLENBQUMsS0FBUixHQUFxQixPQUFBLENBQVEsU0FBUiJ9

},{"./factory":42,"./primitive":44,"./types":72}],44:[function(require,module,exports){
var Binder, Model, Primitive,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

Model = require('../model');

Primitive = (function() {
  Primitive.Node = Model.Node;

  Primitive.Group = Model.Group;

  Primitive.model = Primitive.Node;

  Primitive.defaults = null;

  Primitive.traits = null;

  Primitive.props = null;

  Primitive.finals = null;

  Primitive.freeform = false;

  function Primitive(node1, _context, helpers) {
    this.node = node1;
    this._context = _context;
    this._renderables = this._context.renderables;
    this._attributes = this._context.attributes;
    this._shaders = this._context.shaders;
    this._overlays = this._context.overlays;
    this._animator = this._context.animator;
    this._types = this._attributes.types;
    this.node.controller = this;
    this.node.on('added', (function(_this) {
      return function(event) {
        return _this._added();
      };
    })(this));
    this.node.on('removed', (function(_this) {
      return function(event) {
        return _this._removed();
      };
    })(this));
    this.node.on('change', (function(_this) {
      return function(event) {
        if (_this._root) {
          return _this.change(event.changed, event.touched);
        }
      };
    })(this));
    this.reconfigure();
    this._get = this.node.get.bind(this.node);
    this._helpers = helpers(this, this.node.traits);
    this._handlers = {
      inherit: {},
      listen: [],
      watch: [],
      compute: []
    };
    this._root = this._parent = null;
    this.init();
  }

  Primitive.prototype.is = function(trait) {
    return this.traits.hash[trait];
  };

  Primitive.prototype.init = function() {};

  Primitive.prototype.make = function() {};

  Primitive.prototype.made = function() {};

  Primitive.prototype.unmake = function(rebuild) {};

  Primitive.prototype.unmade = function() {};

  Primitive.prototype.change = function(changed, touched, init) {};

  Primitive.prototype.refresh = function() {
    return this.change({}, {}, true);
  };

  Primitive.prototype.rebuild = function() {
    if (this._root) {
      this._removed(true);
      return this._added();
    }
  };

  Primitive.prototype.reconfigure = function(config) {
    if (config != null) {
      this.node.configure(config, this._attributes);
    }
    this.traits = this.node.traits;
    return this.props = this.node.props;
  };

  Primitive.prototype._added = function() {
    var e, ref, ref1, ref2;
    this._parent = (ref = this.node.parent) != null ? ref.controller : void 0;
    this._root = (ref1 = this.node.root) != null ? ref1.controller : void 0;
    this.node.clock = (ref2 = this._inherit('clock')) != null ? ref2 : this._root;
    try {
      try {
        this.make();
        this.refresh();
        return this.made();
      } catch (error) {
        e = error;
        this.node.print('warn');
        console.error(e);
        throw e;
      }
    } catch (error) {
      e = error;
      try {
        return this._removed();
      } catch (error) {}
    }
  };

  Primitive.prototype._removed = function(rebuild) {
    if (rebuild == null) {
      rebuild = false;
    }
    this.unmake(rebuild);
    this._unlisten();
    this._unattach();
    this._uncompute();
    this._root = null;
    this._parent = null;
    return this.unmade(rebuild);
  };

  Primitive.prototype._listen = function(object, type, method, self) {
    var i, len, o;
    if (self == null) {
      self = this;
    }
    if (object instanceof Array) {
      for (i = 0, len = object.length; i < len; i++) {
        o = object[i];
        return this.__listen(o, type, method, self);
      }
    }
    return this.__listen(object, type, method, self);
  };

  Primitive.prototype.__listen = function(object, type, method, self) {
    var handler;
    if (self == null) {
      self = this;
    }
    if (typeof object === 'string') {
      object = this._inherit(object);
    }
    if (object != null) {
      handler = method.bind(self);
      handler.node = this.node;
      object.on(type, handler);
      this._handlers.listen.push([object, type, handler]);
    }
    return object;
  };

  Primitive.prototype._unlisten = function() {
    var handler, i, len, object, ref, ref1, type;
    if (!this._handlers.listen.length) {
      return;
    }
    ref = this._handlers.listen;
    for (i = 0, len = ref.length; i < len; i++) {
      ref1 = ref[i], object = ref1[0], type = ref1[1], handler = ref1[2];
      object.off(type, handler);
    }
    return this._handlers.listen = [];
  };

  Primitive.prototype._inherit = function(trait) {
    var cached, ref;
    cached = this._handlers.inherit[trait];
    if (cached !== void 0) {
      return cached;
    }
    return this._handlers.inherit[trait] = (ref = this._parent) != null ? ref._find(trait != null ? trait : null) : void 0;
  };

  Primitive.prototype._find = function(trait) {
    var ref;
    if (this.is(trait)) {
      return this;
    }
    return (ref = this._parent) != null ? ref._find(trait) : void 0;
  };

  Primitive.prototype._uninherit = function() {
    return this._handlers.inherit = {};
  };

  Primitive.prototype._attach = function(selector, trait, method, self, start, optional, multiple) {
    var filter, flatten, map, nodes, resolve;
    if (self == null) {
      self = this;
    }
    if (start == null) {
      start = this;
    }
    if (optional == null) {
      optional = false;
    }
    if (multiple == null) {
      multiple = false;
    }
    filter = function(node) {
      if ((node != null) && indexOf.call(node.traits, trait) >= 0) {
        return node;
      }
    };
    map = function(node) {
      return node != null ? node.controller : void 0;
    };
    flatten = function(list) {
      var i, len, out, sub;
      if (list == null) {
        return list;
      }
      out = [];
      for (i = 0, len = list.length; i < len; i++) {
        sub = list[i];
        if (sub instanceof Array) {
          out = out.concat(sub);
        } else {
          out.push(sub);
        }
      }
      return out;
    };
    resolve = (function(_this) {
      return function(selector) {
        var discard, match, node, nodes, parent, previous, selection, watcher;
        if (typeof selector === 'object') {
          node = selector;
          if (node != null ? node._up : void 0) {
            selector = multiple ? node._targets : [node[0]];
            return selector;
          }
          if (node instanceof Array) {
            selector = multiple ? flatten(node.map(resolve)) : resolve(node[0]);
            return selector;
          }
          if (node instanceof Model.Node) {
            return [node];
          }
        } else if (typeof selector === 'string' && selector[0] === '<') {
          discard = 0;
          if (match = selector.match(/^<([0-9])+$/)) {
            discard = +match[1] - 1;
          }
          if (selector.match(/^<+$/)) {
            discard = +selector.length - 1;
          }
          nodes = [];
          previous = start.node;
          while (previous) {
            parent = previous.parent;
            if (!parent) {
              break;
            }
            previous = parent.children[previous.index - 1];
            if (!(previous || nodes.length)) {
              previous = parent;
            }
            node = null;
            if (filter(previous)) {
              node = previous;
            }
            if ((node != null) && discard-- <= 0) {
              nodes.push(node);
            }
            if (!multiple && nodes.length) {
              return nodes;
            }
          }
          if (multiple && nodes.length) {
            return nodes;
          }
        } else if (typeof selector === 'string') {
          watcher = method.bind(self);
          _this._handlers.watch.push(watcher);
          selection = _this._root.watch(selector, watcher);
          if (!multiple) {
            if (filter(selection[0])) {
              node = selection[0];
            }
            if (node != null) {
              return [node];
            }
          } else {
            nodes = selection.filter(filter);
            if (nodes.length) {
              return nodes;
            }
          }
        }
        if (!optional) {
          console.warn(_this.node.toMarkup());
          throw new Error((_this.node.toString()) + " - Could not find " + trait + " `" + selector + "`");
        }
        if (multiple) {
          return [];
        } else {
          return null;
        }
      };
    })(this);
    nodes = flatten(resolve(selector));
    if (multiple) {
      if (nodes != null) {
        return nodes.map(map);
      } else {
        return null;
      }
    } else {
      if (nodes != null) {
        return map(nodes[0]);
      } else {
        return null;
      }
    }
  };

  Primitive.prototype._unattach = function() {
    var i, len, ref, watcher;
    if (!this._handlers.watch.length) {
      return;
    }
    ref = this._handlers.watch;
    for (i = 0, len = ref.length; i < len; i++) {
      watcher = ref[i];
      if (watcher != null) {
        watcher.unwatch();
      }
    }
    return this._handlers.watch = [];
  };

  Primitive.prototype._compute = function(key, expr) {
    this._handlers.compute.push(key);
    return this.node.bind(key, expr, true);
  };

  Primitive.prototype._uncompute = function() {
    var i, key, len, ref;
    if (!this._handlers.compute.length) {
      return;
    }
    ref = this._handlers.compute;
    for (i = 0, len = ref.length; i < len; i++) {
      key = ref[i];
      this.node.unbind(key, true);
    }
    return this._handlers.compute = [];
  };

  return Primitive;

})();

Binder = require('../util/binder');

Binder.apply(Primitive.prototype);

module.exports = Primitive;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,

},{"../model":34,"../util/binder":171}],45:[function(require,module,exports){
var Group, Parent,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Parent = require('./parent');

Group = (function(superClass) {
  extend(Group, superClass);

  function Group() {
    return Group.__super__.constructor.apply(this, arguments);
  }

  Group.traits = ['node', 'object', 'entity', 'visible', 'active'];

  Group.prototype.make = function() {
    this._helpers.visible.make();
    return this._helpers.active.make();
  };

  Group.prototype.unmake = function() {
    this._helpers.visible.unmake();
    return this._helpers.active.unmake();
  };

  return Group;

})(Parent);

module.exports = Group;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxiYXNlXFxncm91cC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccHJpbWl0aXZlc1xcdHlwZXNcXGJhc2VcXGdyb3VwLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLGFBQUE7RUFBQTs7O0FBQUEsTUFBQSxHQUFTLE9BQUEsQ0FBUSxVQUFSOztBQUVIOzs7Ozs7O0VBQ0osS0FBQyxDQUFBLE1BQUQsR0FBVSxDQUFDLE1BQUQsRUFBUyxRQUFULEVBQW1CLFFBQW5CLEVBQTZCLFNBQTdCLEVBQXdDLFFBQXhDOztrQkFFVixJQUFBLEdBQU0sU0FBQTtJQUNKLElBQUMsQ0FBQSxRQUFRLENBQUMsT0FBTyxDQUFDLElBQWxCLENBQUE7V0FDQSxJQUFDLENBQUEsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFqQixDQUFBO0VBRkk7O2tCQUlOLE1BQUEsR0FBUSxTQUFBO0lBQ04sSUFBQyxDQUFBLFFBQVEsQ0FBQyxPQUFPLENBQUMsTUFBbEIsQ0FBQTtXQUNBLElBQUMsQ0FBQSxRQUFRLENBQUMsTUFBTSxDQUFDLE1BQWpCLENBQUE7RUFGTTs7OztHQVBVOztBQVdwQixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"./parent":47}],46:[function(require,module,exports){
var Inherit, Parent,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

Parent = require('./parent');

Inherit = (function(superClass) {
  extend(Inherit, superClass);

  function Inherit() {
    return Inherit.__super__.constructor.apply(this, arguments);
  }

  Inherit.traits = ['node', 'bind'];

  Inherit.prototype.make = function() {
    return this._helpers.bind.make([
      {
        to: 'inherit.source',
        trait: 'node'
      }
    ]);
  };

  Inherit.prototype.unmake = function() {
    return this._helpers.bind.unmake();
  };

  Inherit.prototype._find = function(trait) {
    if (this.bind.source && (indexOf.call(this.props.traits, trait) >= 0)) {
      return this.bind.source._inherit(trait);
    }
    return Inherit.__super__._find.apply(this, arguments);
  };

  return Inherit;

})(Parent);

module.exports = Inherit;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxiYXNlXFxpbmhlcml0LmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxwcmltaXRpdmVzXFx0eXBlc1xcYmFzZVxcaW5oZXJpdC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxlQUFBO0VBQUE7Ozs7QUFBQSxNQUFBLEdBQVMsT0FBQSxDQUFRLFVBQVI7O0FBRUg7Ozs7Ozs7RUFDSixPQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLE1BQVQ7O29CQUVWLElBQUEsR0FBTSxTQUFBO1dBRUosSUFBQyxDQUFBLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBZixDQUFvQjtNQUNsQjtRQUFFLEVBQUEsRUFBSSxnQkFBTjtRQUF3QixLQUFBLEVBQU8sTUFBL0I7T0FEa0I7S0FBcEI7RUFGSTs7b0JBTU4sTUFBQSxHQUFRLFNBQUE7V0FDTixJQUFDLENBQUEsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFmLENBQUE7RUFETTs7b0JBR1IsS0FBQSxHQUFPLFNBQUMsS0FBRDtJQUNMLElBQUcsSUFBQyxDQUFBLElBQUksQ0FBQyxNQUFOLElBQWlCLENBQUMsYUFBUyxJQUFDLENBQUEsS0FBSyxDQUFDLE1BQWhCLEVBQUEsS0FBQSxNQUFELENBQXBCO0FBQ0UsYUFBTyxJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFiLENBQXNCLEtBQXRCLEVBRFQ7O1dBRUEsb0NBQUEsU0FBQTtFQUhLOzs7O0dBWmE7O0FBaUJ0QixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"./parent":47}],47:[function(require,module,exports){
var Parent, Primitive,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Primitive = require('../../primitive');

Parent = (function(superClass) {
  extend(Parent, superClass);

  function Parent() {
    return Parent.__super__.constructor.apply(this, arguments);
  }

  Parent.model = Primitive.Group;

  Parent.traits = ['node'];

  return Parent;

})(Primitive);

module.exports = Parent;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxiYXNlXFxwYXJlbnQuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxiYXNlXFxwYXJlbnQuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsaUJBQUE7RUFBQTs7O0FBQUEsU0FBQSxHQUFZLE9BQUEsQ0FBUSxpQkFBUjs7QUFFTjs7Ozs7OztFQUNKLE1BQUMsQ0FBQSxLQUFELEdBQVMsU0FBUyxDQUFDOztFQUNuQixNQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRDs7OztHQUZTOztBQUtyQixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"../../primitive":44}],48:[function(require,module,exports){
var Parent, Root, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Parent = require('./parent');

Util = require('../../../util');

Root = (function(superClass) {
  extend(Root, superClass);

  function Root() {
    return Root.__super__.constructor.apply(this, arguments);
  }

  Root.traits = ['node', 'root', 'clock', 'scene', 'vertex', 'unit'];

  Root.prototype.init = function() {
    this.size = null;
    this.cameraEvent = {
      type: 'root.camera'
    };
    this.preEvent = {
      type: 'root.pre'
    };
    this.updateEvent = {
      type: 'root.update'
    };
    this.renderEvent = {
      type: 'root.render'
    };
    this.postEvent = {
      type: 'root.post'
    };
    this.clockEvent = {
      type: 'clock.tick'
    };
    return this.camera = null;
  };

  Root.prototype.make = function() {
    return this._helpers.unit.make();
  };

  Root.prototype.unmake = function() {
    return this._helpers.unit.unmake();
  };

  Root.prototype.change = function(changed, touched, init) {
    if (changed['root.camera'] || init) {
      this._unattach();
      this._attach(this.props.camera, 'camera', this.setCamera, this, this, true);
      return this.setCamera();
    }
  };

  Root.prototype.adopt = function(renderable) {
    var i, len, object, ref, results;
    ref = renderable.renders;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      object = ref[i];
      results.push(this._context.scene.add(object));
    }
    return results;
  };

  Root.prototype.unadopt = function(renderable) {
    var i, len, object, ref, results;
    ref = renderable.renders;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      object = ref[i];
      results.push(this._context.scene.remove(object));
    }
    return results;
  };

  Root.prototype.select = function(selector) {
    return this.node.model.select(selector);
  };

  Root.prototype.watch = function(selector, handler) {
    return this.node.model.watch(selector, handler);
  };

  Root.prototype.unwatch = function(handler) {
    return this.node.model.unwatch(handler);
  };

  Root.prototype.resize = function(size) {
    this.size = size;
    return this.trigger({
      type: 'root.resize',
      size: size
    });
  };

  Root.prototype.getSize = function() {
    return this.size;
  };

  Root.prototype.getSpeed = function() {
    return this.props.speed;
  };

  Root.prototype.getUnit = function() {
    return this._helpers.unit.get();
  };

  Root.prototype.getUnitUniforms = function() {
    return this._helpers.unit.uniforms();
  };

  Root.prototype.pre = function() {
    this.getCamera().updateProjectionMatrix();
    this.trigger(this.clockEvent);
    return this.trigger(this.preEvent);
  };

  Root.prototype.update = function() {
    return this.trigger(this.updateEvent);
  };

  Root.prototype.render = function() {
    return this.trigger(this.renderEvent);
  };

  Root.prototype.post = function() {
    return this.trigger(this.postEvent);
  };

  Root.prototype.setCamera = function() {
    var camera, ref;
    camera = (ref = this.select(this.props.camera)[0]) != null ? ref.controller : void 0;
    if (this.camera !== camera) {
      this.camera = camera;
      return this.trigger({
        type: 'root.camera'
      });
    }
  };

  Root.prototype.getCamera = function() {
    var ref, ref1;
    return (ref = (ref1 = this.camera) != null ? ref1.getCamera() : void 0) != null ? ref : this._context.defaultCamera;
  };

  Root.prototype.getTime = function() {
    return this._context.time;
  };

  Root.prototype.vertex = function(shader, pass) {
    if (pass === 2) {
      return shader.pipe('view.position');
    }
    if (pass === 3) {
      return shader.pipe('root.position');
    }
    return shader;
  };

  return Root;

})(Parent);

module.exports = Root;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxiYXNlXFxyb290LmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxwcmltaXRpdmVzXFx0eXBlc1xcYmFzZVxccm9vdC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxrQkFBQTtFQUFBOzs7QUFBQSxNQUFBLEdBQVMsT0FBQSxDQUFRLFVBQVI7O0FBQ1QsSUFBQSxHQUFTLE9BQUEsQ0FBUSxlQUFSOztBQUVIOzs7Ozs7O0VBQ0osSUFBQyxDQUFBLE1BQUQsR0FBVSxDQUFDLE1BQUQsRUFBUyxNQUFULEVBQWlCLE9BQWpCLEVBQTBCLE9BQTFCLEVBQW1DLFFBQW5DLEVBQTZDLE1BQTdDOztpQkFFVixJQUFBLEdBQU0sU0FBQTtJQUNKLElBQUMsQ0FBQSxJQUFELEdBQVE7SUFFUixJQUFDLENBQUEsV0FBRCxHQUFlO01BQUEsSUFBQSxFQUFNLGFBQU47O0lBQ2YsSUFBQyxDQUFBLFFBQUQsR0FBZTtNQUFBLElBQUEsRUFBTSxVQUFOOztJQUNmLElBQUMsQ0FBQSxXQUFELEdBQWU7TUFBQSxJQUFBLEVBQU0sYUFBTjs7SUFDZixJQUFDLENBQUEsV0FBRCxHQUFlO01BQUEsSUFBQSxFQUFNLGFBQU47O0lBQ2YsSUFBQyxDQUFBLFNBQUQsR0FBZTtNQUFBLElBQUEsRUFBTSxXQUFOOztJQUVmLElBQUMsQ0FBQSxVQUFELEdBQWU7TUFBQSxJQUFBLEVBQU0sWUFBTjs7V0FFZixJQUFDLENBQUEsTUFBRCxHQUFVO0VBWE47O2lCQWFOLElBQUEsR0FBUSxTQUFBO1dBQU0sSUFBQyxDQUFBLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBZixDQUFBO0VBQU47O2lCQUNSLE1BQUEsR0FBUSxTQUFBO1dBQU0sSUFBQyxDQUFBLFFBQVEsQ0FBQyxJQUFJ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

},{"../../../util":175,"./parent":47}],49:[function(require,module,exports){
var Primitive, Source, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Primitive = require('../../primitive');

Util = require('../../../util');

Source = (function(superClass) {
  extend(Source, superClass);

  function Source() {
    return Source.__super__.constructor.apply(this, arguments);
  }

  Source.traits = ['node', 'source', 'index'];

  Source.prototype.made = function() {
    return this.trigger({
      type: 'source.rebuild'
    });
  };

  Source.prototype.indexShader = function(shader) {
    return shader.pipe(Util.GLSL.identity('vec4'));
  };

  Source.prototype.sourceShader = function(shader) {
    return shader.pipe(Util.GLSL.identity('vec4'));
  };

  Source.prototype.getDimensions = function() {
    return {
      items: 1,
      width: 1,
      height: 1,
      depth: 1
    };
  };

  Source.prototype.getActiveDimensions = function() {
    return this.getDimensions();
  };

  Source.prototype.getIndexDimensions = function() {
    return this.getActiveDimensions();
  };

  Source.prototype.getFutureDimensions = function() {
    return this.getActiveDimensions();
  };

  return Source;

})(Primitive);

module.exports = Source;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxiYXNlXFxzb3VyY2UuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxiYXNlXFxzb3VyY2UuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsdUJBQUE7RUFBQTs7O0FBQUEsU0FBQSxHQUFZLE9BQUEsQ0FBUSxpQkFBUjs7QUFDWixJQUFBLEdBQVksT0FBQSxDQUFRLGVBQVI7O0FBRU47Ozs7Ozs7RUFDSixNQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLFFBQVQsRUFBbUIsT0FBbkI7O21CQUVWLElBQUEsR0FBTSxTQUFBO1dBRUosSUFBQyxDQUFBLE9BQUQsQ0FDRTtNQUFBLElBQUEsRUFBTSxnQkFBTjtLQURGO0VBRkk7O21CQUtOLFdBQUEsR0FBYyxTQUFDLE1BQUQ7V0FBWSxNQUFNLENBQUMsSUFBUCxDQUFZLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBVixDQUFtQixNQUFuQixDQUFaO0VBQVo7O21CQUNkLFlBQUEsR0FBYyxTQUFDLE1BQUQ7V0FBWSxNQUFNLENBQUMsSUFBUCxDQUFZLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBVixDQUFtQixNQUFuQixDQUFaO0VBQVo7O21CQUVkLGFBQUEsR0FBZSxTQUFBO1dBQ2I7TUFBQSxLQUFBLEVBQVEsQ0FBUjtNQUNBLEtBQUEsRUFBUSxDQURSO01BRUEsTUFBQSxFQUFRLENBRlI7TUFHQSxLQUFBLEVBQVEsQ0FIUjs7RUFEYTs7bUJBTWYsbUJBQUEsR0FBcUIsU0FBQTtXQUFNLElBQUMsQ0FBQSxhQUFELENBQUE7RUFBTjs7bUJBRXJCLGtCQUFBLEdBQXFCLFNBQUE7V0FBTSxJQUFDLENBQUEsbUJBQUQsQ0FBQTtFQUFOOzttQkFDckIsbUJBQUEsR0FBcUIsU0FBQTtXQUFNLElBQUMsQ0FBQSxtQkFBRCxDQUFBO0VBQU47Ozs7R0FwQkY7O0FBc0JyQixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"../../../util":175,"../../primitive":44}],50:[function(require,module,exports){
var Parent, Unit, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Parent = require('./parent');

Util = require('../../../util');

Unit = (function(superClass) {
  extend(Unit, superClass);

  function Unit() {
    return Unit.__super__.constructor.apply(this, arguments);
  }

  Unit.traits = ['node', 'unit'];

  Unit.prototype.make = function() {
    return this._helpers.unit.make();
  };

  Unit.prototype.unmake = function() {
    return this._helpers.unit.unmake();
  };

  Unit.prototype.getUnit = function() {
    return this._helpers.unit.get();
  };

  Unit.prototype.getUnitUniforms = function() {
    return this._helpers.unit.uniforms();
  };

  return Unit;

})(Parent);

module.exports = Unit;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxiYXNlXFx1bml0LmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxwcmltaXRpdmVzXFx0eXBlc1xcYmFzZVxcdW5pdC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxrQkFBQTtFQUFBOzs7QUFBQSxNQUFBLEdBQVMsT0FBQSxDQUFRLFVBQVI7O0FBQ1QsSUFBQSxHQUFTLE9BQUEsQ0FBUSxlQUFSOztBQUVIOzs7Ozs7O0VBQ0osSUFBQyxDQUFBLE1BQUQsR0FBVSxDQUFDLE1BQUQsRUFBUyxNQUFUOztpQkFFVixJQUFBLEdBQVEsU0FBQTtXQUFNLElBQUMsQ0FBQSxRQUFRLENBQUMsSUFBSSxDQUFDLElBQWYsQ0FBQTtFQUFOOztpQkFDUixNQUFBLEdBQVEsU0FBQTtXQUFNLElBQUMsQ0FBQSxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQWYsQ0FBQTtFQUFOOztpQkFFUixPQUFBLEdBQWlCLFNBQUE7V0FBTSxJQUFDLENBQUEsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFmLENBQUE7RUFBTjs7aUJBQ2pCLGVBQUEsR0FBaUIsU0FBQTtXQUFNLElBQUMsQ0FBQSxRQUFRLENBQUMsSUFBSSxDQUFDLFFBQWYsQ0FBQTtFQUFOOzs7O0dBUEE7O0FBU25CLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{"../../../util":175,"./parent":47}],51:[function(require,module,exports){
var Camera, Primitive, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Primitive = require('../../primitive');

Util = require('../../../util');

Camera = (function(superClass) {
  extend(Camera, superClass);

  function Camera() {
    return Camera.__super__.constructor.apply(this, arguments);
  }

  Camera.traits = ['node', 'camera'];

  Camera.prototype.init = function() {};

  Camera.prototype.make = function() {
    var camera;
    camera = this._context.defaultCamera;
    this.camera = this.props.proxy ? camera : camera.clone();
    this.euler = new THREE.Euler;
    return this.quat = new THREE.Quaternion;
  };

  Camera.prototype.unmake = function() {};

  Camera.prototype.getCamera = function() {
    return this.camera;
  };

  Camera.prototype.change = function(changed, touched, init) {
    var aspect, fov, lookAt, position, quaternion, ref, rotation, up;
    if (changed['camera.position'] || changed['camera.quaternion'] || changed['camera.rotation'] || changed['camera.lookAt'] || changed['camera.up'] || changed['camera.fov'] || init) {
      ref = this.props, position = ref.position, quaternion = ref.quaternion, rotation = ref.rotation, lookAt = ref.lookAt, up = ref.up, fov = ref.fov, aspect = ref.aspect;
      if (position != null) {
        this.camera.position.copy(position);
      }
      if ((quaternion != null) || (rotation != null) || (lookAt != null)) {
        if (lookAt != null) {
          this.camera.lookAt(lookAt);
        } else {
          this.camera.quaternion.set(0, 0, 0, 1);
        }
        if (rotation != null) {
          this.euler.setFromVector3(rotation, Util.Three.swizzleToEulerOrder(this.props.eulerOrder));
          this.quat.setFromEuler(this.euler);
          this.camera.quaternion.multiply(this.quat);
        }
        if (quaternion != null) {
          this.camera.quaternion.multiply(quaternion);
        }
      }
      if ((fov != null) && (this.camera.fov != null)) {
        this.camera.fov = fov;
      }
      if (up != null) {
        this.camera.up.copy(up);
      }
      return this.camera.updateMatrix();
    }
  };

  return Camera;

})(Primitive);

module.exports = Camera;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxjYW1lcmFcXGNhbWVyYS5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccHJpbWl0aXZlc1xcdHlwZXNcXGNhbWVyYVxcY2FtZXJhLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLHVCQUFBO0VBQUE7OztBQUFBLFNBQUEsR0FBWSxPQUFBLENBQVEsaUJBQVI7O0FBQ1osSUFBQSxHQUFPLE9BQUEsQ0FBUSxlQUFSOztBQUVEOzs7Ozs7O0VBQ0osTUFBQyxDQUFBLE1BQUQsR0FBVSxDQUFDLE1BQUQsRUFBUyxRQUFUOzttQkFFVixJQUFBLEdBQU0sU0FBQSxHQUFBOzttQkFFTixJQUFBLEdBQU0sU0FBQTtBQUNKLFFBQUE7SUFBQSxNQUFBLEdBQVMsSUFBQyxDQUFBLFFBQVEsQ0FBQztJQUNuQixJQUFDLENBQUEsTUFBRCxHQUFhLElBQUMsQ0FBQSxLQUFLLENBQUMsS0FBVixHQUFxQixNQUFyQixHQUFpQyxNQUFNLENBQUMsS0FBUCxDQUFBO0lBRTNDLElBQUMsQ0FBQSxLQUFELEdBQVMsSUFBSSxLQUFLLENBQUM7V0FDbkIsSUFBQyxDQUFBLElBQUQsR0FBUSxJQUFJLEtBQUssQ0FBQztFQUxkOzttQkFPTixNQUFBLEdBQVEsU0FBQSxHQUFBOzttQkFFUixTQUFBLEdBQVcsU0FBQTtXQUFNLElBQUMsQ0FBQTtFQUFQOzttQkFFWCxNQUFBLEdBQVEsU0FBQyxPQUFELEVBQVUsT0FBVixFQUFtQixJQUFuQjtBQUVOLFFBQUE7SUFBQSxJQUFHLE9BQVEsQ0FBQSxpQkFBQSxDQUFSLElBQ0EsT0FBUSxDQUFBLG1CQUFBLENBRFIsSUFFQSxPQUFRLENBQUEsaUJBQUEsQ0FGUixJQUdBLE9BQVEsQ0FBQSxlQUFBLENBSFIsSUFJQSxPQUFRLENBQUEsV0FBQSxDQUpSLElBS0EsT0FBUSxDQUFBLFlBQUEsQ0FMUixJQU1BLElBTkg7TUFRRSxNQUE0RCxJQUFDLENBQUEsS0FBN0QsRUFBQyx1QkFBRCxFQUFXLDJCQUFYLEVBQXVCLHVCQUF2QixFQUFpQyxtQkFBakMsRUFBeUMsV0FBekMsRUFBNkMsYUFBN0MsRUFBa0Q7TUFHbEQsSUFBRyxnQkFBSDtRQUNFLElBQUMsQ0FBQSxNQUFNLENBQUMsUUFBUSxDQUFDLElBQWpCLENBQXdCLFFBQXhCLEVBREY7O01BR0EsSUFBRyxvQkFBQSxJQUFlLGtCQUFmLElBQTRCLGdCQUEvQjtRQUNFLElBQUcsY0FBSDtVQUNFLElBQUMsQ0FBQSxNQUFNLENBQUMsTUFBUixDQUFzQixNQUF0QixFQURGO1NBQUEsTUFBQTtVQUdFLElBQUMsQ0FBQSxNQUFNLENBQUMsVUFBVSxDQUFDLEdBQW5CLENBQXVCLENBQXZCLEVBQTBCLENBQTFCLEVBQTZCLENBQTdCLEVBQWdDLENBQWhDLEVBSEY7O1FBS0EsSUFBRyxnQkFBSDtVQUNFLElBQUMsQ0FBQSxLQUFLLENBQUMsY0FBUCxDQUFzQixRQUF0QixFQUFnQyxJQUFJLENBQUMsS0FBSyxDQUFDLG1CQUFYLENBQStCLElBQUMsQ0FBQSxLQUFLLENBQUMsVUFBdEMsQ0FBaEM7VUFDQSxJQUFDLENBQUEsSUFBSyxDQUFDLFlBQVAsQ0FBb0IsSUFBQyxDQUFBLEtBQXJCO1VBQ0EsSUFBQyxDQUFBLE1BQU0sQ0FBQyxVQUFVLENBQUMsUUFBbkIsQ0FBNEIsSUFBQyxDQUFBLElBQTdCLEVBSEY7O1FBS0EsSUFBRyxrQkFBSDtVQUNFLElBQUMsQ0FBQSxNQUFNLENBQUMsVUFBVSxDQUFDLFFBQW5CLENBQTRCLFVBQTVCLEVBREY7U0FYRjs7TUFjQSxJQUFHLGFBQUEsSUFBUyx5QkFBWjtRQUNFLElBQUMsQ0FBQSxNQUFNLENBQUMsR0FBUixHQUFjLElBRGhCOztNQUdBLElBQUcsVUFBSDtRQUNFLElBQUMsQ0FBQSxNQUFNLENBQUMsRUFBRSxDQUFDLElBQVgsQ0FBZ0IsRUFBaEIsRUFERjs7YUFHQSxJQUFDLENBQUEsTUFBTSxDQUFDLFlBQVIsQ0FBQSxFQWxDRjs7RUFGTTs7OztHQWhCVzs7QUFzRHJCLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{"../../../util":175,"../../primitive":44}],52:[function(require,module,exports){
var Classes;

Classes = {
  axis: require('./draw/axis'),
  face: require('./draw/face'),
  grid: require('./draw/grid'),
  line: require('./draw/line'),
  point: require('./draw/point'),
  strip: require('./draw/strip'),
  surface: require('./draw/surface'),
  ticks: require('./draw/ticks'),
  vector: require('./draw/vector'),
  view: require('./view/view'),
  cartesian: require('./view/cartesian'),
  cartesian4: require('./view/cartesian4'),
  polar: require('./view/polar'),
  spherical: require('./view/spherical'),
  stereographic: require('./view/stereographic'),
  stereographic4: require('./view/stereographic4'),
  transform: require('./transform/transform3'),
  transform4: require('./transform/transform4'),
  vertex: require('./transform/vertex'),
  fragment: require('./transform/fragment'),
  layer: require('./transform/layer'),
  mask: require('./transform/mask'),
  array: require('./data/array'),
  interval: require('./data/interval'),
  matrix: require('./data/matrix'),
  area: require('./data/area'),
  voxel: require('./data/voxel'),
  volume: require('./data/volume'),
  scale: require('./data/scale'),
  html: require('./overlay/html'),
  dom: require('./overlay/dom'),
  text: require('./text/text'),
  format: require('./text/format'),
  label: require('./text/label'),
  retext: require('./text/retext'),
  clamp: require('./operator/clamp'),
  grow: require('./operator/grow'),
  join: require('./operator/join'),
  lerp: require('./operator/lerp'),
  memo: require('./operator/memo'),
  readback: require('./operator/readback'),
  resample: require('./operator/resample'),
  repeat: require('./operator/repeat'),
  swizzle: require('./operator/swizzle'),
  spread: require('./operator/spread'),
  split: require('./operator/split'),
  slice: require('./operator/slice'),
  subdivide: require('./operator/subdivide'),
  transpose: require('./operator/transpose'),
  group: require('./base/group'),
  inherit: require('./base/inherit'),
  root: require('./base/root'),
  unit: require('./base/unit'),
  shader: require('./shader/shader'),
  camera: require('./camera/camera'),
  rtt: require('./rtt/rtt'),
  compose: require('./rtt/compose'),
  clock: require('./time/clock'),
  now: require('./time/now'),
  move: require('./present/move'),
  play: require('./present/play'),
  present: require('./present/present'),
  reveal: require('./present/reveal'),
  slide: require('./present/slide'),
  step: require('./present/step')
};

module.exports = Classes;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxjbGFzc2VzLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxwcmltaXRpdmVzXFx0eXBlc1xcY2xhc3Nlcy5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQTs7QUFBQSxPQUFBLEdBQ0U7RUFBQSxJQUFBLEVBQW1CLE9BQUEsQ0FBUSxhQUFSLENBQW5CO0VBQ0EsSUFBQSxFQUFtQixPQUFBLENBQVEsYUFBUixDQURuQjtFQUVBLElBQUEsRUFBbUIsT0FBQSxDQUFRLGFBQVIsQ0FGbkI7RUFHQSxJQUFBLEVBQW1CLE9BQUEsQ0FBUSxhQUFSLENBSG5CO0VBSUEsS0FBQSxFQUFtQixPQUFBLENBQVEsY0FBUixDQUpuQjtFQUtBLEtBQUEsRUFBbUIsT0FBQSxDQUFRLGNBQVIsQ0FMbkI7RUFNQSxPQUFBLEVBQW1CLE9BQUEsQ0FBUSxnQkFBUixDQU5uQjtFQU9BLEtBQUEsRUFBbUIsT0FBQSxDQUFRLGNBQVIsQ0FQbkI7RUFRQSxNQUFBLEVBQW1CLE9BQUEsQ0FBUSxlQUFSLENBUm5CO0VBVUEsSUFBQSxFQUFtQixPQUFBLENBQVEsYUFBUixDQVZuQjtFQVdBLFNBQUEsRUFBbUIsT0FBQSxDQUFRLGtCQUFSLENBWG5CO0VBWUEsVUFBQSxFQUFtQixPQUFBLENBQVEsbUJBQVIsQ0FabkI7RUFhQSxLQUFBLEVBQW1CLE9BQUEsQ0FBUSxjQUFSLENBYm5CO0VBY0EsU0FBQSxFQUFtQixPQUFBLENBQVEsa0JBQVIsQ0FkbkI7RUFlQSxhQUFBLEVBQW1CLE9BQUEsQ0FBUSxzQkFBUixDQWZuQjtFQWdCQSxjQUFBLEVBQW1CLE9BQUEsQ0FBUSx1QkFBUixDQWhCbkI7RUFrQkEsU0FBQSxFQUFtQixPQUFBLENBQVEsd0JBQVIsQ0FsQm5CO0VBbUJB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

},{"./base/group":45,"./base/inherit":46,"./base/root":48,"./base/unit":50,"./camera/camera":51,"./data/area":53,"./data/array":54,"./data/interval":57,"./data/matrix":58,"./data/scale":59,"./data/volume":60,"./data/voxel":61,"./draw/axis":62,"./draw/face":63,"./draw/grid":64,"./draw/line":65,"./draw/point":66,"./draw/strip":67,"./draw/surface":68,"./draw/ticks":69,"./draw/vector":70,"./operator/clamp":73,"./operator/grow":74,"./operator/join":75,"./operator/lerp":76,"./operator/memo":77,"./operator/readback":79,"./operator/repeat":80,"./operator/resample":81,"./operator/slice":82,"./operator/split":83,"./operator/spread":84,"./operator/subdivide":85,"./operator/swizzle":86,"./operator/transpose":87,"./overlay/dom":88,"./overlay/html":89,"./present/move":90,"./present/play":91,"./present/present":92,"./present/reveal":93,"./present/slide":94,"./present/step":95,"./rtt/compose":98,"./rtt/rtt":99,"./shader/shader":100,"./text/format":101,"./text/label":102,"./text/retext":103,"./text/text":104,"./time/clock":105,"./time/now":106,"./transform/fragment":108,"./transform/layer":109,"./transform/mask":110,"./transform/transform3":112,"./transform/transform4":113,"./transform/vertex":114,"./view/cartesian":116,"./view/cartesian4":117,"./view/polar":118,"./view/spherical":119,"./view/stereographic":120,"./view/stereographic4":121,"./view/view":122}],53:[function(require,module,exports){
var Area, Matrix, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Matrix = require('./matrix');

Util = require('../../../util');

Area = (function(superClass) {
  extend(Area, superClass);

  function Area() {
    return Area.__super__.constructor.apply(this, arguments);
  }

  Area.traits = ['node', 'buffer', 'active', 'data', 'source', 'index', 'matrix', 'texture', 'raw', 'span:x', 'span:y', 'area', 'sampler:x', 'sampler:y'];

  Area.prototype.updateSpan = function() {
    var centeredX, centeredY, dimensions, height, inverseX, inverseY, padX, padY, rangeX, rangeY, spanX, spanY, width;
    dimensions = this.props.axes;
    width = this.props.width;
    height = this.props.height;
    centeredX = this.props.centeredX;
    centeredY = this.props.centeredY;
    padX = this.props.paddingX;
    padY = this.props.paddingY;
    rangeX = this._helpers.span.get('x.', dimensions[0]);
    rangeY = this._helpers.span.get('y.', dimensions[1]);
    this.aX = rangeX.x;
    this.aY = rangeY.x;
    spanX = rangeX.y - rangeX.x;
    spanY = rangeY.y - rangeY.x;
    width += padX * 2;
    height += padY * 2;
    if (centeredX) {
      inverseX = 1 / Math.max(1, width);
      this.aX += spanX * inverseX / 2;
    } else {
      inverseX = 1 / Math.max(1, width - 1);
    }
    if (centeredY) {
      inverseY = 1 / Math.max(1, height);
      this.aY += spanY * inverseY / 2;
    } else {
      inverseY = 1 / Math.max(1, height - 1);
    }
    this.bX = spanX * inverseX;
    this.bY = spanY * inverseY;
    this.aX += padX * this.bX;
    return this.aY += padY * this.bY;
  };

  Area.prototype.callback = function(callback) {
    this.updateSpan();
    if (this.last === callback) {
      return this._callback;
    }
    this.last = callback;
    if (callback.length <= 5) {
      return this._callback = (function(_this) {
        return function(emit, i, j) {
          var x, y;
          x = _this.aX + _this.bX * i;
          y = _this.aY + _this.bY * j;
          return callback(emit, x, y, i, j);
        };
      })(this);
    } else {
      return this._callback = (function(_this) {
        return function(emit, i, j) {
          var x, y;
          x = _this.aX + _this.bX * i;
          y = _this.aY + _this.bY * j;
          return callback(emit, x, y, i, j, _this.bufferClock, _this.bufferStep);
        };
      })(this);
    }
  };

  Area.prototype.make = function() {
    Area.__super__.make.apply(this, arguments);
    this._helpers.span.make();
    return this._listen(this, 'span.range', this.updateSpan);
  };

  Area.prototype.unmake = function() {
    Area.__super__.unmake.apply(this, arguments);
    return this._helpers.span.unmake();
  };

  return Area;

})(Matrix);

module.exports = Area;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxkYXRhXFxhcmVhLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxwcmltaXRpdmVzXFx0eXBlc1xcZGF0YVxcYXJlYS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxrQkFBQTtFQUFBOzs7QUFBQSxNQUFBLEdBQVMsT0FBQSxDQUFRLFVBQVI7O0FBQ1QsSUFBQSxHQUFPLE9BQUEsQ0FBUSxlQUFSOztBQUVEOzs7Ozs7O0VBQ0osSUFBQyxDQUFBLE1BQUQsR0FBVSxDQUFDLE1BQUQsRUFBUyxRQUFULEVBQW1CLFFBQW5CLEVBQTZCLE1BQTdCLEVBQXFDLFFBQXJDLEVBQStDLE9BQS9DLEVBQXdELFFBQXhELEVBQWtFLFNBQWxFLEVBQTZFLEtBQTdFLEVBQW9GLFFBQXBGLEVBQThGLFFBQTlGLEVBQXdHLE1BQXhHLEVBQWdILFdBQWhILEVBQTZILFdBQTdIOztpQkFFVixVQUFBLEdBQVksU0FBQTtBQUNWLFFBQUE7SUFBQSxVQUFBLEdBQWEsSUFBQyxDQUFBLEtBQUssQ0FBQztJQUNwQixLQUFBLEdBQWEsSUFBQyxDQUFBLEtBQUssQ0FBQztJQUNwQixNQUFBLEdBQWEsSUFBQyxDQUFBLEtBQUssQ0FBQztJQUVwQixTQUFBLEdBQWEsSUFBQyxDQUFBLEtBQUssQ0FBQztJQUNwQixTQUFBLEdBQWEsSUFBQyxDQUFBLEtBQUssQ0FBQztJQUVwQixJQUFBLEdBQWEsSUFBQyxDQUFBLEtBQUssQ0FBQztJQUNwQixJQUFBLEdBQWEsSUFBQyxDQUFBLEtBQUssQ0FBQztJQUVwQixNQUFBLEdBQWEsSUFBQyxDQUFBLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBZixDQUFtQixJQUFuQixFQUF5QixVQUFXLENBQUEsQ0FBQSxDQUFwQztJQUNiLE1B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

},{"../../../util":175,"./matrix":58}],54:[function(require,module,exports){
var Array_, Buffer, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Buffer = require('./buffer');

Util = require('../../../util');

Array_ = (function(superClass) {
  extend(Array_, superClass);

  function Array_() {
    return Array_.__super__.constructor.apply(this, arguments);
  }

  Array_.traits = ['node', 'buffer', 'active', 'data', 'source', 'index', 'array', 'texture', 'raw'];

  Array_.prototype.init = function() {
    this.buffer = this.spec = null;
    this.space = {
      width: 0,
      history: 0
    };
    this.used = {
      width: 0
    };
    this.storage = 'arrayBuffer';
    this.passthrough = function(emit, x) {
      return emit(x, 0, 0, 0);
    };
    return Array_.__super__.init.apply(this, arguments);
  };

  Array_.prototype.sourceShader = function(shader) {
    var dims;
    dims = this.getDimensions();
    this.alignShader(dims, shader);
    return this.buffer.shader(shader);
  };

  Array_.prototype.getDimensions = function() {
    return {
      items: this.items,
      width: this.space.width,
      height: this.space.history,
      depth: 1
    };
  };

  Array_.prototype.getActiveDimensions = function() {
    return {
      items: this.items,
      width: this.used.width,
      height: this.buffer.getFilled(),
      depth: 1
    };
  };

  Array_.prototype.getFutureDimensions = function() {
    return {
      items: this.items,
      width: this.used.width,
      height: this.space.history,
      depth: 1
    };
  };

  Array_.prototype.getRawDimensions = function() {
    return {
      items: this.items,
      width: space.width,
      height: 1,
      depth: 1
    };
  };

  Array_.prototype.make = function() {
    var channels, data, dims, history, items, magFilter, minFilter, ref, ref1, ref2, reserve, space, type, width;
    Array_.__super__.make.apply(this, arguments);
    minFilter = (ref = this.minFilter) != null ? ref : this.props.minFilter;
    magFilter = (ref1 = this.magFilter) != null ? ref1 : this.props.magFilter;
    type = (ref2 = this.type) != null ? ref2 : this.props.type;
    width = this.props.width;
    history = this.props.history;
    reserve = this.props.bufferWidth;
    channels = this.props.channels;
    items = this.props.items;
    dims = this.spec = {
      channels: channels,
      items: items,
      width: width
    };
    this.items = dims.items;
    this.channels = dims.channels;
    data = this.props.data;
    dims = Util.Data.getDimensions(data, dims);
    space = this.space;
    space.width = Math.max(reserve, dims.width || 1);
    space.history = history;
    return this.buffer = this._renderables.make(this.storage, {
      width: space.width,
      history: space.history,
      channels: channels,
      items: items,
      minFilter: minFilter,
      magFilter: magFilter,
      type: type
    });
  };

  Array_.prototype.unmake = function() {
    Array_.__super__.unmake.apply(this, arguments);
    if (this.buffer) {
      this.buffer.dispose();
      return this.buffer = this.spec = null;
    }
  };

  Array_.prototype.change = function(changed, touched, init) {
    var width;
    if (touched['texture'] || changed['history.history'] || changed['buffer.channels'] || changed['buffer.items'] || changed['array.bufferWidth']) {
      return this.rebuild();
    }
    if (!this.buffer) {
      return;
    }
    if (changed['array.width']) {
      width = this.props.width;
      if (width > this.space.width) {
        return this.rebuild();
      }
    }
    if (changed['data.map'] || changed['data.data'] || changed['data.resolve'] || changed['data.expr'] || init) {
      return this.buffer.setCallback(this.emitter());
    }
  };

  Array_.prototype.callback = function(callback) {
    if (callback.length <= 2) {
      return callback;
    } else {
      return (function(_this) {
        return function(emit, i) {
          return callback(emit, i, _this.bufferClock, _this.bufferStep);
        };
      })(this);
    }
  };

  Array_.prototype.update = function() {
    var data, filled, l, ref, space, used;
    if (!this.buffer) {
      return;
    }
    data = this.props.data;
    ref = this, space = ref.space, used = ref.used;
    l = used.width;
    filled = this.buffer.getFilled();
    this.syncBuffer((function(_this) {
      return function(abort) {
        var base, dims, width;
        if (data != null) {
          dims = Util.Data.getDimensions(data, _this.spec);
          if (dims.width > space.width) {
            abort();
            return _this.rebuild();
          }
          used.width = dims.width;
          _this.buffer.setActive(used.width);
          if (typeof (base = _this.buffer.callback).rebind === "function") {
            base.rebind(data);
          }
          return _this.buffer.update();
        } else {
          width = _this.spec.width || 1;
          _this.buffer.setActive(width);
          width = _this.buffer.update();
          return used.width = width;
        }
      };
    })(this));
    if (used.width !== l || filled !== this.buffer.getFilled()) {
      return this.trigger({
        type: 'source.resize'
      });
    }
  };

  return Array_;

})(Buffer);

module.exports = Array_;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxkYXRhXFxhcnJheS5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccHJpbWl0aXZlc1xcdHlwZXNcXGRhdGFcXGFycmF5LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLG9CQUFBO0VBQUE7OztBQUFBLE1BQUEsR0FBUyxPQUFBLENBQVEsVUFBUjs7QUFDVCxJQUFBLEdBQU8sT0FBQSxDQUFRLGVBQVI7O0FBRUQ7Ozs7Ozs7RUFDSixNQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLFFBQVQsRUFBbUIsUUFBbkIsRUFBNkIsTUFBN0IsRUFBcUMsUUFBckMsRUFBK0MsT0FBL0MsRUFBd0QsT0FBeEQsRUFBaUUsU0FBakUsRUFBNEUsS0FBNUU7O21CQUVWLElBQUEsR0FBTSxTQUFBO0lBQ0osSUFBQyxDQUFBLE1BQUQsR0FBVSxJQUFDLENBQUEsSUFBRCxHQUFRO0lBRWxCLElBQUMsQ0FBQSxLQUFELEdBQ0U7TUFBQSxLQUFBLEVBQVMsQ0FBVDtNQUNBLE9BQUEsRUFBUyxDQURUOztJQUdGLElBQUMsQ0FBQSxJQUFELEdBQ0U7TUFBQSxLQUFBLEVBQVMsQ0FBVDs7SUFFRixJQUFDLENBQUEsT0FBRCxHQUFXO0lBQ1gsSUFBQyxDQUFBLFdBQUQsR0FBZSxTQUFDLElBQUQsRUFBTyxDQUFQO2FBQWEsSUFBQSxDQUFLLENBQUwsRUFBUSxDQUFSLEVBQVcsQ0FBWCxFQUFjLENBQWQ7SUFBYjtXQUVmLGtDQUFBLFNBQUE7RUFiSTs7bUJBZU4sWUFBQSxHQUFjLFNBQUMsTUFBRDtBQUNaLFFBQUE7SUFBQSxJQUFBLEdBQU8sSUFBQyxDQUFBLGFBQUQsQ0FBQTtJQUNQLElBQUMsQ0FBQSxXQUFELENBQWEsSUFBYixFQUFtQixNQUFu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

},{"../../../util":175,"./buffer":55}],55:[function(require,module,exports){
var Buffer, Data, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Data = require('./data');

Util = require('../../../util');

Buffer = (function(superClass) {
  extend(Buffer, superClass);

  function Buffer() {
    return Buffer.__super__.constructor.apply(this, arguments);
  }

  Buffer.traits = ['node', 'buffer', 'active', 'data', 'source', 'index', 'texture'];

  Buffer.prototype.init = function() {
    this.bufferSlack = 0;
    this.bufferFrames = 0;
    this.bufferTime = 0;
    this.bufferDelta = 0;
    this.bufferClock = 0;
    this.bufferStep = 0;
    return Buffer.__super__.init.apply(this, arguments);
  };

  Buffer.prototype.make = function() {
    Buffer.__super__.make.apply(this, arguments);
    return this.clockParent = this._inherit('clock');
  };

  Buffer.prototype.unmake = function() {
    return Buffer.__super__.unmake.apply(this, arguments);
  };

  Buffer.prototype.rawBuffer = function() {
    return this.buffer;
  };

  Buffer.prototype.emitter = function() {
    var channels, items, ref;
    ref = this.props, channels = ref.channels, items = ref.items;
    return Buffer.__super__.emitter.call(this, channels, items);
  };

  Buffer.prototype.change = function(changed, touched, init) {
    var fps;
    if (changed['buffer.fps'] || init) {
      fps = this.props.fps;
      return this.bufferSlack = fps ? .5 / fps : 0;
    }
  };

  Buffer.prototype.syncBuffer = function(callback) {
    var abort, delta, filled, fps, frame, frames, hurry, i, j, limit, live, observe, realtime, ref, ref1, results, slack, speed, step, stop, time;
    if (!this.buffer) {
      return;
    }
    ref = this.props, live = ref.live, fps = ref.fps, hurry = ref.hurry, limit = ref.limit, realtime = ref.realtime, observe = ref.observe;
    filled = this.buffer.getFilled();
    if (!(!filled || live)) {
      return;
    }
    time = this.clockParent.getTime();
    if (fps != null) {
      slack = this.bufferSlack;
      speed = time.step / time.delta;
      delta = realtime ? time.delta : time.step;
      frame = 1 / fps;
      step = realtime && observe ? speed * frame : frame;
      this.bufferSlack = Math.min(limit / fps, slack + delta);
      this.bufferDelta = delta;
      this.bufferStep = step;
      frames = Math.min(hurry, Math.floor(slack * fps));
      if (!filled) {
        frames = Math.max(1, frames);
      }
      stop = false;
      abort = function() {
        return stop = true;
      };
      results = [];
      for (i = j = 0, ref1 = frames; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {
        this.bufferTime += delta;
        this.bufferClock += step;
        if (stop) {
          break;
        }
        callback(abort, this.bufferFrames++, i, frames);
        results.push(this.bufferSlack -= frame);
      }
      return results;
    } else {
      this.bufferTime = time.time;
      this.bufferDelta = time.delta;
      this.bufferClock = time.clock;
      this.bufferStep = time.step;
      return callback((function() {}), this.bufferFrames++, 0, 1);
    }
  };

  Buffer.prototype.alignShader = function(dims, shader) {
    var aligned, magFilter, minFilter, mixed, nearest, ref;
    ref = this.props, minFilter = ref.minFilter, magFilter = ref.magFilter, aligned = ref.aligned;
    mixed = (dims.items > 1 && dims.width > 1) || (dims.height > 1 && dims.depth > 1);
    if (aligned || !mixed) {
      return;
    }
    nearest = minFilter === this.node.attributes['texture.minFilter']["enum"].nearest && magFilter === this.node.attributes['texture.magFilter']["enum"].nearest;
    if (!nearest) {
      console.warn((this.node.toString()) + " - Cannot use linear min/magFilter with 3D/4D sampling");
    }
    return shader.pipe('map.xyzw.align');
  };

  return Buffer;

})(Data);

module.exports = Buffer;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxkYXRhXFxidWZmZXIuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxkYXRhXFxidWZmZXIuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsa0JBQUE7RUFBQTs7O0FBQUEsSUFBQSxHQUFPLE9BQUEsQ0FBUSxRQUFSOztBQUNQLElBQUEsR0FBTyxPQUFBLENBQVEsZUFBUjs7QUFFRDs7Ozs7OztFQUNKLE1BQUMsQ0FBQSxNQUFELEdBQVUsQ0FBQyxNQUFELEVBQVMsUUFBVCxFQUFtQixRQUFuQixFQUE2QixNQUE3QixFQUFxQyxRQUFyQyxFQUErQyxPQUEvQyxFQUF3RCxTQUF4RDs7bUJBRVYsSUFBQSxHQUFNLFNBQUE7SUFDSixJQUFDLENBQUEsV0FBRCxHQUFnQjtJQUNoQixJQUFDLENBQUEsWUFBRCxHQUFnQjtJQUVoQixJQUFDLENBQUEsVUFBRCxHQUFnQjtJQUNoQixJQUFDLENBQUEsV0FBRCxHQUFnQjtJQUVoQixJQUFDLENBQUEsV0FBRCxHQUFnQjtJQUNoQixJQUFDLENBQUEsVUFBRCxHQUFnQjtXQUNoQixrQ0FBQSxTQUFBO0VBVEk7O21CQVdOLElBQUEsR0FBTSxTQUFBO0lBQ0osa0NBQUEsU0FBQTtXQUVBLElBQUMsQ0FBQSxXQUFELEdBQWUsSUFBQyxDQUFBLFFBQUQsQ0FBVSxPQUFWO0VBSFg7O21CQUtOLE1BQUEsR0FBUSxTQUFBO1dBQ04sb0NBQUEsU0FBQTtFQURNOzttQkFHUixTQUFBLEdBQVcsU0FBQTtXQUFNLElBQUMsQ0FBQTtFQUFQOzttQkFFWCxPQUFBLEdBQVMsU0FBQTtBQUNQLFFBQUE7SUFBQSxNQUFvQixJQUFDLENBQUEsS0FBckIsRUFBQyx1QkFBRCxFQUFXO1dB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

},{"../../../util":175,"./data":56}],56:[function(require,module,exports){
var Data, Source, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Source = require('../base/source');

Util = require('../../../util');

Data = (function(superClass) {
  extend(Data, superClass);

  function Data() {
    return Data.__super__.constructor.apply(this, arguments);
  }

  Data.traits = ['node', 'data', 'source', 'index', 'entity', 'active'];

  Data.prototype.init = function() {
    this.dataEmitter = null;
    return this.dataSizes = null;
  };

  Data.prototype.emitter = function(channels, items) {
    var bind, data, emitter, expr, last, resolve, sizes, thunk;
    data = this.props.data;
    bind = this.props.bind;
    expr = this.props.expr;
    if (data != null) {
      last = this.dataSizes;
      sizes = Util.Data.getSizes(data);
      if (!last || last.length !== sizes.length) {
        thunk = Util.Data.getThunk(data);
        this.dataEmitter = this.callback(Util.Data.makeEmitter(thunk, items, channels));
        this.dataSizes = sizes;
      }
      emitter = this.dataEmitter;
    } else if (typeof resolve !== "undefined" && resolve !== null) {
      resolve = this._inherit('resolve');
      emitter = this.callback(resolve.callback(bind));
    } else if (expr != null) {
      emitter = this.callback(expr);
    } else {
      emitter = this.callback(this.passthrough);
    }
    return emitter;
  };

  Data.prototype.callback = function(callback) {
    return callback != null ? callback : function() {};
  };

  Data.prototype.update = function() {};

  Data.prototype.make = function() {
    this._helpers.active.make();
    this.first = true;
    return this._listen('root', 'root.update', (function(_this) {
      return function() {
        if (_this.isActive || _this.first) {
          _this.update();
        }
        return _this.first = false;
      };
    })(this));
  };

  Data.prototype.unmake = function() {
    this._helpers.active.unmake();
    this.dataEmitter = null;
    return this.dataSizes = null;
  };

  return Data;

})(Source);

module.exports = Data;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxkYXRhXFxkYXRhLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxwcmltaXRpdmVzXFx0eXBlc1xcZGF0YVxcZGF0YS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxrQkFBQTtFQUFBOzs7QUFBQSxNQUFBLEdBQVMsT0FBQSxDQUFRLGdCQUFSOztBQUNULElBQUEsR0FBTyxPQUFBLENBQVEsZUFBUjs7QUFFRDs7Ozs7OztFQUNKLElBQUMsQ0FBQSxNQUFELEdBQVUsQ0FBQyxNQUFELEVBQVMsTUFBVCxFQUFpQixRQUFqQixFQUEyQixPQUEzQixFQUFvQyxRQUFwQyxFQUE4QyxRQUE5Qzs7aUJBRVYsSUFBQSxHQUFNLFNBQUE7SUFDSixJQUFDLENBQUEsV0FBRCxHQUFlO1dBQ2YsSUFBQyxDQUFBLFNBQUQsR0FBZTtFQUZYOztpQkFJTixPQUFBLEdBQVMsU0FBQyxRQUFELEVBQVcsS0FBWDtBQUNQLFFBQUE7SUFBQSxJQUFBLEdBQU8sSUFBQyxDQUFBLEtBQUssQ0FBQztJQUNkLElBQUEsR0FBTyxJQUFDLENBQUEsS0FBSyxDQUFDO0lBQ2QsSUFBQSxHQUFPLElBQUMsQ0FBQSxLQUFLLENBQUM7SUFFZCxJQUFHLFlBQUg7TUFFRSxJQUFBLEdBQVcsSUFBQyxDQUFBO01BQ1osS0FBQSxHQUFXLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBVixDQUFtQixJQUFuQjtNQUVYLElBQUcsQ0FBQyxJQUFELElBQVMsSUFBSSxDQUFDLE1BQUwsS0FBZSxLQUFLLENBQUMsTUFBakM7UUFFRSxLQUFBLEdBQWUsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFWLENBQXNCLElBQXRCO1FBQ2YsSUFBQyxDQUFBLFdBQUQsR0FBZSxJQUFDLENBQUEsUUFBRCxDQUFVLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVixDQUFzQixLQUF0QixFQUE2QixLQUE3QixFQUFvQyxRQUFwQyxDQUFWO1FBQ2YsSUFBQyxDQUFBLFNBQUQsR0FBZSxNQUpqQjs7TUFNQSxPQUFBLEdBQVUsSUFBQyxDQUFBLFlBWGI7S0FBQSxNQVlLLElBQUcsa0RBQUg7TUFFSCxPQUFBLEdBQVUsSUFBQyxDQUFBLFFBQUQsQ0FBVSxTQUFWO01BQ1YsT0FBQSxHQUFVLElBQUMsQ0FBQSxRQUFELENBQVUsT0FBTyxDQUFDLFFBQVIsQ0FBaUIsSUFBakIsQ0FBVixFQUhQO0tBQUEsTUFJQSxJQUFHLFlBQUg7TUFFSCxPQUFBLEdBQVUsSUFBQyxDQUFBLFFBQUQsQ0FBVSxJQUFWLEVBRlA7S0FBQSxNQUFBO01BS0gsT0FBQSxHQUFVLElBQUMsQ0FBQSxRQUFELENBQVUsSUFBQyxDQUFBLFdBQVgsRUFMUDs7V0FPTDtFQTVCTzs7aUJBOEJULFFBQUEsR0FBVSxTQUFDLFFBQUQ7OEJBQ1IsV0FBVyxTQUFBLEdBQUE7RUFESDs7aUJBR1YsTUFBQSxHQUFRLFNBQUEsR0FBQTs7aUJBRVIsSUFBQSxHQUFNLFNBQUE7SUFDSixJQUFDLENBQUEsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFqQixDQUFBO0lBR0EsSUFBQyxDQUFBLEtBQUQsR0FBUztXQUNULElBQUMsQ0FBQSxPQUFELENBQVMsTUFBVCxFQUFpQixhQUFqQixFQUFnQyxDQUFBLFNBQUEsS0FBQTthQUFBLFNBQUE7UUFDOUIsSUFBYSxLQUFDLENBQUEsUUFBRCxJQUFhLEtBQUMsQ0FBQSxLQUEzQjtVQUFBLEtBQUMsQ0FBQSxNQUFELENBQUEsRUFBQTs7ZUFDQSxLQUFDLENBQUEsS0FBRCxHQUFTO01BRnFCO0lBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQSxDQUFoQztFQUxJOztpQkFTTixNQUFBLEdBQVEsU0FBQTtJQUNOLElBQUMsQ0FBQSxRQUFRLENBQUMsTUFBTSxDQUFDLE1BQWpCLENBQUE7SUFFQSxJQUFDLENBQUEsV0FBRCxHQUFlO1dBQ2YsSUFBQyxDQUFBLFNBQUQsR0FBZTtFQUpUOzs7O0dBbkRTOztBQXlEbkIsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"../../../util":175,"../base/source":49}],57:[function(require,module,exports){
var Interval, Util, _Array,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

_Array = require('./array');

Util = require('../../../util');

Interval = (function(superClass) {
  extend(Interval, superClass);

  function Interval() {
    return Interval.__super__.constructor.apply(this, arguments);
  }

  Interval.traits = ['node', 'buffer', 'active', 'data', 'source', 'index', 'texture', 'array', 'span', 'interval', 'sampler', 'raw'];

  Interval.prototype.updateSpan = function() {
    var centered, dimension, inverse, pad, range, span, width;
    dimension = this.props.axis;
    width = this.props.width;
    centered = this.props.centered;
    pad = this.props.padding;
    range = this._helpers.span.get('', dimension);
    width += pad * 2;
    this.a = range.x;
    span = range.y - range.x;
    if (centered) {
      inverse = 1 / Math.max(1, width);
      this.a += span * inverse / 2;
    } else {
      inverse = 1 / Math.max(1, width - 1);
    }
    this.b = span * inverse;
    return this.a += pad * this.b;
  };

  Interval.prototype.callback = function(callback) {
    this.updateSpan();
    if (this.last === callback) {
      return this._callback;
    }
    this.last = callback;
    if (callback.length <= 3) {
      return this._callback = (function(_this) {
        return function(emit, i) {
          var x;
          x = _this.a + _this.b * i;
          return callback(emit, x, i);
        };
      })(this);
    } else {
      return this._callback = (function(_this) {
        return function(emit, i) {
          var x;
          x = _this.a + _this.b * i;
          return callback(emit, x, i, _this.bufferClock, _this.bufferStep);
        };
      })(this);
    }
  };

  Interval.prototype.make = function() {
    Interval.__super__.make.apply(this, arguments);
    this._helpers.span.make();
    return this._listen(this, 'span.range', this.updateSpan);
  };

  Interval.prototype.unmake = function() {
    Interval.__super__.unmake.apply(this, arguments);
    return this._helpers.span.unmake();
  };

  return Interval;

})(_Array);

module.exports = Interval;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxkYXRhXFxpbnRlcnZhbC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccHJpbWl0aXZlc1xcdHlwZXNcXGRhdGFcXGludGVydmFsLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLHNCQUFBO0VBQUE7OztBQUFBLE1BQUEsR0FBUyxPQUFBLENBQVEsU0FBUjs7QUFDVCxJQUFBLEdBQU8sT0FBQSxDQUFRLGVBQVI7O0FBRUQ7Ozs7Ozs7RUFDSixRQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLFFBQVQsRUFBbUIsUUFBbkIsRUFBNkIsTUFBN0IsRUFBcUMsUUFBckMsRUFBK0MsT0FBL0MsRUFBd0QsU0FBeEQsRUFBbUUsT0FBbkUsRUFBNEUsTUFBNUUsRUFBb0YsVUFBcEYsRUFBZ0csU0FBaEcsRUFBMkcsS0FBM0c7O3FCQUVWLFVBQUEsR0FBWSxTQUFBO0FBQ1YsUUFBQTtJQUFBLFNBQUEsR0FBWSxJQUFDLENBQUEsS0FBSyxDQUFDO0lBQ25CLEtBQUEsR0FBWSxJQUFDLENBQUEsS0FBSyxDQUFDO0lBQ25CLFFBQUEsR0FBWSxJQUFDLENBQUEsS0FBSyxDQUFDO0lBQ25CLEdBQUEsR0FBWSxJQUFDLENBQUEsS0FBSyxDQUFDO0lBRW5CLEtBQUEsR0FBWSxJQUFDLENBQUEsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFmLENBQW1CLEVBQW5CLEVBQXVCLFNBQXZCO0lBRVosS0FBQSxJQUFTLEdBQUEsR0FBTTtJQUVmLElBQUMsQ0FBQSxDQUFELEdBQUssS0FBSyxDQUFDO0lBQ1gsSUFBQSxHQUFPLEtBQUssQ0FBQyxDQUFOLEdBQVUsS0FBSyxDQUFDO0lBRXZCLElBQUcsUUFBSDtNQUNFLE9BQUEsR0FBWSxDQUFBLEdBQUksSUFBSSxDQUFDLEdBQUwsQ0FBUyxDQUFULEVBQVksS0FBWjtNQUNoQixJQUFDLENBQUEsQ0FBRCxJQUFNLElBQUEsR0FBTyxPQUFQLEdBQWlCLEVBRnpCO0tBQUEsTUFBQTtNQUlFLE9BQUEsR0FBWSxDQUFBLEdBQUksSUFBSSxDQUFDLEdBQUwsQ0FBUyxDQUFULEVBQVksS0FBQSxHQUFRLENBQXBCLEVBSmxCOztJQU1BLElBQUMsQ0FBQSxDQUFELEdBQUssSUFBQSxHQUFPO1dBRVosSUFBQyxDQUFBLENBQUQsSUFBTSxHQUFBLEdBQU0sSUFBQyxDQUFBO0VBckJIOztxQkF1QlosUUFBQSxHQUFVLFNBQUMsUUFBRDtJQUNSLElBQUMsQ0FBQSxVQUFELENBQUE7SUFFQSxJQUFxQixJQUFDLENBQUEsSUFBRCxLQUFTLFFBQTlCO0FBQUEsYUFBTyxJQUFDLENBQUEsVUFBUjs7SUFDQSxJQUFDLENBQUEsSUFBRCxHQUFRO0lBRVIsSUFBRyxRQUFRLENBQUMsTUFBVCxJQUFtQixDQUF0QjthQUNFLElBQUMsQ0FBQSxTQUFELEdBQWEsQ0FBQSxTQUFBLEtBQUE7ZUFBQSxTQUFDLElBQUQsRUFBTyxDQUFQO0FBQ1gsY0FBQTtVQUFBLENBQUEsR0FBSSxLQUFDLENBQUEsQ0FBRCxHQUFLLEtBQUMsQ0FBQSxDQUFELEdBQUs7aUJBQ2QsUUFBQSxDQUFTLElBQVQsRUFBZSxDQUFmLEVBQWtCLENBQWxCO1FBRlc7TUFBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLEVBRGY7S0FBQSxNQUFBO2FBS0UsSUFBQyxDQUFBLFNBQUQsR0FBYSxDQUFBLFNBQUEsS0FBQTtlQUFBLFNBQUMsSUFBRCxFQUFPLENBQVA7QUFDWCxjQUFBO1VBQUEsQ0FBQSxHQUFJLEtBQUMsQ0FBQSxDQUFELEdBQUssS0FBQyxDQUFBLENBQUQsR0FBSztpQkFDZCxRQUFBLENBQVMsSUFBVCxFQUFlLENBQWYsRUFBa0IsQ0FBbEIsRUFBcUIsS0FBQyxDQUFBLFdBQXRCLEVBQW1DLEtBQUMsQ0FBQSxVQUFwQztRQUZXO01BQUEsQ0FBQSxDQUFBLENBQUEsSUFBQSxFQUxmOztFQU5ROztxQkFlVixJQUFBLEdBQU0sU0FBQTtJQUNKLG9DQUFBLFNBQUE7SUFDQSxJQUFDLENBQUEsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFmLENBQUE7V0FDQSxJQUFDLENBQUEsT0FBRCxDQUFTLElBQVQsRUFBWSxZQUFaLEVBQTBCLElBQUMsQ0FBQSxVQUEzQjtFQUhJOztxQkFLTixNQUFBLEdBQVEsU0FBQTtJQUNOLHNDQUFBLFNBQUE7V0FDQSxJQUFDLENBQUEsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFmLENBQUE7RUFGTTs7OztHQTlDYTs7QUFrRHZCLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{"../../../util":175,"./array":54}],58:[function(require,module,exports){
var Buffer, Matrix, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Buffer = require('./buffer');

Util = require('../../../util');

Matrix = (function(superClass) {
  extend(Matrix, superClass);

  function Matrix() {
    return Matrix.__super__.constructor.apply(this, arguments);
  }

  Matrix.traits = ['node', 'buffer', 'active', 'data', 'source', 'index', 'texture', 'matrix', 'raw'];

  Matrix.prototype.init = function() {
    this.buffer = this.spec = null;
    this.space = {
      width: 0,
      height: 0,
      history: 0
    };
    this.used = {
      width: 0,
      height: 0
    };
    this.storage = 'matrixBuffer';
    this.passthrough = function(emit, x, y) {
      return emit(x, y, 0, 0);
    };
    return Matrix.__super__.init.apply(this, arguments);
  };

  Matrix.prototype.sourceShader = function(shader) {
    var dims;
    dims = this.getDimensions();
    this.alignShader(dims, shader);
    return this.buffer.shader(shader);
  };

  Matrix.prototype.getDimensions = function() {
    return {
      items: this.items,
      width: this.space.width,
      height: this.space.height,
      depth: this.space.history
    };
  };

  Matrix.prototype.getActiveDimensions = function() {
    return {
      items: this.items,
      width: this.used.width,
      height: this.used.height,
      depth: this.buffer.getFilled()
    };
  };

  Matrix.prototype.getFutureDimensions = function() {
    return {
      items: this.items,
      width: this.used.width,
      height: this.used.height,
      depth: this.space.history
    };
  };

  Matrix.prototype.getRawDimensions = function() {
    return {
      items: this.items,
      width: this.space.width,
      height: this.space.height,
      depth: 1
    };
  };

  Matrix.prototype.make = function() {
    var channels, data, dims, height, history, items, magFilter, minFilter, ref, ref1, ref2, reserveX, reserveY, space, type, width;
    Matrix.__super__.make.apply(this, arguments);
    minFilter = (ref = this.minFilter) != null ? ref : this.props.minFilter;
    magFilter = (ref1 = this.magFilter) != null ? ref1 : this.props.magFilter;
    type = (ref2 = this.type) != null ? ref2 : this.props.type;
    width = this.props.width;
    height = this.props.height;
    history = this.props.history;
    reserveX = this.props.bufferWidth;
    reserveY = this.props.bufferHeight;
    channels = this.props.channels;
    items = this.props.items;
    dims = this.spec = {
      channels: channels,
      items: items,
      width: width,
      height: height
    };
    this.items = dims.items;
    this.channels = dims.channels;
    data = this.props.data;
    dims = Util.Data.getDimensions(data, dims);
    space = this.space;
    space.width = Math.max(reserveX, dims.width || 1);
    space.height = Math.max(reserveY, dims.height || 1);
    space.history = history;
    return this.buffer = this._renderables.make(this.storage, {
      width: space.width,
      height: space.height,
      history: space.history,
      channels: channels,
      items: items,
      minFilter: minFilter,
      magFilter: magFilter,
      type: type
    });
  };

  Matrix.prototype.unmake = function() {
    Matrix.__super__.unmake.apply(this, arguments);
    if (this.buffer) {
      this.buffer.dispose();
      return this.buffer = this.spec = null;
    }
  };

  Matrix.prototype.change = function(changed, touched, init) {
    var height, width;
    if (touched['texture'] || changed['matrix.history'] || changed['buffer.channels'] || changed['buffer.items'] || changed['matrix.bufferWidth'] || changed['matrix.bufferHeight']) {
      return this.rebuild();
    }
    if (!this.buffer) {
      return;
    }
    if (changed['matrix.width']) {
      width = this.props.width;
      if (width > this.space.width) {
        return this.rebuild();
      }
    }
    if (changed['matrix.height']) {
      height = this.props.height;
      if (height > this.space.height) {
        return this.rebuild();
      }
    }
    if (changed['data.map'] || changed['data.data'] || changed['data.resolve'] || changed['data.expr'] || init) {
      return this.buffer.setCallback(this.emitter());
    }
  };

  Matrix.prototype.callback = function(callback) {
    if (callback.length <= 3) {
      return callback;
    } else {
      return (function(_this) {
        return function(emit, i, j) {
          return callback(emit, i, j, _this.bufferClock, _this.bufferStep);
        };
      })(this);
    }
  };

  Matrix.prototype.update = function() {
    var data, filled, h, ref, space, used, w;
    if (!this.buffer) {
      return;
    }
    data = this.props.data;
    ref = this, space = ref.space, used = ref.used;
    w = used.width;
    h = used.height;
    filled = this.buffer.getFilled();
    this.syncBuffer((function(_this) {
      return function(abort) {
        var _w, base, dims, height, length, width;
        if (data != null) {
          dims = Util.Data.getDimensions(data, _this.spec);
          if (dims.width > space.width || dims.height > space.height) {
            abort();
            return _this.rebuild();
          }
          used.width = dims.width;
          used.height = dims.height;
          _this.buffer.setActive(used.width, used.height);
          if (typeof (base = _this.buffer.callback).rebind === "function") {
            base.rebind(data);
          }
          return _this.buffer.update();
        } else {
          width = _this.spec.width || 1;
          height = _this.spec.height || 1;
          _this.buffer.setActive(width, height);
          length = _this.buffer.update();
          used.width = _w = width;
          used.height = Math.ceil(length / _w);
          if (used.height === 1) {
            return used.width = length;
          }
        }
      };
    })(this));
    if (used.width !== w || used.height !== h || filled !== this.buffer.getFilled()) {
      return this.trigger({
        type: 'source.resize'
      });
    }
  };

  return Matrix;

})(Buffer);

module.exports = Matrix;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxkYXRhXFxtYXRyaXguY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxkYXRhXFxtYXRyaXguY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsb0JBQUE7RUFBQTs7O0FBQUEsTUFBQSxHQUFTLE9BQUEsQ0FBUSxVQUFSOztBQUNULElBQUEsR0FBTyxPQUFBLENBQVEsZUFBUjs7QUFFRDs7Ozs7OztFQUNKLE1BQUMsQ0FBQSxNQUFELEdBQVUsQ0FBQyxNQUFELEVBQVMsUUFBVCxFQUFtQixRQUFuQixFQUE2QixNQUE3QixFQUFxQyxRQUFyQyxFQUErQyxPQUEvQyxFQUF3RCxTQUF4RCxFQUFtRSxRQUFuRSxFQUE2RSxLQUE3RTs7bUJBRVYsSUFBQSxHQUFNLFNBQUE7SUFDSixJQUFDLENBQUEsTUFBRCxHQUFVLElBQUMsQ0FBQSxJQUFELEdBQVE7SUFFbEIsSUFBQyxDQUFBLEtBQUQsR0FDRTtNQUFBLEtBQUEsRUFBUyxDQUFUO01BQ0EsTUFBQSxFQUFTLENBRFQ7TUFFQSxPQUFBLEVBQVMsQ0FGVDs7SUFJRixJQUFDLENBQUEsSUFBRCxHQUNFO01BQUEsS0FBQSxFQUFTLENBQVQ7TUFDQSxNQUFBLEVBQVMsQ0FEVDs7SUFHRixJQUFDLENBQUEsT0FBRCxHQUFXO0lBQ1gsSUFBQyxDQUFBLFdBQUQsR0FBZSxTQUFDLElBQUQsRUFBTyxDQUFQLEVBQVUsQ0FBVjthQUFnQixJQUFBLENBQUssQ0FBTCxFQUFRLENBQVIsRUFBVyxDQUFYLEVBQWMsQ0FBZDtJQUFoQjtXQUVmLGtDQUFBLFNBQUE7RUFmSTs7bUJBaUJOLFlBQUEsR0FBYyxTQUFDLE1BQUQ7QUFDWixRQUFBO0lBQUEsSUFBQSxHQUFPLElBQUMs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

},{"../../../util":175,"./buffer":55}],59:[function(require,module,exports){
var Scale, Source, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Source = require('../base/source');

Util = require('../../../util');

Scale = (function(superClass) {
  extend(Scale, superClass);

  function Scale() {
    return Scale.__super__.constructor.apply(this, arguments);
  }

  Scale.traits = ['node', 'source', 'index', 'interval', 'span', 'scale', 'raw', 'origin'];

  Scale.prototype.init = function() {
    return this.used = this.space = this.scaleAxis = this.sampler = null;
  };

  Scale.prototype.rawBuffer = function() {
    return this.buffer;
  };

  Scale.prototype.sourceShader = function(shader) {
    return shader.pipe(this.sampler);
  };

  Scale.prototype.getDimensions = function() {
    return {
      items: 1,
      width: this.space,
      height: 1,
      depth: 1
    };
  };

  Scale.prototype.getActiveDimensions = function() {
    return {
      items: 1,
      width: this.used,
      height: this.buffer.getFilled(),
      depth: 1
    };
  };

  Scale.prototype.getRawDimensions = function() {
    return this.getDimensions();
  };

  Scale.prototype.make = function() {
    var p, positionUniforms, samples;
    this.space = samples = this._helpers.scale.divide('');
    this.buffer = this._renderables.make('dataBuffer', {
      width: samples,
      channels: 1,
      items: 1
    });
    positionUniforms = {
      scaleAxis: this._attributes.make(this._types.vec4()),
      scaleOffset: this._attributes.make(this._types.vec4())
    };
    this.scaleAxis = positionUniforms.scaleAxis.value;
    this.scaleOffset = positionUniforms.scaleOffset.value;
    p = this.sampler = this._shaders.shader();
    p.require(this.buffer.shader(this._shaders.shader(), 1));
    p.pipe('scale.position', positionUniforms);
    this._helpers.span.make();
    return this._listen(this, 'span.range', this.updateRanges);
  };

  Scale.prototype.unmake = function() {
    this.scaleAxis = null;
    return this._helpers.span.unmake();
  };

  Scale.prototype.change = function(changed, touched, init) {
    if (changed['scale.divide']) {
      return this.rebuild();
    }
    if (touched['view'] || touched['interval'] || touched['span'] || touched['scale'] || init) {
      return this.updateRanges();
    }
  };

  Scale.prototype.updateRanges = function() {
    var axis, max, min, origin, range, ref, ticks, used;
    used = this.used;
    ref = this.props, axis = ref.axis, origin = ref.origin;
    range = this._helpers.span.get('', axis);
    min = range.x;
    max = range.y;
    ticks = this._helpers.scale.generate('', this.buffer, min, max);
    Util.Axis.setDimension(this.scaleAxis, axis);
    Util.Axis.setOrigin(this.scaleOffset, axis, origin);
    this.used = ticks.length;
    if (this.used !== used) {
      return this.trigger({
        type: 'source.resize'
      });
    }
  };

  return Scale;

})(Source);

module.exports = Scale;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxkYXRhXFxzY2FsZS5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccHJpbWl0aXZlc1xcdHlwZXNcXGRhdGFcXHNjYWxlLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLG1CQUFBO0VBQUE7OztBQUFBLE1BQUEsR0FBUyxPQUFBLENBQVEsZ0JBQVI7O0FBQ1QsSUFBQSxHQUFTLE9BQUEsQ0FBUSxlQUFSOztBQUVIOzs7Ozs7O0VBQ0osS0FBQyxDQUFBLE1BQUQsR0FBVSxDQUFDLE1BQUQsRUFBUyxRQUFULEVBQW1CLE9BQW5CLEVBQTRCLFVBQTVCLEVBQXdDLE1BQXhDLEVBQWdELE9BQWhELEVBQXlELEtBQXpELEVBQWdFLFFBQWhFOztrQkFFVixJQUFBLEdBQU0sU0FBQTtXQUNKLElBQUMsQ0FBQSxJQUFELEdBQVEsSUFBQyxDQUFBLEtBQUQsR0FBUyxJQUFDLENBQUEsU0FBRCxHQUFhLElBQUMsQ0FBQSxPQUFELEdBQVc7RUFEckM7O2tCQUdOLFNBQUEsR0FBVyxTQUFBO1dBQU0sSUFBQyxDQUFBO0VBQVA7O2tCQUVYLFlBQUEsR0FBYyxTQUFDLE1BQUQ7V0FBWSxNQUFNLENBQUMsSUFBUCxDQUFZLElBQUMsQ0FBQSxPQUFiO0VBQVo7O2tCQUVkLGFBQUEsR0FBZSxTQUFBO1dBQ2I7TUFBQSxLQUFBLEVBQVEsQ0FBUjtNQUNBLEtBQUEsRUFBUSxJQUFDLENBQUEsS0FEVDtNQUVBLE1BQUEsRUFBUSxDQUZSO01BR0EsS0FBQSxFQUFRLENBSFI7O0VBRGE7O2tCQU1mLG1CQUFBLEdBQXFCLFNBQUE7V0FDbkI7TUFBQSxLQUFBLEVBQVEsQ0FBUjtNQUNBLEtBQUEsRUFBUSxJQUFDLENBQUEsSUFEVDtNQUVBLE1BQUEsRUFBUSxJQUFD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

},{"../../../util":175,"../base/source":49}],60:[function(require,module,exports){
var Util, Volume, Voxel,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Voxel = require('./voxel');

Util = require('../../../util');

Volume = (function(superClass) {
  extend(Volume, superClass);

  function Volume() {
    return Volume.__super__.constructor.apply(this, arguments);
  }

  Volume.traits = ['node', 'buffer', 'active', 'data', 'source', 'index', 'texture', 'voxel', 'span:x', 'span:y', 'span:z', 'volume', 'sampler:x', 'sampler:y', 'sampler:z', 'raw'];

  Volume.prototype.updateSpan = function() {
    var centeredX, centeredY, centeredZ, depth, dimensions, height, inverseX, inverseY, inverseZ, padX, padY, padZ, rangeX, rangeY, rangeZ, spanX, spanY, spanZ, width;
    dimensions = this.props.axes;
    width = this.props.width;
    height = this.props.height;
    depth = this.props.depth;
    centeredX = this.props.centeredX;
    centeredY = this.props.centeredY;
    centeredZ = this.props.centeredZ;
    padX = this.props.paddingX;
    padY = this.props.paddingY;
    padZ = this.props.paddingZ;
    rangeX = this._helpers.span.get('x.', dimensions[0]);
    rangeY = this._helpers.span.get('y.', dimensions[1]);
    rangeZ = this._helpers.span.get('z.', dimensions[2]);
    this.aX = rangeX.x;
    this.aY = rangeY.x;
    this.aZ = rangeZ.x;
    spanX = rangeX.y - rangeX.x;
    spanY = rangeY.y - rangeY.x;
    spanZ = rangeZ.y - rangeZ.x;
    width += padX * 2;
    height += padY * 2;
    depth += padZ * 2;
    if (centeredX) {
      inverseX = 1 / Math.max(1, width);
      this.aX += spanX * inverseX / 2;
    } else {
      inverseX = 1 / Math.max(1, width - 1);
    }
    if (centeredY) {
      inverseY = 1 / Math.max(1, height);
      this.aY += spanY * inverseY / 2;
    } else {
      inverseY = 1 / Math.max(1, height - 1);
    }
    if (centeredZ) {
      inverseZ = 1 / Math.max(1, depth);
      this.aZ += spanZ * inverseZ / 2;
    } else {
      inverseZ = 1 / Math.max(1, depth - 1);
    }
    this.bX = spanX * inverseX;
    this.bY = spanY * inverseY;
    this.bZ = spanZ * inverseZ;
    this.aX += this.bX * padX;
    this.aY += this.bY * padY;
    return this.aZ += this.bZ * padY;
  };

  Volume.prototype.callback = function(callback) {
    this.updateSpan();
    if (this.last === callback) {
      return this._callback;
    }
    this.last = callback;
    if (callback.length <= 7) {
      return this._callback = (function(_this) {
        return function(emit, i, j, k) {
          var x, y, z;
          x = _this.aX + _this.bX * i;
          y = _this.aY + _this.bY * j;
          z = _this.aZ + _this.bZ * k;
          return callback(emit, x, y, z, i, j, k);
        };
      })(this);
    } else {
      return this._callback = (function(_this) {
        return function(emit, i, j, k) {
          var x, y, z;
          x = _this.aX + _this.bX * i;
          y = _this.aY + _this.bY * j;
          z = _this.aZ + _this.bZ * k;
          return callback(emit, x, y, z, i, j, k, _this.bufferClock, _this.bufferStep);
        };
      })(this);
    }
  };

  Volume.prototype.make = function() {
    Volume.__super__.make.apply(this, arguments);
    this._helpers.span.make();
    return this._listen(this, 'span.range', this.updateSpan);
  };

  Volume.prototype.unmake = function() {
    Volume.__super__.unmake.apply(this, arguments);
    return this._helpers.span.unmake();
  };

  return Volume;

})(Voxel);

module.exports = Volume;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxkYXRhXFx2b2x1bWUuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxkYXRhXFx2b2x1bWUuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsbUJBQUE7RUFBQTs7O0FBQUEsS0FBQSxHQUFRLE9BQUEsQ0FBUSxTQUFSOztBQUNSLElBQUEsR0FBTyxPQUFBLENBQVEsZUFBUjs7QUFFRDs7Ozs7OztFQUNKLE1BQUMsQ0FBQSxNQUFELEdBQVUsQ0FBQyxNQUFELEVBQVMsUUFBVCxFQUFtQixRQUFuQixFQUE2QixNQUE3QixFQUFxQyxRQUFyQyxFQUErQyxPQUEvQyxFQUF3RCxTQUF4RCxFQUFtRSxPQUFuRSxFQUE0RSxRQUE1RSxFQUFzRixRQUF0RixFQUFnRyxRQUFoRyxFQUEwRyxRQUExRyxFQUFvSCxXQUFwSCxFQUFpSSxXQUFqSSxFQUE4SSxXQUE5SSxFQUEySixLQUEzSjs7bUJBRVYsVUFBQSxHQUFZLFNBQUE7QUFDVixRQUFBO0lBQUEsVUFBQSxHQUFhLElBQUMsQ0FBQSxLQUFLLENBQUM7SUFDcEIsS0FBQSxHQUFhLElBQUMsQ0FBQSxLQUFLLENBQUM7SUFDcEIsTUFBQSxHQUFhLElBQUMsQ0FBQSxLQUFLLENBQUM7SUFDcEIsS0FBQSxHQUFhLElBQUMsQ0FBQSxLQUFLLENBQUM7SUFFcEIsU0FBQSxHQUFhLElBQUMsQ0FBQSxLQUFLLENBQUM7SUFDcEIsU0FBQSxHQUFhLElBQUMsQ0FBQSxLQUFLLENBQUM7SUFDcEIsU0FBQSxHQUFhLElBQUMsQ0FBQSxLQUFLLENBQUM7SUFFcEIsSUFBQSxHQUFRLElBQUMsQ0FBQSxLQUFLLENBQUM7SUFDZixJQUFBLEdBQVEsSUFBQyxDQUFBLEtBQUssQ0FB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

},{"../../../util":175,"./voxel":61}],61:[function(require,module,exports){
var Buffer, Util, Voxel,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Buffer = require('./buffer');

Util = require('../../../util');

Voxel = (function(superClass) {
  extend(Voxel, superClass);

  function Voxel() {
    this.update = bind(this.update, this);
    return Voxel.__super__.constructor.apply(this, arguments);
  }

  Voxel.traits = ['node', 'buffer', 'active', 'data', 'source', 'index', 'texture', 'voxel', 'raw'];

  Voxel.prototype.init = function() {
    this.buffer = this.spec = null;
    this.space = {
      width: 0,
      height: 0,
      depth: 0
    };
    this.used = {
      width: 0,
      height: 0,
      depth: 0
    };
    this.storage = 'voxelBuffer';
    this.passthrough = function(emit, x, y, z) {
      return emit(x, y, z, 0);
    };
    return Voxel.__super__.init.apply(this, arguments);
  };

  Voxel.prototype.sourceShader = function(shader) {
    var dims;
    dims = this.getDimensions();
    this.alignShader(dims, shader);
    return this.buffer.shader(shader);
  };

  Voxel.prototype.getDimensions = function() {
    return {
      items: this.items,
      width: this.space.width,
      height: this.space.height,
      depth: this.space.depth
    };
  };

  Voxel.prototype.getActiveDimensions = function() {
    return {
      items: this.items,
      width: this.used.width,
      height: this.used.height,
      depth: this.used.depth * this.buffer.getFilled()
    };
  };

  Voxel.prototype.getRawDimensions = function() {
    return this.getDimensions();
  };

  Voxel.prototype.make = function() {
    var channels, data, depth, dims, height, items, magFilter, minFilter, ref, ref1, ref2, reserveX, reserveY, reserveZ, space, type, width;
    Voxel.__super__.make.apply(this, arguments);
    minFilter = (ref = this.minFilter) != null ? ref : this.props.minFilter;
    magFilter = (ref1 = this.magFilter) != null ? ref1 : this.props.magFilter;
    type = (ref2 = this.type) != null ? ref2 : this.props.type;
    width = this.props.width;
    height = this.props.height;
    depth = this.props.depth;
    reserveX = this.props.bufferWidth;
    reserveY = this.props.bufferHeight;
    reserveZ = this.props.bufferDepth;
    channels = this.props.channels;
    items = this.props.items;
    dims = this.spec = {
      channels: channels,
      items: items,
      width: width,
      height: height,
      depth: depth
    };
    this.items = dims.items;
    this.channels = dims.channels;
    data = this.props.data;
    dims = Util.Data.getDimensions(data, dims);
    space = this.space;
    space.width = Math.max(reserveX, dims.width || 1);
    space.height = Math.max(reserveY, dims.height || 1);
    space.depth = Math.max(reserveZ, dims.depth || 1);
    return this.buffer = this._renderables.make(this.storage, {
      width: space.width,
      height: space.height,
      depth: space.depth,
      channels: channels,
      items: items,
      minFilter: minFilter,
      magFilter: magFilter,
      type: type
    });
  };

  Voxel.prototype.unmake = function() {
    Voxel.__super__.unmake.apply(this, arguments);
    if (this.buffer) {
      this.buffer.dispose();
      return this.buffer = this.spec = null;
    }
  };

  Voxel.prototype.change = function(changed, touched, init) {
    var depth, height, width;
    if (touched['texture'] || changed['buffer.channels'] || changed['buffer.items'] || changed['voxel.bufferWidth'] || changed['voxel.bufferHeight'] || changed['voxel.bufferDepth']) {
      return this.rebuild();
    }
    if (!this.buffer) {
      return;
    }
    if (changed['voxel.width']) {
      width = this.props.width;
      if (width > this.space.width) {
        return this.rebuild();
      }
    }
    if (changed['voxel.height']) {
      height = this.props.height;
      if (height > this.space.height) {
        return this.rebuild();
      }
    }
    if (changed['voxel.depth']) {
      depth = this.props.depth;
      if (depth > this.space.depth) {
        return this.rebuild();
      }
    }
    if (changed['data.map'] || changed['data.data'] || changed['data.resolve'] || changed['data.expr'] || init) {
      return this.buffer.setCallback(this.emitter());
    }
  };

  Voxel.prototype.callback = function(callback) {
    if (callback.length <= 4) {
      return callback;
    } else {
      return (function(_this) {
        return function(emit, i, j, k) {
          return callback(emit, i, j, k, _this.bufferClock, _this.bufferStep);
        };
      })(this);
    }
  };

  Voxel.prototype.update = function() {
    var d, data, filled, h, ref, space, used, w;
    if (!this.buffer) {
      return;
    }
    data = this.props.data;
    ref = this, space = ref.space, used = ref.used;
    w = used.width;
    h = used.height;
    d = used.depth;
    filled = this.buffer.getFilled();
    this.syncBuffer((function(_this) {
      return function(abort) {
        var _h, _w, base, depth, dims, height, length, width;
        if (data != null) {
          dims = Util.Data.getDimensions(data, _this.spec);
          if (dims.width > space.width || dims.height > space.height || dims.depth > space.depth) {
            abort();
            return _this.rebuild();
          }
          used.width = dims.width;
          used.height = dims.height;
          used.depth = dims.depth;
          _this.buffer.setActive(used.width, used.height, used.depth);
          if (typeof (base = _this.buffer.callback).rebind === "function") {
            base.rebind(data);
          }
          return _this.buffer.update();
        } else {
          width = _this.spec.width || 1;
          height = _this.spec.height || 1;
          depth = _this.spec.depth || 1;
          _this.buffer.setActive(width, height, depth);
          length = _this.buffer.update();
          used.width = _w = width;
          used.height = _h = height;
          used.depth = Math.ceil(length / _w / _h);
          if (used.depth === 1) {
            used.height = Math.ceil(length / _w);
            if (used.height === 1) {
              return used.width = length;
            }
          }
        }
      };
    })(this));
    if (used.width !== w || used.height !== h || used.depth !== d || filled !== this.buffer.getFilled()) {
      return this.trigger({
        type: 'source.resize'
      });
    }
  };

  return Voxel;

})(Buffer);

module.exports = Voxel;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxkYXRhXFx2b3hlbC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccHJpbWl0aXZlc1xcdHlwZXNcXGRhdGFcXHZveGVsLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLG1CQUFBO0VBQUE7Ozs7QUFBQSxNQUFBLEdBQVMsT0FBQSxDQUFRLFVBQVI7O0FBQ1QsSUFBQSxHQUFPLE9BQUEsQ0FBUSxlQUFSOztBQUVEOzs7Ozs7OztFQUNKLEtBQUMsQ0FBQSxNQUFELEdBQVUsQ0FBQyxNQUFELEVBQVMsUUFBVCxFQUFtQixRQUFuQixFQUE2QixNQUE3QixFQUFxQyxRQUFyQyxFQUErQyxPQUEvQyxFQUF3RCxTQUF4RCxFQUFtRSxPQUFuRSxFQUE0RSxLQUE1RTs7a0JBRVYsSUFBQSxHQUFNLFNBQUE7SUFDSixJQUFDLENBQUEsTUFBRCxHQUFVLElBQUMsQ0FBQSxJQUFELEdBQVE7SUFFbEIsSUFBQyxDQUFBLEtBQUQsR0FDRTtNQUFBLEtBQUEsRUFBUSxDQUFSO01BQ0EsTUFBQSxFQUFRLENBRFI7TUFFQSxLQUFBLEVBQVEsQ0FGUjs7SUFJRixJQUFDLENBQUEsSUFBRCxHQUNFO01BQUEsS0FBQSxFQUFRLENBQVI7TUFDQSxNQUFBLEVBQVEsQ0FEUjtNQUVBLEtBQUEsRUFBUSxDQUZSOztJQUlGLElBQUMsQ0FBQSxPQUFELEdBQVc7SUFDWCxJQUFDLENBQUEsV0FBRCxHQUFlLFNBQUMsSUFBRCxFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYjthQUFtQixJQUFBLENBQUssQ0FBTCxFQUFRLENBQVIsRUFBVyxDQUFYLEVBQWMsQ0FBZDtJQUFuQjtXQUVmLGlDQUFBLFNBQUE7RUFoQkk7O2tCQWtCTixZQUFBLEdBQWMsU0FBQyxNQUFE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

},{"../../../util":175,"./buffer":55}],62:[function(require,module,exports){
var Axis, Primitive, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Primitive = require('../../primitive');

Util = require('../../../util');

Axis = (function(superClass) {
  extend(Axis, superClass);

  Axis.traits = ['node', 'object', 'visible', 'style', 'line', 'axis', 'span', 'interval', 'arrow', 'position', 'origin', 'shade'];

  Axis.defaults = {
    end: true,
    zBias: -1
  };

  function Axis(node, context, helpers) {
    Axis.__super__.constructor.call(this, node, context, helpers);
    this.axisPosition = this.axisStep = this.resolution = this.line = this.arrows = null;
  }

  Axis.prototype.make = function() {
    var arrowUniforms, axis, crossed, detail, end, join, lineUniforms, mask, material, position, positionUniforms, ref, ref1, ref2, samples, start, stroke, styleUniforms, swizzle, uniforms, unitUniforms;
    positionUniforms = {
      axisPosition: this._attributes.make(this._types.vec4()),
      axisStep: this._attributes.make(this._types.vec4())
    };
    this.axisPosition = positionUniforms.axisPosition.value;
    this.axisStep = positionUniforms.axisStep.value;
    position = this._shaders.shader();
    position.pipe('axis.position', positionUniforms);
    position = this._helpers.position.pipeline(position);
    styleUniforms = this._helpers.style.uniforms();
    lineUniforms = this._helpers.line.uniforms();
    arrowUniforms = this._helpers.arrow.uniforms();
    unitUniforms = this._inherit('unit').getUnitUniforms();
    detail = this.props.detail;
    samples = detail + 1;
    this.resolution = 1 / detail;
    ref = this.props, start = ref.start, end = ref.end;
    ref1 = this.props, stroke = ref1.stroke, join = ref1.join;
    mask = this._helpers.object.mask();
    material = this._helpers.shade.pipeline() || false;
    ref2 = this.props, crossed = ref2.crossed, axis = ref2.axis;
    if (!crossed && (mask != null) && axis > 1) {
      swizzle = ['x000', 'y000', 'z000', 'w000'][axis];
      mask = this._helpers.position.swizzle(mask, swizzle);
    }
    uniforms = Util.JS.merge(arrowUniforms, lineUniforms, styleUniforms, unitUniforms);
    this.line = this._renderables.make('line', {
      uniforms: uniforms,
      samples: samples,
      position: position,
      clip: start || end,
      stroke: stroke,
      join: join,
      mask: mask,
      material: material
    });
    this.arrows = [];
    if (start) {
      this.arrows.push(this._renderables.make('arrow', {
        uniforms: uniforms,
        flip: true,
        samples: samples,
        position: position,
        mask: mask,
        material: material
      }));
    }
    if (end) {
      this.arrows.push(this._renderables.make('arrow', {
        uniforms: uniforms,
        samples: samples,
        position: position,
        mask: mask,
        material: material
      }));
    }
    this._helpers.visible.make();
    this._helpers.object.make(this.arrows.concat([this.line]));
    this._helpers.span.make();
    return this._listen(this, 'span.range', this.updateRanges);
  };

  Axis.prototype.unmake = function() {
    this._helpers.visible.unmake();
    this._helpers.object.unmake();
    return this._helpers.span.unmake();
  };

  Axis.prototype.change = function(changed, touched, init) {
    if (changed['axis.detail'] || changed['line.stroke'] || changed['line.join'] || changed['axis.crossed'] || (changed['interval.axis'] && this.props.crossed)) {
      return this.rebuild();
    }
    if (touched['interval'] || touched['span'] || touched['view'] || init) {
      return this.updateRanges();
    }
  };

  Axis.prototype.updateRanges = function() {
    var axis, max, min, origin, range, ref;
    ref = this.props, axis = ref.axis, origin = ref.origin;
    range = this._helpers.span.get('', axis);
    min = range.x;
    max = range.y;
    Util.Axis.setDimension(this.axisPosition, axis).multiplyScalar(min);
    Util.Axis.setDimension(this.axisStep, axis).multiplyScalar((max - min) * this.resolution);
    return Util.Axis.addOrigin(this.axisPosition, axis, origin);
  };

  return Axis;

})(Primitive);

module.exports = Axis;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxkcmF3XFxheGlzLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxwcmltaXRpdmVzXFx0eXBlc1xcZHJhd1xcYXhpcy5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxxQkFBQTtFQUFBOzs7QUFBQSxTQUFBLEdBQVksT0FBQSxDQUFRLGlCQUFSOztBQUNaLElBQUEsR0FBWSxPQUFBLENBQVEsZUFBUjs7QUFFTjs7O0VBQ0osSUFBQyxDQUFBLE1BQUQsR0FBVSxDQUFDLE1BQUQsRUFBUyxRQUFULEVBQW1CLFNBQW5CLEVBQThCLE9BQTlCLEVBQXVDLE1BQXZDLEVBQStDLE1BQS9DLEVBQXVELE1BQXZELEVBQStELFVBQS9ELEVBQTJFLE9BQTNFLEVBQW9GLFVBQXBGLEVBQWdHLFFBQWhHLEVBQTBHLE9BQTFHOztFQUNWLElBQUMsQ0FBQSxRQUFELEdBQ0U7SUFBQSxHQUFBLEVBQUssSUFBTDtJQUNBLEtBQUEsRUFBTyxDQUFDLENBRFI7OztFQUdXLGNBQUMsSUFBRCxFQUFPLE9BQVAsRUFBZ0IsT0FBaEI7SUFDWCxzQ0FBTSxJQUFOLEVBQVksT0FBWixFQUFxQixPQUFyQjtJQUVBLElBQUMsQ0FBQSxZQUFELEdBQWdCLElBQUMsQ0FBQSxRQUFELEdBQVksSUFBQyxDQUFBLFVBQUQsR0FBYyxJQUFDLENBQUEsSUFBRCxHQUFRLElBQUMsQ0FBQSxNQUFELEdBQVU7RUFIakQ7O2lCQUtiLElBQUEsR0FBTSxTQUFBO0FBRUosUUFBQTtJQUFBLGdCQUFBLEdBQ0U7TUFBQSxZQUFBLEVBQWdCLElBQUMsQ0FBQSxXQUFXLENBQUMsSUFBYixDQUFrQixJQUFDLENBQUEsTUFBTSxDQUFDLElBQVIsQ0FBQSxDQUFsQixDQUFoQjtNQUNBLFFBQUEsRUFBZ0IsSUFBQyxDQUFBLFdBQVcsQ0FBQyxJQUFiLENBQWtCLElBQUMsQ0FBQSxNQUFNLENBQUMsSUFBUixDQUFBLENBQWxCLENBRGhCOztJQUdGLElBQUMsQ0FBQSxZQUFELEdBQWtCLGdCQUFnQixDQUFDLFlBQVksQ0FBQztJQUNoRCxJQUFDLENBQUEsUUFBRCxHQUFrQixnQkFBZ0IsQ0FBQyxRQUFRLENBQUM7SUFHNUMsUUFBQSxHQUFXLElBQUMsQ0FBQSxRQUFRLENBQUMsTUFBVixDQUFBO0lBQ1gsUUFBUSxDQUFDLElBQVQsQ0FBYyxlQUFkLEVBQStCLGdCQUEvQjtJQUNBLFFBQUEsR0FBVyxJQUFDLENBQUEsUUFBUSxDQUFDLFFBQVEsQ0FBQyxRQUFuQixDQUE0QixRQUE1QjtJQUdYLGFBQUEsR0FBZ0IsSUFBQyxDQUFBLFFBQVEsQ0FBQyxLQUFLLENBQUMsUUFBaEIsQ0FBQTtJQUNoQixZQUFBLEdBQWdCLElBQUMsQ0FBQSxRQUFRLENBQUMsSUFBSSxDQUFDLFFBQWYsQ0FBQTtJQUNoQixhQUFBLEdBQWdCLElBQUMsQ0FBQSxRQUFRLENBQUMsS0FBSyxDQUFDLFFBQWhCLENBQUE7SUFDaEIsWUFBQSxHQUFnQixJQUFDLENBQUEsUUFBRCxDQUFVLE1BQVYsQ0FBaUIsQ0FBQyxlQUFsQixDQUFBO0lBR2hCLE1BQUEsR0FBVSxJQUFDLENBQUEsS0FBSyxDQUFDO0lBQ2pCLE9BQUEsR0FBVSxNQUFBLEdBQVM7SUFDbkIsSUFBQyxDQUFBLFVBQUQsR0FBYyxDQUFBLEdBQUk7SUFHbEIsTUFBZSxJQUFDLENBQUEsS0FBaEIsRUFBQyxpQkFBRCxFQUFRO0lBR1IsT0FBaUIsSUFBQyxDQUFBLEtBQWxCLEVBQUMsb0JBQUQsRUFBUztJQUdULElBQUEsR0FBTyxJQUFDLENBQUEsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFqQixDQUFBO0lBR1AsUUFBQSxHQUFXLElBQUMsQ0FBQSxRQUFRLENBQUMsS0FBSyxDQUFDLFFBQWhCLENBQUEsQ0FBQSxJQUE4QjtJQUd6QyxPQUFrQixJQUFDLENBQUEsS0FBbkIsRUFBQyxzQkFBRCxFQUFVO0lBQ1YsSUFBRyxDQUFDLE9BQUQsSUFBYSxjQUFiLElBQXVCLElBQUEsR0FBTyxDQUFqQztNQUNFLE9BQUEsR0FBVSxDQUFDLE1BQUQsRUFBUyxNQUFULEVBQWlCLE1BQWpCLEVBQXlCLE1BQXpCLENBQWlDLENBQUEsSUFBQTtNQUMzQyxJQUFBLEdBQU8sSUFBQyxDQUFBLFFBQVEsQ0FBQyxRQUFRLENBQUMsT0FBbkIsQ0FBMkIsSUFBM0IsRUFBaUMsT0FBakMsRUFGVDs7SUFLQSxRQUFBLEdBQVcsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFSLENBQWMsYUFBZCxFQUE2QixZQUE3QixFQUEyQyxhQUEzQyxFQUEwRCxZQUExRDtJQUNYLElBQUMsQ0FBQSxJQUFELEdBQVEsSUFBQyxDQUFBLFlBQVksQ0FBQyxJQUFkLENBQW1CLE1BQW5CLEVBQ0U7TUFBQSxRQUFBLEVBQVUsUUFBVjtNQUNBLE9BQUEsRUFBVSxPQURWO01BRUEsUUFBQSxFQUFVLFFBRlY7TUFHQSxJQUFBLEVBQVUsS0FBQSxJQUFTLEdBSG5CO01BSUEsTUFBQSxFQUFVLE1BSlY7TUFLQSxJQUFBLEVBQVUsSUFMVjtNQU1BLElBQUEsRUFBVSxJQU5WO01BT0EsUUFBQSxFQUFVLFFBUFY7S0FERjtJQVdSLElBQUMsQ0FBQSxNQUFELEdBQVU7SUFDVixJQUFHLEtBQUg7TUFDRSxJQUFDLENBQUEsTUFBTSxDQUFDLElBQVIsQ0FBYSxJQUFDLENBQUEsWUFBWSxDQUFDLElBQWQsQ0FBbUIsT0FBbkIsRUFDSDtRQUFBLFFBQUEsRUFBVSxRQUFWO1FBQ0EsSUFBQSxFQUFVLElBRFY7UUFFQSxPQUFBLEVBQVUsT0FGVjtRQUdBLFFBQUEsRUFBVSxRQUhWO1FBSUEsSUFBQSxFQUFVLElBSlY7UUFLQSxRQUFBLEVBQVUsUUFMVjtPQURHLENBQWIsRUFERjs7SUFTQSxJQUFHLEdBQUg7TUFDRSxJQUFDLENBQUEsTUFBTSxDQUFDLElBQVIsQ0FBYSxJQUFDLENBQUEsWUFBWSxDQUFDLElBQWQsQ0FBbUIsT0FBbkIsRUFDSDtRQUFBLFFBQUEsRUFBVSxRQUFWO1FBQ0EsT0FBQSxFQUFVLE9BRFY7UUFFQSxRQUFBLEVBQVUsUUFGVjtRQUdBLElBQUEsRUFBVSxJQUhWO1FBSUEsUUFBQSxFQUFVLFFBSlY7T0FERyxDQUFiLEVBREY7O0lBU0EsSUFBQyxDQUFBLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBbEIsQ0FBQTtJQUNBLElBQUMsQ0FBQSxRQUFRLENBQUMsTUFBTSxDQUFDLElBQWpCLENBQXNCLElBQUMsQ0FBQSxNQUFNLENBQUMsTUFBUixDQUFlLENBQUMsSUFBQyxDQUFBLElBQUYsQ0FBZixDQUF0QjtJQUNBLElBQUMsQ0FBQSxRQUFRLENBQUMsSUFBSSxDQUFDLElBQWYsQ0FBQTtXQUdBLElBQUMsQ0FBQSxPQUFELENBQVMsSUFBVCxFQUFZLFlBQVosRUFBMEIsSUFBQyxDQUFBLFlBQTNCO0VBaEZJOztpQkFrRk4sTUFBQSxHQUFRLFNBQUE7SUFDTixJQUFDLENBQUEsUUFBUSxDQUFDLE9BQU8sQ0FBQyxNQUFsQixDQUFBO0lBQ0EsSUFBQyxDQUFBLFFBQVEsQ0FBQyxNQUFNLENBQUMsTUFBakIsQ0FBQTtXQUNBLElBQUMsQ0FBQSxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQWYsQ0FBQTtFQUhNOztpQkFLUixNQUFBLEdBQVEsU0FBQyxPQUFELEVBQVUsT0FBVixFQUFtQixJQUFuQjtJQUNOLElBQXFCLE9BQVEsQ0FBQSxhQUFBLENBQVIsSUFDQSxPQUFRLENBQUEsYUFBQSxDQURSLElBRUEsT0FBUSxDQUFBLFdBQUEsQ0FGUixJQUdBLE9BQVEsQ0FBQSxjQUFBLENBSFIsSUFJQSxDQUFDLE9BQVEsQ0FBQSxlQUFBLENBQVIsSUFBNkIsSUFBQyxDQUFBLEtBQUssQ0FBQyxPQUFyQyxDQUpyQjtBQUFBLGFBQU8sSUFBQyxDQUFBLE9BQUQsQ0FBQSxFQUFQOztJQU1BLElBQUcsT0FBUSxDQUFBLFVBQUEsQ0FBUixJQUNBLE9BQVEsQ0FBQSxNQUFBLENBRFIsSUFFQSxPQUFRLENBQUEsTUFBQSxDQUZSLElBR0EsSUFISDthQUtFLElBQUMsQ0FBQSxZQUFELENBQUEsRUFMRjs7RUFQTTs7aUJBY1IsWUFBQSxHQUFjLFNBQUE7QUFDWixRQUFBO0lBQUEsTUFBaUIsSUFBQyxDQUFBLEtBQWxCLEVBQUMsZUFBRCxFQUFPO0lBRVAsS0FBQSxHQUFRLElBQUMsQ0FBQSxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQWYsQ0FBbUIsRUFBbkIsRUFBdUIsSUFBdkI7SUFFUixHQUFBLEdBQU0sS0FBSyxDQUFDO0lBQ1osR0FBQSxHQUFNLEtBQUssQ0FBQztJQUVaLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBVixDQUF1QixJQUFDLENBQUEsWUFBeEIsRUFBc0MsSUFBdEMsQ0FBMkMsQ0FBQyxjQUE1QyxDQUEyRCxHQUEzRDtJQUNBLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBVixDQUF1QixJQUFDLENBQUEsUUFBeEIsRUFBa0MsSUFBbEMsQ0FBdUMsQ0FBQyxjQUF4QyxDQUF1RCxDQUFDLEdBQUEsR0FBTSxHQUFQLENBQUEsR0FBYyxJQUFDLENBQUEsVUFBdEU7V0FFQSxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVYsQ0FBb0IsSUFBQyxDQUFBLFlBQXJCLEVBQW1DLElBQW5DLEVBQXlDLE1BQXpDO0VBWFk7Ozs7R0FoSEc7O0FBOEhuQixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"../../../util":175,"../../primitive":44}],63:[function(require,module,exports){
var Face, Primitive, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Primitive = require('../../primitive');

Util = require('../../../util');

Face = (function(superClass) {
  extend(Face, superClass);

  Face.traits = ['node', 'object', 'visible', 'style', 'line', 'mesh', 'face', 'geometry', 'position', 'bind', 'shade'];

  function Face(node, context, helpers) {
    Face.__super__.constructor.call(this, node, context, helpers);
    this.face = null;
  }

  Face.prototype.resize = function() {
    var depth, dims, height, items, map, width;
    if (this.bind.points == null) {
      return;
    }
    dims = this.bind.points.getActiveDimensions();
    items = dims.items, width = dims.width, height = dims.height, depth = dims.depth;
    if (this.face) {
      this.face.geometry.clip(width, height, depth, items);
    }
    if (this.line) {
      this.line.geometry.clip(items, width, height, depth);
    }
    if (this.bind.map != null) {
      map = this.bind.map.getActiveDimensions();
      if (this.face) {
        return this.face.geometry.map(map.width, map.height, map.depth, map.items);
      }
    }
  };

  Face.prototype.make = function() {
    var color, depth, dims, faceMaterial, fill, height, items, join, line, lineMaterial, lineUniforms, map, mask, material, objects, position, ref, ref1, shaded, stroke, styleUniforms, swizzle, uniforms, unitUniforms, width, wireUniforms;
    this._helpers.bind.make([
      {
        to: 'geometry.points',
        trait: 'source'
      }, {
        to: 'geometry.colors',
        trait: 'source'
      }, {
        to: 'mesh.map',
        trait: 'source'
      }
    ]);
    if (this.bind.points == null) {
      return;
    }
    position = this.bind.points.sourceShader(this._shaders.shader());
    position = this._helpers.position.pipeline(position);
    styleUniforms = this._helpers.style.uniforms();
    lineUniforms = this._helpers.line.uniforms();
    unitUniforms = this._inherit('unit').getUnitUniforms();
    wireUniforms = {};
    wireUniforms.styleZBias = this._attributes.make(this._types.number());
    this.wireZBias = wireUniforms.styleZBias;
    dims = this.bind.points.getDimensions();
    items = dims.items, width = dims.width, height = dims.height, depth = dims.depth;
    ref = this.props, line = ref.line, shaded = ref.shaded, fill = ref.fill, stroke = ref.stroke, join = ref.join;
    if (this.bind.colors) {
      color = this._shaders.shader();
      this.bind.colors.sourceShader(color);
    }
    mask = this._helpers.object.mask();
    map = this._helpers.shade.map((ref1 = this.bind.map) != null ? ref1.sourceShader(this._shaders.shader()) : void 0);
    material = this._helpers.shade.pipeline();
    faceMaterial = material || shaded;
    lineMaterial = material || false;
    objects = [];
    if (line) {
      swizzle = this._shaders.shader();
      swizzle.pipe(Util.GLSL.swizzleVec4('yzwx'));
      swizzle.pipe(position);
      uniforms = Util.JS.merge(unitUniforms, lineUniforms, styleUniforms, wireUniforms);
      this.line = this._renderables.make('line', {
        uniforms: uniforms,
        samples: items,
        strips: width,
        ribbons: height,
        layers: depth,
        position: swizzle,
        color: color,
        stroke: stroke,
        join: join,
        material: lineMaterial,
        mask: mask,
        closed: true
      });
      objects.push(this.line);
    }
    if (fill) {
      uniforms = Util.JS.merge(unitUniforms, styleUniforms, {});
      this.face = this._renderables.make('face', {
        uniforms: uniforms,
        width: width,
        height: height,
        depth: depth,
        items: items,
        position: position,
        color: color,
        material: faceMaterial,
        mask: mask,
        map: map
      });
      objects.push(this.face);
    }
    this._helpers.visible.make();
    return this._helpers.object.make(objects);
  };

  Face.prototype.made = function() {
    return this.resize();
  };

  Face.prototype.unmake = function() {
    this._helpers.bind.unmake();
    this._helpers.visible.unmake();
    this._helpers.object.unmake();
    return this.face = this.line = null;
  };

  Face.prototype.change = function(changed, touched, init) {
    var fill, lineBias, ref, zBias;
    if (changed['geometry.points'] || touched['mesh']) {
      return this.rebuild();
    }
    if (changed['style.zBias'] || changed['mesh.lineBias'] || init) {
      ref = this.props, fill = ref.fill, zBias = ref.zBias, lineBias = ref.lineBias;
      return this.wireZBias.value = zBias + (fill ? lineBias : 0);
    }
  };

  return Face;

})(Primitive);

module.exports = Face;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxkcmF3XFxmYWNlLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxwcmltaXRpdmVzXFx0eXBlc1xcZHJhd1xcZmFjZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxxQkFBQTtFQUFBOzs7QUFBQSxTQUFBLEdBQVksT0FBQSxDQUFRLGlCQUFSOztBQUNaLElBQUEsR0FBWSxPQUFBLENBQVEsZUFBUjs7QUFFTjs7O0VBQ0osSUFBQyxDQUFBLE1BQUQsR0FBVSxDQUFDLE1BQUQsRUFBUyxRQUFULEVBQW1CLFNBQW5CLEVBQThCLE9BQTlCLEVBQXVDLE1BQXZDLEVBQStDLE1BQS9DLEVBQXVELE1BQXZELEVBQStELFVBQS9ELEVBQTJFLFVBQTNFLEVBQXVGLE1BQXZGLEVBQStGLE9BQS9GOztFQUVHLGNBQUMsSUFBRCxFQUFPLE9BQVAsRUFBZ0IsT0FBaEI7SUFDWCxzQ0FBTSxJQUFOLEVBQVksT0FBWixFQUFxQixPQUFyQjtJQUVBLElBQUMsQ0FBQSxJQUFELEdBQVE7RUFIRzs7aUJBS2IsTUFBQSxHQUFRLFNBQUE7QUFDTixRQUFBO0lBQUEsSUFBYyx3QkFBZDtBQUFBLGFBQUE7O0lBRUEsSUFBQSxHQUFPLElBQUMsQ0FBQSxJQUFJLENBQUMsTUFBTSxDQUFDLG1CQUFiLENBQUE7SUFDTixrQkFBRCxFQUFRLGtCQUFSLEVBQWUsb0JBQWYsRUFBdUI7SUFFdkIsSUFBbUQsSUFBQyxDQUFBLElBQXBEO01BQUEsSUFBQyxDQUFBLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBZixDQUFvQixLQUFwQixFQUEyQixNQUEzQixFQUFtQyxLQUFuQyxFQUEwQyxLQUExQyxFQUFBOztJQUNBLElBQW1ELElBQUMsQ0FBQSxJQUFwRDtNQUFBLElBQUMs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

},{"../../../util":175,"../../primitive":44}],64:[function(require,module,exports){
var Grid, Primitive, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Primitive = require('../../primitive');

Util = require('../../../util');

Grid = (function(superClass) {
  extend(Grid, superClass);

  Grid.traits = ['node', 'object', 'visible', 'style', 'line', 'grid', 'area', 'position', 'origin', 'shade', 'axis:x', 'axis:y', 'scale:x', 'scale:y', 'span:x', 'span:y'];

  Grid.defaults = {
    width: 1,
    zBias: -2
  };

  function Grid(node, context, helpers) {
    Grid.__super__.constructor.call(this, node, context, helpers);
    this.axes = null;
  }

  Grid.prototype.make = function() {
    var axes, axis, crossed, join, lineX, lineY, lines, mask, material, ref, ref1, stroke, transpose;
    mask = this._helpers.object.mask();
    material = this._helpers.shade.pipeline() || false;
    axis = (function(_this) {
      return function(first, second, transpose) {
        var buffer, detail, line, lineUniforms, p, position, positionUniforms, resolution, samples, strips, styleUniforms, uniforms, unitUniforms, values;
        detail = _this._get(first + 'axis.detail');
        samples = detail + 1;
        resolution = 1 / detail;
        strips = _this._helpers.scale.divide(second);
        buffer = _this._renderables.make('dataBuffer', {
          width: strips,
          channels: 1
        });
        positionUniforms = {
          gridPosition: _this._attributes.make(_this._types.vec4()),
          gridStep: _this._attributes.make(_this._types.vec4()),
          gridAxis: _this._attributes.make(_this._types.vec4())
        };
        values = {
          gridPosition: positionUniforms.gridPosition.value,
          gridStep: positionUniforms.gridStep.value,
          gridAxis: positionUniforms.gridAxis.value
        };
        p = position = _this._shaders.shader();
        if ((transpose != null) && (mask != null)) {
          mask = _this._helpers.position.swizzle(mask, transpose);
        }
        p.require(buffer.shader(_this._shaders.shader(), 2));
        p.pipe('grid.position', positionUniforms);
        position = _this._helpers.position.pipeline(p);
        styleUniforms = _this._helpers.style.uniforms();
        lineUniforms = _this._helpers.line.uniforms();
        unitUniforms = _this._inherit('unit').getUnitUniforms();
        uniforms = Util.JS.merge(lineUniforms, styleUniforms, unitUniforms);
        line = _this._renderables.make('line', {
          uniforms: uniforms,
          samples: samples,
          strips: strips,
          position: position,
          stroke: stroke,
          join: join,
          mask: mask,
          material: material
        });
        return {
          first: first,
          second: second,
          resolution: resolution,
          samples: samples,
          line: line,
          buffer: buffer,
          values: values
        };
      };
    })(this);
    ref = this.props, lineX = ref.lineX, lineY = ref.lineY, crossed = ref.crossed, axes = ref.axes;
    transpose = ['0000', 'x000', 'y000', 'z000', 'w000'][axes[1]];
    ref1 = this.props, stroke = ref1.stroke, join = ref1.join;
    this.axes = [];
    lineX && this.axes.push(axis('x.', 'y.', null));
    lineY && this.axes.push(axis('y.', 'x.', crossed ? null : transpose));
    lines = (function() {
      var i, len, ref2, results;
      ref2 = this.axes;
      results = [];
      for (i = 0, len = ref2.length; i < len; i++) {
        axis = ref2[i];
        results.push(axis.line);
      }
      return results;
    }).call(this);
    this._helpers.visible.make();
    this._helpers.object.make(lines);
    this._helpers.span.make();
    return this._listen(this, 'span.range', this.updateRanges);
  };

  Grid.prototype.unmake = function() {
    var axis, i, len, ref;
    this._helpers.visible.unmake();
    this._helpers.object.unmake();
    this._helpers.span.unmake();
    ref = this.axes;
    for (i = 0, len = ref.length; i < len; i++) {
      axis = ref[i];
      axis.buffer.dispose();
    }
    return this.axes = null;
  };

  Grid.prototype.change = function(changed, touched, init) {
    if (changed['x.axis.detail'] || changed['y.axis.detail'] || changed['x.axis.factor'] || changed['y.axis.factor'] || changed['grid.lineX'] || changed['grid.lineY'] || changed['line.stroke'] || changed['line.join'] || changed['grid.crossed'] || (changed['grid.axes'] && this.props.crossed)) {
      return this.rebuild();
    }
    if (touched['x'] || touched['y'] || touched['area'] || touched['grid'] || touched['view'] || init) {
      return this.updateRanges();
    }
  };

  Grid.prototype.updateRanges = function() {
    var axes, axis, lineX, lineY, origin, range1, range2, ref, ref1;
    axis = (function(_this) {
      return function(x, y, range1, range2, axis) {
        var buffer, first, line, max, min, n, resolution, samples, second, ticks, values;
        first = axis.first, second = axis.second, resolution = axis.resolution, samples = axis.samples, line = axis.line, buffer = axis.buffer, values = axis.values;
        min = range1.x;
        max = range1.y;
        Util.Axis.setDimension(values.gridPosition, x).multiplyScalar(min);
        Util.Axis.setDimension(values.gridStep, x).multiplyScalar((max - min) * resolution);
        Util.Axis.addOrigin(values.gridPosition, axes, origin);
        min = range2.x;
        max = range2.y;
        ticks = _this._helpers.scale.generate(second, buffer, min, max);
        Util.Axis.setDimension(values.gridAxis, y);
        n = ticks.length;
        return line.geometry.clip(samples, n, 1, 1);
      };
    })(this);
    ref = this.props, axes = ref.axes, origin = ref.origin;
    range1 = this._helpers.span.get('x.', axes[0]);
    range2 = this._helpers.span.get('y.', axes[1]);
    ref1 = this.props, lineX = ref1.lineX, lineY = ref1.lineY;
    if (lineX) {
      axis(axes[0], axes[1], range1, range2, this.axes[0]);
    }
    if (lineY) {
      return axis(axes[1], axes[0], range2, range1, this.axes[+lineX]);
    }
  };

  return Grid;

})(Primitive);

module.exports = Grid;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxkcmF3XFxncmlkLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxwcmltaXRpdmVzXFx0eXBlc1xcZHJhd1xcZ3JpZC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxxQkFBQTtFQUFBOzs7QUFBQSxTQUFBLEdBQVksT0FBQSxDQUFRLGlCQUFSOztBQUNaLElBQUEsR0FBWSxPQUFBLENBQVEsZUFBUjs7QUFFTjs7O0VBQ0osSUFBQyxDQUFBLE1BQUQsR0FBVSxDQUFDLE1BQUQsRUFBUyxRQUFULEVBQW1CLFNBQW5CLEVBQThCLE9BQTlCLEVBQXVDLE1BQXZDLEVBQStDLE1BQS9DLEVBQXVELE1BQXZELEVBQStELFVBQS9ELEVBQTJFLFFBQTNFLEVBQXFGLE9BQXJGLEVBQ0EsUUFEQSxFQUNXLFFBRFgsRUFFQSxTQUZBLEVBRVcsU0FGWCxFQUdBLFFBSEEsRUFHVyxRQUhYOztFQUlWLElBQUMsQ0FBQSxRQUFELEdBQ0U7SUFBQSxLQUFBLEVBQU8sQ0FBUDtJQUNBLEtBQUEsRUFBTyxDQUFDLENBRFI7OztFQUdXLGNBQUMsSUFBRCxFQUFPLE9BQVAsRUFBZ0IsT0FBaEI7SUFDWCxzQ0FBTSxJQUFOLEVBQVksT0FBWixFQUFxQixPQUFyQjtJQUVBLElBQUMsQ0FBQSxJQUFELEdBQVE7RUFIRzs7aUJBS2IsSUFBQSxHQUFNLFNBQUE7QUFHSixRQUFBO0lBQUEsSUFBQSxHQUFPLElBQUMsQ0FBQSxRQUFRLENBQUMsTUFBTSxDQUFDLElBQWpCLENBQUE7SUFHUCxRQUFBLEdBQVcsSUFBQyxDQUFBLFFBQVEsQ0FBQyxLQUFLLENBQUMsUUFBaEIsQ0FBQSxDQUFBLElBQThCO0lBRXpDLElBQUEsR0FBTyxDQUFBLFNBQUEsS0FBQTthQUFBLFNB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

},{"../../../util":175,"../../primitive":44}],65:[function(require,module,exports){
var Line, Primitive, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Primitive = require('../../primitive');

Util = require('../../../util');

Line = (function(superClass) {
  extend(Line, superClass);

  Line.traits = ['node', 'object', 'visible', 'style', 'line', 'arrow', 'geometry', 'position', 'bind', 'shade', 'closed'];

  function Line(node, context, helpers) {
    Line.__super__.constructor.call(this, node, context, helpers);
    this.line = this.arrows = null;
  }

  Line.prototype.resize = function() {
    var arrow, dims, i, layers, len, ref, results, ribbons, samples, strips;
    if (this.bind.points == null) {
      return;
    }
    dims = this.bind.points.getActiveDimensions();
    samples = dims.width;
    strips = dims.height;
    ribbons = dims.depth;
    layers = dims.items;
    this.line.geometry.clip(samples, strips, ribbons, layers);
    ref = this.arrows;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      arrow = ref[i];
      results.push(arrow.geometry.clip(samples, strips, ribbons, layers));
    }
    return results;
  };

  Line.prototype.make = function() {
    var arrowUniforms, closed, color, dims, end, join, layers, lineUniforms, mask, material, position, proximity, ref, ref1, ribbons, samples, start, strips, stroke, styleUniforms, uniforms, unitUniforms;
    this._helpers.bind.make([
      {
        to: 'geometry.points',
        trait: 'source'
      }, {
        to: 'geometry.colors',
        trait: 'source'
      }
    ]);
    if (this.bind.points == null) {
      return;
    }
    position = this._shaders.shader();
    position = this.bind.points.sourceShader(position);
    position = this._helpers.position.pipeline(position);
    styleUniforms = this._helpers.style.uniforms();
    lineUniforms = this._helpers.line.uniforms();
    arrowUniforms = this._helpers.arrow.uniforms();
    unitUniforms = this._inherit('unit').getUnitUniforms();
    ref = this.props, start = ref.start, end = ref.end;
    closed = this.props.closed;
    ref1 = this.props, stroke = ref1.stroke, join = ref1.join, proximity = ref1.proximity;
    this.proximity = proximity;
    dims = this.bind.points.getDimensions();
    samples = dims.width;
    strips = dims.height;
    ribbons = dims.depth;
    layers = dims.items;
    if (this.bind.colors) {
      color = this._shaders.shader();
      this.bind.colors.sourceShader(color);
    }
    mask = this._helpers.object.mask();
    material = this._helpers.shade.pipeline() || false;
    uniforms = Util.JS.merge(arrowUniforms, lineUniforms, styleUniforms, unitUniforms);
    this.line = this._renderables.make('line', {
      uniforms: uniforms,
      samples: samples,
      strips: strips,
      ribbons: ribbons,
      layers: layers,
      position: position,
      color: color,
      clip: start || end,
      closed: closed,
      stroke: stroke,
      join: join,
      proximity: proximity,
      mask: mask,
      material: material
    });
    this.arrows = [];
    if (start) {
      this.arrows.push(this._renderables.make('arrow', {
        uniforms: uniforms,
        flip: true,
        samples: samples,
        strips: strips,
        ribbons: ribbons,
        layers: layers,
        position: position,
        color: color,
        mask: mask,
        material: material
      }));
    }
    if (end) {
      this.arrows.push(this._renderables.make('arrow', {
        uniforms: uniforms,
        samples: samples,
        strips: strips,
        ribbons: ribbons,
        layers: layers,
        position: position,
        color: color,
        mask: mask,
        material: material
      }));
    }
    this._helpers.visible.make();
    return this._helpers.object.make(this.arrows.concat([this.line]));
  };

  Line.prototype.made = function() {
    return this.resize();
  };

  Line.prototype.unmake = function() {
    this._helpers.bind.unmake();
    this._helpers.visible.unmake();
    this._helpers.object.unmake();
    return this.line = this.arrows = null;
  };

  Line.prototype.change = function(changed, touched, init) {
    if (changed['geometry.points'] || changed['line.stroke'] || changed['line.join'] || changed['arrow.start'] || changed['arrow.end']) {
      return this.rebuild();
    }
    if (changed['line.proximity']) {
      if ((this.proximity != null) !== (this.props.proximity != null)) {
        return this.rebuild();
      }
    }
  };

  return Line;

})(Primitive);

module.exports = Line;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxkcmF3XFxsaW5lLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxwcmltaXRpdmVzXFx0eXBlc1xcZHJhd1xcbGluZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxxQkFBQTtFQUFBOzs7QUFBQSxTQUFBLEdBQVksT0FBQSxDQUFRLGlCQUFSOztBQUNaLElBQUEsR0FBWSxPQUFBLENBQVEsZUFBUjs7QUFFTjs7O0VBQ0osSUFBQyxDQUFBLE1BQUQsR0FBVSxDQUFDLE1BQUQsRUFBUyxRQUFULEVBQW1CLFNBQW5CLEVBQThCLE9BQTlCLEVBQXVDLE1BQXZDLEVBQStDLE9BQS9DLEVBQXdELFVBQXhELEVBQW9FLFVBQXBFLEVBQWdGLE1BQWhGLEVBQXdGLE9BQXhGLEVBQWlHLFFBQWpHOztFQUVHLGNBQUMsSUFBRCxFQUFPLE9BQVAsRUFBZ0IsT0FBaEI7SUFDWCxzQ0FBTSxJQUFOLEVBQVksT0FBWixFQUFxQixPQUFyQjtJQUVBLElBQUMsQ0FBQSxJQUFELEdBQVEsSUFBQyxDQUFBLE1BQUQsR0FBVTtFQUhQOztpQkFLYixNQUFBLEdBQVEsU0FBQTtBQUNOLFFBQUE7SUFBQSxJQUFjLHdCQUFkO0FBQUEsYUFBQTs7SUFDQSxJQUFBLEdBQU8sSUFBQyxDQUFBLElBQUksQ0FBQyxNQUFNLENBQUMsbUJBQWIsQ0FBQTtJQUVQLE9BQUEsR0FBVSxJQUFJLENBQUM7SUFDZixNQUFBLEdBQVUsSUFBSSxDQUFDO0lBQ2YsT0FBQSxHQUFVLElBQUksQ0FBQztJQUNmLE1BQUEsR0FBVSxJQUFJLENBQUM7SUFFZixJQUFDLENBQUEsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFmLENBQW9CLE9BQXBCLEVBQTZCLE1BQTdCLEVBQXFDLE9BQXJDLEVB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

},{"../../../util":175,"../../primitive":44}],66:[function(require,module,exports){
var Point, Primitive, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Primitive = require('../../primitive');

Util = require('../../../util');

Point = (function(superClass) {
  extend(Point, superClass);

  Point.traits = ['node', 'object', 'visible', 'style', 'point', 'geometry', 'position', 'bind', 'shade'];

  function Point(node, context, helpers) {
    Point.__super__.constructor.call(this, node, context, helpers);
    this.point = null;
  }

  Point.prototype.resize = function() {
    var depth, dims, height, items, width;
    if (this.bind.points == null) {
      return;
    }
    dims = this.bind.points.getActiveDimensions();
    items = dims.items, width = dims.width, height = dims.height, depth = dims.depth;
    return this.point.geometry.clip(width, height, depth, items);
  };

  Point.prototype.make = function() {
    var color, depth, dims, fill, height, items, mask, material, optical, pointUniforms, position, shape, size, styleUniforms, uniforms, unitUniforms, width;
    this._helpers.bind.make([
      {
        to: 'geometry.points',
        trait: 'source'
      }, {
        to: 'geometry.colors',
        trait: 'source'
      }, {
        to: 'point.sizes',
        trait: 'source'
      }
    ]);
    if (this.bind.points == null) {
      return;
    }
    position = this._shaders.shader();
    position = this.bind.points.sourceShader(position);
    position = this._helpers.position.pipeline(position);
    dims = this.bind.points.getDimensions();
    items = dims.items, width = dims.width, height = dims.height, depth = dims.depth;
    styleUniforms = this._helpers.style.uniforms();
    pointUniforms = this._helpers.point.uniforms();
    unitUniforms = this._inherit('unit').getUnitUniforms();
    if (this.bind.colors) {
      color = this._shaders.shader();
      this.bind.colors.sourceShader(color);
    }
    if (this.bind.sizes) {
      size = this._shaders.shader();
      this.bind.sizes.sourceShader(size);
    }
    mask = this._helpers.object.mask();
    material = this._helpers.shade.pipeline() || false;
    shape = this.props.shape;
    fill = this.props.fill;
    optical = this.props.optical;
    uniforms = Util.JS.merge(unitUniforms, pointUniforms, styleUniforms);
    this.point = this._renderables.make('point', {
      uniforms: uniforms,
      width: width,
      height: height,
      depth: depth,
      items: items,
      position: position,
      color: color,
      size: size,
      shape: shape,
      optical: optical,
      fill: fill,
      mask: mask,
      material: material
    });
    this._helpers.visible.make();
    return this._helpers.object.make([this.point]);
  };

  Point.prototype.made = function() {
    return this.resize();
  };

  Point.prototype.unmake = function() {
    this._helpers.bind.unmake();
    this._helpers.visible.unmake();
    this._helpers.object.unmake();
    return this.point = null;
  };

  Point.prototype.change = function(changed, touched, init) {
    if (changed['geometry.points'] || changed['point.shape'] || changed['point.fill']) {
      return this.rebuild();
    }
  };

  return Point;

})(Primitive);

module.exports = Point;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxkcmF3XFxwb2ludC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccHJpbWl0aXZlc1xcdHlwZXNcXGRyYXdcXHBvaW50LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLHNCQUFBO0VBQUE7OztBQUFBLFNBQUEsR0FBWSxPQUFBLENBQVEsaUJBQVI7O0FBQ1osSUFBQSxHQUFZLE9BQUEsQ0FBUSxlQUFSOztBQUVOOzs7RUFDSixLQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLFFBQVQsRUFBbUIsU0FBbkIsRUFBOEIsT0FBOUIsRUFBdUMsT0FBdkMsRUFBZ0QsVUFBaEQsRUFBNEQsVUFBNUQsRUFBd0UsTUFBeEUsRUFBZ0YsT0FBaEY7O0VBRUcsZUFBQyxJQUFELEVBQU8sT0FBUCxFQUFnQixPQUFoQjtJQUNYLHVDQUFNLElBQU4sRUFBWSxPQUFaLEVBQXFCLE9BQXJCO0lBRUEsSUFBQyxDQUFBLEtBQUQsR0FBUztFQUhFOztrQkFLYixNQUFBLEdBQVEsU0FBQTtBQUNOLFFBQUE7SUFBQSxJQUFjLHdCQUFkO0FBQUEsYUFBQTs7SUFFQSxJQUFBLEdBQU8sSUFBQyxDQUFBLElBQUksQ0FBQyxNQUFNLENBQUMsbUJBQWIsQ0FBQTtJQUNOLGtCQUFELEVBQVEsa0JBQVIsRUFBZSxvQkFBZixFQUF1QjtXQUV2QixJQUFDLENBQUEsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFoQixDQUFxQixLQUFyQixFQUE0QixNQUE1QixFQUFvQyxLQUFwQyxFQUEyQyxLQUEzQztFQU5NOztrQkFRUixJQUFBLEdBQU0sU0FBQTtBQUVKLFFBQUE7SUFBQSxJQUFDLENBQUEsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFmLENBQW9CO01BQ2xCO1FB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

},{"../../../util":175,"../../primitive":44}],67:[function(require,module,exports){
var Primitive, Strip, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Primitive = require('../../primitive');

Util = require('../../../util');

Strip = (function(superClass) {
  extend(Strip, superClass);

  Strip.traits = ['node', 'object', 'visible', 'style', 'line', 'mesh', 'strip', 'geometry', 'position', 'bind', 'shade'];

  function Strip(node, context, helpers) {
    Strip.__super__.constructor.call(this, node, context, helpers);
    this.strip = null;
  }

  Strip.prototype.resize = function() {
    var depth, dims, height, items, map, width;
    if (this.bind.points == null) {
      return;
    }
    dims = this.bind.points.getActiveDimensions();
    items = dims.items, width = dims.width, height = dims.height, depth = dims.depth;
    if (this.strip) {
      this.strip.geometry.clip(width, height, depth, items);
    }
    if (this.line) {
      this.line.geometry.clip(items, width, height, depth);
    }
    if (this.bind.map != null) {
      map = this.bind.map.getActiveDimensions();
      if (this.strip) {
        return this.strip.geometry.map(map.width, map.height, map.depth, map.items);
      }
    }
  };

  Strip.prototype.make = function() {
    var color, depth, dims, faceMaterial, fill, height, items, join, line, lineMaterial, lineUniforms, map, mask, material, objects, position, ref, ref1, shaded, stroke, styleUniforms, swizzle, uniforms, unitUniforms, width, wireUniforms;
    this._helpers.bind.make([
      {
        to: 'geometry.points',
        trait: 'source'
      }, {
        to: 'geometry.colors',
        trait: 'source'
      }, {
        to: 'mesh.map',
        trait: 'source'
      }
    ]);
    if (this.bind.points == null) {
      return;
    }
    position = this._shaders.shader();
    position = this.bind.points.sourceShader(position);
    position = this._helpers.position.pipeline(position);
    styleUniforms = this._helpers.style.uniforms();
    lineUniforms = this._helpers.line.uniforms();
    unitUniforms = this._inherit('unit').getUnitUniforms();
    line = this.props.line;
    shaded = this.props.shaded;
    fill = this.props.fill;
    wireUniforms = {};
    wireUniforms.styleZBias = this._attributes.make(this._types.number());
    this.wireZBias = wireUniforms.styleZBias;
    dims = this.bind.points.getDimensions();
    items = dims.items, width = dims.width, height = dims.height, depth = dims.depth;
    ref = this.props, line = ref.line, shaded = ref.shaded, fill = ref.fill, stroke = ref.stroke, join = ref.join;
    if (this.bind.colors) {
      color = this._shaders.shader();
      color = this.bind.colors.sourceShader(color);
    }
    mask = this._helpers.object.mask();
    map = this._helpers.shade.map((ref1 = this.bind.map) != null ? ref1.sourceShader(this._shaders.shader()) : void 0);
    material = this._helpers.shade.pipeline();
    faceMaterial = material || shaded;
    lineMaterial = material || false;
    objects = [];
    if (line) {
      swizzle = this._shaders.shader();
      swizzle.pipe(Util.GLSL.swizzleVec4('yzwx'));
      swizzle.pipe(position);
      uniforms = Util.JS.merge(unitUniforms, lineUniforms, styleUniforms, wireUniforms);
      this.line = this._renderables.make('line', {
        uniforms: uniforms,
        samples: items,
        strips: width,
        ribbons: height,
        layers: depth,
        position: swizzle,
        color: color,
        stroke: stroke,
        join: join,
        mask: mask,
        material: lineMaterial
      });
      objects.push(this.line);
    }
    if (fill) {
      uniforms = Util.JS.merge(styleUniforms, {});
      this.strip = this._renderables.make('strip', {
        uniforms: uniforms,
        width: width,
        height: height,
        depth: depth,
        items: items,
        position: position,
        color: color,
        material: faceMaterial
      });
      objects.push(this.strip);
    }
    this._helpers.visible.make();
    return this._helpers.object.make(objects);
  };

  Strip.prototype.made = function() {
    return this.resize();
  };

  Strip.prototype.unmake = function() {
    this._helpers.bind.unmake();
    this._helpers.visible.unmake();
    this._helpers.object.unmake();
    return this.strip = null;
  };

  Strip.prototype.change = function(changed, touched, init) {
    var fill, lineBias, ref, zBias;
    if (changed['geometry.points'] || touched['mesh']) {
      return this.rebuild();
    }
    if (changed['style.zBias'] || changed['mesh.lineBias'] || init) {
      ref = this.props, fill = ref.fill, zBias = ref.zBias, lineBias = ref.lineBias;
      return this.wireZBias.value = zBias + (fill ? lineBias : 0);
    }
  };

  return Strip;

})(Primitive);

module.exports = Strip;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxkcmF3XFxzdHJpcC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccHJpbWl0aXZlc1xcdHlwZXNcXGRyYXdcXHN0cmlwLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLHNCQUFBO0VBQUE7OztBQUFBLFNBQUEsR0FBWSxPQUFBLENBQVEsaUJBQVI7O0FBQ1osSUFBQSxHQUFZLE9BQUEsQ0FBUSxlQUFSOztBQUVOOzs7RUFDSixLQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLFFBQVQsRUFBbUIsU0FBbkIsRUFBOEIsT0FBOUIsRUFBdUMsTUFBdkMsRUFBK0MsTUFBL0MsRUFBdUQsT0FBdkQsRUFBZ0UsVUFBaEUsRUFBNEUsVUFBNUUsRUFBd0YsTUFBeEYsRUFBZ0csT0FBaEc7O0VBRUcsZUFBQyxJQUFELEVBQU8sT0FBUCxFQUFnQixPQUFoQjtJQUNYLHVDQUFNLElBQU4sRUFBWSxPQUFaLEVBQXFCLE9BQXJCO0lBRUEsSUFBQyxDQUFBLEtBQUQsR0FBUztFQUhFOztrQkFLYixNQUFBLEdBQVEsU0FBQTtBQUNOLFFBQUE7SUFBQSxJQUFjLHdCQUFkO0FBQUEsYUFBQTs7SUFFQSxJQUFBLEdBQU8sSUFBQyxDQUFBLElBQUksQ0FBQyxNQUFNLENBQUMsbUJBQWIsQ0FBQTtJQUNOLGtCQUFELEVBQVEsa0JBQVIsRUFBZSxvQkFBZixFQUF1QjtJQUV2QixJQUFvRCxJQUFDLENBQUEsS0FBckQ7TUFBQSxJQUFDLENBQUEsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFoQixDQUFxQixLQUFyQixFQUE0QixNQUE1QixFQUFvQyxLQUFwQyxFQUEyQyxLQUEzQyxFQUFBOztJQUNBLElBQW9ELElBQUMsQ0FBQSxJQUFyRDtNQUFBLElB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

},{"../../../util":175,"../../primitive":44}],68:[function(require,module,exports){
var Primitive, Surface, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Primitive = require('../../primitive');

Util = require('../../../util');

Surface = (function(superClass) {
  extend(Surface, superClass);

  Surface.traits = ['node', 'object', 'visible', 'style', 'line', 'mesh', 'geometry', 'surface', 'position', 'grid', 'bind', 'shade'];

  Surface.defaults = {
    lineX: false,
    lineY: false
  };

  function Surface(node, context, helpers) {
    Surface.__super__.constructor.call(this, node, context, helpers);
    this.lineX = this.lineY = this.surface = null;
  }

  Surface.prototype.resize = function() {
    var depth, dims, height, items, map, width;
    if (this.bind.points == null) {
      return;
    }
    dims = this.bind.points.getActiveDimensions();
    width = dims.width, height = dims.height, depth = dims.depth, items = dims.items;
    if (this.surface) {
      this.surface.geometry.clip(width, height, depth, items);
    }
    if (this.lineX) {
      this.lineX.geometry.clip(width, height, depth, items);
    }
    if (this.lineY) {
      this.lineY.geometry.clip(height, width, depth, items);
    }
    if (this.bind.map != null) {
      map = this.bind.map.getActiveDimensions();
      if (this.surface) {
        return this.surface.geometry.map(map.width, map.height, map.depth, map.items);
      }
    }
  };

  Surface.prototype.make = function() {
    var closedX, closedY, color, crossed, depth, dims, faceMaterial, fill, height, items, join, lineMaterial, lineUniforms, lineX, lineY, map, mask, material, objects, position, proximity, ref, ref1, ref2, shaded, stroke, styleUniforms, surfaceUniforms, swizzle, swizzle2, uniforms, unitUniforms, width, wireUniforms, zUnits;
    this._helpers.bind.make([
      {
        to: 'geometry.points',
        trait: 'source'
      }, {
        to: 'geometry.colors',
        trait: 'source'
      }, {
        to: 'mesh.map',
        trait: 'source'
      }
    ]);
    if (this.bind.points == null) {
      return;
    }
    position = this._shaders.shader();
    position = this.bind.points.sourceShader(position);
    position = this._helpers.position.pipeline(position);
    styleUniforms = this._helpers.style.uniforms();
    wireUniforms = this._helpers.style.uniforms();
    lineUniforms = this._helpers.line.uniforms();
    surfaceUniforms = this._helpers.surface.uniforms();
    unitUniforms = this._inherit('unit').getUnitUniforms();
    wireUniforms.styleColor = this._attributes.make(this._types.color());
    wireUniforms.styleZBias = this._attributes.make(this._types.number());
    this.wireColor = wireUniforms.styleColor.value;
    this.wireZBias = wireUniforms.styleZBias;
    this.wireScratch = new THREE.Color;
    dims = this.bind.points.getDimensions();
    width = dims.width, height = dims.height, depth = dims.depth, items = dims.items;
    ref = this.props, shaded = ref.shaded, fill = ref.fill, lineX = ref.lineX, lineY = ref.lineY, closedX = ref.closedX, closedY = ref.closedY, stroke = ref.stroke, join = ref.join, proximity = ref.proximity, crossed = ref.crossed;
    objects = [];
    this.proximity = proximity;
    if (this.bind.colors) {
      color = this._shaders.shader();
      this.bind.colors.sourceShader(color);
    }
    mask = this._helpers.object.mask();
    map = this._helpers.shade.map((ref1 = this.bind.map) != null ? ref1.sourceShader(this._shaders.shader()) : void 0);
    material = this._helpers.shade.pipeline();
    faceMaterial = material || shaded;
    lineMaterial = material || false;
    ref2 = this._helpers.position, swizzle = ref2.swizzle, swizzle2 = ref2.swizzle2;
    uniforms = Util.JS.merge(unitUniforms, lineUniforms, styleUniforms, wireUniforms);
    zUnits = lineX || lineY ? -50 : 0;
    if (lineX) {
      this.lineX = this._renderables.make('line', {
        uniforms: uniforms,
        samples: width,
        strips: height,
        ribbons: depth,
        layers: items,
        position: position,
        color: color,
        zUnits: -zUnits,
        stroke: stroke,
        join: join,
        mask: mask,
        material: lineMaterial,
        proximity: proximity,
        closed: closedX || closed
      });
      objects.push(this.lineX);
    }
    if (lineY) {
      this.lineY = this._renderables.make('line', {
        uniforms: uniforms,
        samples: height,
        strips: width,
        ribbons: depth,
        layers: items,
        position: swizzle2(position, 'yxzw', 'yxzw'),
        color: swizzle(color, 'yxzw'),
        zUnits: -zUnits,
        stroke: stroke,
        join: join,
        mask: swizzle(mask, crossed ? 'xyzw' : 'yxzw'),
        material: lineMaterial,
        proximity: proximity,
        closed: closedY || closed
      });
      objects.push(this.lineY);
    }
    if (fill) {
      uniforms = Util.JS.merge(unitUniforms, surfaceUniforms, styleUniforms);
      this.surface = this._renderables.make('surface', {
        uniforms: uniforms,
        width: width,
        height: height,
        surfaces: depth,
        layers: items,
        position: position,
        color: color,
        zUnits: zUnits,
        stroke: stroke,
        material: faceMaterial,
        mask: mask,
        map: map,
        intUV: true,
        closedX: closedX || closed,
        closedY: closedY || closed
      });
      objects.push(this.surface);
    }
    this._helpers.visible.make();
    return this._helpers.object.make(objects);
  };

  Surface.prototype.made = function() {
    return this.resize();
  };

  Surface.prototype.unmake = function() {
    this._helpers.bind.unmake();
    this._helpers.visible.unmake();
    this._helpers.object.unmake();
    return this.lineX = this.lineY = this.surface = null;
  };

  Surface.prototype.change = function(changed, touched, init) {
    var c, color, fill, lineBias, ref, zBias;
    if (changed['geometry.points'] || changed['mesh.shaded'] || changed['mesh.fill'] || changed['line.stroke'] || changed['line.join'] || touched['grid']) {
      return this.rebuild();
    }
    if (changed['style.color'] || changed['style.zBias'] || changed['mesh.fill'] || changed['mesh.lineBias'] || init) {
      ref = this.props, fill = ref.fill, color = ref.color, zBias = ref.zBias, lineBias = ref.lineBias;
      this.wireZBias.value = zBias + (fill ? lineBias : 0);
      this.wireColor.copy(color);
      if (fill) {
        c = this.wireScratch;
        c.setRGB(color.x, color.y, color.z);
        c.convertGammaToLinear().multiplyScalar(.75).convertLinearToGamma();
        this.wireColor.x = c.r;
        this.wireColor.y = c.g;
        this.wireColor.z = c.b;
      }
    }
    if (changed['line.proximity']) {
      if ((this.proximity != null) !== (this.props.proximity != null)) {
        return this.rebuild();
      }
    }
  };

  return Surface;

})(Primitive);

module.exports = Surface;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,

},{"../../../util":175,"../../primitive":44}],69:[function(require,module,exports){
var Primitive, Ticks, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Primitive = require('../../primitive');

Util = require('../../../util');

Ticks = (function(superClass) {
  extend(Ticks, superClass);

  function Ticks() {
    return Ticks.__super__.constructor.apply(this, arguments);
  }

  Ticks.traits = ['node', 'object', 'visible', 'style', 'line', 'ticks', 'geometry', 'position', 'bind', 'shade'];

  Ticks.prototype.init = function() {
    return this.tickStrip = this.line = null;
  };

  Ticks.prototype.resize = function() {
    var active, dims, layers, ribbons, strips;
    if (this.bind.points == null) {
      return;
    }
    dims = this.bind.points.getActiveDimensions();
    active = +(dims.items > 0);
    strips = dims.width * active;
    ribbons = dims.height * active;
    layers = dims.depth * active;
    this.line.geometry.clip(2, strips, ribbons, layers);
    return this.tickStrip.set(0, strips - 1);
  };

  Ticks.prototype.make = function() {
    var color, dims, join, layers, lineUniforms, mask, material, p, position, positionUniforms, ref, ref1, ribbons, strips, stroke, styleUniforms, swizzle, swizzle2, uniforms, unitUniforms;
    this._helpers.bind.make([
      {
        to: 'geometry.points',
        trait: 'source'
      }, {
        to: 'geometry.colors',
        trait: 'source'
      }
    ]);
    if (this.bind.points == null) {
      return;
    }
    styleUniforms = this._helpers.style.uniforms();
    lineUniforms = this._helpers.line.uniforms();
    unitUniforms = this._inherit('unit').getUnitUniforms();
    uniforms = Util.JS.merge(lineUniforms, styleUniforms, unitUniforms);
    positionUniforms = {
      tickEpsilon: this.node.attributes['ticks.epsilon'],
      tickSize: this.node.attributes['ticks.size'],
      tickNormal: this.node.attributes['ticks.normal'],
      tickStrip: this._attributes.make(this._types.vec2(0, 0)),
      worldUnit: uniforms.worldUnit,
      focusDepth: uniforms.focusDepth
    };
    this.tickStrip = positionUniforms.tickStrip.value;
    p = position = this._shaders.shader();
    p.require(this.bind.points.sourceShader(this._shaders.shader()));
    p.require(this._helpers.position.pipeline(this._shaders.shader()));
    p.pipe('ticks.position', positionUniforms);
    ref = this.props, stroke = ref.stroke, join = ref.join;
    dims = this.bind.points.getDimensions();
    strips = dims.width;
    ribbons = dims.height;
    layers = dims.depth;
    if (this.bind.colors) {
      color = this._shaders.shader();
      this.bind.colors.sourceShader(color);
    }
    mask = this._helpers.object.mask();
    material = this._helpers.shade.pipeline() || false;
    ref1 = this._helpers.position, swizzle = ref1.swizzle, swizzle2 = ref1.swizzle2;
    this.line = this._renderables.make('line', {
      uniforms: uniforms,
      samples: 2,
      strips: strips,
      ribbons: ribbons,
      layers: layers,
      position: position,
      color: color,
      stroke: stroke,
      join: join,
      mask: swizzle(mask, 'yzwx'),
      material: material
    });
    this._helpers.visible.make();
    return this._helpers.object.make([this.line]);
  };

  Ticks.prototype.made = function() {
    return this.resize();
  };

  Ticks.prototype.unmake = function() {
    this.line = null;
    this._helpers.visible.unmake();
    return this._helpers.object.unmake();
  };

  Ticks.prototype.change = function(changed, touched, init) {
    if (changed['geometry.points'] || changed['line.stroke'] || changed['line.join']) {
      return this.rebuild();
    }
  };

  return Ticks;

})(Primitive);

module.exports = Ticks;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxkcmF3XFx0aWNrcy5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccHJpbWl0aXZlc1xcdHlwZXNcXGRyYXdcXHRpY2tzLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLHNCQUFBO0VBQUE7OztBQUFBLFNBQUEsR0FBWSxPQUFBLENBQVEsaUJBQVI7O0FBQ1osSUFBQSxHQUFZLE9BQUEsQ0FBUSxlQUFSOztBQUVOOzs7Ozs7O0VBQ0osS0FBQyxDQUFBLE1BQUQsR0FBVSxDQUFDLE1BQUQsRUFBUyxRQUFULEVBQW1CLFNBQW5CLEVBQThCLE9BQTlCLEVBQXVDLE1BQXZDLEVBQStDLE9BQS9DLEVBQXdELFVBQXhELEVBQW9FLFVBQXBFLEVBQWdGLE1BQWhGLEVBQXdGLE9BQXhGOztrQkFFVixJQUFBLEdBQU0sU0FBQTtXQUNKLElBQUMsQ0FBQSxTQUFELEdBQWEsSUFBQyxDQUFBLElBQUQsR0FBUTtFQURqQjs7a0JBR04sTUFBQSxHQUFRLFNBQUE7QUFDTixRQUFBO0lBQUEsSUFBYyx3QkFBZDtBQUFBLGFBQUE7O0lBQ0EsSUFBQSxHQUFPLElBQUMsQ0FBQSxJQUFJLENBQUMsTUFBTSxDQUFDLG1CQUFiLENBQUE7SUFFUCxNQUFBLEdBQVUsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFMLEdBQWEsQ0FBZDtJQUNYLE1BQUEsR0FBVSxJQUFJLENBQUMsS0FBTCxHQUFjO0lBQ3hCLE9BQUEsR0FBVSxJQUFJLENBQUMsTUFBTCxHQUFjO0lBQ3hCLE1BQUEsR0FBVSxJQUFJLENBQUMsS0FBTCxHQUFjO0lBRXhCLElBQUMsQ0FBQSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQWYsQ0FBb0IsQ0FBcEIsRUFBdUIsTUFBdkIsRUFBK0IsT0FBL0IsRUFB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

},{"../../../util":175,"../../primitive":44}],70:[function(require,module,exports){
var Primitive, Util, Vector,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Primitive = require('../../primitive');

Util = require('../../../util');

Vector = (function(superClass) {
  extend(Vector, superClass);

  Vector.traits = ['node', 'object', 'visible', 'style', 'line', 'arrow', 'geometry', 'position', 'bind', 'shade'];

  function Vector(node, context, helpers) {
    Vector.__super__.constructor.call(this, node, context, helpers);
    this.line = this.arrows = null;
  }

  Vector.prototype.resize = function() {
    var arrow, dims, i, layers, len, ref, results, ribbons, samples, strips;
    if (this.bind.points == null) {
      return;
    }
    dims = this.bind.points.getActiveDimensions();
    samples = dims.items;
    strips = dims.width;
    ribbons = dims.height;
    layers = dims.depth;
    this.line.geometry.clip(samples, strips, ribbons, layers);
    ref = this.arrows;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      arrow = ref[i];
      results.push(arrow.geometry.clip(samples, strips, ribbons, layers));
    }
    return results;
  };

  Vector.prototype.make = function() {
    var arrowUniforms, color, dims, end, join, layers, lineUniforms, mask, material, position, proximity, ref, ref1, ref2, ribbons, samples, start, strips, stroke, styleUniforms, swizzle, swizzle2, uniforms, unitUniforms;
    this._helpers.bind.make([
      {
        to: 'geometry.points',
        trait: 'source'
      }, {
        to: 'geometry.colors',
        trait: 'source'
      }
    ]);
    if (this.bind.points == null) {
      return;
    }
    position = this._shaders.shader();
    this.bind.points.sourceShader(position);
    this._helpers.position.pipeline(position);
    styleUniforms = this._helpers.style.uniforms();
    lineUniforms = this._helpers.line.uniforms();
    arrowUniforms = this._helpers.arrow.uniforms();
    unitUniforms = this._inherit('unit').getUnitUniforms();
    ref = this.props, start = ref.start, end = ref.end;
    ref1 = this.props, stroke = ref1.stroke, join = ref1.join, proximity = ref1.proximity;
    this.proximity = proximity;
    dims = this.bind.points.getDimensions();
    samples = dims.items;
    strips = dims.width;
    ribbons = dims.height;
    layers = dims.depth;
    if (this.bind.colors) {
      color = this._shaders.shader();
      this.bind.colors.sourceShader(color);
    }
    mask = this._helpers.object.mask();
    material = this._helpers.shade.pipeline() || false;
    ref2 = this._helpers.position, swizzle = ref2.swizzle, swizzle2 = ref2.swizzle2;
    position = swizzle2(position, 'yzwx', 'yzwx');
    color = swizzle(color, 'yzwx');
    mask = swizzle(mask, 'yzwx');
    material = swizzle(material, 'yzwx');
    uniforms = Util.JS.merge(arrowUniforms, lineUniforms, styleUniforms, unitUniforms);
    this.line = this._renderables.make('line', {
      uniforms: uniforms,
      samples: samples,
      ribbons: ribbons,
      strips: strips,
      layers: layers,
      position: position,
      color: color,
      clip: start || end,
      stroke: stroke,
      join: join,
      proximity: proximity,
      mask: mask,
      material: material
    });
    this.arrows = [];
    if (start) {
      this.arrows.push(this._renderables.make('arrow', {
        uniforms: uniforms,
        flip: true,
        samples: samples,
        ribbons: ribbons,
        strips: strips,
        layers: layers,
        position: position,
        color: color,
        mask: mask,
        material: material
      }));
    }
    if (end) {
      this.arrows.push(this._renderables.make('arrow', {
        uniforms: uniforms,
        samples: samples,
        ribbons: ribbons,
        strips: strips,
        layers: layers,
        position: position,
        color: color,
        mask: mask,
        material: material
      }));
    }
    this._helpers.visible.make();
    return this._helpers.object.make(this.arrows.concat([this.line]));
  };

  Vector.prototype.made = function() {
    return this.resize();
  };

  Vector.prototype.unmake = function() {
    this._helpers.bind.unmake();
    this._helpers.visible.unmake();
    this._helpers.object.unmake();
    return this.line = this.arrows = null;
  };

  Vector.prototype.change = function(changed, touched, init) {
    if (changed['geometry.points'] || changed['line.stroke'] || changed['line.join'] || changed['arrow.start'] || changed['arrow.end']) {
      return this.rebuild();
    }
    if (changed['line.proximity']) {
      if ((this.proximity != null) !== (this.props.proximity != null)) {
        return this.rebuild();
      }
    }
  };

  return Vector;

})(Primitive);

module.exports = Vector;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxkcmF3XFx2ZWN0b3IuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxkcmF3XFx2ZWN0b3IuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsdUJBQUE7RUFBQTs7O0FBQUEsU0FBQSxHQUFZLE9BQUEsQ0FBUSxpQkFBUjs7QUFDWixJQUFBLEdBQVksT0FBQSxDQUFRLGVBQVI7O0FBRU47OztFQUNKLE1BQUMsQ0FBQSxNQUFELEdBQVUsQ0FBQyxNQUFELEVBQVMsUUFBVCxFQUFtQixTQUFuQixFQUE4QixPQUE5QixFQUF1QyxNQUF2QyxFQUErQyxPQUEvQyxFQUF3RCxVQUF4RCxFQUFvRSxVQUFwRSxFQUFnRixNQUFoRixFQUF3RixPQUF4Rjs7RUFFRyxnQkFBQyxJQUFELEVBQU8sT0FBUCxFQUFnQixPQUFoQjtJQUNYLHdDQUFNLElBQU4sRUFBWSxPQUFaLEVBQXFCLE9BQXJCO0lBRUEsSUFBQyxDQUFBLElBQUQsR0FBUSxJQUFDLENBQUEsTUFBRCxHQUFVO0VBSFA7O21CQUtiLE1BQUEsR0FBUSxTQUFBO0FBQ04sUUFBQTtJQUFBLElBQWMsd0JBQWQ7QUFBQSxhQUFBOztJQUNBLElBQUEsR0FBTyxJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxtQkFBYixDQUFBO0lBRVAsT0FBQSxHQUFVLElBQUksQ0FBQztJQUNmLE1BQUEsR0FBVSxJQUFJLENBQUM7SUFDZixPQUFBLEdBQVUsSUFBSSxDQUFDO0lBQ2YsTUFBQSxHQUFVLElBQUksQ0FBQztJQUVmLElBQUMsQ0FBQSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQWYsQ0FBb0IsT0FBcEIsRUFBNkIsTUFBN0IsRUFBcUMsT0FBckMsRUFBOEMsTUFB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

},{"../../../util":175,"../../primitive":44}],71:[function(require,module,exports){
var Util, View, helpers,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

Util = require('../../util');

View = require('./view/view');


/*

This is the general dumping ground for trait behavior.

Helpers are auto-attached to primitives that have the matching trait
 */

helpers = {
  bind: {
    make: function(slots) {
      var callback, done, i, isUnique, j, len, len1, multiple, name, optional, s, selector, slot, source, start, to, trait, unique;
      if (this.bind == null) {
        this.bind = {};
      }
      if (this.bound == null) {
        this.bound = [];
      }
      for (i = 0, len = slots.length; i < len; i++) {
        slot = slots[i];
        to = slot.to, trait = slot.trait, optional = slot.optional, unique = slot.unique, multiple = slot.multiple, callback = slot.callback;
        if (callback == null) {
          callback = this.rebuild;
        }
        name = to.split(/\./g).pop();
        selector = this._get(to);
        source = null;
        if (selector != null) {
          start = this;
          done = false;
          while (!done) {
            start = source = this._attach(selector, trait, callback, this, start, optional, multiple);
            isUnique = unique && ((source == null) || this.bound.indexOf(source) < 0);
            done = multiple || optional || !unique || isUnique;
          }
        }
        if (source != null) {
          if (this.resize != null) {
            this._listen(source, 'source.resize', this.resize);
          }
          if (callback) {
            this._listen(source, 'source.rebuild', callback);
          }
          if (multiple) {
            for (j = 0, len1 = source.length; j < len1; j++) {
              s = source[j];
              this.bound.push(s);
            }
          } else {
            this.bound.push(source);
          }
        }
        this.bind[name] = source;
      }
      return null;
    },
    unmake: function() {
      if (!this.bind) {
        return;
      }
      delete this.bind;
      return delete this.bound;
    }
  },
  span: {
    make: function() {
      this.spanView = this._inherit('view');
      return this._listen('view', 'view.range', (function(_this) {
        return function() {
          return _this.trigger({
            type: 'span.range'
          });
        };
      })(this));
    },
    unmake: function() {
      return delete this.spanView;
    },
    get: (function() {
      var def;
      def = new THREE.Vector2(-1, 1);
      return function(prefix, dimension) {
        var range, ref, ref1;
        range = this._get(prefix + 'span.range');
        if (range != null) {
          return range;
        }
        return (ref = (ref1 = this.spanView) != null ? ref1.axis(dimension) : void 0) != null ? ref : def;
      };
    })()
  },
  scale: {
    divide: function(prefix) {
      var divide, factor;
      divide = this._get(prefix + 'scale.divide');
      factor = this._get(prefix + 'scale.factor');
      return Math.round(divide * 2.5 / factor);
    },
    generate: function(prefix, buffer, min, max) {
      var base, divide, end, factor, mode, nice, start, ticks, unit, zero;
      mode = this._get(prefix + 'scale.mode');
      divide = this._get(prefix + 'scale.divide');
      unit = this._get(prefix + 'scale.unit');
      base = this._get(prefix + 'scale.base');
      factor = this._get(prefix + 'scale.factor');
      start = this._get(prefix + 'scale.start');
      end = this._get(prefix + 'scale.end');
      zero = this._get(prefix + 'scale.zero');
      nice = this._get(prefix + 'scale.nice');
      ticks = Util.Ticks.make(mode, min, max, divide, unit, base, factor, start, end, zero, nice);
      buffer.copy(ticks);
      return ticks;
    }
  },
  style: {
    uniforms: function() {
      return {
        styleColor: this.node.attributes['style.color'],
        styleOpacity: this.node.attributes['style.opacity'],
        styleZBias: this.node.attributes['style.zBias'],
        styleZIndex: this.node.attributes['style.zIndex']
      };
    }
  },
  arrow: {
    uniforms: function() {
      var end, size, space, start, style;
      start = this.props.start;
      end = this.props.end;
      space = this._attributes.make(this._types.number(1.25 / (start + end)));
      style = this._attributes.make(this._types.vec2(+start, +end));
      size = this.node.attributes['arrow.size'];
      return {
        clipStyle: style,
        clipRange: size,
        clipSpace: space,
        arrowSpace: space,
        arrowSize: size
      };
    }
  },
  point: {
    uniforms: function() {
      return {
        pointSize: this.node.attributes['point.size'],
        pointDepth: this.node.attributes['point.depth']
      };
    }
  },
  line: {
    uniforms: function() {
      return {
        lineWidth: this.node.attributes['line.width'],
        lineDepth: this.node.attributes['line.depth'],
        lineProximity: this.node.attributes['line.proximity']
      };
    }
  },
  surface: {
    uniforms: function() {
      return {};
    }
  },
  shade: {
    pipeline: function(shader) {
      var i, pass, ref;
      if (!this._inherit('fragment')) {
        return shader;
      }
      if (shader == null) {
        shader = this._shaders.shader();
      }
      for (pass = i = 0; i <= 2; pass = ++i) {
        shader = (ref = this._inherit('fragment')) != null ? ref.fragment(shader, pass) : void 0;
      }
      shader.pipe('fragment.map.rgba');
      return shader;
    },
    map: function(shader) {
      if (!shader) {
        return shader;
      }
      return shader = this._shaders.shader().pipe('mesh.map.uvwo').pipe(shader);
    }
  },
  position: {
    pipeline: function(shader) {
      var i, pass, ref;
      if (!this._inherit('vertex')) {
        return shader;
      }
      if (shader == null) {
        shader = this._shaders.shader();
      }
      for (pass = i = 0; i <= 3; pass = ++i) {
        shader = (ref = this._inherit('vertex')) != null ? ref.vertex(shader, pass) : void 0;
      }
      return shader;
    },
    swizzle: function(shader, order) {
      if (shader) {
        return this._shaders.shader().pipe(Util.GLSL.swizzleVec4(order)).pipe(shader);
      }
    },
    swizzle2: function(shader, order1, order2) {
      if (shader) {
        return this._shaders.shader().split().pipe(Util.GLSL.swizzleVec4(order1)).next().pipe(Util.GLSL.swizzleVec4(order2)).join().pipe(shader);
      }
    }
  },
  visible: {
    make: function() {
      var e, onVisible, visible, visibleParent;
      e = {
        type: 'visible.change'
      };
      visible = null;
      this.setVisible = function(vis) {
        if (vis != null) {
          visible = vis;
        }
        return onVisible();
      };
      onVisible = (function(_this) {
        return function() {
          var last, ref, self;
          last = _this.isVisible;
          self = (ref = visible != null ? visible : _this._get('object.visible')) != null ? ref : true;
          if (typeof visibleParent !== "undefined" && visibleParent !== null) {
            self && (self = visibleParent.isVisible);
          }
          _this.isVisible = self;
          if (last !== _this.isVisible) {
            return _this.trigger(e);
          }
        };
      })(this);
      visibleParent = this._inherit('visible');
      if (visibleParent) {
        this._listen(visibleParent, 'visible.change', onVisible);
      }
      if (this.is('object')) {
        this._listen(this.node, 'change:object', onVisible);
      }
      return onVisible();
    },
    unmake: function() {
      return delete this.isVisible;
    }
  },
  active: {
    make: function() {
      var active, activeParent, e, onActive;
      e = {
        type: 'active.change'
      };
      active = null;
      this.setActive = function(act) {
        if (act != null) {
          active = act;
        }
        return onActive();
      };
      onActive = (function(_this) {
        return function() {
          var last, ref, self;
          last = _this.isActive;
          self = (ref = active != null ? active : _this._get('entity.active')) != null ? ref : true;
          if (typeof activeParent !== "undefined" && activeParent !== null) {
            self && (self = activeParent.isActive);
          }
          _this.isActive = self;
          if (last !== _this.isActive) {
            return _this.trigger(e);
          }
        };
      })(this);
      activeParent = this._inherit('active');
      if (activeParent) {
        this._listen(activeParent, 'active.change', onActive);
      }
      if (this.is('entity')) {
        this._listen(this.node, 'change:entity', onActive);
      }
      return onActive();
    },
    unmake: function() {
      return delete this.isActive;
    }
  },
  object: {
    make: function(objects) {
      var blending, hasStyle, i, last, len, object, objectScene, onChange, onVisible, opacity, ref, zOrder, zTest, zWrite;
      this.objects = objects != null ? objects : [];
      this.renders = this.objects.reduce((function(a, b) {
        return a.concat(b.renders);
      }), []);
      objectScene = this._inherit('scene');
      opacity = blending = zOrder = null;
      hasStyle = indexOf.call(this.traits, 'style') >= 0;
      opacity = 1;
      blending = THREE.NormalBlending;
      zWrite = true;
      zTest = true;
      if (hasStyle) {
        opacity = this.props.opacity;
        blending = this.props.blending;
        zOrder = this.props.zOrder;
        zWrite = this.props.zWrite;
        zTest = this.props.zTest;
      }
      onChange = (function(_this) {
        return function(event) {
          var changed, refresh;
          changed = event.changed;
          refresh = null;
          if (changed['style.opacity']) {
            refresh = opacity = _this.props.opacity;
          }
          if (changed['style.blending']) {
            refresh = blending = _this.props.blending;
          }
          if (changed['style.zOrder']) {
            refresh = zOrder = _this.props.zOrder;
          }
          if (changed['style.zWrite']) {
            refresh = zWrite = _this.props.zWrite;
          }
          if (changed['style.zTest']) {
            refresh = zTest = _this.props.zTest;
          }
          if (refresh != null) {
            return onVisible();
          }
        };
      })(this);
      last = null;
      onVisible = (function(_this) {
        return function() {
          var i, j, l, len, len1, len2, o, order, ref, ref1, ref2, ref3, results, results1, results2, visible;
          order = zOrder != null ? -zOrder : _this.node.order;
          visible = ((ref = _this.isVisible) != null ? ref : true) && opacity > 0;
          if (visible) {
            if (hasStyle) {
              ref1 = _this.objects;
              results = [];
              for (i = 0, len = ref1.length; i < len; i++) {
                o = ref1[i];
                o.show(opacity < 1, blending, order);
                results.push(o.depth(zWrite, zTest));
              }
              return results;
            } else {
              ref2 = _this.objects;
              results1 = [];
              for (j = 0, len1 = ref2.length; j < len1; j++) {
                o = ref2[j];
                results1.push(o.show(true, blending, order));
              }
              return results1;
            }
          } else {
            ref3 = _this.objects;
            results2 = [];
            for (l = 0, len2 = ref3.length; l < len2; l++) {
              o = ref3[l];
              results2.push(o.hide());
            }
            return results2;
          }
        };
      })(this);
      this._listen(this.node, 'change:style', onChange);
      this._listen(this.node, 'reindex', onVisible);
      this._listen(this, 'visible.change', onVisible);
      ref = this.objects;
      for (i = 0, len = ref.length; i < len; i++) {
        object = ref[i];
        objectScene.adopt(object);
      }
      return onVisible();
    },
    unmake: function(dispose) {
      var i, j, len, len1, object, objectScene, ref, ref1, results;
      if (dispose == null) {
        dispose = true;
      }
      if (!this.objects) {
        return;
      }
      objectScene = this._inherit('scene');
      ref = this.objects;
      for (i = 0, len = ref.length; i < len; i++) {
        object = ref[i];
        objectScene.unadopt(object);
      }
      if (dispose) {
        ref1 = this.objects;
        results = [];
        for (j = 0, len1 = ref1.length; j < len1; j++) {
          object = ref1[j];
          results.push(object.dispose());
        }
        return results;
      }
    },
    mask: function() {
      var mask, shader;
      if (!(mask = this._inherit('mask'))) {
        return;
      }
      return shader = mask.mask(shader);
    }
  },
  unit: {
    make: function() {
      var bottom, focusDepth, handler, pixelRatio, pixelUnit, renderAspect, renderHeight, renderOdd, renderScale, renderScaleInv, renderWidth, root, top, viewHeight, viewWidth, worldUnit, π;
      π = Math.PI;
      this.unitUniforms = {
        renderScaleInv: renderScaleInv = this._attributes.make(this._types.number(1)),
        renderScale: renderScale = this._attributes.make(this._types.number(1)),
        renderAspect: renderAspect = this._attributes.make(this._types.number(1)),
        renderWidth: renderWidth = this._attributes.make(this._types.number(0)),
        renderHeight: renderHeight = this._attributes.make(this._types.number(0)),
        viewWidth: viewWidth = this._attributes.make(this._types.number(0)),
        viewHeight: viewHeight = this._attributes.make(this._types.number(0)),
        pixelRatio: pixelRatio = this._attributes.make(this._types.number(1)),
        pixelUnit: pixelUnit = this._attributes.make(this._types.number(1)),
        worldUnit: worldUnit = this._attributes.make(this._types.number(1)),
        focusDepth: focusDepth = this._attributes.make(this._types.number(1)),
        renderOdd: renderOdd = this._attributes.make(this._types.vec2())
      };
      top = new THREE.Vector3();
      bottom = new THREE.Vector3();
      handler = (function(_this) {
        return function() {
          var camera, dpr, focus, fov, fovtan, isAbsolute, m, measure, pixel, ref, rscale, scale, size, world;
          if ((size = typeof root !== "undefined" && root !== null ? root.getSize() : void 0) == null) {
            return;
          }
          π = Math.PI;
          scale = _this.props.scale;
          fov = _this.props.fov;
          focus = (ref = _this.props.focus) != null ? ref : _this.inherit('unit').props.focus;
          isAbsolute = scale === null;
          measure = 1;
          if ((camera = typeof root !== "undefined" && root !== null ? root.getCamera() : void 0)) {
            m = camera.projectionMatrix;
            top.set(0, -.5, 1).applyMatrix4(m);
            bottom.set(0, .5, 1).applyMatrix4(m);
            top.sub(bottom);
            measure = top.y;
          }
          dpr = size.renderHeight / size.viewHeight;
          fovtan = fov != null ? measure * Math.tan(fov * π / 360) : 1;
          pixel = isAbsolute ? dpr : size.renderHeight / scale * fovtan;
          rscale = size.renderHeight * measure / 2;
          world = pixel / rscale;
          viewWidth.value = size.viewWidth;
          viewHeight.value = size.viewHeight;
          renderWidth.value = size.renderWidth;
          renderHeight.value = size.renderHeight;
          renderAspect.value = size.aspect;
          renderScale.value = rscale;
          renderScaleInv.value = 1 / rscale;
          pixelRatio.value = dpr;
          pixelUnit.value = pixel;
          worldUnit.value = world;
          focusDepth.value = focus;
          return renderOdd.value.set(size.renderWidth % 2, size.renderHeight % 2).multiplyScalar(.5);
        };
      })(this);
      root = this.is('root') ? this : this._inherit('root');
      this._listen(root, 'root.update', handler);
      return handler();
    },
    unmake: function() {
      return delete this.unitUniforms;
    },
    get: function() {
      var k, ref, u, v;
      u = {};
      ref = this.unitUniforms;
      for (k in ref) {
        v = ref[k];
        u[k] = v.value;
      }
      return u;
    },
    uniforms: function() {
      return this.unitUniforms;
    }
  }
};

module.exports = function(object, traits) {
  var h, i, key, len, method, methods, trait;
  h = {};
  for (i = 0, len = traits.length; i < len; i++) {
    trait = traits[i];
    if (!(methods = helpers[trait])) {
      continue;
    }
    h[trait] = {};
    for (key in methods) {
      method = methods[key];
      h[trait][key] = method.bind(object);
    }
  }
  return h;
};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,

},{"../../util":175,"./view/view":122}],72:[function(require,module,exports){
var Model;

Model = require('../../model');

exports.Classes = require('./classes');

exports.Types = require('./types');

exports.Traits = require('./traits');

exports.Helpers = require('./helpers');

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxpbmRleC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccHJpbWl0aXZlc1xcdHlwZXNcXGluZGV4LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBOztBQUFBLEtBQUEsR0FBUSxPQUFBLENBQVEsYUFBUjs7QUFFUixPQUFPLENBQUMsT0FBUixHQUFrQixPQUFBLENBQVEsV0FBUjs7QUFDbEIsT0FBTyxDQUFDLEtBQVIsR0FBa0IsT0FBQSxDQUFRLFNBQVI7O0FBQ2xCLE9BQU8sQ0FBQyxNQUFSLEdBQWtCLE9BQUEsQ0FBUSxVQUFSOztBQUNsQixPQUFPLENBQUMsT0FBUixHQUFrQixPQUFBLENBQVEsV0FBUiJ9

},{"../../model":34,"./classes":52,"./helpers":71,"./traits":107,"./types":115}],73:[function(require,module,exports){
var Clamp, Operator,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Operator = require('./operator');

Clamp = (function(superClass) {
  extend(Clamp, superClass);

  function Clamp() {
    return Clamp.__super__.constructor.apply(this, arguments);
  }

  Clamp.traits = ['node', 'bind', 'operator', 'source', 'index', 'clamp'];

  Clamp.prototype.indexShader = function(shader) {
    shader.pipe(this.operator);
    return Clamp.__super__.indexShader.call(this, shader);
  };

  Clamp.prototype.sourceShader = function(shader) {
    shader.pipe(this.operator);
    return Clamp.__super__.sourceShader.call(this, shader);
  };

  Clamp.prototype.make = function() {
    var transform, uniforms;
    Clamp.__super__.make.apply(this, arguments);
    if (this.bind.source == null) {
      return;
    }
    uniforms = {
      clampLimit: this._attributes.make(this._types.vec4())
    };
    this.clampLimit = uniforms.clampLimit;
    transform = this._shaders.shader();
    transform.pipe('clamp.position', uniforms);
    return this.operator = transform;
  };

  Clamp.prototype.unmake = function() {
    return Clamp.__super__.unmake.apply(this, arguments);
  };

  Clamp.prototype.resize = function() {
    var dims;
    if (this.bind.source != null) {
      dims = this.bind.source.getActiveDimensions();
      this.clampLimit.value.set(dims.width - 1, dims.height - 1, dims.depth - 1, dims.items - 1);
    }
    return Clamp.__super__.resize.apply(this, arguments);
  };

  Clamp.prototype.change = function(changed, touched, init) {
    if (touched['operator'] || touched['clamp']) {
      return this.rebuild();
    }
  };

  return Clamp;

})(Operator);

module.exports = Clamp;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxvcGVyYXRvclxcY2xhbXAuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxvcGVyYXRvclxcY2xhbXAuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsZUFBQTtFQUFBOzs7QUFBQSxRQUFBLEdBQVcsT0FBQSxDQUFRLFlBQVI7O0FBRUw7Ozs7Ozs7RUFDSixLQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLE1BQVQsRUFBaUIsVUFBakIsRUFBNkIsUUFBN0IsRUFBdUMsT0FBdkMsRUFBZ0QsT0FBaEQ7O2tCQUVWLFdBQUEsR0FBYyxTQUFDLE1BQUQ7SUFDWixNQUFNLENBQUMsSUFBUCxDQUFZLElBQUMsQ0FBQSxRQUFiO1dBQ0EsdUNBQU0sTUFBTjtFQUZZOztrQkFJZCxZQUFBLEdBQWMsU0FBQyxNQUFEO0lBQ1osTUFBTSxDQUFDLElBQVAsQ0FBWSxJQUFDLENBQUEsUUFBYjtXQUNBLHdDQUFNLE1BQU47RUFGWTs7a0JBSWQsSUFBQSxHQUFNLFNBQUE7QUFDSixRQUFBO0lBQUEsaUNBQUEsU0FBQTtJQUNBLElBQWMsd0JBQWQ7QUFBQSxhQUFBOztJQUdBLFFBQUEsR0FDRTtNQUFBLFVBQUEsRUFBWSxJQUFDLENBQUEsV0FBVyxDQUFDLElBQWIsQ0FBa0IsSUFBQyxDQUFBLE1BQU0sQ0FBQyxJQUFSLENBQUEsQ0FBbEIsQ0FBWjs7SUFDRixJQUFDLENBQUEsVUFBRCxHQUFjLFFBQVEsQ0FBQztJQUd2QixTQUFBLEdBQVksSUFBQyxDQUFBLFFBQVEsQ0FBQyxNQUFWLENBQUE7SUFDWixTQUFTLENBQUMsSUFBVixDQUFlLGdCQUFmLEVBQWlDLFFBQWpDO1dBQ0EsSUFBQyxDQUFBLFFBQUQsR0FBWTtFQVpSOztrQkFjTixNQUFBLEdBQVEsU0FBQTtXQUNOLG1DQUFBLFNBQUE7RUFETTs7a0JBR1IsTUFBQSxHQUFRLFNBQUE7QUFDTixRQUFBO0lBQUEsSUFBRyx3QkFBSDtNQUNFLElBQUEsR0FBTyxJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxtQkFBYixDQUFBO01BQ1AsSUFBQyxDQUFBLFVBQVUsQ0FBQyxLQUFLLENBQUMsR0FBbEIsQ0FBc0IsSUFBSSxDQUFDLEtBQUwsR0FBYSxDQUFuQyxFQUFzQyxJQUFJLENBQUMsTUFBTCxHQUFjLENBQXBELEVBQXVELElBQUksQ0FBQyxLQUFMLEdBQWEsQ0FBcEUsRUFBdUUsSUFBSSxDQUFDLEtBQUwsR0FBYSxDQUFwRixFQUZGOztXQUlBLG1DQUFBLFNBQUE7RUFMTTs7a0JBT1IsTUFBQSxHQUFRLFNBQUMsT0FBRCxFQUFVLE9BQVYsRUFBbUIsSUFBbkI7SUFDTixJQUFxQixPQUFRLENBQUEsVUFBQSxDQUFSLElBQ0EsT0FBUSxDQUFBLE9BQUEsQ0FEN0I7QUFBQSxhQUFPLElBQUMsQ0FBQSxPQUFELENBQUEsRUFBUDs7RUFETTs7OztHQW5DVTs7QUF1Q3BCLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{"./operator":78}],74:[function(require,module,exports){
var Grow, Operator,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Operator = require('./operator');

Grow = (function(superClass) {
  extend(Grow, superClass);

  function Grow() {
    return Grow.__super__.constructor.apply(this, arguments);
  }

  Grow.traits = ['node', 'bind', 'operator', 'source', 'index', 'grow'];

  Grow.prototype.sourceShader = function(shader) {
    return shader.pipe(this.operator);
  };

  Grow.prototype.make = function() {
    var transform, uniforms;
    Grow.__super__.make.apply(this, arguments);
    if (this.bind.source == null) {
      return;
    }
    uniforms = {
      growScale: this.node.attributes['grow.scale'],
      growMask: this._attributes.make(this._types.vec4()),
      growAnchor: this._attributes.make(this._types.vec4())
    };
    this.growMask = uniforms.growMask.value;
    this.growAnchor = uniforms.growAnchor.value;
    transform = this._shaders.shader();
    transform.require(this.bind.source.sourceShader(this._shaders.shader()));
    transform.pipe('grow.position', uniforms);
    return this.operator = transform;
  };

  Grow.prototype.unmake = function() {
    return Grow.__super__.unmake.apply(this, arguments);
  };

  Grow.prototype.resize = function() {
    this.update();
    return Grow.__super__.resize.apply(this, arguments);
  };

  Grow.prototype.update = function() {
    var anchor, dims, i, j, key, len, m, order, results;
    dims = this.bind.source.getFutureDimensions();
    order = ['width', 'height', 'depth', 'items'];
    m = function(d, anchor) {
      return ((d || 1) - 1) * (.5 - anchor * .5);
    };
    results = [];
    for (i = j = 0, len = order.length; j < len; i = ++j) {
      key = order[i];
      anchor = this.props[key];
      this.growMask.setComponent(i, +(anchor == null));
      results.push(this.growAnchor.setComponent(i, anchor != null ? m(dims[key], anchor) : 0));
    }
    return results;
  };

  Grow.prototype.change = function(changed, touched, init) {
    if (touched['operator']) {
      return this.rebuild();
    }
    if (touched['grow']) {
      return this.update();
    }
  };

  return Grow;

})(Operator);

module.exports = Grow;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxvcGVyYXRvclxcZ3Jvdy5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccHJpbWl0aXZlc1xcdHlwZXNcXG9wZXJhdG9yXFxncm93LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLGNBQUE7RUFBQTs7O0FBQUEsUUFBQSxHQUFXLE9BQUEsQ0FBUSxZQUFSOztBQUVMOzs7Ozs7O0VBQ0osSUFBQyxDQUFBLE1BQUQsR0FBVSxDQUFDLE1BQUQsRUFBUyxNQUFULEVBQWlCLFVBQWpCLEVBQTZCLFFBQTdCLEVBQXVDLE9BQXZDLEVBQWdELE1BQWhEOztpQkFFVixZQUFBLEdBQWMsU0FBQyxNQUFEO1dBQ1osTUFBTSxDQUFDLElBQVAsQ0FBWSxJQUFDLENBQUEsUUFBYjtFQURZOztpQkFHZCxJQUFBLEdBQU0sU0FBQTtBQUNKLFFBQUE7SUFBQSxnQ0FBQSxTQUFBO0lBQ0EsSUFBYyx3QkFBZDtBQUFBLGFBQUE7O0lBR0EsUUFBQSxHQUNFO01BQUEsU0FBQSxFQUFZLElBQUMsQ0FBQSxJQUFJLENBQUMsVUFBVyxDQUFBLFlBQUEsQ0FBN0I7TUFDQSxRQUFBLEVBQVksSUFBQyxDQUFBLFdBQVcsQ0FBQyxJQUFiLENBQWtCLElBQUMsQ0FBQSxNQUFNLENBQUMsSUFBUixDQUFBLENBQWxCLENBRFo7TUFFQSxVQUFBLEVBQVksSUFBQyxDQUFBLFdBQVcsQ0FBQyxJQUFiLENBQWtCLElBQUMsQ0FBQSxNQUFNLENBQUMsSUFBUixDQUFBLENBQWxCLENBRlo7O0lBSUYsSUFBQyxDQUFBLFFBQUQsR0FBYyxRQUFRLENBQUMsUUFBUSxDQUFDO0lBQ2hDLElBQUMsQ0FBQSxVQUFELEdBQWMsUUFBUSxDQUFDLFVBQVUsQ0FBQztJQUdsQyxTQUFBLEdBQVksSUFBQyxDQUFBLFFBQVEsQ0FBQyxNQUFWLENBQUE7SUFDWixTQUFTLENBQUMsT0FBVixDQUFrQixJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFiLENBQTBCLElBQUMsQ0FBQSxRQUFRLENBQUMsTUFBVixDQUFBLENBQTFCLENBQWxCO0lBQ0EsU0FBUyxDQUFDLElBQVYsQ0FBZSxlQUFmLEVBQWdDLFFBQWhDO1dBRUEsSUFBQyxDQUFBLFFBQUQsR0FBWTtFQWxCUjs7aUJBb0JOLE1BQUEsR0FBUSxTQUFBO1dBQ04sa0NBQUEsU0FBQTtFQURNOztpQkFHUixNQUFBLEdBQVEsU0FBQTtJQUNOLElBQUMsQ0FBQSxNQUFELENBQUE7V0FDQSxrQ0FBQSxTQUFBO0VBRk07O2lCQUlSLE1BQUEsR0FBUSxTQUFBO0FBRUosUUFBQTtJQUFBLElBQUEsR0FBTyxJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxtQkFBYixDQUFBO0lBRVAsS0FBQSxHQUFRLENBQUMsT0FBRCxFQUFVLFFBQVYsRUFBb0IsT0FBcEIsRUFBNkIsT0FBN0I7SUFFUixDQUFBLEdBQUksU0FBQyxDQUFELEVBQUksTUFBSjthQUFnQixDQUFDLENBQUMsQ0FBQSxJQUFLLENBQU4sQ0FBQSxHQUFXLENBQVosQ0FBQSxHQUFpQixDQUFDLEVBQUEsR0FBSyxNQUFBLEdBQVMsRUFBZjtJQUFqQztBQUVKO1NBQUEsK0NBQUE7O01BQ0UsTUFBQSxHQUFTLElBQUMsQ0FBQSxLQUFNLENBQUEsR0FBQTtNQUVoQixJQUFDLENBQUEsUUFBVSxDQUFDLFlBQVosQ0FBeUIsQ0FBekIsRUFBNEIsRUFBRSxlQUE5QjttQkFDQSxJQUFDLENBQUEsVUFBVSxDQUFDLFlBQVosQ0FBeUIsQ0FBekIsRUFBK0IsY0FBSCxHQUFnQixDQUFBLENBQUUsSUFBSyxDQUFBLEdBQUEsQ0FBUCxFQUFhLE1BQWIsQ0FBaEIsR0FBMEMsQ0FBdEU7QUFKRjs7RUFSSTs7aUJBY1IsTUFBQSxHQUFRLFNBQUMsT0FBRCxFQUFVLE9BQVYsRUFBbUIsSUFBbkI7SUFDTixJQUFxQixPQUFRLENBQUEsVUFBQSxDQUE3QjtBQUFBLGFBQU8sSUFBQyxDQUFBLE9BQUQsQ0FBQSxFQUFQOztJQUVBLElBQUcsT0FBUSxDQUFBLE1BQUEsQ0FBWDthQUVFLElBQUMsQ0FBQSxNQUFELENBQUEsRUFGRjs7RUFITTs7OztHQS9DUzs7QUF1RG5CLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{"./operator":78}],75:[function(require,module,exports){
var Join, Operator, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Operator = require('./operator');

Util = require('../../../util');


/*
split:
  order:       Types.transpose('wxyz')
  axis:        Types.axis()
  overlap:     Types.int(0)
 */

Join = (function(superClass) {
  extend(Join, superClass);

  function Join() {
    return Join.__super__.constructor.apply(this, arguments);
  }

  Join.traits = ['node', 'bind', 'operator', 'source', 'index', 'join'];

  Join.prototype.indexShader = function(shader) {
    shader.pipe(this.operator);
    return Join.__super__.indexShader.call(this, shader);
  };

  Join.prototype.sourceShader = function(shader) {
    shader.pipe(this.operator);
    return Join.__super__.sourceShader.call(this, shader);
  };

  Join.prototype.getDimensions = function() {
    return this._resample(this.bind.source.getDimensions());
  };

  Join.prototype.getActiveDimensions = function() {
    return this._resample(this.bind.source.getActiveDimensions());
  };

  Join.prototype.getFutureDimensions = function() {
    return this._resample(this.bind.source.getFutureDimensions());
  };

  Join.prototype.getIndexDimensions = function() {
    return this._resample(this.bind.source.getIndexDimensions());
  };

  Join.prototype._resample = function(dims) {
    var axis, dim, i, index, j, labels, len, length, mapped, order, out, overlap, product, ref, set, stride;
    order = this.order;
    axis = this.axis;
    overlap = this.overlap;
    length = this.length;
    stride = this.stride;
    labels = ['width', 'height', 'depth', 'items'];
    mapped = order.map(function(x) {
      return labels[x - 1];
    });
    index = order.indexOf(axis);
    set = (function() {
      var j, len, results;
      results = [];
      for (j = 0, len = mapped.length; j < len; j++) {
        dim = mapped[j];
        results.push(dims[dim]);
      }
      return results;
    })();
    product = ((ref = set[index + 1]) != null ? ref : 1) * stride;
    set.splice(index, 2, product);
    set = set.slice(0, 3);
    set.push(1);
    out = {};
    for (i = j = 0, len = mapped.length; j < len; i = ++j) {
      dim = mapped[i];
      out[dim] = set[i];
    }
    return out;
  };

  Join.prototype.make = function() {
    var axis, dims, index, labels, length, major, order, overlap, permute, rest, stride, transform, uniforms;
    Join.__super__.make.apply(this, arguments);
    if (this.bind.source == null) {
      return;
    }
    order = this.props.order;
    axis = this.props.axis;
    overlap = this.props.overlap;

    /*
    Calculate index transform
    
    order: wxyz
    length: 3
    overlap: 1
    
    axis: w
    index: 0
    rest: 00xy
    
    axis: x
    index: 1
    rest: w00y
    
    axis: y
    index: 2
    rest: wx00
    
    axis: z
    index: 3
    rest: wxy0
     */
    permute = order.join('');
    if (axis == null) {
      axis = order[0];
    }
    index = permute.indexOf(axis);
    rest = permute.replace(axis, '00').substring(0, 4);
    labels = [null, 'width', 'height', 'depth', 'items'];
    major = labels[axis];
    dims = this.bind.source.getDimensions();
    length = dims[major];
    overlap = Math.min(length - 1, overlap);
    stride = length - overlap;
    uniforms = {
      joinStride: this._attributes.make(this._types.number(stride)),
      joinStrideInv: this._attributes.make(this._types.number(1 / stride))
    };
    transform = this._shaders.shader();
    transform.require(Util.GLSL.swizzleVec4(axis, 1));
    transform.require(Util.GLSL.swizzleVec4(rest, 4));
    transform.require(Util.GLSL.injectVec4([index, index + 1]));
    transform.pipe('join.position', uniforms);
    transform.pipe(Util.GLSL.invertSwizzleVec4(order));
    this.operator = transform;
    this.order = order;
    this.axis = axis;
    this.overlap = overlap;
    this.length = length;
    return this.stride = stride;
  };

  Join.prototype.unmake = function() {
    return Join.__super__.unmake.apply(this, arguments);
  };

  Join.prototype.change = function(changed, touched, init) {
    if (touched['join'] || touched['operator']) {
      return this.rebuild();
    }
  };

  return Join;

})(Operator);

module.exports = Join;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxvcGVyYXRvclxcam9pbi5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccHJpbWl0aXZlc1xcdHlwZXNcXG9wZXJhdG9yXFxqb2luLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLG9CQUFBO0VBQUE7OztBQUFBLFFBQUEsR0FBVyxPQUFBLENBQVEsWUFBUjs7QUFDWCxJQUFBLEdBQVcsT0FBQSxDQUFRLGVBQVI7OztBQUVYOzs7Ozs7O0FBT007Ozs7Ozs7RUFDSixJQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLE1BQVQsRUFBaUIsVUFBakIsRUFBNkIsUUFBN0IsRUFBdUMsT0FBdkMsRUFBZ0QsTUFBaEQ7O2lCQUVWLFdBQUEsR0FBYyxTQUFDLE1BQUQ7SUFDWixNQUFNLENBQUMsSUFBUCxDQUFZLElBQUMsQ0FBQSxRQUFiO1dBQ0Esc0NBQU0sTUFBTjtFQUZZOztpQkFJZCxZQUFBLEdBQWMsU0FBQyxNQUFEO0lBQ1osTUFBTSxDQUFDLElBQVAsQ0FBWSxJQUFDLENBQUEsUUFBYjtXQUNBLHVDQUFNLE1BQU47RUFGWTs7aUJBSWQsYUFBQSxHQUFxQixTQUFBO1dBQU0sSUFBQyxDQUFBLFNBQUQsQ0FBVyxJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFiLENBQUEsQ0FBWDtFQUFOOztpQkFDckIsbUJBQUEsR0FBcUIsU0FBQTtXQUFNLElBQUMsQ0FBQSxTQUFELENBQVcsSUFBQyxDQUFBLElBQUksQ0FBQyxNQUFNLENBQUMsbUJBQWIsQ0FBQSxDQUFYO0VBQU47O2lCQUNyQixtQkFBQSxHQUFxQixTQUFBO1dBQU0sSUFBQyxDQUFBLFNBQUQsQ0FBVyxJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxt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

},{"../../../util":175,"./operator":78}],76:[function(require,module,exports){
var Lerp, Operator, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Operator = require('./operator');

Util = require('../../../util');

Lerp = (function(superClass) {
  extend(Lerp, superClass);

  function Lerp() {
    return Lerp.__super__.constructor.apply(this, arguments);
  }

  Lerp.traits = ['node', 'bind', 'operator', 'source', 'index', 'lerp', 'sampler:x', 'sampler:y', 'sampler:z', 'sampler:w'];

  Lerp.prototype.indexShader = function(shader) {
    shader.pipe(this.indexer);
    return Lerp.__super__.indexShader.call(this, shader);
  };

  Lerp.prototype.sourceShader = function(shader) {
    return shader.pipe(this.operator);
  };

  Lerp.prototype.getDimensions = function() {
    return this._resample(this.bind.source.getDimensions());
  };

  Lerp.prototype.getActiveDimensions = function() {
    return this._resample(this.bind.source.getActiveDimensions());
  };

  Lerp.prototype.getFutureDimensions = function() {
    return this._resample(this.bind.source.getFutureDimensions());
  };

  Lerp.prototype.getIndexDimensions = function() {
    return this._resample(this.bind.source.getIndexDimensions());
  };

  Lerp.prototype._resample = function(dims) {
    var c, p, r;
    r = this.resampled;
    c = this.centered;
    p = this.padding;
    if (this.relativeSize) {
      if (!c.items) {
        dims.items--;
      }
      if (!c.width) {
        dims.width--;
      }
      if (!c.height) {
        dims.height--;
      }
      if (!c.depth) {
        dims.depth--;
      }
      if (r.items != null) {
        dims.items *= r.items;
      }
      if (r.width != null) {
        dims.width *= r.width;
      }
      if (r.height != null) {
        dims.height *= r.height;
      }
      if (r.depth != null) {
        dims.depth *= r.depth;
      }
      if (!c.items) {
        dims.items++;
      }
      if (!c.width) {
        dims.width++;
      }
      if (!c.height) {
        dims.height++;
      }
      if (!c.depth) {
        dims.depth++;
      }
      dims.items -= p.items * 2;
      dims.width -= p.width * 2;
      dims.height -= p.height * 2;
      dims.depth -= p.depth * 2;
    } else {
      if (r.items != null) {
        dims.items = r.items;
      }
      if (r.width != null) {
        dims.width = r.width;
      }
      if (r.height != null) {
        dims.height = r.height;
      }
      if (r.depth != null) {
        dims.depth = r.depth;
      }
    }
    dims.items = Math.max(0, Math.floor(dims.items));
    dims.width = Math.max(0, Math.floor(dims.width));
    dims.height = Math.max(0, Math.floor(dims.height));
    dims.depth = Math.max(0, Math.floor(dims.depth));
    return dims;
  };

  Lerp.prototype.make = function() {
    var any, centered, depth, height, i, id, indexer, items, j, k, key, len, len1, operator, ref, ref1, ref2, relativeSize, resize, sampler, size, uniforms, vec, width;
    Lerp.__super__.make.apply(this, arguments);
    if (this.bind.source == null) {
      return;
    }
    ref = this.props, size = ref.size, items = ref.items, width = ref.width, height = ref.height, depth = ref.depth;
    relativeSize = size === this.node.attributes['lerp.size']["enum"].relative;
    this.resampled = {};
    if (items != null) {
      this.resampled.items = items;
    }
    if (width != null) {
      this.resampled.width = width;
    }
    if (height != null) {
      this.resampled.height = height;
    }
    if (depth != null) {
      this.resampled.depth = depth;
    }
    this.centered = {};
    this.centered.items = this.props.centeredW;
    this.centered.width = this.props.centeredX;
    this.centered.height = this.props.centeredY;
    this.centered.depth = this.props.centeredZ;
    this.padding = {};
    this.padding.items = this.props.paddingW;
    this.padding.width = this.props.paddingX;
    this.padding.height = this.props.paddingY;
    this.padding.depth = this.props.paddingZ;
    operator = this._shaders.shader();
    indexer = this._shaders.shader();
    uniforms = {
      resampleFactor: this._attributes.make(this._types.vec4(0, 0, 0, 0)),
      resampleBias: this._attributes.make(this._types.vec4(0, 0, 0, 0))
    };
    this.resampleFactor = uniforms.resampleFactor;
    this.resampleBias = uniforms.resampleBias;
    resize = (items != null) || (width != null) || (height != null) || (depth != null);
    operator.pipe('resample.padding', uniforms);
    vec = [];
    any = false;
    ref1 = ['width', 'height', 'depth', 'items'];
    for (i = j = 0, len = ref1.length; j < len; i = ++j) {
      key = ref1[i];
      centered = this.centered[key];
      any || (any = centered);
      vec[i] = centered ? "0.5" : "0.0";
    }
    if (any && resize) {
      vec = "vec4(" + vec + ")";
      operator.pipe(Util.GLSL.binaryOperator(4, '+', vec4));
      indexer.pipe(Util.GLSL.binaryOperator(4, '+', vec4));
    }
    if (resize) {
      operator.pipe('resample.relative', uniforms);
      indexer.pipe('resample.relative', uniforms);
    } else {
      operator.pipe(Util.GLSL.identity('vec4'));
      indexer.pipe(Util.GLSL.identity('vec4'));
    }
    if (any && resize) {
      operator.pipe(Util.GLSL.binaryOperator(4, '-', vec));
      indexer.pipe(Util.GLSL.binaryOperator(4, '-', vec));
    }
    sampler = this.bind.source.sourceShader(this._shaders.shader());
    ref2 = ['width', 'height', 'depth', 'items'];
    for (i = k = 0, len1 = ref2.length; k < len1; i = ++k) {
      key = ref2[i];
      id = "lerp." + key;
      if (this.props[key] != null) {
        sampler = this._shaders.shader().require(sampler);
        sampler.pipe(id, uniforms);
      }
    }
    operator.pipe(sampler);
    this.operator = operator;
    this.indexer = indexer;
    return this.relativeSize = relativeSize;
  };

  Lerp.prototype.unmake = function() {
    Lerp.__super__.unmake.apply(this, arguments);
    return this.operator = null;
  };

  Lerp.prototype.resize = function() {
    var axis, bd, bh, bi, bw, dims, rd, ref, ref1, ref2, ref3, rh, ri, rw, target;
    if (this.bind.source == null) {
      return;
    }
    dims = this.bind.source.getActiveDimensions();
    target = this.getActiveDimensions();
    axis = (function(_this) {
      return function(key) {
        var centered, pad, res;
        centered = _this.centered[key];
        pad = _this.padding[key];
        target[key] += pad * 2;
        res = centered ? dims[key] / Math.max(1, target[key]) : Math.max(1, dims[key] - 1) / Math.max(1, target[key] - 1);
        return [res, pad];
      };
    })(this);
    ref = axis('width'), rw = ref[0], bw = ref[1];
    ref1 = axis('height'), rh = ref1[0], bh = ref1[1];
    ref2 = axis('depth'), rd = ref2[0], bd = ref2[1];
    ref3 = axis('items'), ri = ref3[0], bi = ref3[1];
    this.resampleFactor.value.set(rw, rh, rd, ri);
    this.resampleBias.value.set(bw, bh, bd, bi);
    return Lerp.__super__.resize.apply(this, arguments);
  };

  Lerp.prototype.change = function(changed, touched, init) {
    if (touched['operator'] || touched['lerp'] || touched['sampler']) {
      return this.rebuild();
    }
  };

  return Lerp;

})(Operator);

module.exports = Lerp;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxvcGVyYXRvclxcbGVycC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccHJpbWl0aXZlc1xcdHlwZXNcXG9wZXJhdG9yXFxsZXJwLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLG9CQUFBO0VBQUE7OztBQUFBLFFBQUEsR0FBVyxPQUFBLENBQVEsWUFBUjs7QUFDWCxJQUFBLEdBQVcsT0FBQSxDQUFRLGVBQVI7O0FBRUw7Ozs7Ozs7RUFDSixJQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLE1BQVQsRUFBaUIsVUFBakIsRUFBNkIsUUFBN0IsRUFBdUMsT0FBdkMsRUFBZ0QsTUFBaEQsRUFBd0QsV0FBeEQsRUFBcUUsV0FBckUsRUFBa0YsV0FBbEYsRUFBK0YsV0FBL0Y7O2lCQUVWLFdBQUEsR0FBYyxTQUFDLE1BQUQ7SUFDWixNQUFNLENBQUMsSUFBUCxDQUFZLElBQUMsQ0FBQSxPQUFiO1dBQ0Esc0NBQU0sTUFBTjtFQUZZOztpQkFJZCxZQUFBLEdBQWMsU0FBQyxNQUFEO1dBQ1osTUFBTSxDQUFDLElBQVAsQ0FBWSxJQUFDLENBQUEsUUFBYjtFQURZOztpQkFHZCxhQUFBLEdBQXFCLFNBQUE7V0FBTSxJQUFDLENBQUEsU0FBRCxDQUFXLElBQUMsQ0FBQSxJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWIsQ0FBQSxDQUFYO0VBQU47O2lCQUNyQixtQkFBQSxHQUFxQixTQUFBO1dBQU0sSUFBQyxDQUFBLFNBQUQsQ0FBVyxJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxtQkFBYixDQUFBLENBQVg7RUFBTjs7aUJBQ3JCLG1CQUFBLEdBQXFCLFNBQUE7V0FBTSxJQUFDLENBQUEsU0FBRCxDQUFXLElBQUMsQ0FBQSxJ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

},{"../../../util":175,"./operator":78}],77:[function(require,module,exports){
var Memo, Operator, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Operator = require('./operator');

Util = require('../../../util');

Memo = (function(superClass) {
  extend(Memo, superClass);

  function Memo() {
    return Memo.__super__.constructor.apply(this, arguments);
  }

  Memo.traits = ['node', 'bind', 'active', 'operator', 'source', 'index', 'texture', 'memo'];

  Memo.prototype.sourceShader = function(shader) {
    return this.memo.shaderAbsolute(shader, 1);
  };

  Memo.prototype.make = function() {
    var depth, dims, height, items, magFilter, minFilter, operator, ref, type, width;
    Memo.__super__.make.apply(this, arguments);
    if (this.bind.source == null) {
      return;
    }
    this._helpers.active.make();
    this._listen('root', 'root.update', (function(_this) {
      return function() {
        if (_this.isActive) {
          return _this.update();
        }
      };
    })(this));
    ref = this.props, minFilter = ref.minFilter, magFilter = ref.magFilter, type = ref.type;
    dims = this.bind.source.getDimensions();
    items = dims.items, width = dims.width, height = dims.height, depth = dims.depth;
    this.memo = this._renderables.make('memo', {
      items: items,
      width: width,
      height: height,
      depth: depth,
      minFilter: minFilter,
      magFilter: magFilter,
      type: type
    });
    operator = this._shaders.shader();
    this.bind.source.sourceShader(operator);
    this.compose = this._renderables.make('memoScreen', {
      map: operator,
      items: items,
      width: width,
      height: height,
      depth: depth
    });
    this.memo.adopt(this.compose);
    this.objects = [this.compose];
    return this.renders = this.compose.renders;
  };

  Memo.prototype.unmake = function() {
    Memo.__super__.unmake.apply(this, arguments);
    if (this.bind.source != null) {
      this._helpers.active.unmake();
      this.memo.unadopt(this.compose);
      this.memo.dispose();
      return this.memo = this.compose = null;
    }
  };

  Memo.prototype.update = function() {
    var ref;
    return (ref = this.memo) != null ? ref.render() : void 0;
  };

  Memo.prototype.resize = function() {
    var depth, dims, height, width;
    if (this.bind.source == null) {
      return;
    }
    dims = this.bind.source.getActiveDimensions();
    width = dims.width, height = dims.height, depth = dims.depth;
    this.compose.cover(width, height, depth);
    return Memo.__super__.resize.apply(this, arguments);
  };

  Memo.prototype.change = function(changed, touched, init) {
    if (touched['texture'] || touched['operator']) {
      return this.rebuild();
    }
  };

  return Memo;

})(Operator);

module.exports = Memo;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxvcGVyYXRvclxcbWVtby5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccHJpbWl0aXZlc1xcdHlwZXNcXG9wZXJhdG9yXFxtZW1vLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLG9CQUFBO0VBQUE7OztBQUFBLFFBQUEsR0FBVyxPQUFBLENBQVEsWUFBUjs7QUFDWCxJQUFBLEdBQVcsT0FBQSxDQUFRLGVBQVI7O0FBRUw7Ozs7Ozs7RUFDSixJQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLE1BQVQsRUFBaUIsUUFBakIsRUFBMkIsVUFBM0IsRUFBdUMsUUFBdkMsRUFBaUQsT0FBakQsRUFBMEQsU0FBMUQsRUFBcUUsTUFBckU7O2lCQUVWLFlBQUEsR0FBYyxTQUFDLE1BQUQ7V0FBWSxJQUFDLENBQUEsSUFBSSxDQUFDLGNBQU4sQ0FBcUIsTUFBckIsRUFBNkIsQ0FBN0I7RUFBWjs7aUJBRWQsSUFBQSxHQUFNLFNBQUE7QUFDSixRQUFBO0lBQUEsZ0NBQUEsU0FBQTtJQUNBLElBQWMsd0JBQWQ7QUFBQSxhQUFBOztJQUdBLElBQUMsQ0FBQSxRQUFRLENBQUMsTUFBTSxDQUFDLElBQWpCLENBQUE7SUFDQSxJQUFDLENBQUEsT0FBRCxDQUFTLE1BQVQsRUFBaUIsYUFBakIsRUFBZ0MsQ0FBQSxTQUFBLEtBQUE7YUFBQSxTQUFBO1FBQU0sSUFBYSxLQUFDLENBQUEsUUFBZDtpQkFBQSxLQUFDLENBQUEsTUFBRCxDQUFBLEVBQUE7O01BQU47SUFBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLENBQWhDO0lBR0EsTUFBK0IsSUFBQyxDQUFBLEtBQWhDLEVBQUMseUJBQUQsRUFBWSx5QkFBWixFQUF1QjtJQUd2QixJQUFBLEdBQVMsSUFBQyxDQUFBLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYixDQUFBO0lBQ1Isa0JBQUQsRUFBUSxrQkFBUixFQUFlLG9CQUFmLEVBQXVCO0lBR3ZCLElBQUMsQ0FBQSxJQUFELEdBQVEsSUFBQyxDQUFBLFlBQVksQ0FBQyxJQUFkLENBQW1CLE1BQW5CLEVBQ0U7TUFBQSxLQUFBLEVBQVcsS0FBWDtNQUNBLEtBQUEsRUFBVyxLQURYO01BRUEsTUFBQSxFQUFXLE1BRlg7TUFHQSxLQUFBLEVBQVcsS0FIWDtNQUlBLFNBQUEsRUFBVyxTQUpYO01BS0EsU0FBQSxFQUFXLFNBTFg7TUFNQSxJQUFBLEVBQVcsSUFOWDtLQURGO0lBVVIsUUFBQSxHQUFXLElBQUMsQ0FBQSxRQUFRLENBQUMsTUFBVixDQUFBO0lBQ1gsSUFBQyxDQUFBLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBYixDQUEwQixRQUExQjtJQUdBLElBQUMsQ0FBQSxPQUFELEdBQVcsSUFBQyxDQUFBLFlBQVksQ0FBQyxJQUFkLENBQW1CLFlBQW5CLEVBQ0U7TUFBQSxHQUFBLEVBQVEsUUFBUjtNQUNBLEtBQUEsRUFBUSxLQURSO01BRUEsS0FBQSxFQUFRLEtBRlI7TUFHQSxNQUFBLEVBQVEsTUFIUjtNQUlBLEtBQUEsRUFBUSxLQUpSO0tBREY7SUFNWCxJQUFDLENBQUEsSUFBSSxDQUFDLEtBQU4sQ0FBWSxJQUFDLENBQUEsT0FBYjtJQUVBLElBQUMsQ0FBQSxPQUFELEdBQVcsQ0FBQyxJQUFDLENBQUEsT0FBRjtXQUNYLElBQUMsQ0FBQSxPQUFELEdBQVcsSUFBQyxDQUFBLE9BQU8sQ0FBQztFQXZDaEI7O2lCQXlDTixNQUFBLEdBQVEsU0FBQTtJQUNOLGtDQUFBLFNBQUE7SUFFQSxJQUFHLHdCQUFIO01BQ0UsSUFBQyxDQUFBLFFBQVEsQ0FBQyxNQUFNLENBQUMsTUFBakIsQ0FBQTtNQUVBLElBQUMsQ0FBQSxJQUFJLENBQUMsT0FBTixDQUFjLElBQUMsQ0FBQSxPQUFmO01BQ0EsSUFBQyxDQUFBLElBQUksQ0FBQyxPQUFOLENBQUE7YUFFQSxJQUFDLENBQUEsSUFBRCxHQUFRLElBQUMsQ0FBQSxPQUFELEdBQVcsS0FOckI7O0VBSE07O2lCQVdSLE1BQUEsR0FBUSxTQUFBO0FBQ04sUUFBQTswQ0FBSyxDQUFFLE1BQVAsQ0FBQTtFQURNOztpQkFHUixNQUFBLEdBQVEsU0FBQTtBQUNOLFFBQUE7SUFBQSxJQUFjLHdCQUFkO0FBQUEsYUFBQTs7SUFHQSxJQUFBLEdBQVMsSUFBQyxDQUFBLElBQUksQ0FBQyxNQUFNLENBQUMsbUJBQWIsQ0FBQTtJQUNSLGtCQUFELEVBQVEsb0JBQVIsRUFBZ0I7SUFHaEIsSUFBQyxDQUFBLE9BQU8sQ0FBQyxLQUFULENBQWUsS0FBZixFQUFzQixNQUF0QixFQUE4QixLQUE5QjtXQUVBLGtDQUFBLFNBQUE7RUFWTTs7aUJBWVIsTUFBQSxHQUFRLFNBQUMsT0FBRCxFQUFVLE9BQVYsRUFBbUIsSUFBbkI7SUFDTixJQUFxQixPQUFRLENBQUEsU0FBQSxDQUFSLElBQ0EsT0FBUSxDQUFBLFVBQUEsQ0FEN0I7QUFBQSxhQUFPLElBQUMsQ0FBQSxPQUFELENBQUEsRUFBUDs7RUFETTs7OztHQXhFUzs7QUE2RW5CLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{"../../../util":175,"./operator":78}],78:[function(require,module,exports){
var Operator, Source,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Source = require('../base/source');

Operator = (function(superClass) {
  extend(Operator, superClass);

  function Operator() {
    return Operator.__super__.constructor.apply(this, arguments);
  }

  Operator.traits = ['node', 'bind', 'operator', 'source', 'index'];

  Operator.prototype.indexShader = function(shader) {
    var ref;
    return (ref = this.bind.source) != null ? typeof ref.indexShader === "function" ? ref.indexShader(shader) : void 0 : void 0;
  };

  Operator.prototype.sourceShader = function(shader) {
    var ref;
    return (ref = this.bind.source) != null ? typeof ref.sourceShader === "function" ? ref.sourceShader(shader) : void 0 : void 0;
  };

  Operator.prototype.getDimensions = function() {
    return this.bind.source.getDimensions();
  };

  Operator.prototype.getFutureDimensions = function() {
    return this.bind.source.getFutureDimensions();
  };

  Operator.prototype.getActiveDimensions = function() {
    return this.bind.source.getActiveDimensions();
  };

  Operator.prototype.getIndexDimensions = function() {
    return this.bind.source.getIndexDimensions();
  };

  Operator.prototype.init = function() {
    return this.sourceSpec = [
      {
        to: 'operator.source',
        trait: 'source'
      }
    ];
  };

  Operator.prototype.make = function() {
    Operator.__super__.make.apply(this, arguments);
    return this._helpers.bind.make(this.sourceSpec);
  };

  Operator.prototype.made = function() {
    this.resize();
    return Operator.__super__.made.apply(this, arguments);
  };

  Operator.prototype.unmake = function() {
    return this._helpers.bind.unmake();
  };

  Operator.prototype.resize = function(rebuild) {
    return this.trigger({
      type: 'source.resize'
    });
  };

  return Operator;

})(Source);

module.exports = Operator;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxvcGVyYXRvclxcb3BlcmF0b3IuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxvcGVyYXRvclxcb3BlcmF0b3IuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsZ0JBQUE7RUFBQTs7O0FBQUEsTUFBQSxHQUFTLE9BQUEsQ0FBUSxnQkFBUjs7QUFFSDs7Ozs7OztFQUNKLFFBQUMsQ0FBQSxNQUFELEdBQVUsQ0FBQyxNQUFELEVBQVMsTUFBVCxFQUFpQixVQUFqQixFQUE2QixRQUE3QixFQUF1QyxPQUF2Qzs7cUJBRVYsV0FBQSxHQUFlLFNBQUMsTUFBRDtBQUFjLFFBQUE7eUZBQVksQ0FBRSxZQUFlO0VBQTNDOztxQkFDZixZQUFBLEdBQWUsU0FBQyxNQUFEO0FBQWMsUUFBQTswRkFBWSxDQUFFLGFBQWU7RUFBM0M7O3FCQUVmLGFBQUEsR0FBZSxTQUFBO1dBQVksSUFBQyxDQUFBLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYixDQUFBO0VBQVo7O3FCQUNmLG1CQUFBLEdBQXFCLFNBQUE7V0FBTSxJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxtQkFBYixDQUFBO0VBQU47O3FCQUNyQixtQkFBQSxHQUFxQixTQUFBO1dBQU0sSUFBQyxDQUFBLElBQUksQ0FBQyxNQUFNLENBQUMsbUJBQWIsQ0FBQTtFQUFOOztxQkFDckIsa0JBQUEsR0FBcUIsU0FBQTtXQUFNLElBQUMsQ0FBQSxJQUFJLENBQUMsTUFBTSxDQUFDLGtCQUFiLENBQUE7RUFBTjs7cUJBRXJCLElBQUEsR0FBTSxTQUFBO1dBQ0osSUFBQyxDQUFBLFVBQUQsR0FBYztNQUNaO1FBQUUsRUFBQSxFQUFJLGlCQUFOO1FBQXlCLEtBQUEsRUFBTyxRQUFoQztPQURZOztFQURWOztxQkFLTixJQUFBLEdBQU0sU0FBQTtJQUNKLG9DQUFBLFNBQUE7V0FHQSxJQUFDLENBQUEsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFmLENBQW9CLElBQUMsQ0FBQSxVQUFyQjtFQUpJOztxQkFNTixJQUFBLEdBQU0sU0FBQTtJQUNKLElBQUMsQ0FBQSxNQUFELENBQUE7V0FDQSxvQ0FBQSxTQUFBO0VBRkk7O3FCQUlOLE1BQUEsR0FBUSxTQUFBO1dBQ04sSUFBQyxDQUFBLFFBQVEsQ0FBQyxJQUFJLENBQUMsTUFBZixDQUFBO0VBRE07O3FCQUdSLE1BQUEsR0FBUSxTQUFDLE9BQUQ7V0FDTixJQUFDLENBQUEsT0FBRCxDQUNFO01BQUEsSUFBQSxFQUFNLGVBQU47S0FERjtFQURNOzs7O0dBN0JhOztBQWlDdkIsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"../base/source":49}],79:[function(require,module,exports){
var Primitive, Readback, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Primitive = require('../../primitive');

Util = require('../../../util');

Readback = (function(superClass) {
  extend(Readback, superClass);

  function Readback() {
    return Readback.__super__.constructor.apply(this, arguments);
  }

  Readback.traits = ['node', 'bind', 'operator', 'readback', 'entity', 'active'];

  Readback.finals = {
    channels: 4
  };

  Readback.prototype.init = function() {
    this.emitter = this.root = null;
    return this.active = {};
  };

  Readback.prototype.make = function() {
    var channels, depth, expr, height, items, ref, ref1, sampler, type, width;
    Readback.__super__.make.apply(this, arguments);
    this._compute('readback.data', (function(_this) {
      return function() {
        var ref;
        return (ref = _this.readback) != null ? ref.data : void 0;
      };
    })(this));
    this._compute('readback.items', (function(_this) {
      return function() {
        var ref;
        return (ref = _this.readback) != null ? ref.items : void 0;
      };
    })(this));
    this._compute('readback.width', (function(_this) {
      return function() {
        var ref;
        return (ref = _this.readback) != null ? ref.width : void 0;
      };
    })(this));
    this._compute('readback.height', (function(_this) {
      return function() {
        var ref;
        return (ref = _this.readback) != null ? ref.height : void 0;
      };
    })(this));
    this._compute('readback.depth', (function(_this) {
      return function() {
        var ref;
        return (ref = _this.readback) != null ? ref.depth : void 0;
      };
    })(this));
    this._helpers.bind.make([
      {
        to: 'operator.source',
        trait: 'source'
      }
    ]);
    if (this.bind.source == null) {
      return;
    }
    ref = this.props, type = ref.type, channels = ref.channels, expr = ref.expr;
    this.root = this._inherit('root');
    this._listen('root', 'root.update', this.update);
    ref1 = this.bind.source.getDimensions(), items = ref1.items, width = ref1.width, height = ref1.height, depth = ref1.depth;
    sampler = this.bind.source.sourceShader(this._shaders.shader());
    this.readback = this._renderables.make('readback', {
      map: sampler,
      items: items,
      width: width,
      height: height,
      depth: depth,
      channels: channels,
      type: type
    });
    if (expr != null) {
      this.readback.setCallback(expr);
    }
    return this._helpers.active.make();
  };

  Readback.prototype.unmake = function() {
    if (this.readback != null) {
      this.readback.dispose();
      this.readback = null;
      this.root = null;
      this.emitter = null;
      this.active = {};
    }
    this._helpers.active.unmake();
    return this._helpers.bind.unmake();
  };

  Readback.prototype.update = function() {
    var ref;
    if (this.readback == null) {
      return;
    }
    if (this.isActive) {
      this.readback.update((ref = this.root) != null ? ref.getCamera() : void 0);
      this.readback.post();
      if (this.props.expr != null) {
        return this.readback.iterate();
      }
    }
  };

  Readback.prototype.resize = function() {
    var depth, height, items, ref, sI, sJ, sK, width;
    if (this.readback == null) {
      return;
    }
    ref = this.bind.source.getActiveDimensions(), items = ref.items, width = ref.width, height = ref.height, depth = ref.depth;
    this.readback.setActive(items, width, height, depth);
    this.strideI = sI = items;
    this.strideJ = sJ = sI * width;
    return this.strideK = sK = sJ * height;
  };

  Readback.prototype.change = function(changed, touched, init) {
    if (changed['readback.type']) {
      return this.rebuild();
    }
    if (changed['readback.expr'] && this.readback) {
      return this.readback.setCallback(this.props.expr);
    }
  };

  return Readback;

})(Primitive);

module.exports = Readback;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxvcGVyYXRvclxccmVhZGJhY2suY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxvcGVyYXRvclxccmVhZGJhY2suY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEseUJBQUE7RUFBQTs7O0FBQUEsU0FBQSxHQUFZLE9BQUEsQ0FBUSxpQkFBUjs7QUFDWixJQUFBLEdBQVksT0FBQSxDQUFRLGVBQVI7O0FBRU47Ozs7Ozs7RUFDSixRQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLE1BQVQsRUFBaUIsVUFBakIsRUFBNkIsVUFBN0IsRUFBeUMsUUFBekMsRUFBbUQsUUFBbkQ7O0VBQ1YsUUFBQyxDQUFBLE1BQUQsR0FDRTtJQUFBLFFBQUEsRUFBVSxDQUFWOzs7cUJBRUYsSUFBQSxHQUFNLFNBQUE7SUFDSixJQUFDLENBQUEsT0FBRCxHQUFXLElBQUMsQ0FBQSxJQUFELEdBQVE7V0FDbkIsSUFBQyxDQUFBLE1BQUQsR0FBVTtFQUZOOztxQkFJTixJQUFBLEdBQU0sU0FBQTtBQUNKLFFBQUE7SUFBQSxvQ0FBQSxTQUFBO0lBRUEsSUFBQyxDQUFBLFFBQUQsQ0FBVSxlQUFWLEVBQTZCLENBQUEsU0FBQSxLQUFBO2FBQUEsU0FBQTtBQUFNLFlBQUE7bURBQVMsQ0FBRTtNQUFqQjtJQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBN0I7SUFDQSxJQUFDLENBQUEsUUFBRCxDQUFVLGdCQUFWLEVBQTZCLENBQUEsU0FBQSxLQUFBO2FBQUEsU0FBQTtBQUFNLFlBQUE7bURBQVMsQ0FBRTtNQUFqQjtJQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBN0I7SUFDQSxJQUFDLENBQUEsUUFBRCxDQUFVLGdC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

},{"../../../util":175,"../../primitive":44}],80:[function(require,module,exports){
var Operator, Repeat,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Operator = require('./operator');

Repeat = (function(superClass) {
  extend(Repeat, superClass);

  function Repeat() {
    return Repeat.__super__.constructor.apply(this, arguments);
  }

  Repeat.traits = ['node', 'bind', 'operator', 'source', 'index', 'repeat'];

  Repeat.prototype.indexShader = function(shader) {
    shader.pipe(this.operator);
    return Repeat.__super__.indexShader.call(this, shader);
  };

  Repeat.prototype.sourceShader = function(shader) {
    shader.pipe(this.operator);
    return Repeat.__super__.sourceShader.call(this, shader);
  };

  Repeat.prototype.getDimensions = function() {
    return this._resample(this.bind.source.getDimensions());
  };

  Repeat.prototype.getActiveDimensions = function() {
    return this._resample(this.bind.source.getActiveDimensions());
  };

  Repeat.prototype.getFutureDimensions = function() {
    return this._resample(this.bind.source.getFutureDimensions());
  };

  Repeat.prototype.getIndexDimensions = function() {
    return this._resample(this.bind.source.getIndexDimensions());
  };

  Repeat.prototype._resample = function(dims) {
    var r;
    r = this.resample;
    return {
      items: r.items * dims.items,
      width: r.width * dims.width,
      height: r.height * dims.height,
      depth: r.depth * dims.depth
    };
  };

  Repeat.prototype.make = function() {
    var transform, uniforms;
    Repeat.__super__.make.apply(this, arguments);
    if (this.bind.source == null) {
      return;
    }
    this.resample = {};
    uniforms = {
      repeatModulus: this._attributes.make(this._types.vec4())
    };
    this.repeatModulus = uniforms.repeatModulus;
    transform = this._shaders.shader();
    transform.pipe('repeat.position', uniforms);
    return this.operator = transform;
  };

  Repeat.prototype.unmake = function() {
    return Repeat.__super__.unmake.apply(this, arguments);
  };

  Repeat.prototype.resize = function() {
    var dims;
    if (this.bind.source != null) {
      dims = this.bind.source.getActiveDimensions();
      this.repeatModulus.value.set(dims.width, dims.height, dims.depth, dims.items);
    }
    return Repeat.__super__.resize.apply(this, arguments);
  };

  Repeat.prototype.change = function(changed, touched, init) {
    var i, key, len, ref, results;
    if (touched['operator'] || touched['repeat']) {
      return this.rebuild();
    }
    if (init) {
      ref = ['items', 'width', 'height', 'depth'];
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        key = ref[i];
        results.push(this.resample[key] = this.props[key]);
      }
      return results;
    }
  };

  return Repeat;

})(Operator);

module.exports = Repeat;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxvcGVyYXRvclxccmVwZWF0LmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxwcmltaXRpdmVzXFx0eXBlc1xcb3BlcmF0b3JcXHJlcGVhdC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxnQkFBQTtFQUFBOzs7QUFBQSxRQUFBLEdBQVcsT0FBQSxDQUFRLFlBQVI7O0FBRUw7Ozs7Ozs7RUFDSixNQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLE1BQVQsRUFBaUIsVUFBakIsRUFBNkIsUUFBN0IsRUFBdUMsT0FBdkMsRUFBZ0QsUUFBaEQ7O21CQUVWLFdBQUEsR0FBYyxTQUFDLE1BQUQ7SUFDWixNQUFNLENBQUMsSUFBUCxDQUFZLElBQUMsQ0FBQSxRQUFiO1dBQ0Esd0NBQU0sTUFBTjtFQUZZOzttQkFJZCxZQUFBLEdBQWMsU0FBQyxNQUFEO0lBQ1osTUFBTSxDQUFDLElBQVAsQ0FBWSxJQUFDLENBQUEsUUFBYjtXQUNBLHlDQUFNLE1BQU47RUFGWTs7bUJBSWQsYUFBQSxHQUFxQixTQUFBO1dBQU0sSUFBQyxDQUFBLFNBQUQsQ0FBVyxJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFiLENBQUEsQ0FBWDtFQUFOOzttQkFDckIsbUJBQUEsR0FBcUIsU0FBQTtXQUFNLElBQUMsQ0FBQSxTQUFELENBQVcsSUFBQyxDQUFBLElBQUksQ0FBQyxNQUFNLENBQUMsbUJBQWIsQ0FBQSxDQUFYO0VBQU47O21CQUNyQixtQkFBQSxHQUFxQixTQUFBO1dBQU0sSUFBQyxDQUFBLFNBQUQsQ0FBVyxJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxtQkFBYixDQUFBLENBQVg7RUFBTjs7bUJBQ3JCLGtCQUFBLEdBQXFCLFNBQUE7V0FBTSxJQUFDLENBQUEsU0FBRCxDQUFXLElBQUMsQ0FBQSxJQUFJLENBQUMsTUFBTSxDQUFDLGtCQUFiLENBQUEsQ0FBWDtFQUFOOzttQkFFckIsU0FBQSxHQUFXLFNBQUMsSUFBRDtBQUNULFFBQUE7SUFBQSxDQUFBLEdBQUksSUFBQyxDQUFBO1dBQ0w7TUFBQSxLQUFBLEVBQVEsQ0FBQyxDQUFDLEtBQUYsR0FBVyxJQUFJLENBQUMsS0FBeEI7TUFDQSxLQUFBLEVBQVEsQ0FBQyxDQUFDLEtBQUYsR0FBVyxJQUFJLENBQUMsS0FEeEI7TUFFQSxNQUFBLEVBQVEsQ0FBQyxDQUFDLE1BQUYsR0FBVyxJQUFJLENBQUMsTUFGeEI7TUFHQSxLQUFBLEVBQVEsQ0FBQyxDQUFDLEtBQUYsR0FBVyxJQUFJLENBQUMsS0FIeEI7O0VBRlM7O21CQU9YLElBQUEsR0FBTSxTQUFBO0FBQ0osUUFBQTtJQUFBLGtDQUFBLFNBQUE7SUFDQSxJQUFjLHdCQUFkO0FBQUEsYUFBQTs7SUFHQSxJQUFDLENBQUEsUUFBRCxHQUFZO0lBR1osUUFBQSxHQUNFO01BQUEsYUFBQSxFQUFlLElBQUMsQ0FBQSxXQUFXLENBQUMsSUFBYixDQUFrQixJQUFDLENBQUEsTUFBTSxDQUFDLElBQVIsQ0FBQSxDQUFsQixDQUFmOztJQUNGLElBQUMsQ0FBQSxhQUFELEdBQWlCLFFBQVEsQ0FBQztJQUcxQixTQUFBLEdBQVksSUFBQyxDQUFBLFFBQVEsQ0FBQyxNQUFWLENBQUE7SUFDWixTQUFTLENBQUMsSUFBVixDQUFlLGlCQUFmLEVBQWtDLFFBQWxDO1dBQ0EsSUFBQyxDQUFBLFFBQUQsR0FBWTtFQWZSOzttQkFpQk4sTUFBQSxHQUFRLFNBQUE7V0FDTixvQ0FBQSxTQUFBO0VBRE07O21CQUdSLE1BQUEsR0FBUSxTQUFBO0FBQ04sUUFBQTtJQUFBLElBQUcsd0JBQUg7TUFDRSxJQUFBLEdBQU8sSUFBQyxDQUFBLElBQUksQ0FBQyxNQUFNLENBQUMsbUJBQWIsQ0FBQTtNQUNQLElBQUMsQ0FBQSxhQUFhLENBQUMsS0FBSyxDQUFDLEdBQXJCLENBQXlCLElBQUksQ0FBQyxLQUE5QixFQUFxQyxJQUFJLENBQUMsTUFBMUMsRUFBa0QsSUFBSSxDQUFDLEtBQXZELEVBQThELElBQUksQ0FBQyxLQUFuRSxFQUZGOztXQUlBLG9DQUFBLFNBQUE7RUFMTTs7bUJBT1IsTUFBQSxHQUFRLFNBQUMsT0FBRCxFQUFVLE9BQVYsRUFBbUIsSUFBbkI7QUFDTixRQUFBO0lBQUEsSUFBcUIsT0FBUSxDQUFBLFVBQUEsQ0FBUixJQUNBLE9BQVEsQ0FBQSxRQUFBLENBRDdCO0FBQUEsYUFBTyxJQUFDLENBQUEsT0FBRCxDQUFBLEVBQVA7O0lBR0EsSUFBRyxJQUFIO0FBRUU7QUFBQTtXQUFBLHFDQUFBOztxQkFDRSxJQUFDLENBQUEsUUFBUyxDQUFBLEdBQUEsQ0FBVixHQUFpQixJQUFDLENBQUEsS0FBTSxDQUFBLEdBQUE7QUFEMUI7cUJBRkY7O0VBSk07Ozs7R0FsRFc7O0FBMkRyQixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"./operator":78}],81:[function(require,module,exports){
var Operator, Resample, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Operator = require('./operator');

Util = require('../../../util');

Resample = (function(superClass) {
  extend(Resample, superClass);

  function Resample() {
    return Resample.__super__.constructor.apply(this, arguments);
  }

  Resample.traits = ['node', 'bind', 'operator', 'source', 'index', 'resample', 'sampler:x', 'sampler:y', 'sampler:z', 'sampler:w', 'include'];

  Resample.prototype.indexShader = function(shader) {
    shader.pipe(this.indexer);
    return Resample.__super__.indexShader.call(this, shader);
  };

  Resample.prototype.sourceShader = function(shader) {
    return shader.pipe(this.operator);
  };

  Resample.prototype.getDimensions = function() {
    return this._resample(this.bind.source.getDimensions());
  };

  Resample.prototype.getActiveDimensions = function() {
    return this._resample(this.bind.source.getActiveDimensions());
  };

  Resample.prototype.getFutureDimensions = function() {
    return this._resample(this.bind.source.getFutureDimensions());
  };

  Resample.prototype.getIndexDimensions = function() {
    return this._resample(this.bind.source.getIndexDimensions());
  };

  Resample.prototype._resample = function(dims) {
    var c, p, r;
    r = this.resampled;
    c = this.centered;
    p = this.padding;
    if (this.relativeSize) {
      if (!c.items) {
        dims.items--;
      }
      if (!c.width) {
        dims.width--;
      }
      if (!c.height) {
        dims.height--;
      }
      if (!c.depth) {
        dims.depth--;
      }
      if (r.items != null) {
        dims.items *= r.items;
      }
      if (r.width != null) {
        dims.width *= r.width;
      }
      if (r.height != null) {
        dims.height *= r.height;
      }
      if (r.depth != null) {
        dims.depth *= r.depth;
      }
      if (!c.items) {
        dims.items++;
      }
      if (!c.width) {
        dims.width++;
      }
      if (!c.height) {
        dims.height++;
      }
      if (!c.depth) {
        dims.depth++;
      }
      dims.items -= p.items * 2;
      dims.width -= p.width * 2;
      dims.height -= p.height * 2;
      dims.depth -= p.depth * 2;
    } else {
      if (r.items != null) {
        dims.items = r.items;
      }
      if (r.width != null) {
        dims.width = r.width;
      }
      if (r.height != null) {
        dims.height = r.height;
      }
      if (r.depth != null) {
        dims.depth = r.depth;
      }
    }
    dims.items = Math.max(0, Math.floor(dims.items));
    dims.width = Math.max(0, Math.floor(dims.width));
    dims.height = Math.max(0, Math.floor(dims.height));
    dims.depth = Math.max(0, Math.floor(dims.depth));
    return dims;
  };

  Resample.prototype.make = function() {
    var any, centered, channels, depth, height, i, indexer, indices, items, j, key, len, operator, ref, ref1, ref2, relativeSample, relativeSize, resize, sample, shader, size, type, uniforms, vec, width;
    Resample.__super__.make.apply(this, arguments);
    if (this.bind.source == null) {
      return;
    }
    this._helpers.bind.make([
      {
        to: 'include.shader',
        trait: 'shader',
        optional: true
      }
    ]);
    ref = this.props, indices = ref.indices, channels = ref.channels;
    shader = this.bind.shader;
    ref1 = this.props, sample = ref1.sample, size = ref1.size, items = ref1.items, width = ref1.width, height = ref1.height, depth = ref1.depth;
    relativeSample = sample === this.node.attributes['resample.sample']["enum"].relative;
    relativeSize = size === this.node.attributes['resample.size']["enum"].relative;
    this.resampled = {};
    if (items != null) {
      this.resampled.items = items;
    }
    if (width != null) {
      this.resampled.width = width;
    }
    if (height != null) {
      this.resampled.height = height;
    }
    if (depth != null) {
      this.resampled.depth = depth;
    }
    this.centered = {};
    this.centered.items = this.props.centeredW;
    this.centered.width = this.props.centeredX;
    this.centered.height = this.props.centeredY;
    this.centered.depth = this.props.centeredZ;
    this.padding = {};
    this.padding.items = this.props.paddingW;
    this.padding.width = this.props.paddingX;
    this.padding.height = this.props.paddingY;
    this.padding.depth = this.props.paddingZ;
    operator = this._shaders.shader();
    indexer = this._shaders.shader();
    type = [null, this._types.number, this._types.vec2, this._types.vec3, this._types.vec4][indices];
    uniforms = {
      dataSize: this._attributes.make(type(0, 0, 0, 0)),
      dataResolution: this._attributes.make(type(0, 0, 0, 0)),
      targetSize: this._attributes.make(type(0, 0, 0, 0)),
      targetResolution: this._attributes.make(type(0, 0, 0, 0)),
      resampleFactor: this._attributes.make(this._types.vec4(0, 0, 0, 0)),
      resampleBias: this._attributes.make(this._types.vec4(0, 0, 0, 0))
    };
    this.dataResolution = uniforms.dataResolution;
    this.dataSize = uniforms.dataSize;
    this.targetResolution = uniforms.targetResolution;
    this.targetSize = uniforms.targetSize;
    this.resampleFactor = uniforms.resampleFactor;
    this.resampleBias = uniforms.resampleBias;
    resize = (items != null) || (width != null) || (height != null) || (depth != null);
    operator.pipe('resample.padding', uniforms);
    vec = [];
    any = false;
    ref2 = ['width', 'height', 'depth', 'items'];
    for (i = j = 0, len = ref2.length; j < len; i = ++j) {
      key = ref2[i];
      centered = this.centered[key];
      any || (any = centered);
      vec[i] = centered ? "0.5" : "0.0";
    }
    if (any) {
      vec = "vec4(" + vec + ")";
      operator.pipe(Util.GLSL.binaryOperator(4, '+', vec4));
      if (resize) {
        indexer.pipe(Util.GLSL.binaryOperator(4, '+', vec4));
      }
    }
    if (relativeSample) {
      if (resize) {
        operator.pipe('resample.relative', uniforms);
        indexer.pipe('resample.relative', uniforms);
      } else {
        indexer.pipe(Util.GLSL.identity('vec4'));
      }
    }
    if (shader != null) {
      if (indices !== 4) {
        operator.pipe(Util.GLSL.truncateVec(4, indices));
      }
      operator.callback();
      if (indices !== 4) {
        operator.pipe(Util.GLSL.extendVec(indices, 4));
      }
      if (any) {
        operator.pipe(Util.GLSL.binaryOperator(4, '-', vec));
      }
      operator.pipe(this.bind.source.sourceShader(this._shaders.shader()));
      if (channels !== 4) {
        operator.pipe(Util.GLSL.truncateVec(4, channels));
      }
      operator.join();
      if (this.bind.shader != null) {
        operator.pipe(this.bind.shader.shaderBind(uniforms));
      }
      if (channels !== 4) {
        operator.pipe(Util.GLSL.extendVec(channels, 4));
      }
    } else {
      if (any) {
        operator.pipe(Util.GLSL.binaryOperator(4, '-', vec));
      }
      operator.pipe(this.bind.source.sourceShader(this._shaders.shader()));
    }
    if (any && resize) {
      indexer.pipe(Util.GLSL.binaryOperator(4, '-', vec));
    }
    this.operator = operator;
    this.indexer = indexer;
    this.indices = indices;
    this.relativeSample = relativeSample;
    return this.relativeSize = relativeSize;
  };

  Resample.prototype.unmake = function() {
    Resample.__super__.unmake.apply(this, arguments);
    return this.operator = null;
  };

  Resample.prototype.resize = function() {
    var axis, bd, bh, bi, bw, dims, rd, ref, ref1, ref2, ref3, rh, ri, rw, target;
    if (this.bind.source == null) {
      return;
    }
    dims = this.bind.source.getActiveDimensions();
    target = this.getActiveDimensions();
    axis = (function(_this) {
      return function(key) {
        var centered, pad, res;
        centered = _this.centered[key];
        pad = _this.padding[key];
        target[key] += pad * 2;
        res = centered ? dims[key] / Math.max(1, target[key]) : Math.max(1, dims[key] - 1) / Math.max(1, target[key] - 1);
        return [res, pad];
      };
    })(this);
    ref = axis('width'), rw = ref[0], bw = ref[1];
    ref1 = axis('height'), rh = ref1[0], bh = ref1[1];
    ref2 = axis('depth'), rd = ref2[0], bd = ref2[1];
    ref3 = axis('items'), ri = ref3[0], bi = ref3[1];
    if (this.indices === 1) {
      this.dataResolution.value = 1 / dims.width;
      this.targetResolution.value = 1 / target.width;
      this.dataSize.value = dims.width;
      this.targetSize.value = target.width;
    } else {
      this.dataResolution.value.set(1 / dims.width, 1 / dims.height, 1 / dims.depth, 1 / dims.items);
      this.targetResolution.value.set(1 / target.width, 1 / target.height, 1 / target.depth, 1 / target.items);
      this.dataSize.value.set(dims.width, dims.height, dims.depth, dims.items);
      this.targetSize.value.set(target.width, target.height, target.depth, target.items);
    }
    this.resampleFactor.value.set(rw, rh, rd, ri);
    this.resampleBias.value.set(bw, bh, bd, bi);
    return Resample.__super__.resize.apply(this, arguments);
  };

  Resample.prototype.change = function(changed, touched, init) {
    if (touched['operator'] || touched['resample'] || touched['sampler'] || touched['include']) {
      return this.rebuild();
    }
  };

  return Resample;

})(Operator);

module.exports = Resample;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,

},{"../../../util":175,"./operator":78}],82:[function(require,module,exports){
var Operator, Slice, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Operator = require('./operator');

Util = require('../../../util');

Slice = (function(superClass) {
  extend(Slice, superClass);

  function Slice() {
    return Slice.__super__.constructor.apply(this, arguments);
  }

  Slice.traits = ['node', 'bind', 'operator', 'source', 'index', 'slice'];

  Slice.prototype.getDimensions = function() {
    return this._resample(this.bind.source.getDimensions());
  };

  Slice.prototype.getActiveDimensions = function() {
    return this._resample(this.bind.source.getActiveDimensions());
  };

  Slice.prototype.getFutureDimensions = function() {
    return this._resample(this.bind.source.getFutureDimensions());
  };

  Slice.prototype.getIndexDimensions = function() {
    return this._resample(this.bind.source.getIndexDimensions());
  };

  Slice.prototype.sourceShader = function(shader) {
    shader.pipe('slice.position', this.uniforms);
    return this.bind.source.sourceShader(shader);
  };

  Slice.prototype._resolve = function(key, dims) {
    var dim, end, index, range, start;
    range = this.props[key];
    dim = dims[key];
    if (range == null) {
      return [0, dim];
    }
    index = function(i, dim) {
      if (i < 0) {
        return dim + i;
      } else {
        return i;
      }
    };
    start = index(Math.round(range.x), dim);
    end = index(Math.round(range.y), dim);
    end = Math.max(start, end);
    return [start, end - start];
  };

  Slice.prototype._resample = function(dims) {
    dims.width = this._resolve('width', dims)[1];
    dims.height = this._resolve('height', dims)[1];
    dims.depth = this._resolve('depth', dims)[1];
    dims.items = this._resolve('items', dims)[1];
    return dims;
  };

  Slice.prototype.make = function() {
    Slice.__super__.make.apply(this, arguments);
    if (this.bind.source == null) {
      return;
    }
    return this.uniforms = {
      sliceOffset: this._attributes.make(this._types.vec4())
    };
  };

  Slice.prototype.unmake = function() {
    return Slice.__super__.unmake.apply(this, arguments);
  };

  Slice.prototype.resize = function() {
    var dims;
    if (this.bind.source == null) {
      return;
    }
    dims = this.bind.source.getActiveDimensions();
    this.uniforms.sliceOffset.value.set(this._resolve('width', dims)[0], this._resolve('height', dims)[0], this._resolve('depth', dims)[0], this._resolve('items', dims)[0]);
    return Slice.__super__.resize.apply(this, arguments);
  };

  Slice.prototype.change = function(changed, touched, init) {
    if (touched['operator']) {
      return this.rebuild();
    }
    if (touched['slice']) {
      return this.resize();
    }
  };

  return Slice;

})(Operator);

module.exports = Slice;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxvcGVyYXRvclxcc2xpY2UuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxvcGVyYXRvclxcc2xpY2UuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEscUJBQUE7RUFBQTs7O0FBQUEsUUFBQSxHQUFXLE9BQUEsQ0FBUSxZQUFSOztBQUNYLElBQUEsR0FBVyxPQUFBLENBQVEsZUFBUjs7QUFFTDs7Ozs7OztFQUNKLEtBQUMsQ0FBQSxNQUFELEdBQVUsQ0FBQyxNQUFELEVBQVMsTUFBVCxFQUFpQixVQUFqQixFQUE2QixRQUE3QixFQUF1QyxPQUF2QyxFQUFnRCxPQUFoRDs7a0JBRVYsYUFBQSxHQUFxQixTQUFBO1dBQU0sSUFBQyxDQUFBLFNBQUQsQ0FBVyxJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFiLENBQUEsQ0FBWDtFQUFOOztrQkFDckIsbUJBQUEsR0FBcUIsU0FBQTtXQUFNLElBQUMsQ0FBQSxTQUFELENBQVcsSUFBQyxDQUFBLElBQUksQ0FBQyxNQUFNLENBQUMsbUJBQWIsQ0FBQSxDQUFYO0VBQU47O2tCQUNyQixtQkFBQSxHQUFxQixTQUFBO1dBQU0sSUFBQyxDQUFBLFNBQUQsQ0FBVyxJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxtQkFBYixDQUFBLENBQVg7RUFBTjs7a0JBQ3JCLGtCQUFBLEdBQXFCLFNBQUE7V0FBTSxJQUFDLENBQUEsU0FBRCxDQUFXLElBQUMsQ0FBQSxJQUFJLENBQUMsTUFBTSxDQUFDLGtCQUFiLENBQUEsQ0FBWDtFQUFOOztrQkFFckIsWUFBQSxHQUFjLFNBQUMsTUFBRDtJQUNaLE1BQU0sQ0FBQyxJQUFQLENBQVksZ0JBQVosRUFBOEIs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

},{"../../../util":175,"./operator":78}],83:[function(require,module,exports){
var Operator, Split, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Operator = require('./operator');

Util = require('../../../util');


/*
split:
  order:       Types.transpose('wxyz')
  axis:        Types.axis()
  length:      Types.int(1)
  overlap:     Types.int(0)
 */

Split = (function(superClass) {
  extend(Split, superClass);

  function Split() {
    return Split.__super__.constructor.apply(this, arguments);
  }

  Split.traits = ['node', 'bind', 'operator', 'source', 'index', 'split'];

  Split.prototype.indexShader = function(shader) {
    shader.pipe(this.operator);
    return Split.__super__.indexShader.call(this, shader);
  };

  Split.prototype.sourceShader = function(shader) {
    shader.pipe(this.operator);
    return Split.__super__.sourceShader.call(this, shader);
  };

  Split.prototype.getDimensions = function() {
    return this._resample(this.bind.source.getDimensions());
  };

  Split.prototype.getActiveDimensions = function() {
    return this._resample(this.bind.source.getActiveDimensions());
  };

  Split.prototype.getFutureDimensions = function() {
    return this._resample(this.bind.source.getFutureDimensions());
  };

  Split.prototype.getIndexDimensions = function() {
    return this._resample(this.bind.source.getIndexDimensions());
  };

  Split.prototype._resample = function(dims) {
    var axis, dim, i, index, j, labels, len, length, mapped, order, out, overlap, remain, set, stride;
    order = this.order;
    axis = this.axis;
    overlap = this.overlap;
    length = this.length;
    stride = this.stride;
    labels = ['width', 'height', 'depth', 'items'];
    mapped = order.map(function(x) {
      return labels[x - 1];
    });
    index = order.indexOf(axis);
    set = (function() {
      var j, len, results;
      results = [];
      for (j = 0, len = mapped.length; j < len; j++) {
        dim = mapped[j];
        results.push(dims[dim]);
      }
      return results;
    })();
    remain = Math.floor((set[index] - overlap) / stride);
    set.splice(index, 1, length, remain);
    set = set.slice(0, 4);
    out = {};
    for (i = j = 0, len = mapped.length; j < len; i = ++j) {
      dim = mapped[i];
      out[dim] = set[i];
    }
    return out;
  };

  Split.prototype.make = function() {
    var axis, index, length, order, overlap, permute, ref, rest, split, stride, transform, uniforms;
    Split.__super__.make.apply(this, arguments);
    if (this.bind.source == null) {
      return;
    }
    order = this.props.order;
    axis = this.props.axis;
    overlap = this.props.overlap;
    length = this.props.length;

    /*
    Calculate index transform
    
    order: wxyz
    length: 3
    overlap: 1
    
    axis: w
    index: 0
    split: wx
    rest:  0yz0
           s
    
    axis: x
    index: 1
    split: xy
    rest:  w0z0
            s
    
    axis: y
    index: 2
    split: yz
    rest:  wx00
             s
    
    axis: z
    index: 3
    split: z0
    rest: wxy0
             s
     */
    permute = order.join('');
    if (axis == null) {
      axis = order[0];
    }
    index = permute.indexOf(axis);
    split = permute[index] + ((ref = permute[index + 1]) != null ? ref : 0);
    rest = permute.replace(split[1], '').replace(split[0], '0') + '0';
    overlap = Math.min(length - 1, overlap);
    stride = length - overlap;
    uniforms = {
      splitStride: this._attributes.make(this._types.number(stride))
    };
    transform = this._shaders.shader();
    transform.require(Util.GLSL.swizzleVec4(split, 2));
    transform.require(Util.GLSL.swizzleVec4(rest, 4));
    transform.require(Util.GLSL.injectVec4(index));
    transform.pipe('split.position', uniforms);
    transform.pipe(Util.GLSL.invertSwizzleVec4(order));
    this.operator = transform;
    this.order = order;
    this.axis = axis;
    this.overlap = overlap;
    this.length = length;
    return this.stride = stride;
  };

  Split.prototype.unmake = function() {
    return Split.__super__.unmake.apply(this, arguments);
  };

  Split.prototype.change = function(changed, touched, init) {
    if (changed['split.axis'] || changed['split.order'] || touched['operator']) {
      return this.rebuild();
    }
  };

  return Split;

})(Operator);

module.exports = Split;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxvcGVyYXRvclxcc3BsaXQuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxvcGVyYXRvclxcc3BsaXQuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEscUJBQUE7RUFBQTs7O0FBQUEsUUFBQSxHQUFXLE9BQUEsQ0FBUSxZQUFSOztBQUNYLElBQUEsR0FBVyxPQUFBLENBQVEsZUFBUjs7O0FBRVg7Ozs7Ozs7O0FBUU07Ozs7Ozs7RUFDSixLQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLE1BQVQsRUFBaUIsVUFBakIsRUFBNkIsUUFBN0IsRUFBdUMsT0FBdkMsRUFBZ0QsT0FBaEQ7O2tCQUVWLFdBQUEsR0FBYyxTQUFDLE1BQUQ7SUFDWixNQUFNLENBQUMsSUFBUCxDQUFZLElBQUMsQ0FBQSxRQUFiO1dBQ0EsdUNBQU0sTUFBTjtFQUZZOztrQkFJZCxZQUFBLEdBQWMsU0FBQyxNQUFEO0lBQ1osTUFBTSxDQUFDLElBQVAsQ0FBWSxJQUFDLENBQUEsUUFBYjtXQUNBLHdDQUFNLE1BQU47RUFGWTs7a0JBSWQsYUFBQSxHQUFxQixTQUFBO1dBQU0sSUFBQyxDQUFBLFNBQUQsQ0FBVyxJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFiLENBQUEsQ0FBWDtFQUFOOztrQkFDckIsbUJBQUEsR0FBcUIsU0FBQTtXQUFNLElBQUMsQ0FBQSxTQUFELENBQVcsSUFBQyxDQUFBLElBQUksQ0FBQyxNQUFNLENBQUMsbUJBQWIsQ0FBQSxDQUFYO0VBQU47O2tCQUNyQixtQkFBQSxHQUFxQixTQUFBO1dBQU0sSUFBQyxDQUFBLFNBQUQsQ0FBVyxJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU0sQ0FB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

},{"../../../util":175,"./operator":78}],84:[function(require,module,exports){
var Operator, Spread,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Operator = require('./operator');

Spread = (function(superClass) {
  extend(Spread, superClass);

  function Spread() {
    return Spread.__super__.constructor.apply(this, arguments);
  }

  Spread.traits = ['node', 'bind', 'operator', 'source', 'index', 'spread'];

  Spread.prototype.sourceShader = function(shader) {
    return shader.pipe(this.operator);
  };

  Spread.prototype.make = function() {
    var transform, uniforms;
    Spread.__super__.make.apply(this, arguments);
    if (this.bind.source == null) {
      return;
    }
    uniforms = {
      spreadMatrix: this._attributes.make(this._types.mat4()),
      spreadOffset: this._attributes.make(this._types.vec4())
    };
    this.spreadMatrix = uniforms.spreadMatrix;
    this.spreadOffset = uniforms.spreadOffset;
    transform = this._shaders.shader();
    transform.require(this.bind.source.sourceShader(this._shaders.shader()));
    transform.pipe('spread.position', uniforms);
    return this.operator = transform;
  };

  Spread.prototype.unmake = function() {
    return Spread.__super__.unmake.apply(this, arguments);
  };

  Spread.prototype.resize = function() {
    this.update();
    return Spread.__super__.resize.apply(this, arguments);
  };

  Spread.prototype.update = function() {
    var align, anchor, d, dims, els, i, j, k, key, len, map, matrix, offset, order, ref, results, spread, unit, unitEnum, v;
    dims = this.bind.source.getFutureDimensions();
    matrix = this.spreadMatrix.value;
    els = matrix.elements;
    order = ['width', 'height', 'depth', 'items'];
    align = ['alignWidth', 'alignHeight', 'alignDepth', 'alignItems'];
    unit = this.props.unit;
    unitEnum = this.node.attributes['spread.unit']["enum"];
    map = (function() {
      switch (unit) {
        case unitEnum.relative:
          return function(key, i, k, v) {
            return els[i * 4 + k] = v / Math.max(1, dims[key] - 1);
          };
        case unitEnum.absolute:
          return function(key, i, k, v) {
            return els[i * 4 + k] = v;
          };
      }
    })();
    results = [];
    for (i = j = 0, len = order.length; j < len; i = ++j) {
      key = order[i];
      spread = this.props[key];
      anchor = this.props[align[i]];
      if (spread != null) {
        d = (ref = dims[key]) != null ? ref : 1;
        offset = -(d - 1) * (.5 - anchor * .5);
      } else {
        offset = 0;
      }
      this.spreadOffset.value.setComponent(i, offset);
      results.push((function() {
        var l, ref1, results1;
        results1 = [];
        for (k = l = 0; l <= 3; k = ++l) {
          v = (ref1 = spread != null ? spread.getComponent(k) : void 0) != null ? ref1 : 0;
          results1.push(els[i * 4 + k] = map(key, i, k, v));
        }
        return results1;
      })());
    }
    return results;
  };

  Spread.prototype.change = function(changed, touched, init) {
    if (touched['operator']) {
      return this.rebuild();
    }
    if (touched['spread']) {
      return this.update();
    }
  };

  return Spread;

})(Operator);

module.exports = Spread;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxvcGVyYXRvclxcc3ByZWFkLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxwcmltaXRpdmVzXFx0eXBlc1xcb3BlcmF0b3JcXHNwcmVhZC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxnQkFBQTtFQUFBOzs7QUFBQSxRQUFBLEdBQVcsT0FBQSxDQUFRLFlBQVI7O0FBRUw7Ozs7Ozs7RUFDSixNQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLE1BQVQsRUFBaUIsVUFBakIsRUFBNkIsUUFBN0IsRUFBdUMsT0FBdkMsRUFBZ0QsUUFBaEQ7O21CQUVWLFlBQUEsR0FBYyxTQUFDLE1BQUQ7V0FDWixNQUFNLENBQUMsSUFBUCxDQUFZLElBQUMsQ0FBQSxRQUFiO0VBRFk7O21CQUdkLElBQUEsR0FBTSxTQUFBO0FBQ0osUUFBQTtJQUFBLGtDQUFBLFNBQUE7SUFDQSxJQUFjLHdCQUFkO0FBQUEsYUFBQTs7SUFHQSxRQUFBLEdBQ0U7TUFBQSxZQUFBLEVBQWMsSUFBQyxDQUFBLFdBQVcsQ0FBQyxJQUFiLENBQWtCLElBQUMsQ0FBQSxNQUFNLENBQUMsSUFBUixDQUFBLENBQWxCLENBQWQ7TUFDQSxZQUFBLEVBQWMsSUFBQyxDQUFBLFdBQVcsQ0FBQyxJQUFiLENBQWtCLElBQUMsQ0FBQSxNQUFNLENBQUMsSUFBUixDQUFBLENBQWxCLENBRGQ7O0lBR0YsSUFBQyxDQUFBLFlBQUQsR0FBZ0IsUUFBUSxDQUFDO0lBQ3pCLElBQUMsQ0FBQSxZQUFELEdBQWdCLFFBQVEsQ0FBQztJQUd6QixTQUFBLEdBQVksSUFBQyxDQUFBLFFBQVEsQ0FBQyxNQUFWLENBQUE7SUFDWixTQUFTLENBQUMsT0FBVixDQUFrQixJQUFDLENBQUEsSUFB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

},{"./operator":78}],85:[function(require,module,exports){
var Operator, Subdivide, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Operator = require('./operator');

Util = require('../../../util');

Subdivide = (function(superClass) {
  extend(Subdivide, superClass);

  function Subdivide() {
    return Subdivide.__super__.constructor.apply(this, arguments);
  }

  Subdivide.traits = ['node', 'bind', 'operator', 'source', 'index', 'subdivide'];

  Subdivide.prototype.indexShader = function(shader) {
    shader.pipe(this.indexer);
    return Subdivide.__super__.indexShader.call(this, shader);
  };

  Subdivide.prototype.sourceShader = function(shader) {
    return shader.pipe(this.operator);
  };

  Subdivide.prototype.getDimensions = function() {
    return this._resample(this.bind.source.getDimensions());
  };

  Subdivide.prototype.getActiveDimensions = function() {
    return this._resample(this.bind.source.getActiveDimensions());
  };

  Subdivide.prototype.getFutureDimensions = function() {
    return this._resample(this.bind.source.getFutureDimensions());
  };

  Subdivide.prototype.getIndexDimensions = function() {
    return this._resample(this.bind.source.getIndexDimensions());
  };

  Subdivide.prototype._resample = function(dims) {
    var r;
    r = this.resampled;
    dims.items--;
    dims.width--;
    dims.height--;
    dims.depth--;
    if (r.items != null) {
      dims.items *= r.items;
    }
    if (r.width != null) {
      dims.width *= r.width;
    }
    if (r.height != null) {
      dims.height *= r.height;
    }
    if (r.depth != null) {
      dims.depth *= r.depth;
    }
    dims.items++;
    dims.width++;
    dims.height++;
    dims.depth++;
    return dims;
  };

  Subdivide.prototype.make = function() {
    var depth, height, i, id, indexer, items, j, key, len, lerp, operator, ref, ref1, resize, sampler, size, uniforms, width;
    Subdivide.__super__.make.apply(this, arguments);
    if (this.bind.source == null) {
      return;
    }
    ref = this.props, size = ref.size, items = ref.items, width = ref.width, height = ref.height, depth = ref.depth, lerp = ref.lerp;
    this.resampled = {};
    if (items != null) {
      this.resampled.items = items;
    }
    if (width != null) {
      this.resampled.width = width;
    }
    if (height != null) {
      this.resampled.height = height;
    }
    if (depth != null) {
      this.resampled.depth = depth;
    }
    operator = this._shaders.shader();
    indexer = this._shaders.shader();
    uniforms = {
      resampleFactor: this._attributes.make(this._types.vec4(0, 0, 0, 0)),
      subdivideBevel: this.node.attributes['subdivide.bevel']
    };
    this.resampleFactor = uniforms.resampleFactor;
    this.resampleBias = uniforms.resampleBias;
    resize = (items != null) || (width != null) || (height != null) || (depth != null);
    if (resize) {
      operator.pipe('resample.relative', uniforms);
      indexer.pipe('resample.relative', uniforms);
    } else {
      operator.pipe(Util.GLSL.identity('vec4'));
      indexer.pipe(Util.GLSL.identity('vec4'));
    }
    sampler = this.bind.source.sourceShader(this._shaders.shader());
    lerp = lerp ? '.lerp' : '';
    ref1 = ['width', 'height', 'depth', 'items'];
    for (i = j = 0, len = ref1.length; j < len; i = ++j) {
      key = ref1[i];
      id = "subdivide." + key + lerp;
      if (this.props[key] != null) {
        sampler = this._shaders.shader().require(sampler);
        sampler.pipe(id, uniforms);
      }
    }
    operator.pipe(sampler);
    this.operator = operator;
    return this.indexer = indexer;
  };

  Subdivide.prototype.unmake = function() {
    Subdivide.__super__.unmake.apply(this, arguments);
    return this.operator = null;
  };

  Subdivide.prototype.resize = function() {
    var axis, dims, rd, rh, ri, rw, target;
    if (this.bind.source == null) {
      return;
    }
    dims = this.bind.source.getActiveDimensions();
    target = this.getActiveDimensions();
    axis = function(key) {
      return Math.max(1, dims[key] - 1) / Math.max(1, target[key] - 1);
    };
    rw = axis('width');
    rh = axis('height');
    rd = axis('depth');
    ri = axis('items');
    this.resampleFactor.value.set(rw, rh, rd, ri);
    return Subdivide.__super__.resize.apply(this, arguments);
  };

  Subdivide.prototype.change = function(changed, touched, init) {
    if (touched['operator'] || touched['subdivide']) {
      return this.rebuild();
    }
  };

  return Subdivide;

})(Operator);

module.exports = Subdivide;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxvcGVyYXRvclxcc3ViZGl2aWRlLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxwcmltaXRpdmVzXFx0eXBlc1xcb3BlcmF0b3JcXHN1YmRpdmlkZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSx5QkFBQTtFQUFBOzs7QUFBQSxRQUFBLEdBQVcsT0FBQSxDQUFRLFlBQVI7O0FBQ1gsSUFBQSxHQUFXLE9BQUEsQ0FBUSxlQUFSOztBQUVMOzs7Ozs7O0VBQ0osU0FBQyxDQUFBLE1BQUQsR0FBVSxDQUFDLE1BQUQsRUFBUyxNQUFULEVBQWlCLFVBQWpCLEVBQTZCLFFBQTdCLEVBQXVDLE9BQXZDLEVBQWdELFdBQWhEOztzQkFFVixXQUFBLEdBQWMsU0FBQyxNQUFEO0lBQ1osTUFBTSxDQUFDLElBQVAsQ0FBWSxJQUFDLENBQUEsT0FBYjtXQUNBLDJDQUFNLE1BQU47RUFGWTs7c0JBSWQsWUFBQSxHQUFjLFNBQUMsTUFBRDtXQUNaLE1BQU0sQ0FBQyxJQUFQLENBQVksSUFBQyxDQUFBLFFBQWI7RUFEWTs7c0JBR2QsYUFBQSxHQUFxQixTQUFBO1dBQU0sSUFBQyxDQUFBLFNBQUQsQ0FBVyxJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFiLENBQUEsQ0FBWDtFQUFOOztzQkFDckIsbUJBQUEsR0FBcUIsU0FBQTtXQUFNLElBQUMsQ0FBQSxTQUFELENBQVcsSUFBQyxDQUFBLElBQUksQ0FBQyxNQUFNLENBQUMsbUJBQWIsQ0FBQSxDQUFYO0VBQU47O3NCQUNyQixtQkFBQSxHQUFxQixTQUFBO1dBQU0sSUFBQyxDQUFBLFNBQUQsQ0FBVyxJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxtQkFBYixDQUFBLENBQVg7RUFBTjs7c0JBQ3JCLGtCQUFBLEdBQXFCLFNBQUE7V0FBTSxJQUFDLENBQUEsU0FBRCxDQUFXLElBQUMsQ0FBQSxJQUFJLENBQUMsTUFBTSxDQUFDLGtCQUFiLENBQUEsQ0FBWDtFQUFOOztzQkFFckIsU0FBQSxHQUFXLFNBQUMsSUFBRDtBQUNULFFBQUE7SUFBQSxDQUFBLEdBQUksSUFBQyxDQUFBO0lBRUwsSUFBSSxDQUFDLEtBQUw7SUFDQSxJQUFJLENBQUMsS0FBTDtJQUNBLElBQUksQ0FBQyxNQUFMO0lBQ0EsSUFBSSxDQUFDLEtBQUw7SUFFQSxJQUEyQixlQUEzQjtNQUFBLElBQUksQ0FBQyxLQUFMLElBQWUsQ0FBQyxDQUFDLE1BQWpCOztJQUNBLElBQTJCLGVBQTNCO01BQUEsSUFBSSxDQUFDLEtBQUwsSUFBZSxDQUFDLENBQUMsTUFBakI7O0lBQ0EsSUFBMkIsZ0JBQTNCO01BQUEsSUFBSSxDQUFDLE1BQUwsSUFBZSxDQUFDLENBQUMsT0FBakI7O0lBQ0EsSUFBMkIsZUFBM0I7TUFBQSxJQUFJLENBQUMsS0FBTCxJQUFlLENBQUMsQ0FBQyxNQUFqQjs7SUFFQSxJQUFJLENBQUMsS0FBTDtJQUNBLElBQUksQ0FBQyxLQUFMO0lBQ0EsSUFBSSxDQUFDLE1BQUw7SUFDQSxJQUFJLENBQUMsS0FBTDtXQUVBO0VBbEJTOztzQkFvQlgsSUFBQSxHQUFNLFNBQUE7QUFDSixRQUFBO0lBQUEscUNBQUEsU0FBQTtJQUNBLElBQWMsd0JBQWQ7QUFBQSxhQUFBOztJQUdBLE1BQTRDLElBQUMsQ0FBQSxLQUE3QyxFQUFDLGVBQUQsRUFBTyxpQkFBUCxFQUFjLGlCQUFkLEVBQXFCLG1CQUFyQixFQUE2QixpQkFBN0IsRUFBb0M7SUFFcEMsSUFBQyxDQUFBLFNBQUQsR0FBYTtJQUNiLElBQThCLGFBQTlCO01BQUEsSUFBQyxDQUFBLFNBQVMsQ0FBQyxLQUFYLEdBQW9CLE1BQXBCOztJQUNBLElBQThCLGFBQTlCO01BQUEsSUFBQyxDQUFBLFNBQVMsQ0FBQyxLQUFYLEdBQW9CLE1BQXBCOztJQUNBLElBQThCLGNBQTlCO01BQUEsSUFBQyxDQUFBLFNBQVMsQ0FBQyxNQUFYLEdBQW9CLE9BQXBCOztJQUNBLElBQThCLGFBQTlCO01BQUEsSUFBQyxDQUFBLFNBQVMsQ0FBQyxLQUFYLEdBQW9CLE1BQXBCOztJQUdBLFFBQUEsR0FBVyxJQUFDLENBQUEsUUFBUSxDQUFDLE1BQVYsQ0FBQTtJQUNYLE9BQUEsR0FBVyxJQUFDLENBQUEsUUFBUSxDQUFDLE1BQVYsQ0FBQTtJQUdYLFFBQUEsR0FDRTtNQUFBLGNBQUEsRUFBa0IsSUFBQyxDQUFBLFdBQVcsQ0FBQyxJQUFiLENBQWtCLElBQUMsQ0FBQSxNQUFNLENBQUMsSUFBUixDQUFhLENBQWIsRUFBZ0IsQ0FBaEIsRUFBbUIsQ0FBbkIsRUFBc0IsQ0FBdEIsQ0FBbEIsQ0FBbEI7TUFDQSxjQUFBLEVBQWtCLElBQUMsQ0FBQSxJQUFJLENBQUMsVUFBVyxDQUFBLGlCQUFBLENBRG5DOztJQUdGLElBQUMsQ0FBQSxjQUFELEdBQW9CLFFBQVEsQ0FBQztJQUM3QixJQUFDLENBQUEsWUFBRCxHQUFvQixRQUFRLENBQUM7SUFHN0IsTUFBQSxHQUFVLGVBQUEsSUFBVSxlQUFWLElBQW9CLGdCQUFwQixJQUErQjtJQUd6QyxJQUFHLE1BQUg7TUFDRSxRQUFRLENBQUMsSUFBVCxDQUFjLG1CQUFkLEVBQW1DLFFBQW5DO01BQ0EsT0FBUSxDQUFDLElBQVQsQ0FBYyxtQkFBZCxFQUFtQyxRQUFuQyxFQUZGO0tBQUEsTUFBQTtNQUlFLFFBQVEsQ0FBQyxJQUFULENBQWMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFWLENBQW1CLE1BQW5CLENBQWQ7TUFDQSxPQUFRLENBQUMsSUFBVCxDQUFjLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBVixDQUFtQixNQUFuQixDQUFkLEVBTEY7O0lBUUEsT0FBQSxHQUFVLElBQUMsQ0FBQSxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQWIsQ0FBMEIsSUFBQyxDQUFBLFFBQVEsQ0FBQyxNQUFWLENBQUEsQ0FBMUI7SUFDVixJQUFBLEdBQVUsSUFBSCxHQUFhLE9BQWIsR0FBMEI7QUFHakM7QUFBQSxTQUFBLDhDQUFBOztNQUNFLEVBQUEsR0FBSyxZQUFBLEdBQWEsR0FBYixHQUFtQjtNQUV4QixJQUFHLHVCQUFIO1FBQ0UsT0FBQSxHQUFVLElBQUMsQ0FBQSxRQUFRLENBQUMsTUFBVixDQUFBLENBQWtCLENBQUMsT0FBbkIsQ0FBMkIsT0FBM0I7UUFDVixPQUFPLENBQUMsSUFBUixDQUFhLEVBQWIsRUFBaUIsUUFBakIsRUFGRjs7QUFIRjtJQVFBLFFBQVEsQ0FBQyxJQUFULENBQWMsT0FBZDtJQUVBLElBQUMsQ0FBQSxRQUFELEdBQVk7V0FDWixJQUFDLENBQUEsT0FBRCxHQUFZO0VBcERSOztzQkFzRE4sTUFBQSxHQUFRLFNBQUE7SUFDTix1Q0FBQSxTQUFBO1dBQ0EsSUFBQyxDQUFBLFFBQUQsR0FBWTtFQUZOOztzQkFJUixNQUFBLEdBQVEsU0FBQTtBQUNOLFFBQUE7SUFBQSxJQUFjLHdCQUFkO0FBQUEsYUFBQTs7SUFFQSxJQUFBLEdBQVMsSUFBQyxDQUFBLElBQUksQ0FBQyxNQUFNLENBQUMsbUJBQWIsQ0FBQTtJQUNULE1BQUEsR0FBUyxJQUFDLENBQUEsbUJBQUQsQ0FBQTtJQUVULElBQUEsR0FBTyxTQUFDLEdBQUQ7YUFBUyxJQUFJLENBQUMsR0FBTCxDQUFTLENBQVQsRUFBWSxJQUFLLENBQUEsR0FBQSxDQUFMLEdBQVksQ0FBeEIsQ0FBQSxHQUE2QixJQUFJLENBQUMsR0FBTCxDQUFTLENBQVQsRUFBWSxNQUFPLENBQUEsR0FBQSxDQUFQLEdBQWMsQ0FBMUI7SUFBdEM7SUFFUCxFQUFBLEdBQUssSUFBQSxDQUFLLE9BQUw7SUFDTCxFQUFBLEdBQUssSUFBQSxDQUFLLFFBQUw7SUFDTCxFQUFBLEdBQUssSUFBQSxDQUFLLE9BQUw7SUFDTCxFQUFBLEdBQUssSUFBQSxDQUFLLE9BQUw7SUFFTCxJQUFDLENBQUEsY0FBYyxDQUFDLEtBQUssQ0FBQyxHQUF0QixDQUE0QixFQUE1QixFQUFnQyxFQUFoQyxFQUFvQyxFQUFwQyxFQUF3QyxFQUF4QztXQUVBLHVDQUFBLFNBQUE7RUFmTTs7c0JBaUJSLE1BQUEsR0FBUSxTQUFDLE9BQUQsRUFBVSxPQUFWLEVBQW1CLElBQW5CO0lBQ04sSUFBcUIsT0FBUSxDQUFBLFVBQUEsQ0FBUixJQUNBLE9BQVEsQ0FBQSxXQUFBLENBRDdCO0FBQUEsYUFBTyxJQUFDLENBQUEsT0FBRCxDQUFBLEVBQVA7O0VBRE07Ozs7R0E5R2M7O0FBa0h4QixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"../../../util":175,"./operator":78}],86:[function(require,module,exports){
var Operator, Swizzle, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Operator = require('./operator');

Util = require('../../../util');

Swizzle = (function(superClass) {
  extend(Swizzle, superClass);

  function Swizzle() {
    return Swizzle.__super__.constructor.apply(this, arguments);
  }

  Swizzle.traits = ['node', 'bind', 'operator', 'source', 'index', 'swizzle'];

  Swizzle.prototype.sourceShader = function(shader) {
    shader = Swizzle.__super__.sourceShader.call(this, shader);
    if (this.swizzler) {
      shader.pipe(this.swizzler);
    }
    return shader;
  };

  Swizzle.prototype.make = function() {
    var order;
    Swizzle.__super__.make.apply(this, arguments);
    if (this.bind.source == null) {
      return;
    }
    order = this.props.order;
    if (order.join() !== '1234') {
      return this.swizzler = Util.GLSL.swizzleVec4(order, 4);
    }
  };

  Swizzle.prototype.unmake = function() {
    Swizzle.__super__.unmake.apply(this, arguments);
    return this.swizzler = null;
  };

  Swizzle.prototype.change = function(changed, touched, init) {
    if (touched['swizzle'] || touched['operator']) {
      return this.rebuild();
    }
  };

  return Swizzle;

})(Operator);

module.exports = Swizzle;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxvcGVyYXRvclxcc3dpenpsZS5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccHJpbWl0aXZlc1xcdHlwZXNcXG9wZXJhdG9yXFxzd2l6emxlLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLHVCQUFBO0VBQUE7OztBQUFBLFFBQUEsR0FBVyxPQUFBLENBQVEsWUFBUjs7QUFDWCxJQUFBLEdBQVcsT0FBQSxDQUFRLGVBQVI7O0FBRUw7Ozs7Ozs7RUFDSixPQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLE1BQVQsRUFBaUIsVUFBakIsRUFBNkIsUUFBN0IsRUFBdUMsT0FBdkMsRUFBZ0QsU0FBaEQ7O29CQUVWLFlBQUEsR0FBYyxTQUFDLE1BQUQ7SUFDWixNQUFBLEdBQVMsMENBQU0sTUFBTjtJQUNULElBQXlCLElBQUMsQ0FBQSxRQUExQjtNQUFBLE1BQU0sQ0FBQyxJQUFQLENBQVksSUFBQyxDQUFBLFFBQWIsRUFBQTs7V0FDQTtFQUhZOztvQkFLZCxJQUFBLEdBQU0sU0FBQTtBQUNKLFFBQUE7SUFBQSxtQ0FBQSxTQUFBO0lBQ0EsSUFBYyx3QkFBZDtBQUFBLGFBQUE7O0lBR0EsS0FBQSxHQUFRLElBQUMsQ0FBQSxLQUFLLENBQUM7SUFDZixJQUE4QyxLQUFLLENBQUMsSUFBTixDQUFBLENBQUEsS0FBZ0IsTUFBOUQ7YUFBQSxJQUFDLENBQUEsUUFBRCxHQUFZLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVixDQUFzQixLQUF0QixFQUE2QixDQUE3QixFQUFaOztFQU5JOztvQkFRTixNQUFBLEdBQVEsU0FBQTtJQUNOLHFDQUFBLFNBQUE7V0FDQSxJQUFDLENBQUEsUUFBRCxHQUFZO0VBRk47O29CQUlSLE1BQUEsR0FBUSxTQUFDLE9BQUQsRUFBVSxPQUFWLEVBQW1CLElBQW5CO0lBQ04sSUFBcUIsT0FBUSxDQUFBLFNBQUEsQ0FBUixJQUNBLE9BQVEsQ0FBQSxVQUFBLENBRDdCO0FBQUEsYUFBTyxJQUFDLENBQUEsT0FBRCxDQUFBLEVBQVA7O0VBRE07Ozs7R0FwQlk7O0FBeUJ0QixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"../../../util":175,"./operator":78}],87:[function(require,module,exports){
var Operator, Transpose, Util, labels,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Operator = require('./operator');

Util = require('../../../util');

labels = {
  1: 'width',
  2: 'height',
  3: 'depth',
  4: 'items'
};

Transpose = (function(superClass) {
  extend(Transpose, superClass);

  function Transpose() {
    return Transpose.__super__.constructor.apply(this, arguments);
  }

  Transpose.traits = ['node', 'bind', 'operator', 'source', 'index', 'transpose'];

  Transpose.prototype.indexShader = function(shader) {
    if (this.swizzler) {
      shader.pipe(this.swizzler);
    }
    return Transpose.__super__.indexShader.call(this, shader);
  };

  Transpose.prototype.sourceShader = function(shader) {
    if (this.swizzler) {
      shader.pipe(this.swizzler);
    }
    return Transpose.__super__.sourceShader.call(this, shader);
  };

  Transpose.prototype.getDimensions = function() {
    return this._remap(this.transpose, this.bind.source.getDimensions());
  };

  Transpose.prototype.getActiveDimensions = function() {
    return this._remap(this.transpose, this.bind.source.getActiveDimensions());
  };

  Transpose.prototype.getFutureDimensions = function() {
    return this._remap(this.transpose, this.bind.source.getFutureDimensions());
  };

  Transpose.prototype.getIndexDimensions = function() {
    return this._remap(this.transpose, this.bind.source.getIndexDimensions());
  };

  Transpose.prototype._remap = function(transpose, dims) {
    var dst, i, j, out, ref, src;
    out = {};
    for (i = j = 0; j <= 3; i = ++j) {
      dst = labels[i + 1];
      src = labels[transpose[i]];
      out[dst] = (ref = dims[src]) != null ? ref : 1;
    }
    return out;
  };

  Transpose.prototype.make = function() {
    var order;
    Transpose.__super__.make.apply(this, arguments);
    if (this.bind.source == null) {
      return;
    }
    order = this.props.order;
    if (order.join() !== '1234') {
      this.swizzler = Util.GLSL.invertSwizzleVec4(order);
    }
    this.transpose = order;
    return this.trigger({
      type: 'source.rebuild'
    });
  };

  Transpose.prototype.unmake = function() {
    Transpose.__super__.unmake.apply(this, arguments);
    return this.swizzler = null;
  };

  Transpose.prototype.change = function(changed, touched, init) {
    if (touched['transpose'] || touched['operator']) {
      return this.rebuild();
    }
  };

  return Transpose;

})(Operator);

module.exports = Transpose;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxvcGVyYXRvclxcdHJhbnNwb3NlLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxwcmltaXRpdmVzXFx0eXBlc1xcb3BlcmF0b3JcXHRyYW5zcG9zZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxpQ0FBQTtFQUFBOzs7QUFBQSxRQUFBLEdBQVcsT0FBQSxDQUFRLFlBQVI7O0FBQ1gsSUFBQSxHQUFXLE9BQUEsQ0FBUSxlQUFSOztBQUVYLE1BQUEsR0FDRTtFQUFBLENBQUEsRUFBRyxPQUFIO0VBQ0EsQ0FBQSxFQUFHLFFBREg7RUFFQSxDQUFBLEVBQUcsT0FGSDtFQUdBLENBQUEsRUFBRyxPQUhIOzs7QUFLSTs7Ozs7OztFQUNKLFNBQUMsQ0FBQSxNQUFELEdBQVUsQ0FBQyxNQUFELEVBQVMsTUFBVCxFQUFpQixVQUFqQixFQUE2QixRQUE3QixFQUF1QyxPQUF2QyxFQUFnRCxXQUFoRDs7c0JBRVYsV0FBQSxHQUFhLFNBQUMsTUFBRDtJQUNYLElBQXlCLElBQUMsQ0FBQSxRQUExQjtNQUFBLE1BQU0sQ0FBQyxJQUFQLENBQVksSUFBQyxDQUFBLFFBQWIsRUFBQTs7V0FDQSwyQ0FBTSxNQUFOO0VBRlc7O3NCQUliLFlBQUEsR0FBYyxTQUFDLE1BQUQ7SUFDWixJQUF5QixJQUFDLENBQUEsUUFBMUI7TUFBQSxNQUFNLENBQUMsSUFBUCxDQUFZLElBQUMsQ0FBQSxRQUFiLEVBQUE7O1dBQ0EsNENBQU0sTUFBTjtFQUZZOztzQkFJZCxhQUFBLEdBQXFCLFNBQUE7V0FBTSxJQUFDLENBQUEsTUFBRCxDQUFRLElBQUMsQ0FBQSxTQUFULEVBQW9CLElBQUMsQ0FBQSxJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWIsQ0FBQSxDQUFwQjtFQUFOOztzQkFDckIsbUJBQUEsR0FBcUIsU0FBQTtXQUFNLElBQUMsQ0FBQSxNQUFELENBQVEsSUFBQyxDQUFBLFNBQVQsRUFBb0IsSUFBQyxDQUFBLElBQUksQ0FBQyxNQUFNLENBQUMsbUJBQWIsQ0FBQSxDQUFwQjtFQUFOOztzQkFDckIsbUJBQUEsR0FBcUIsU0FBQTtXQUFNLElBQUMsQ0FBQSxNQUFELENBQVEsSUFBQyxDQUFBLFNBQVQsRUFBb0IsSUFBQyxDQUFBLElBQUksQ0FBQyxNQUFNLENBQUMsbUJBQWIsQ0FBQSxDQUFwQjtFQUFOOztzQkFDckIsa0JBQUEsR0FBcUIsU0FBQTtXQUFNLElBQUMsQ0FBQSxNQUFELENBQVEsSUFBQyxDQUFBLFNBQVQsRUFBb0IsSUFBQyxDQUFBLElBQUksQ0FBQyxNQUFNLENBQUMsa0JBQWIsQ0FBQSxDQUFwQjtFQUFOOztzQkFFckIsTUFBQSxHQUFRLFNBQUMsU0FBRCxFQUFZLElBQVo7QUFFTixRQUFBO0lBQUEsR0FBQSxHQUFNO0FBRU4sU0FBUywwQkFBVDtNQUNFLEdBQUEsR0FBTSxNQUFPLENBQUEsQ0FBQSxHQUFJLENBQUo7TUFDYixHQUFBLEdBQU0sTUFBTyxDQUFBLFNBQVUsQ0FBQSxDQUFBLENBQVY7TUFDYixHQUFJLENBQUEsR0FBQSxDQUFKLHFDQUF1QjtBQUh6QjtXQUtBO0VBVE07O3NCQVdSLElBQUEsR0FBTSxTQUFBO0FBQ0osUUFBQTtJQUFBLHFDQUFBLFNBQUE7SUFDQSxJQUFjLHdCQUFkO0FBQUEsYUFBQTs7SUFHQSxLQUFBLEdBQVEsSUFBQyxDQUFBLEtBQUssQ0FBQztJQUNmLElBQWlELEtBQUssQ0FBQyxJQUFOLENBQUEsQ0FBQSxLQUFnQixNQUFqRTtNQUFBLElBQUMsQ0FBQSxRQUFELEdBQVksSUFBSSxDQUFDLElBQUksQ0FBQyxpQkFBVixDQUE0QixLQUE1QixFQUFaOztJQUNBLElBQUMsQ0FBQSxTQUFELEdBQWE7V0FHYixJQUFDLENBQUEsT0FBRCxDQUNFO01BQUEsSUFBQSxFQUFNLGdCQUFOO0tBREY7RUFWSTs7c0JBYU4sTUFBQSxHQUFRLFNBQUE7SUFDTix1Q0FBQSxTQUFBO1dBQ0EsSUFBQyxDQUFBLFFBQUQsR0FBWTtFQUZOOztzQkFJUixNQUFBLEdBQVEsU0FBQyxPQUFELEVBQVUsT0FBVixFQUFtQixJQUFuQjtJQUNOLElBQXFCLE9BQVEsQ0FBQSxXQUFBLENBQVIsSUFDQSxPQUFRLENBQUEsVUFBQSxDQUQ3QjtBQUFBLGFBQU8sSUFBQyxDQUFBLE9BQUQsQ0FBQSxFQUFQOztFQURNOzs7O0dBNUNjOztBQWlEeEIsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"../../../util":175,"./operator":78}],88:[function(require,module,exports){
var DOM, Primitive, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Primitive = require('../../primitive');

Util = require('../../../util');

DOM = (function(superClass) {
  extend(DOM, superClass);

  function DOM() {
    return DOM.__super__.constructor.apply(this, arguments);
  }

  DOM.traits = ['node', 'bind', 'object', 'visible', 'overlay', 'dom', 'attach', 'position'];

  DOM.prototype.init = function() {
    this.emitter = this.root = null;
    return this.active = {};
  };

  DOM.prototype.make = function() {
    var depth, height, htmlDims, indexer, items, pointDims, position, projection, width;
    DOM.__super__.make.apply(this, arguments);
    this._helpers.bind.make([
      {
        to: 'dom.html',
        trait: 'html'
      }, {
        to: 'dom.points',
        trait: 'source'
      }
    ]);
    if (!((this.bind.points != null) && (this.bind.html != null))) {
      return;
    }
    this.root = this._inherit('root');
    this._listen('root', 'root.update', this.update);
    this._listen('root', 'root.post', this.post);
    pointDims = this.bind.points.getDimensions();
    htmlDims = this.bind.html.getDimensions();
    items = Math.min(pointDims.items, htmlDims.items);
    width = Math.min(pointDims.width, htmlDims.width);
    height = Math.min(pointDims.height, htmlDims.height);
    depth = Math.min(pointDims.depth, htmlDims.depth);
    position = this.bind.points.sourceShader(this._shaders.shader());
    position = this._helpers.position.pipeline(position);
    projection = this._shaders.shader({
      globals: ['projectionMatrix']
    });
    projection.pipe('project.readback');
    position.pipe(projection);
    indexer = this._shaders.shader();
    this.readback = this._renderables.make('readback', {
      map: position,
      indexer: indexer,
      items: items,
      width: width,
      height: height,
      depth: depth,
      channels: 4,
      stpq: true
    });
    this.dom = this._overlays.make('dom');
    this.dom.hint(items * width * height * depth * 2);
    this.readback.setCallback(this.emitter = this.callback(this.bind.html.nodes()));
    return this._helpers.visible.make();
  };

  DOM.prototype.unmake = function() {
    if (this.readback != null) {
      this.readback.dispose();
      this.dom.dispose();
      this.readback = this.dom = null;
      this.root = null;
      this.emitter = null;
      this.active = {};
    }
    this._helpers.bind.unmake();
    return this._helpers.visible.unmake();
  };

  DOM.prototype.update = function() {
    var ref;
    if (this.readback == null) {
      return;
    }
    if (this.props.visible) {
      this.readback.update((ref = this.root) != null ? ref.getCamera() : void 0);
      this.readback.post();
      return this.readback.iterate();
    }
  };

  DOM.prototype.post = function() {
    if (this.readback == null) {
      return;
    }
    return this.dom.render(this.isVisible ? this.emitter.nodes() : []);
  };

  DOM.prototype.callback = function(data) {
    var attr, className, color, colorString, depth, el, f, height, nodes, offset, opacity, outline, pointer, size, snap, strideI, strideJ, strideK, styles, uniforms, width, zIndex, zoom;
    uniforms = this._inherit('unit').getUnitUniforms();
    width = uniforms.viewWidth;
    height = uniforms.viewHeight;
    attr = this.node.attributes['dom.attributes'];
    size = this.node.attributes['dom.size'];
    zoom = this.node.attributes['dom.zoom'];
    color = this.node.attributes['dom.color'];
    outline = this.node.attributes['dom.outline'];
    pointer = this.node.attributes['dom.pointerEvents'];
    opacity = this.node.attributes['overlay.opacity'];
    zIndex = this.node.attributes['overlay.zIndex'];
    offset = this.node.attributes['attach.offset'];
    depth = this.node.attributes['attach.depth'];
    snap = this.node.attributes['attach.snap'];
    el = this.dom.el;
    nodes = [];
    styles = null;
    className = null;
    strideI = strideJ = strideK = 0;
    colorString = '';
    f = function(x, y, z, w, i, j, k, l) {
      var a, alpha, children, clip, flatZ, index, iw, ox, oy, props, ref, s, scale, v, xx, yy;
      index = l + strideI * i + strideJ * j + strideK * k;
      children = data[index];
      clip = w < 0;
      iw = 1 / w;
      flatZ = 1 + (iw - 1) * depth.value;
      scale = clip ? 0 : flatZ;
      ox = +offset.value.x * scale;
      oy = +offset.value.y * scale;
      xx = (x + 1) * width.value * .5 + ox;
      yy = (y - 1) * height.value * .5 + oy;
      xx /= zoom.value;
      yy /= zoom.value;
      if (snap.value) {
        xx = Math.round(xx);
        yy = Math.round(yy);
      }
      alpha = Math.min(.999, clip ? 0 : opacity.value);
      props = {
        className: className,
        style: {
          transform: "translate3d(" + xx + "px, " + (-yy) + "px, " + (1 - w) + "px) translate(-50%, -50%) scale(" + scale + "," + scale + ")",
          opacity: alpha
        }
      };
      for (k in styles) {
        v = styles[k];
        props.style[k] = v;
      }
      a = attr.value;
      if (a != null) {
        s = a.style;
        for (k in a) {
          v = a[k];
          if (k !== 'style' && k !== 'className') {
            props[k] = v;
          }
        }
        if (s != null) {
          for (k in s) {
            v = s[k];
            props.style[k] = v;
          }
        }
      }
      props.className += ' ' + ((ref = a != null ? a.className : void 0) != null ? ref : 'mathbox-label');
      return nodes.push(el('div', props, children));
    };
    f.reset = (function(_this) {
      return function() {
        var c, m, ref;
        nodes = [];
        ref = [_this.strideI, _this.strideJ, _this.strideK], strideI = ref[0], strideJ = ref[1], strideK = ref[2];
        c = color.value;
        m = function(x) {
          return Math.floor(x * 255);
        };
        colorString = c ? "rgb(" + [m(c.x), m(c.y), m(c.z)] + ")" : '';
        className = "mathbox-outline-" + (Math.round(outline.value));
        styles = {};
        if (c) {
          styles.color = colorString;
        }
        styles.fontSize = size.value + "px";
        if (zoom.value !== 1) {
          styles.zoom = zoom.value;
        }
        if (zIndex.value > 0) {
          styles.zIndex = zIndex.value;
        }
        if (pointer.value) {
          return styles.pointerEvents = 'auto';
        }
      };
    })(this);
    f.nodes = function() {
      return nodes;
    };
    return f;
  };

  DOM.prototype.resize = function() {
    var depth, height, htmlDims, items, pointDims, sI, sJ, sK, width;
    if (this.readback == null) {
      return;
    }
    pointDims = this.bind.points.getActiveDimensions();
    htmlDims = this.bind.html.getActiveDimensions();
    items = Math.min(pointDims.items, htmlDims.items);
    width = Math.min(pointDims.width, htmlDims.width);
    height = Math.min(pointDims.height, htmlDims.height);
    depth = Math.min(pointDims.depth, htmlDims.depth);
    this.readback.setActive(items, width, height, depth);
    this.strideI = sI = htmlDims.items;
    this.strideJ = sJ = sI * htmlDims.width;
    return this.strideK = sK = sJ * htmlDims.height;
  };

  DOM.prototype.change = function(changed, touched, init) {
    if (changed['dom.html'] || changed['dom.points']) {
      return this.rebuild();
    }
  };

  return DOM;

})(Primitive);

module.exports = DOM;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxvdmVybGF5XFxkb20uY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxvdmVybGF5XFxkb20uY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsb0JBQUE7RUFBQTs7O0FBQUEsU0FBQSxHQUFZLE9BQUEsQ0FBUSxpQkFBUjs7QUFDWixJQUFBLEdBQVksT0FBQSxDQUFRLGVBQVI7O0FBRU47Ozs7Ozs7RUFDSixHQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLE1BQVQsRUFBaUIsUUFBakIsRUFBMkIsU0FBM0IsRUFBc0MsU0FBdEMsRUFBaUQsS0FBakQsRUFBd0QsUUFBeEQsRUFBa0UsVUFBbEU7O2dCQUVWLElBQUEsR0FBTSxTQUFBO0lBQ0osSUFBQyxDQUFBLE9BQUQsR0FBVyxJQUFDLENBQUEsSUFBRCxHQUFRO1dBQ25CLElBQUMsQ0FBQSxNQUFELEdBQVU7RUFGTjs7Z0JBSU4sSUFBQSxHQUFNLFNBQUE7QUFDSixRQUFBO0lBQUEsK0JBQUEsU0FBQTtJQUdBLElBQUMsQ0FBQSxRQUFRLENBQUMsSUFBSSxDQUFDLElBQWYsQ0FBb0I7TUFDbEI7UUFBRSxFQUFBLEVBQUksVUFBTjtRQUFvQixLQUFBLEVBQU8sTUFBM0I7T0FEa0IsRUFFbEI7UUFBRSxFQUFBLEVBQUksWUFBTjtRQUFvQixLQUFBLEVBQU8sUUFBM0I7T0FGa0I7S0FBcEI7SUFLQSxJQUFBLENBQUEsQ0FBYywwQkFBQSxJQUFrQix3QkFBaEMsQ0FBQTtBQUFBLGFBQUE7O0lBR0EsSUFBQyxDQUFBLElBQUQsR0FBUSxJQUFDLENBQUEsUUFBRCxDQUFVLE1BQVY7SUFDUixJQUFDLENBQUEsT0FBRCxDQUFTLE1BQVQsRUFBaUIs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

},{"../../../util":175,"../../primitive":44}],89:[function(require,module,exports){
var HTML, Util, Voxel,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Voxel = require('../data/voxel');

Util = require('../../../util');

HTML = (function(superClass) {
  extend(HTML, superClass);

  function HTML() {
    return HTML.__super__.constructor.apply(this, arguments);
  }

  HTML.traits = ['node', 'buffer', 'active', 'data', 'voxel', 'html'];

  HTML.finals = {
    channels: 1
  };

  HTML.prototype.init = function() {
    HTML.__super__.init.apply(this, arguments);
    return this.storage = 'pushBuffer';
  };

  HTML.prototype.make = function() {
    var depth, height, items, ref, width;
    HTML.__super__.make.apply(this, arguments);
    ref = this.getDimensions(), items = ref.items, width = ref.width, height = ref.height, depth = ref.depth;
    this.dom = this._overlays.make('dom');
    return this.dom.hint(items * width * height * depth);
  };

  HTML.prototype.unmake = function() {
    HTML.__super__.unmake.apply(this, arguments);
    if (this.dom != null) {
      this.dom.dispose();
      return this.dom = null;
    }
  };

  HTML.prototype.update = function() {
    return HTML.__super__.update.apply(this, arguments);
  };

  HTML.prototype.change = function(changed, touched, init) {
    if (touched['html']) {
      return this.rebuild();
    }
    return HTML.__super__.change.call(this, changed, touched, init);
  };

  HTML.prototype.nodes = function() {
    return this.buffer.read();
  };

  HTML.prototype.callback = function(callback) {
    var el;
    el = this.dom.el;
    if (callback.length <= 6) {
      return function(emit, i, j, k, l) {
        return callback(emit, el, i, j, k, l);
      };
    } else {
      return (function(_this) {
        return function(emit, i, j, k, l) {
          return callback(emit, el, i, j, k, l, _this.bufferClock, _this.bufferStep);
        };
      })(this);
    }
  };

  return HTML;

})(Voxel);

module.exports = HTML;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxvdmVybGF5XFxodG1sLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxwcmltaXRpdmVzXFx0eXBlc1xcb3ZlcmxheVxcaHRtbC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxpQkFBQTtFQUFBOzs7QUFBQSxLQUFBLEdBQVEsT0FBQSxDQUFRLGVBQVI7O0FBQ1IsSUFBQSxHQUFPLE9BQUEsQ0FBUSxlQUFSOztBQUVEOzs7Ozs7O0VBQ0osSUFBQyxDQUFBLE1BQUQsR0FBVSxDQUFDLE1BQUQsRUFBUyxRQUFULEVBQW1CLFFBQW5CLEVBQTZCLE1BQTdCLEVBQXFDLE9BQXJDLEVBQThDLE1BQTlDOztFQUNWLElBQUMsQ0FBQSxNQUFELEdBQ0U7SUFBQSxRQUFBLEVBQVUsQ0FBVjs7O2lCQUVGLElBQUEsR0FBTSxTQUFBO0lBQ0osZ0NBQUEsU0FBQTtXQUNBLElBQUMsQ0FBQSxPQUFELEdBQVc7RUFGUDs7aUJBSU4sSUFBQSxHQUFNLFNBQUE7QUFDSixRQUFBO0lBQUEsZ0NBQUEsU0FBQTtJQUdBLE1BQWdDLElBQUMsQ0FBQSxhQUFELENBQUEsQ0FBaEMsRUFBQyxpQkFBRCxFQUFRLGlCQUFSLEVBQWUsbUJBQWYsRUFBdUI7SUFHdkIsSUFBQyxDQUFBLEdBQUQsR0FBTyxJQUFDLENBQUEsU0FBUyxDQUFDLElBQVgsQ0FBZ0IsS0FBaEI7V0FDUCxJQUFDLENBQUEsR0FBRyxDQUFDLElBQUwsQ0FBVSxLQUFBLEdBQVEsS0FBUixHQUFnQixNQUFoQixHQUF5QixLQUFuQztFQVJJOztpQkFVTixNQUFBLEdBQVEsU0FBQTtJQUNOLGtDQUFBLFNBQUE7SUFDQSxJQUFHLGdCQUFIO01BQ0UsSUFBQyxDQUFBLEdBQUcsQ0FBQyxPQUFMLENBQUE7YUFDQSxJQUFDLENBQUEsR0FBRCxHQUFPLEtBRlQ7O0VBRk07O2lCQU1SLE1BQUEsR0FBUSxTQUFBO1dBQ04sa0NBQUEsU0FBQTtFQURNOztpQkFHUixNQUFBLEdBQVEsU0FBQyxPQUFELEVBQVUsT0FBVixFQUFtQixJQUFuQjtJQUNOLElBQXFCLE9BQVEsQ0FBQSxNQUFBLENBQTdCO0FBQUEsYUFBTyxJQUFDLENBQUEsT0FBRCxDQUFBLEVBQVA7O1dBQ0EsaUNBQU0sT0FBTixFQUFlLE9BQWYsRUFBd0IsSUFBeEI7RUFGTTs7aUJBSVIsS0FBQSxHQUFPLFNBQUE7V0FBTSxJQUFDLENBQUEsTUFBTSxDQUFDLElBQVIsQ0FBQTtFQUFOOztpQkFFUCxRQUFBLEdBQVUsU0FBQyxRQUFEO0FBQ1IsUUFBQTtJQUFBLEVBQUEsR0FBSyxJQUFDLENBQUEsR0FBRyxDQUFDO0lBRVYsSUFBRyxRQUFRLENBQUMsTUFBVCxJQUFtQixDQUF0QjthQUNFLFNBQUMsSUFBRCxFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQjtlQUNFLFFBQUEsQ0FBUyxJQUFULEVBQWUsRUFBZixFQUFtQixDQUFuQixFQUFzQixDQUF0QixFQUF5QixDQUF6QixFQUE0QixDQUE1QjtNQURGLEVBREY7S0FBQSxNQUFBO2FBSUUsQ0FBQSxTQUFBLEtBQUE7ZUFBQSxTQUFDLElBQUQsRUFBTyxDQUFQLEVBQVUsQ0FBVixFQUFhLENBQWIsRUFBZ0IsQ0FBaEI7aUJBQ0UsUUFBQSxDQUFTLElBQVQsRUFBZSxFQUFmLEVBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLEVBQStCLEtBQUMsQ0FBQSxXQUFoQyxFQUE2QyxLQUFDLENBQUEsVUFBOUM7UUFERjtNQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsRUFKRjs7RUFIUTs7OztHQWxDTzs7QUE0Q25CLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{"../../../util":175,"../data/voxel":61}],90:[function(require,module,exports){
var Move, Transition,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Transition = require('./transition');

Move = (function(superClass) {
  extend(Move, superClass);

  function Move() {
    return Move.__super__.constructor.apply(this, arguments);
  }

  Move.traits = ['node', 'transition', 'vertex', 'move', 'visible', 'active'];

  Move.prototype.make = function() {
    var k, ref, v;
    Move.__super__.make.apply(this, arguments);
    ref = {
      moveFrom: this.node.attributes['move.from'],
      moveTo: this.node.attributes['move.to']
    };
    for (k in ref) {
      v = ref[k];
      this.uniforms[k] = v;
    }
  };

  Move.prototype.vertex = function(shader, pass) {
    var ref, ref1;
    if (pass === this.props.pass) {
      shader.pipe('move.position', this.uniforms);
    }
    return (ref = (ref1 = this._inherit('vertex')) != null ? ref1.vertex(shader, pass) : void 0) != null ? ref : shader;
  };

  return Move;

})(Transition);

module.exports = Move;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxwcmVzZW50XFxtb3ZlLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxwcmltaXRpdmVzXFx0eXBlc1xccHJlc2VudFxcbW92ZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxnQkFBQTtFQUFBOzs7QUFBQSxVQUFBLEdBQWEsT0FBQSxDQUFRLGNBQVI7O0FBRVA7Ozs7Ozs7RUFDSixJQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLFlBQVQsRUFBdUIsUUFBdkIsRUFBaUMsTUFBakMsRUFBeUMsU0FBekMsRUFBb0QsUUFBcEQ7O2lCQUVWLElBQUEsR0FBTSxTQUFBO0FBQ0osUUFBQTtJQUFBLGdDQUFBLFNBQUE7QUFFQTs7OztBQUFBLFNBQUEsUUFBQTs7TUFBQSxJQUFDLENBQUEsUUFBUyxDQUFBLENBQUEsQ0FBVixHQUFlO0FBQWY7RUFISTs7aUJBVU4sTUFBQSxHQUFRLFNBQUMsTUFBRCxFQUFTLElBQVQ7QUFDTixRQUFBO0lBQUEsSUFBMEMsSUFBQSxLQUFRLElBQUMsQ0FBQSxLQUFLLENBQUMsSUFBekQ7TUFBQSxNQUFNLENBQUMsSUFBUCxDQUFZLGVBQVosRUFBNkIsSUFBQyxDQUFBLFFBQTlCLEVBQUE7O2lIQUM0QztFQUZ0Qzs7OztHQWJTOztBQWlCbkIsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"./transition":97}],91:[function(require,module,exports){
var Play, Track,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Track = require('./track');

Play = (function(superClass) {
  extend(Play, superClass);

  function Play() {
    return Play.__super__.constructor.apply(this, arguments);
  }

  Play.traits = ['node', 'track', 'trigger', 'play', 'bind'];

  Play.prototype.init = function() {
    Play.__super__.init.apply(this, arguments);
    this.skew = null;
    return this.start = null;
  };

  Play.prototype.reset = function(go) {
    if (go == null) {
      go = true;
    }
    this.skew = go ? 0 : null;
    return this.start = null;
  };

  Play.prototype.make = function() {
    var parentClock;
    Play.__super__.make.apply(this, arguments);
    this._listen('slide', 'slide.step', (function(_this) {
      return function(e) {
        var trigger;
        trigger = _this.props.trigger;
        if ((trigger != null) && e.index === trigger) {
          return _this.reset();
        }
        if ((trigger != null) && e.index === 0) {
          return _this.reset(false);
        }
      };
    })(this));
    if (!this.props.trigger || (this._inherit('slide') == null)) {
      this.reset();
    }
    parentClock = this._inherit('clock');
    return this._listen(parentClock, 'clock.tick', (function(_this) {
      return function() {
        var delay, delta, from, now, offset, pace, ratio, realtime, ref, speed, time, to;
        ref = _this.props, from = ref.from, to = ref.to, speed = ref.speed, pace = ref.pace, delay = ref.delay, realtime = ref.realtime;
        time = parentClock.getTime();
        if (_this.skew != null) {
          now = realtime ? time.time : time.clock;
          delta = realtime ? time.delta : time.step;
          ratio = speed / pace;
          if (_this.start == null) {
            _this.start = now;
          }
          _this.skew += delta * (ratio - 1);
          offset = Math.max(0, now - _this.start + _this.skew - delay * ratio);
          if (_this.props.loop) {
            offset = offset % (to - from);
          }
          _this.playhead = Math.min(to, from + offset);
        } else {
          _this.playhead = 0;
        }
        return _this.update();
      };
    })(this));
  };

  Play.prototype.update = function() {
    return Play.__super__.update.apply(this, arguments);
  };

  Play.prototype.change = function(changed, touched, init) {
    if (changed['trigger.trigger'] || changed['play.realtime']) {
      return this.rebuild();
    }
    return Play.__super__.change.call(this, changed, touched, init);
  };

  return Play;

})(Track);

module.exports = Play;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxwcmVzZW50XFxwbGF5LmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxwcmltaXRpdmVzXFx0eXBlc1xccHJlc2VudFxccGxheS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxXQUFBO0VBQUE7OztBQUFBLEtBQUEsR0FBUSxPQUFBLENBQVEsU0FBUjs7QUFFRjs7Ozs7OztFQUNKLElBQUMsQ0FBQSxNQUFELEdBQVUsQ0FBQyxNQUFELEVBQVMsT0FBVCxFQUFrQixTQUFsQixFQUE2QixNQUE3QixFQUFxQyxNQUFyQzs7aUJBRVYsSUFBQSxHQUFNLFNBQUE7SUFDSixnQ0FBQSxTQUFBO0lBQ0EsSUFBQyxDQUFBLElBQUQsR0FBUTtXQUNSLElBQUMsQ0FBQSxLQUFELEdBQVM7RUFITDs7aUJBS04sS0FBQSxHQUFPLFNBQUMsRUFBRDs7TUFBQyxLQUFLOztJQUNYLElBQUMsQ0FBQSxJQUFELEdBQVcsRUFBSCxHQUFXLENBQVgsR0FBa0I7V0FDMUIsSUFBQyxDQUFBLEtBQUQsR0FBUztFQUZKOztpQkFJUCxJQUFBLEdBQU0sU0FBQTtBQUNKLFFBQUE7SUFBQSxnQ0FBQSxTQUFBO0lBR0EsSUFBQyxDQUFBLE9BQUQsQ0FBUyxPQUFULEVBQWtCLFlBQWxCLEVBQWdDLENBQUEsU0FBQSxLQUFBO2FBQUEsU0FBQyxDQUFEO0FBQzlCLFlBQUE7UUFBQSxPQUFBLEdBQVUsS0FBQyxDQUFBLEtBQUssQ0FBQztRQUNqQixJQUF3QixpQkFBQSxJQUFhLENBQUMsQ0FBQyxLQUFGLEtBQVcsT0FBaEQ7QUFBQSxpQkFBTyxLQUFDLENBQUEsS0FBRCxDQUFBLEVBQVA7O1FBQ0EsSUFBd0IsaUJBQUEsSUFBYSxDQUFDLENBQUMsS0FBRixLQUFXLENBQWhEO0FBQUEsaUJBQU8sS0FBQyxDQUFBLEtBQUQsQ0FBTyxLQUFQLEVBQVA7O01BSDhCO0lBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQSxDQUFoQztJQUlBLElBQVksQ0FBQyxJQUFDLENBQUEsS0FBSyxDQUFDLE9BQVIsSUFBb0IsZ0NBQWhDO01BQUEsSUFBQyxDQUFBLEtBQUQsQ0FBQSxFQUFBOztJQUdBLFdBQUEsR0FBYyxJQUFDLENBQUEsUUFBRCxDQUFVLE9BQVY7V0FHZCxJQUFDLENBQUEsT0FBRCxDQUFTLFdBQVQsRUFBc0IsWUFBdEIsRUFBb0MsQ0FBQSxTQUFBLEtBQUE7YUFBQSxTQUFBO0FBQ2xDLFlBQUE7UUFBQSxNQUEyQyxLQUFDLENBQUEsS0FBNUMsRUFBQyxlQUFELEVBQU8sV0FBUCxFQUFXLGlCQUFYLEVBQWtCLGVBQWxCLEVBQXdCLGlCQUF4QixFQUErQjtRQUUvQixJQUFBLEdBQU8sV0FBVyxDQUFDLE9BQVosQ0FBQTtRQUVQLElBQUcsa0JBQUg7VUFDRSxHQUFBLEdBQVcsUUFBSCxHQUFpQixJQUFJLENBQUMsSUFBdEIsR0FBaUMsSUFBSSxDQUFDO1VBQzlDLEtBQUEsR0FBVyxRQUFILEdBQWlCLElBQUksQ0FBQyxLQUF0QixHQUFpQyxJQUFJLENBQUM7VUFDOUMsS0FBQSxHQUFRLEtBQUEsR0FBUTtVQUVoQixJQUFpQixtQkFBakI7WUFBQSxLQUFDLENBQUEsS0FBRCxHQUFTLElBQVQ7O1VBQ0EsS0FBQyxDQUFBLElBQUQsSUFBUyxLQUFBLEdBQVEsQ0FBQyxLQUFBLEdBQVEsQ0FBVDtVQUVqQixNQUFBLEdBQVMsSUFBSSxDQUFDLEdBQUwsQ0FBUyxDQUFULEVBQVksR0FBQSxHQUFNLEtBQUMsQ0FBQSxLQUFQLEdBQWUsS0FBQyxDQUFBLElBQWhCLEdBQXVCLEtBQUEsR0FBUSxLQUEzQztVQUNULElBQWlDLEtBQUMsQ0FBQSxLQUFLLENBQUMsSUFBeEM7WUFBQSxNQUFBLEdBQVMsTUFBQSxHQUFTLENBQUMsRUFBQSxHQUFLLElBQU4sRUFBbEI7O1VBRUEsS0FBQyxDQUFBLFFBQUQsR0FBWSxJQUFJLENBQUMsR0FBTCxDQUFTLEVBQVQsRUFBYSxJQUFBLEdBQU8sTUFBcEIsRUFYZDtTQUFBLE1BQUE7VUFhRSxLQUFDLENBQUEsUUFBRCxHQUFZLEVBYmQ7O2VBZUEsS0FBQyxDQUFBLE1BQUQsQ0FBQTtNQXBCa0M7SUFBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLENBQXBDO0VBZEk7O2lCQW9DTixNQUFBLEdBQVEsU0FBQTtXQUNOLGtDQUFBLFNBQUE7RUFETTs7aUJBR1IsTUFBQSxHQUFRLFNBQUMsT0FBRCxFQUFVLE9BQVYsRUFBbUIsSUFBbkI7SUFDTixJQUFxQixPQUFRLENBQUEsaUJBQUEsQ0FBUixJQUE4QixPQUFRLENBQUEsZUFBQSxDQUEzRDtBQUFBLGFBQU8sSUFBQyxDQUFBLE9BQUQsQ0FBQSxFQUFQOztXQUNBLGlDQUFNLE9BQU4sRUFBZSxPQUFmLEVBQXdCLElBQXhCO0VBRk07Ozs7R0FuRFM7O0FBdURuQixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"./track":96}],92:[function(require,module,exports){
var Parent, Present, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Parent = require('../base/parent');

Util = require('../../../util');

Present = (function(superClass) {
  extend(Present, superClass);

  function Present() {
    return Present.__super__.constructor.apply(this, arguments);
  }

  Present.traits = ['node', 'present'];

  Present.prototype.init = function() {};

  Present.prototype.make = function() {
    this.nodes = [];
    this.steps = [];
    this.length = 0;
    this.last = [];
    this.index = 0;
    this.dirty = [];
    this._listen('root', 'root.update', this.update);
    return this._compute('present.length', (function(_this) {
      return function() {
        return _this.length;
      };
    })(this));
  };

  Present.prototype.adopt = function(controller) {
    var node;
    node = controller.node;
    if (this.nodes.indexOf(controller) < 0) {
      this.nodes.push(node);
    }
    return this.dirty.push(controller);
  };

  Present.prototype.unadopt = function(controller) {
    var node;
    node = controller.node;
    this.nodes = this.nodes.filter(function(x) {
      return x !== controller;
    });
    return this.dirty.push(controller);
  };

  Present.prototype.update = function() {
    var controller, j, len, ref1, ref2;
    if (!this.dirty.length) {
      return;
    }
    ref1 = this.dirty;
    for (j = 0, len = ref1.length; j < len; j++) {
      controller = ref1[j];
      this.slideReset(controller);
    }
    ref2 = this.process(this.nodes), this.steps = ref2[0], this.indices = ref2[1];
    this.length = this.steps.length;
    this.index = null;
    this.go(this.props.index);
    return this.dirty = [];
  };

  Present.prototype.slideLatch = function(controller, enabled, step) {
    return controller.slideLatch(enabled, step);
  };

  Present.prototype.slideStep = function(controller, index, step) {
    return controller.slideStep(this.mapIndex(controller, index), step);
  };

  Present.prototype.slideRelease = function(controller, step) {
    return controller.slideRelease();
  };

  Present.prototype.slideReset = function(controller) {
    return controller.slideReset();
  };

  Present.prototype.mapIndex = function(controller, index) {
    return index - this.indices[controller.node._id];
  };

  Present.prototype.process = function(nodes) {
    var dedupe, expand, finalize, isSibling, isSlide, order, parents, paths, slides, split, steps, traverse;
    slides = function(nodes) {
      var el, j, len, results;
      results = [];
      for (j = 0, len = nodes.length; j < len; j++) {
        el = nodes[j];
        results.push(parents(el).filter(isSlide));
      }
      return results;
    };
    traverse = function(map) {
      return function(el) {
        var ref, ref1, results;
        results = [];
        while (el && (ref1 = [map(el), el], el = ref1[0], ref = ref1[1], ref1)) {
          results.push(ref);
        }
        return results;
      };
    };
    parents = traverse(function(el) {
      if (el.parent.traits.hash.present) {
        return null;
      } else {
        return el.parent;
      }
    });
    isSlide = function(el) {
      return nodes.indexOf(el) >= 0;
    };
    isSibling = function(a, b) {
      var c, d, e, i, j, ref1;
      c = a.length;
      d = b.length;
      e = c - d;
      if (e !== 0) {
        return false;
      }
      e = Math.min(c, d);
      for (i = j = ref1 = e - 1; ref1 <= 0 ? j < 0 : j > 0; i = ref1 <= 0 ? ++j : --j) {
        if (a[i] !== b[i]) {
          return false;
        }
      }
      return true;
    };
    order = function(paths) {
      return paths.sort(function(a, b) {
        var c, d, e, f, g, i, j, nodeA, nodeB, ref1;
        c = a.length;
        d = b.length;
        e = Math.min(c, d);
        for (i = j = 1, ref1 = e; 1 <= ref1 ? j <= ref1 : j >= ref1; i = 1 <= ref1 ? ++j : --j) {
          nodeA = a[c - i];
          nodeB = b[d - i];
          f = nodeA.props.order;
          g = nodeB.props.order;
          if ((f != null) || (g != null)) {
            if ((f != null) && (g != null) && ((e = f - g) !== 0)) {
              return e;
            }
            if (f != null) {
              return -1;
            }
            if (g != null) {
              return 1;
            }
          }
          if (nodeB.order !== nodeA.order) {
            return nodeB.order - nodeA.order;
          }
        }
        e = c - d;
        if (e !== 0) {
          return e;
        }
        return 0;
      });
    };
    split = function(steps) {
      var absolute, j, len, node, relative, step;
      relative = [];
      absolute = [];
      for (j = 0, len = steps.length; j < len; j++) {
        step = steps[j];
        ((node = step[0]).props.steps != null ? relative : absolute).push(step);
      }
      return [relative, absolute];
    };
    expand = function(lists) {
      var absolute, i, indices, j, k, len, len1, limit, relative, slide, step, steps;
      relative = lists[0], absolute = lists[1];
      limit = 100;
      indices = {};
      steps = [];
      slide = function(step, index) {
        var childIndex, from, i, j, name, node, parent, parentIndex, props, ref1, ref2, to;
        props = (node = step[0]).props;
        parent = step[1];
        parentIndex = parent != null ? indices[parent._id] : 0;
        childIndex = index;
        from = props.from != null ? parentIndex + props.from : childIndex - props.early;
        to = props.to != null ? parentIndex + props.to : childIndex + props.steps + props.late;
        from = Math.max(0, from);
        to = Math.min(limit, to);
        if (indices[name = node._id] == null) {
          indices[name] = from;
        }
        for (i = j = ref1 = from, ref2 = to; ref1 <= ref2 ? j < ref2 : j > ref2; i = ref1 <= ref2 ? ++j : --j) {
          steps[i] = (steps[i] != null ? steps[i] : steps[i] = []).concat(step);
        }
        return props.steps;
      };
      i = 0;
      for (j = 0, len = relative.length; j < len; j++) {
        step = relative[j];
        i += slide(step, i);
      }
      for (k = 0, len1 = absolute.length; k < len1; k++) {
        step = absolute[k];
        slide(step, 0);
      }
      steps = (function() {
        var l, len2, results;
        results = [];
        for (l = 0, len2 = steps.length; l < len2; l++) {
          step = steps[l];
          results.push(finalize(dedupe(step)));
        }
        return results;
      })();
      return [steps, indices];
    };
    dedupe = function(step) {
      var i, j, len, node, results;
      if (step) {
        results = [];
        for (i = j = 0, len = step.length; j < len; i = ++j) {
          node = step[i];
          if (step.indexOf(node) === i) {
            results.push(node);
          }
        }
        return results;
      } else {
        return [];
      }
    };
    finalize = function(step) {
      return step.sort(function(a, b) {
        return a.order - b.order;
      });
    };
    paths = slides(nodes);
    steps = order(paths);
    return expand(split(steps));
  };

  Present.prototype.go = function(index) {
    var active, ascend, descend, enter, exit, j, k, l, last, len, len1, len2, len3, len4, len5, len6, len7, len8, m, n, node, o, p, q, r, ref1, ref2, ref3, ref4, ref5, ref6, ref7, stay, step, toStr;
    index = Math.max(0, Math.min(this.length + 1, +index || 0));
    last = this.last;
    active = (ref1 = this.steps[index - 1]) != null ? ref1 : [];
    step = this.props.directed ? index - this.index : 1;
    this.index = index;
    enter = (function() {
      var j, len, results;
      results = [];
      for (j = 0, len = active.length; j < len; j++) {
        node = active[j];
        if (this.last.indexOf(node) < 0) {
          results.push(node);
        }
      }
      return results;
    }).call(this);
    exit = (function() {
      var j, len, ref2, results;
      ref2 = this.last;
      results = [];
      for (j = 0, len = ref2.length; j < len; j++) {
        node = ref2[j];
        if (active.indexOf(node) < 0) {
          results.push(node);
        }
      }
      return results;
    }).call(this);
    stay = (function() {
      var j, len, results;
      results = [];
      for (j = 0, len = active.length; j < len; j++) {
        node = active[j];
        if (enter.indexOf(node) < 0 && exit.indexOf(node) < 0) {
          results.push(node);
        }
      }
      return results;
    })();
    ascend = function(nodes) {
      return nodes.sort(function(a, b) {
        return a.order - b.order;
      });
    };
    descend = function(nodes) {
      return nodes.sort(function(a, b) {
        return b.order - a.order;
      });
    };
    toStr = function(x) {
      return x.toString();
    };
    ref2 = ascend(enter);
    for (j = 0, len = ref2.length; j < len; j++) {
      node = ref2[j];
      this.slideLatch(node.controller, true, step);
    }
    ref3 = ascend(stay);
    for (k = 0, len1 = ref3.length; k < len1; k++) {
      node = ref3[k];
      this.slideLatch(node.controller, null, step);
    }
    ref4 = ascend(exit);
    for (l = 0, len2 = ref4.length; l < len2; l++) {
      node = ref4[l];
      this.slideLatch(node.controller, false, step);
    }
    for (m = 0, len3 = enter.length; m < len3; m++) {
      node = enter[m];
      this.slideStep(node.controller, index, step);
    }
    for (n = 0, len4 = stay.length; n < len4; n++) {
      node = stay[n];
      this.slideStep(node.controller, index, step);
    }
    for (o = 0, len5 = exit.length; o < len5; o++) {
      node = exit[o];
      this.slideStep(node.controller, index, step);
    }
    ref5 = descend(enter);
    for (p = 0, len6 = ref5.length; p < len6; p++) {
      node = ref5[p];
      this.slideRelease(node.controller);
    }
    ref6 = descend(stay);
    for (q = 0, len7 = ref6.length; q < len7; q++) {
      node = ref6[q];
      this.slideRelease(node.controller);
    }
    ref7 = descend(exit);
    for (r = 0, len8 = ref7.length; r < len8; r++) {
      node = ref7[r];
      this.slideRelease(node.controller);
    }
    this.last = active;
  };

  Present.prototype.change = function(changed, touched, init) {
    if (changed['present.index'] || init) {
      return this.go(this.props.index);
    }
  };

  return Present;

})(Parent);

module.exports = Present;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,

},{"../../../util":175,"../base/parent":47}],93:[function(require,module,exports){
var Reveal, Transition, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Transition = require('./transition');

Util = require('../../../util');

Reveal = (function(superClass) {
  extend(Reveal, superClass);

  function Reveal() {
    return Reveal.__super__.constructor.apply(this, arguments);
  }

  Reveal.traits = ['node', 'transition', 'mask', 'visible', 'active'];

  Reveal.prototype.mask = function(shader) {
    var ref, ref1, s;
    if (shader) {
      s = this._shaders.shader();
      s.pipe(Util.GLSL.identity('vec4'));
      s.fan();
      s.pipe(shader, this.uniforms);
      s.next();
      s.pipe('reveal.mask', this.uniforms);
      s.end();
      s.pipe("float combine(float a, float b) { return min(a, b); }");
    } else {
      s = this._shaders.shader();
      s.pipe('reveal.mask', this.uniforms);
    }
    return (ref = (ref1 = this._inherit('mask')) != null ? ref1.mask(s) : void 0) != null ? ref : s;
  };

  return Reveal;

})(Transition);

module.exports = Reveal;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxwcmVzZW50XFxyZXZlYWwuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxwcmVzZW50XFxyZXZlYWwuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsd0JBQUE7RUFBQTs7O0FBQUEsVUFBQSxHQUFhLE9BQUEsQ0FBUSxjQUFSOztBQUNiLElBQUEsR0FBTyxPQUFBLENBQVEsZUFBUjs7QUFFRDs7Ozs7OztFQUNKLE1BQUMsQ0FBQSxNQUFELEdBQVUsQ0FBQyxNQUFELEVBQVMsWUFBVCxFQUF1QixNQUF2QixFQUErQixTQUEvQixFQUEwQyxRQUExQzs7bUJBRVYsSUFBQSxHQUFNLFNBQUMsTUFBRDtBQUNKLFFBQUE7SUFBQSxJQUFHLE1BQUg7TUFDRSxDQUFBLEdBQUksSUFBQyxDQUFBLFFBQVEsQ0FBQyxNQUFWLENBQUE7TUFDSixDQUFDLENBQUMsSUFBRixDQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBVixDQUFtQixNQUFuQixDQUFQO01BQ0EsQ0FBQyxDQUFDLEdBQUYsQ0FBQTtNQUNBLENBQUcsQ0FBQyxJQUFKLENBQVMsTUFBVCxFQUFpQixJQUFDLENBQUEsUUFBbEI7TUFDQSxDQUFDLENBQUMsSUFBRixDQUFBO01BQ0EsQ0FBRyxDQUFDLElBQUosQ0FBUyxhQUFULEVBQXdCLElBQUMsQ0FBQSxRQUF6QjtNQUNBLENBQUMsQ0FBQyxHQUFGLENBQUE7TUFDQSxDQUFDLENBQUMsSUFBRixDQUFPLHVEQUFQLEVBUkY7S0FBQSxNQUFBO01BVUUsQ0FBQSxHQUFJLElBQUMsQ0FBQSxRQUFRLENBQUMsTUFBVixDQUFBO01BQ0osQ0FBQyxDQUFDLElBQUYsQ0FBTyxhQUFQLEVBQXNCLElBQUMsQ0FBQSxRQUF2QixFQVhGOztrR0FhNkI7RUFkekI7Ozs7R0FIYTs7QUFtQnJCLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{"../../../util":175,"./transition":97}],94:[function(require,module,exports){
var Parent, Slide,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Parent = require('../base/parent');

Slide = (function(superClass) {
  extend(Slide, superClass);

  function Slide() {
    return Slide.__super__.constructor.apply(this, arguments);
  }

  Slide.traits = ['node', 'slide', 'visible', 'active'];

  Slide.prototype.make = function() {
    this._helpers.visible.make();
    this._helpers.active.make();
    if (!this._inherit('present')) {
      throw new Error((this.node.toString()) + " must be placed inside <present></present>");
    }
    return this._inherit('present').adopt(this);
  };

  Slide.prototype.unmake = function() {
    this._helpers.visible.unmake();
    this._helpers.active.unmake();
    return this._inherit('present')(unadopt(this));
  };

  Slide.prototype.change = function(changed, touched, init) {
    if (changed['slide.early'] || changed['slide.late'] || changed['slide.steps'] || changed['slide.from'] || changed['slide.to']) {
      return this.rebuild();
    }
  };

  Slide.prototype.slideLatch = function(enabled, step) {
    this.trigger({
      'type': 'transition.latch',
      'step': step
    });
    if (enabled != null) {
      return this._instant(enabled);
    }
  };

  Slide.prototype.slideStep = function(index, step) {
    return this.trigger({
      'type': 'slide.step',
      'index': index,
      'step': step
    });
  };

  Slide.prototype.slideRelease = function() {
    return this.trigger({
      'type': 'transition.release'
    });
  };

  Slide.prototype.slideReset = function() {
    this._instant(false);
    return this.trigger({
      'type': 'slide.reset'
    });
  };

  Slide.prototype._instant = function(enabled) {
    this.setVisible(enabled);
    return this.setActive(enabled);
  };

  return Slide;

})(Parent);

module.exports = Slide;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxwcmVzZW50XFxzbGlkZS5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccHJpbWl0aXZlc1xcdHlwZXNcXHByZXNlbnRcXHNsaWRlLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLGFBQUE7RUFBQTs7O0FBQUEsTUFBQSxHQUFTLE9BQUEsQ0FBUSxnQkFBUjs7QUFFSDs7Ozs7OztFQUNKLEtBQUMsQ0FBQSxNQUFELEdBQVUsQ0FBQyxNQUFELEVBQVMsT0FBVCxFQUFrQixTQUFsQixFQUE2QixRQUE3Qjs7a0JBRVYsSUFBQSxHQUFNLFNBQUE7SUFDSixJQUFDLENBQUEsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFsQixDQUFBO0lBQ0EsSUFBQyxDQUFBLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBakIsQ0FBQTtJQUVBLElBQW1GLENBQUMsSUFBQyxDQUFBLFFBQUQsQ0FBVSxTQUFWLENBQXBGO0FBQUEsWUFBTSxJQUFJLEtBQUosQ0FBWSxDQUFDLElBQUMsQ0FBQSxJQUFJLENBQUMsUUFBTixDQUFBLENBQUQsQ0FBQSxHQUFrQiw0Q0FBOUIsRUFBTjs7V0FFQSxJQUFDLENBQUEsUUFBRCxDQUFVLFNBQVYsQ0FBb0IsQ0FBQyxLQUFyQixDQUEyQixJQUEzQjtFQU5JOztrQkFRTixNQUFBLEdBQVEsU0FBQTtJQUNOLElBQUMsQ0FBQSxRQUFRLENBQUMsT0FBTyxDQUFDLE1BQWxCLENBQUE7SUFDQSxJQUFDLENBQUEsUUFBUSxDQUFDLE1BQU0sQ0FBQyxNQUFqQixDQUFBO1dBRUEsSUFBQyxDQUFBLFFBQUQsQ0FBVSxTQUFWLENBQUEsQ0FBcUIsT0FBQSxDQUFRLElBQVIsQ0FBckI7RUFKTTs7a0JBTVIsTUFBQSxHQUFRLFNBQUMsT0FBRCxFQUFVLE9BQVYsRUFBbUIsSUFBbkI7SUFDTixJQUFxQixPQUFRLENBQUEsYUFBQSxDQUFSLElBQ0EsT0FBUSxDQUFBLFlBQUEsQ0FEUixJQUVBLE9BQVEsQ0FBQSxhQUFBLENBRlIsSUFHQSxPQUFRLENBQUEsWUFBQSxDQUhSLElBSUEsT0FBUSxDQUFBLFVBQUEsQ0FKN0I7QUFBQSxhQUFPLElBQUMsQ0FBQSxPQUFELENBQUEsRUFBUDs7RUFETTs7a0JBT1IsVUFBQSxHQUFZLFNBQUMsT0FBRCxFQUFVLElBQVY7SUFFVixJQUFDLENBQUEsT0FBRCxDQUNFO01BQUEsTUFBQSxFQUFRLGtCQUFSO01BQ0EsTUFBQSxFQUFRLElBRFI7S0FERjtJQUlBLElBQXFCLGVBQXJCO2FBQUEsSUFBQyxDQUFBLFFBQUQsQ0FBVSxPQUFWLEVBQUE7O0VBTlU7O2tCQVFaLFNBQUEsR0FBVyxTQUFDLEtBQUQsRUFBUSxJQUFSO1dBRVQsSUFBQyxDQUFBLE9BQUQsQ0FDRTtNQUFBLE1BQUEsRUFBUSxZQUFSO01BQ0EsT0FBQSxFQUFTLEtBRFQ7TUFFQSxNQUFBLEVBQVMsSUFGVDtLQURGO0VBRlM7O2tCQU9YLFlBQUEsR0FBYyxTQUFBO1dBRVosSUFBQyxDQUFBLE9BQUQsQ0FDRTtNQUFBLE1BQUEsRUFBUSxvQkFBUjtLQURGO0VBRlk7O2tCQUtkLFVBQUEsR0FBWSxTQUFBO0lBQ1YsSUFBQyxDQUFBLFFBQUQsQ0FBVSxLQUFWO1dBQ0EsSUFBQyxDQUFBLE9BQUQsQ0FDRTtNQUFBLE1BQUEsRUFBUSxhQUFSO0tBREY7RUFGVTs7a0JBS1osUUFBQSxHQUFVLFNBQUMsT0FBRDtJQUVSLElBQUMsQ0FBQSxVQUFELENBQVksT0FBWjtXQUNBLElBQUMsQ0FBQSxTQUFELENBQVksT0FBWjtFQUhROzs7O0dBakRROztBQXVEcEIsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"../base/parent":47}],95:[function(require,module,exports){
var Step, Track,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Track = require('./track');

Step = (function(superClass) {
  extend(Step, superClass);

  function Step() {
    return Step.__super__.constructor.apply(this, arguments);
  }

  Step.traits = ['node', 'track', 'step', 'trigger', 'bind'];

  Step.prototype.make = function() {
    var clock, j, ref, ref1, results;
    Step.__super__.make.apply(this, arguments);
    clock = this._inherit('clock');
    if (this.actualIndex == null) {
      this.actualIndex = null;
    }
    this.animateIndex = this._animator.make(this._types.number(0), {
      clock: clock,
      realtime: this.props.realtime,
      step: (function(_this) {
        return function(value) {
          return _this.actualIndex = value;
        };
      })(this)
    });
    if (this.lastIndex == null) {
      this.lastIndex = null;
    }
    this.animateStep = this._animator.make(this._types.number(0), {
      clock: clock,
      realtime: this.props.realtime,
      step: (function(_this) {
        return function(value) {
          _this.playhead = value;
          return _this.update();
        };
      })(this)
    });
    this.stops = (ref = this.props.stops) != null ? ref : (function() {
      results = [];
      for (var j = 0, ref1 = this.script.length; 0 <= ref1 ? j < ref1 : j > ref1; 0 <= ref1 ? j++ : j--){ results.push(j); }
      return results;
    }).apply(this);
    this._listen('slide', 'slide.reset', (function(_this) {
      return function(e) {
        return _this.lastIndex = null;
      };
    })(this));
    return this._listen('slide', 'slide.step', (function(_this) {
      return function(e) {
        var delay, duration, factor, free, from, i, k, last, len, pace, playback, ref2, ref3, ref4, rewind, skip, skips, speed, step, stop, to, trigger;
        ref2 = _this.props, delay = ref2.delay, duration = ref2.duration, pace = ref2.pace, speed = ref2.speed, playback = ref2.playback, rewind = ref2.rewind, skip = ref2.skip, trigger = ref2.trigger;
        i = Math.max(0, Math.min(_this.stops.length - 1, e.index - trigger));
        from = _this.playhead;
        to = _this.stops[i];
        if ((_this.lastIndex == null) && trigger) {
          _this.lastIndex = i;
          _this.animateStep.set(to);
          _this.animateIndex.set(i);
          return;
        }
        last = (ref3 = (ref4 = _this.actualIndex) != null ? ref4 : _this.lastIndex) != null ? ref3 : 0;
        step = i - last;
        skips = _this.stops.slice(Math.min(last, i), Math.max(last, i));
        free = 0;
        last = skips.shift();
        for (k = 0, len = skips.length; k < len; k++) {
          stop = skips[k];
          if (last === stop) {
            free++;
          }
          last = stop;
        }
        _this.lastIndex = i;
        factor = speed * (e.step >= 0 ? 1 : rewind);
        factor *= skip ? Math.max(1, Math.abs(step) - free) : 1;
        duration += Math.abs(to - from) * pace / factor;
        if (from !== to) {
          _this.animateIndex.immediate(i, {
            delay: delay,
            duration: duration,
            ease: playback
          });
          return _this.animateStep.immediate(to, {
            delay: delay,
            duration: duration,
            ease: playback
          });
        }
      };
    })(this));
  };

  Step.prototype.made = function() {
    return this.update();
  };

  Step.prototype.unmake = function() {
    this.animateIndex.dispose();
    this.animateStep.dispose();
    this.animateIndex = this.animateStep = null;
    return Step.__super__.unmake.apply(this, arguments);
  };

  Step.prototype.change = function(changed, touched, init) {
    if (changed['step.stops'] || changed['step.realtime']) {
      return this.rebuild();
    }
    return Step.__super__.change.call(this, changed, touched, init);
  };

  return Step;

})(Track);

module.exports = Step;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxwcmVzZW50XFxzdGVwLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxwcmltaXRpdmVzXFx0eXBlc1xccHJlc2VudFxcc3RlcC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxXQUFBO0VBQUE7OztBQUFBLEtBQUEsR0FBUSxPQUFBLENBQVEsU0FBUjs7QUFFRjs7Ozs7OztFQUNKLElBQUMsQ0FBQSxNQUFELEdBQVUsQ0FBQyxNQUFELEVBQVMsT0FBVCxFQUFrQixNQUFsQixFQUEwQixTQUExQixFQUFxQyxNQUFyQzs7aUJBRVYsSUFBQSxHQUFNLFNBQUE7QUFDSixRQUFBO0lBQUEsZ0NBQUEsU0FBQTtJQUVBLEtBQUEsR0FBUSxJQUFDLENBQUEsUUFBRCxDQUFVLE9BQVY7O01BRVIsSUFBQyxDQUFBLGNBQWU7O0lBQ2hCLElBQUMsQ0FBQSxZQUFELEdBQWdCLElBQUMsQ0FBQSxTQUFTLENBQUMsSUFBWCxDQUFnQixJQUFDLENBQUEsTUFBTSxDQUFDLE1BQVIsQ0FBZSxDQUFmLENBQWhCLEVBQ2Q7TUFBQSxLQUFBLEVBQVUsS0FBVjtNQUNBLFFBQUEsRUFBVSxJQUFDLENBQUEsS0FBSyxDQUFDLFFBRGpCO01BRUEsSUFBQSxFQUFNLENBQUEsU0FBQSxLQUFBO2VBQUEsU0FBQyxLQUFEO2lCQUNKLEtBQUMsQ0FBQSxXQUFELEdBQWU7UUFEWDtNQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FGTjtLQURjOztNQU1oQixJQUFDLENBQUEsWUFBYTs7SUFDZCxJQUFDLENBQUEsV0FBRCxHQUFlLElBQUMsQ0FBQSxTQUFTLENBQUMsSUFBWCxDQUFnQixJQUFDLENBQUEsTUFBTSxDQUFDLE1BQVIsQ0FBZSxDQUFmLENBQWhCLEVBQ2I7TUFBQSxLQUFBLEVBQVUsS0FBVjtNQUNBLFFBQUEsRUFBVSxJQUFDLENBQUEsS0FBSyxDQUFDLFFBRGpCO01BRUEsSUFBQSxFQUFNLENBQUEsU0FBQSxLQUFBO2VBQUEsU0FBQyxLQUFEO1VBQ0osS0FBQyxDQUFBLFFBQUQsR0FBWTtpQkFDWixLQUFDLENBQUEsTUFBRCxDQUFBO1FBRkk7TUFBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLENBRk47S0FEYTtJQU9mLElBQUMsQ0FBQSxLQUFELDRDQUF3Qjs7Ozs7SUFHeEIsSUFBQyxDQUFBLE9BQUQsQ0FBUyxPQUFULEVBQWtCLGFBQWxCLEVBQWlDLENBQUEsU0FBQSxLQUFBO2FBQUEsU0FBQyxDQUFEO2VBQU8sS0FBQyxDQUFBLFNBQUQsR0FBYTtNQUFwQjtJQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBakM7V0FHQSxJQUFDLENBQUEsT0FBRCxDQUFTLE9BQVQsRUFBa0IsWUFBbEIsRUFBZ0MsQ0FBQSxTQUFBLEtBQUE7YUFBQSxTQUFDLENBQUQ7QUFDOUIsWUFBQTtRQUFBLE9BQWtFLEtBQUMsQ0FBQSxLQUFuRSxFQUFDLGtCQUFELEVBQVEsd0JBQVIsRUFBa0IsZ0JBQWxCLEVBQXdCLGtCQUF4QixFQUErQix3QkFBL0IsRUFBeUMsb0JBQXpDLEVBQWlELGdCQUFqRCxFQUF1RDtRQUd2RCxDQUFBLEdBQUksSUFBSSxDQUFDLEdBQUwsQ0FBVSxDQUFWLEVBQWEsSUFBSSxDQUFDLEdBQUwsQ0FBUyxLQUFDLENBQUEsS0FBSyxDQUFDLE1BQVAsR0FBZ0IsQ0FBekIsRUFBNEIsQ0FBQyxDQUFDLEtBQUYsR0FBVSxPQUF0QyxDQUFiO1FBR0osSUFBQSxHQUFPLEtBQUMsQ0FBQTtRQUNSLEVBQUEsR0FBTyxLQUFDLENBQUEsS0FBTSxDQUFBLENBQUE7UUFHZCxJQUFJLHlCQUFELElBQWlCLE9BQXBCO1VBQ0UsS0FBQyxDQUFBLFNBQUQsR0FBYTtVQUNiLEtBQUMsQ0FBQSxXQUFZLENBQUMsR0FBZCxDQUFrQixFQUFsQjtVQUNBLEtBQUMsQ0FBQSxZQUFZLENBQUMsR0FBZCxDQUFrQixDQUFsQjtBQUNBLGlCQUpGOztRQU9BLElBQUEseUZBQW9DO1FBQ3BDLElBQUEsR0FBTyxDQUFBLEdBQUk7UUFHWCxLQUFBLEdBQVEsS0FBQyxDQUFBLEtBQUssQ0FBQyxLQUFQLENBQWEsSUFBSSxDQUFDLEdBQUwsQ0FBUyxJQUFULEVBQWUsQ0FBZixDQUFiLEVBQWdDLElBQUksQ0FBQyxHQUFMLENBQVMsSUFBVCxFQUFlLENBQWYsQ0FBaEM7UUFDUixJQUFBLEdBQVE7UUFDUixJQUFBLEdBQVEsS0FBSyxDQUFDLEtBQU4sQ0FBQTtBQUNSLGFBQUEsdUNBQUE7O1VBQ0UsSUFBVSxJQUFBLEtBQVEsSUFBbEI7WUFBQSxJQUFBLEdBQUE7O1VBQ0EsSUFBQSxHQUFPO0FBRlQ7UUFLQSxLQUFDLENBQUEsU0FBRCxHQUFhO1FBR2IsTUFBQSxHQUFTLEtBQUEsR0FBUSxDQUFHLENBQUMsQ0FBQyxJQUFGLElBQVUsQ0FBYixHQUFvQixDQUFwQixHQUEyQixNQUEzQjtRQUdqQixNQUFBLElBQWEsSUFBSCxHQUFhLElBQUksQ0FBQyxHQUFMLENBQVMsQ0FBVCxFQUFZLElBQUksQ0FBQyxHQUFMLENBQVMsSUFBVCxDQUFBLEdBQWlCLElBQTdCLENBQWIsR0FBb0Q7UUFHOUQsUUFBQSxJQUFZLElBQUksQ0FBQyxHQUFMLENBQVMsRUFBQSxHQUFLLElBQWQsQ0FBQSxHQUFzQixJQUF0QixHQUE2QjtRQUV6QyxJQUFHLElBQUEsS0FBUSxFQUFYO1VBQ0UsS0FBQyxDQUFBLFlBQVksQ0FBQyxTQUFkLENBQXdCLENBQXhCLEVBQTRCO1lBQUMsT0FBQSxLQUFEO1lBQVEsVUFBQSxRQUFSO1lBQWtCLElBQUEsRUFBTSxRQUF4QjtXQUE1QjtpQkFDQSxLQUFDLENBQUEsV0FBWSxDQUFDLFNBQWQsQ0FBd0IsRUFBeEIsRUFBNEI7WUFBQyxPQUFBLEtBQUQ7WUFBUSxVQUFBLFFBQVI7WUFBa0IsSUFBQSxFQUFNLFFBQXhCO1dBQTVCLEVBRkY7O01BekM4QjtJQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBaEM7RUExQkk7O2lCQXVFTixJQUFBLEdBQU0sU0FBQTtXQUNKLElBQUMsQ0FBQSxNQUFELENBQUE7RUFESTs7aUJBR04sTUFBQSxHQUFRLFNBQUE7SUFDTixJQUFDLENBQUEsWUFBWSxDQUFDLE9BQWQsQ0FBQTtJQUNBLElBQUMsQ0FBQSxXQUFZLENBQUMsT0FBZCxDQUFBO0lBQ0EsSUFBQyxDQUFBLFlBQUQsR0FBZ0IsSUFBQyxDQUFBLFdBQUQsR0FBZTtXQUUvQixrQ0FBQSxTQUFBO0VBTE07O2lCQU9SLE1BQUEsR0FBUSxTQUFDLE9BQUQsRUFBVSxPQUFWLEVBQW1CLElBQW5CO0lBQ04sSUFBcUIsT0FBUSxDQUFBLFlBQUEsQ0FBUixJQUF5QixPQUFRLENBQUEsZUFBQSxDQUF0RDtBQUFBLGFBQU8sSUFBQyxDQUFBLE9BQUQsQ0FBQSxFQUFQOztXQUNBLGlDQUFNLE9BQU4sRUFBZSxPQUFmLEVBQXdCLElBQXhCO0VBRk07Ozs7R0FwRlM7O0FBd0ZuQixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"./track":96}],96:[function(require,module,exports){
var Ease, Primitive, Track, deepCopy,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Primitive = require('../../primitive');

Ease = require('../../../util').Ease;

deepCopy = function(x) {
  var k, out, v;
  out = {};
  for (k in x) {
    v = x[k];
    if (v instanceof Array) {
      out[k] = v.slice();
    } else if ((v != null) && typeof v === 'object') {
      out[k] = deepCopy(v);
    } else {
      out[k] = v;
    }
  }
  return out;
};

Track = (function(superClass) {
  extend(Track, superClass);

  function Track() {
    return Track.__super__.constructor.apply(this, arguments);
  }

  Track.traits = ['node', 'track', 'seek', 'bind'];

  Track.prototype.init = function() {
    this.handlers = {};
    this.script = null;
    this.values = null;
    this.playhead = 0;
    this.velocity = null;
    this.section = null;
    return this.expr = null;
  };

  Track.prototype.make = function() {
    var node, ref, script;
    this._helpers.bind.make([
      {
        to: 'track.target',
        trait: 'node',
        callback: null
      }
    ]);
    script = this.props.script;
    node = this.bind.target.node;
    this.targetNode = node;
    return ref = this._process(node, script), this.script = ref[0], this.values = ref[1], this.start = ref[2], this.end = ref[3], ref;
  };

  Track.prototype.unmake = function() {
    this.unbindExpr();
    this._helpers.bind.unmake();
    this.script = this.values = this.start = this.end = this.section = this.expr = null;
    return this.playhead = 0;
  };

  Track.prototype.bindExpr = function(expr) {
    var clock;
    this.unbindExpr();
    this.expr = expr;
    this.targetNode.bind(expr, true);
    clock = this.targetNode.clock;
    return this._attributes.bind(this.measure = (function() {
      var playhead;
      playhead = null;
      return (function(_this) {
        return function() {
          var step;
          step = clock.getTime().step;
          if (playhead != null) {
            _this.velocity = (_this.playhead - playhead) / step;
          }
          return playhead = _this.playhead;
        };
      })(this);
    })());
  };

  Track.prototype.unbindExpr = function() {
    if (this.expr != null) {
      this.targetNode.unbind(this.expr, true);
    }
    if (this.measure != null) {
      this._attributes.unbind(this.measure);
    }
    return this.expr = this.measure = null;
  };

  Track.prototype._process = function(object, script) {
    var end, i, j, k, key, l, last, len, len1, message, props, ref, ref1, ref2, result, s, start, step, v, values;
    if (script instanceof Array) {
      s = {};
      for (i = j = 0, len = script.length; j < len; i = ++j) {
        step = script[i];
        s[i] = step;
      }
      script = s;
    }
    s = [];
    for (key in script) {
      step = script[key];
      if (step == null) {
        step = [];
      }
      if (step instanceof Array) {
        step = {
          key: +key,
          props: step[0] != null ? deepCopy(step[0]) : {},
          expr: step[1] != null ? deepCopy(step[1]) : {}
        };
      } else {
        if ((step.key == null) && !step.props && !step.expr) {
          step = {
            props: deepCopy(step)
          };
        } else {
          step = deepCopy(step);
        }
        step.key = step.key != null ? +step.key : +key;
        if (step.props == null) {
          step.props = {};
        }
        if (step.expr == null) {
          step.expr = {};
        }
      }
      s.push(step);
    }
    script = s;
    if (!script.length) {
      return [[], {}, 0, 0];
    }
    script.sort(function(a, b) {
      return a.key - b.key;
    });
    start = script[0].key;
    end = script[script.length - 1].key;
    for (key in script) {
      step = script[key];
      if (typeof last !== "undefined" && last !== null) {
        last.next = step;
      }
      last = step;
    }
    last.next = last;
    script = s;
    props = {};
    values = {};
    for (key in script) {
      step = script[key];
      ref = step.props;
      for (k in ref) {
        v = ref[k];
        props[k] = true;
      }
    }
    for (key in script) {
      step = script[key];
      ref1 = step.expr;
      for (k in ref1) {
        v = ref1[k];
        props[k] = true;
      }
    }
    for (k in props) {
      props[k] = object.get(k);
    }
    try {
      for (k in props) {
        values[k] = [object.attribute(k).T.make(), object.attribute(k).T.make(), object.attribute(k).T.make()];
      }
    } catch (error) {
      console.warn(this.node.toMarkup());
      message = (this.node.toString()) + " - Target " + object + " has no `" + k + "` property";
      throw new Error(message);
    }
    result = [];
    for (l = 0, len1 = script.length; l < len1; l++) {
      step = script[l];
      for (k in props) {
        v = props[k];
        v = object.validate(k, (ref2 = step.props[k]) != null ? ref2 : v);
        props[k] = step.props[k] = v;
        if ((step.expr[k] != null) && typeof step.expr[k] !== 'function') {
          console.warn(this.node.toMarkup());
          message = (this.node.toString()) + " - Expression `" + step.expr[k] + "` on property `" + k + "` is not a function";
          throw new Error(message);
        }
      }
      result.push(step);
    }
    return [result, values, start, end];
  };

  Track.prototype.update = function() {
    var clock, ease, easeMethod, end, expr, find, from, getLerpFactor, getPlayhead, k, live, node, playhead, ref, ref1, script, section, seek, start, to;
    ref = this, playhead = ref.playhead, script = ref.script;
    ref1 = this.props, ease = ref1.ease, seek = ref1.seek;
    node = this.targetNode;
    if (seek != null) {
      playhead = seek;
    }
    if (script.length) {
      find = function() {
        var i, j, last, len, step;
        last = script[0];
        for (i = j = 0, len = script.length; j < len; i = ++j) {
          step = script[i];
          if (step.key > playhead) {
            break;
          }
          last = step;
        }
        return last;
      };
      section = this.section;
      if (!section || playhead < section.key || playhead > section.next.key) {
        section = find(script, playhead);
      }
      if (section === this.section) {
        return;
      }
      this.section = section;
      from = section;
      to = section.next;
      start = from.key;
      end = to.key;
      easeMethod = (function() {
        switch (ease) {
          case 'linear':
          case 0:
            return Ease.clamp;
          case 'cosine':
          case 1:
            return Ease.cosine;
          case 'binary':
          case 2:
            return Ease.binary;
          case 'hold':
          case 3:
            return Ease.hold;
          default:
            return Ease.cosine;
        }
      })();
      clock = node.clock;
      getPlayhead = (function(_this) {
        return function(time) {
          var now;
          if (_this.velocity == null) {
            return _this.playhead;
          }
          now = clock.getTime();
          return _this.playhead + _this.velocity * (time - now.time);
        };
      })(this);
      getLerpFactor = (function() {
        var scale;
        scale = 1 / Math.max(0.0001, end - start);
        return function(time) {
          return easeMethod((getPlayhead(time) - start) * scale, 0, 1);
        };
      })();
      live = (function(_this) {
        return function(key) {
          var animator, attr, fromE, fromP, invalid, toE, toP, values;
          fromE = from.expr[key];
          toE = to.expr[key];
          fromP = from.props[key];
          toP = to.props[key];
          invalid = function() {
            console.warn(node.toMarkup());
            throw new Error((this.node.toString()) + " - Invalid expression result on track `" + key + "`");
          };
          attr = node.attribute(key);
          values = _this.values[key];
          animator = _this._animator;
          if (fromE && toE) {
            return (function(values, from, to) {
              return function(time, delta) {
                var _from, _to;
                values[0] = _from = attr.T.validate(fromE(time, delta), values[0], invalid);
                values[1] = _to = attr.T.validate(toE(time, delta), values[1], invalid);
                return values[2] = animator.lerp(attr.T, _from, _to, getLerpFactor(time), values[2]);
              };
            })(values, from, to);
          } else if (fromE) {
            return (function(values, from, to) {
              return function(time, delta) {
                var _from;
                values[0] = _from = attr.T.validate(fromE(time, delta), values[0], invalid);
                return values[1] = animator.lerp(attr.T, _from, toP, getLerpFactor(time), values[1]);
              };
            })(values, from, to);
          } else if (toE) {
            return (function(values, from, to) {
              return function(time, delta) {
                var _to;
                values[0] = _to = attr.T.validate(toE(time, delta), values[0], invalid);
                return values[1] = animator.lerp(attr.T, fromP, _to, getLerpFactor(time), values[1]);
              };
            })(values, from, to);
          } else {
            return (function(values, from, to) {
              return function(time, delta) {
                return values[0] = animator.lerp(attr.T, fromP, toP, getLerpFactor(time), values[0]);
              };
            })(values, from, to);
          }
        };
      })(this);
      expr = {};
      for (k in from.expr) {
        if (expr[k] == null) {
          expr[k] = live(k);
        }
      }
      for (k in to.expr) {
        if (expr[k] == null) {
          expr[k] = live(k);
        }
      }
      for (k in from.props) {
        if (expr[k] == null) {
          expr[k] = live(k);
        }
      }
      for (k in to.props) {
        if (expr[k] == null) {
          expr[k] = live(k);
        }
      }
      return this.bindExpr(expr);
    }
  };

  Track.prototype.change = function(changed, touched, init) {
    if (changed['track.target'] || changed['track.script'] || changed['track.mode']) {
      return this.rebuild();
    }
    if (changed['seek.seek'] || init) {
      return this.update();
    }
  };

  return Track;

})(Primitive);

module.exports = Track;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,

},{"../../../util":175,"../../primitive":44}],97:[function(require,module,exports){
var Parent, Transition, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Parent = require('../base/parent');

Util = require('../../../util');

Transition = (function(superClass) {
  extend(Transition, superClass);

  function Transition() {
    return Transition.__super__.constructor.apply(this, arguments);
  }

  Transition.traits = ['node', 'transition', 'transform', 'mask', 'visible', 'active'];

  Transition.prototype.init = function() {
    this.animate = null;
    this.uniforms = null;
    this.state = {
      isVisible: true,
      isActive: true,
      enter: 1,
      exit: 1
    };
    this.latched = null;
    return this.locked = null;
  };

  Transition.prototype.make = function() {
    var activeParent, slideParent, visibleParent;
    this.uniforms = {
      transitionFrom: this._attributes.make(this._types.vec4()),
      transitionTo: this._attributes.make(this._types.vec4()),
      transitionActive: this._attributes.make(this._types.bool()),
      transitionScale: this._attributes.make(this._types.vec4()),
      transitionBias: this._attributes.make(this._types.vec4()),
      transitionEnter: this._attributes.make(this._types.number()),
      transitionExit: this._attributes.make(this._types.number()),
      transitionSkew: this._attributes.make(this._types.number())
    };
    slideParent = this._inherit('slide');
    visibleParent = this._inherit('visible');
    activeParent = this._inherit('active');
    this._listen(slideParent, 'transition.latch', (function(_this) {
      return function(e) {
        return _this.latch(e.step);
      };
    })(this));
    this._listen(slideParent, 'transition.release', (function(_this) {
      return function() {
        return _this.release();
      };
    })(this));
    this._listen(visibleParent, 'visible.change', (function(_this) {
      return function() {
        return _this.update((_this.state.isVisible = visibleParent.isVisible));
      };
    })(this));
    this._listen(activeParent, 'active.change', (function(_this) {
      return function() {
        return _this.update((_this.state.isActive = activeParent.isActive));
      };
    })(this));
    this.animate = this._animator.make(this._types.vec2(1, 1), {
      step: (function(_this) {
        return function(value) {
          _this.state.enter = value.x;
          _this.state.exit = value.y;
          return _this.update();
        };
      })(this),
      complete: (function(_this) {
        return function(done) {
          return _this.complete(done);
        };
      })(this)
    });
    return this.move = (this.props.from != null) || (this.props.to != null);
  };

  Transition.prototype.unmake = function() {
    return this.animate.dispose();
  };

  Transition.prototype.latch = function(step) {
    var enter, exit, forward, latched, ref, visible;
    this.locked = null;
    this.latched = latched = {
      isVisible: this.state.isVisible,
      isActive: this.state.isActive,
      step: step
    };
    visible = this.isVisible;
    if (!visible) {
      forward = latched.step >= 0;
      ref = forward ? [0, 1] : [1, 0], enter = ref[0], exit = ref[1];
      return this.animate.set(enter, exit);
    }
  };

  Transition.prototype.release = function() {
    var delay, delayEnter, delayExit, duration, durationEnter, durationExit, enter, exit, forward, latched, ref, ref1, ref2, state, visible;
    latched = this.latched;
    state = this.state;
    this.latched = null;
    if (latched.isVisible !== state.isVisible) {
      forward = latched.step >= 0;
      visible = state.isVisible;
      ref = visible ? [1, 1] : forward ? [1, 0] : [0, 1], enter = ref[0], exit = ref[1];
      ref1 = this.props, duration = ref1.duration, durationEnter = ref1.durationEnter, durationExit = ref1.durationExit;
      if (durationEnter == null) {
        durationEnter = duration;
      }
      if (durationExit == null) {
        durationExit = duration;
      }
      duration = visible * durationEnter + !visible * durationExit;
      ref2 = this.props, delay = ref2.delay, delayEnter = ref2.delayEnter, delayExit = ref2.delayExit;
      if (delayEnter == null) {
        delayEnter = delay;
      }
      if (delayExit == null) {
        delayExit = delay;
      }
      delay = visible * delayEnter + !visible * delayExit;
      this.animate.immediate({
        x: enter,
        y: exit
      }, {
        duration: duration,
        delay: delay,
        ease: 'linear'
      });
      this.locked = {
        isVisible: true,
        isActive: latched.isActive || state.isActive
      };
    }
    return this.update();
  };

  Transition.prototype.complete = function(done) {
    if (!done) {
      return;
    }
    this.locked = null;
    return this.update();
  };

  Transition.prototype.update = function() {
    var active, enter, exit, level, partial, ref, ref1, visible;
    if (this.latched != null) {
      return;
    }
    ref = this.props, enter = ref.enter, exit = ref.exit;
    if (enter == null) {
      enter = this.state.enter;
    }
    if (exit == null) {
      exit = this.state.exit;
    }
    level = enter * exit;
    visible = level > 0;
    partial = level < 1;
    this.uniforms.transitionEnter.value = enter;
    this.uniforms.transitionExit.value = exit;
    this.uniforms.transitionActive.value = partial;
    if (visible) {
      visible = !!this.state.isVisible;
    }
    if (this.locked != null) {
      visible = this.locked.isVisible;
    }
    if (this.isVisible !== visible) {
      this.isVisible = visible;
      this.trigger({
        type: 'visible.change'
      });
    }
    active = !!(this.state.isActive || ((ref1 = this.locked) != null ? ref1.isActive : void 0));
    if (this.isActive !== active) {
      this.isActive = active;
      return this.trigger({
        type: 'active.change'
      });
    }
  };

  Transition.prototype.change = function(changed, touched, init) {
    var flipW, flipX, flipY, flipZ, stagger, staggerW, staggerX, staggerY, staggerZ;
    if (changed['transition.enter'] || changed['transition.exit'] || init) {
      this.update();
    }
    if (changed['transition.stagger'] || init) {
      stagger = this.props.stagger;
      flipX = stagger.x < 0;
      flipY = stagger.y < 0;
      flipZ = stagger.z < 0;
      flipW = stagger.w < 0;
      staggerX = Math.abs(stagger.x);
      staggerY = Math.abs(stagger.y);
      staggerZ = Math.abs(stagger.z);
      staggerW = Math.abs(stagger.w);
      this.uniforms.transitionSkew.value = staggerX + staggerY + staggerZ + staggerW;
      this.uniforms.transitionScale.value.set((1 - flipX * 2) * staggerX, (1 - flipY * 2) * staggerY, (1 - flipZ * 2) * staggerZ, (1 - flipW * 2) * staggerW);
      return this.uniforms.transitionBias.value.set(flipX * staggerX, flipY * staggerY, flipZ * staggerZ, flipW * staggerW);
    }
  };

  return Transition;

})(Parent);

module.exports = Transition;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,

},{"../../../util":175,"../base/parent":47}],98:[function(require,module,exports){
var Compose, Primitive, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Primitive = require('../../primitive');

Util = require('../../../util');

Compose = (function(superClass) {
  extend(Compose, superClass);

  function Compose() {
    return Compose.__super__.constructor.apply(this, arguments);
  }

  Compose.traits = ['node', 'bind', 'object', 'visible', 'operator', 'style', 'compose'];

  Compose.defaults = {
    zWrite: false,
    zTest: false,
    color: '#ffffff'
  };

  Compose.prototype.init = function() {
    return this.compose = null;
  };

  Compose.prototype.resize = function() {
    var depth, dims, height, layers, width;
    if (!(this.compose && this.bind.source)) {
      return;
    }
    dims = this.bind.source.getActiveDimensions();
    width = dims.width;
    height = dims.height;
    depth = dims.depth;
    layers = dims.items;
    return this.remapUVScale.set(width, height);
  };

  Compose.prototype.make = function() {
    var alpha, composeUniforms, fragment, resampleUniforms;
    this._helpers.bind.make([
      {
        to: 'operator.source',
        trait: 'source'
      }
    ]);
    if (this.bind.source == null) {
      return;
    }
    resampleUniforms = {
      remapUVScale: this._attributes.make(this._types.vec2())
    };
    this.remapUVScale = resampleUniforms.remapUVScale.value;
    fragment = this._shaders.shader();
    alpha = this.props.alpha;
    if (this.bind.source.is('image')) {
      fragment.pipe('screen.pass.uv', resampleUniforms);
      fragment = this.bind.source.imageShader(fragment);
    } else {
      fragment.pipe('screen.map.xy', resampleUniforms);
      fragment = this.bind.source.sourceShader(fragment);
    }
    if (!alpha) {
      fragment.pipe('color.opaque');
    }
    composeUniforms = this._helpers.style.uniforms();
    this.compose = this._renderables.make('screen', {
      map: fragment,
      uniforms: composeUniforms,
      linear: true
    });
    this._helpers.visible.make();
    return this._helpers.object.make([this.compose]);
  };

  Compose.prototype.made = function() {
    return this.resize();
  };

  Compose.prototype.unmake = function() {
    this._helpers.bind.unmake();
    this._helpers.visible.unmake();
    return this._helpers.object.unmake();
  };

  Compose.prototype.change = function(changed, touched, init) {
    if (changed['operator.source'] || changed['compose.alpha']) {
      return this.rebuild();
    }
  };

  return Compose;

})(Primitive);

module.exports = Compose;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxydHRcXGNvbXBvc2UuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxydHRcXGNvbXBvc2UuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsd0JBQUE7RUFBQTs7O0FBQUEsU0FBQSxHQUFZLE9BQUEsQ0FBUSxpQkFBUjs7QUFDWixJQUFBLEdBQVksT0FBQSxDQUFRLGVBQVI7O0FBRU47Ozs7Ozs7RUFDSixPQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLE1BQVQsRUFBaUIsUUFBakIsRUFBMkIsU0FBM0IsRUFBc0MsVUFBdEMsRUFBa0QsT0FBbEQsRUFBMkQsU0FBM0Q7O0VBQ1YsT0FBQyxDQUFBLFFBQUQsR0FDRTtJQUFBLE1BQUEsRUFBUSxLQUFSO0lBQ0EsS0FBQSxFQUFRLEtBRFI7SUFFQSxLQUFBLEVBQU8sU0FGUDs7O29CQUlGLElBQUEsR0FBTSxTQUFBO1dBQ0osSUFBQyxDQUFBLE9BQUQsR0FBVztFQURQOztvQkFPTixNQUFBLEdBQVEsU0FBQTtBQUNOLFFBQUE7SUFBQSxJQUFBLENBQUEsQ0FBYyxJQUFDLENBQUEsT0FBRCxJQUFhLElBQUMsQ0FBQSxJQUFJLENBQUMsTUFBakMsQ0FBQTtBQUFBLGFBQUE7O0lBRUEsSUFBQSxHQUFPLElBQUMsQ0FBQSxJQUFJLENBQUMsTUFBTSxDQUFDLG1CQUFiLENBQUE7SUFDUCxLQUFBLEdBQVMsSUFBSSxDQUFDO0lBQ2QsTUFBQSxHQUFTLElBQUksQ0FBQztJQUNkLEtBQUEsR0FBUyxJQUFJLENBQUM7SUFDZCxNQUFBLEdBQVMsSUFBSSxDQUFDO1dBRWQsSUFBQyxDQUFBLFlBQVksQ0FBQyxHQUFkLENBQWtCLEtBQWxCLEVBQXlCLE1BQXpCO0VBVE07O29CQVdSLElBQUEsR0FBTSxTQUFBO0FBRUosUUFBQTtJQUFBLElBQUMsQ0FBQSxRQUFRLENBQUMsSUFBSSxDQUFDLElBQWYsQ0FBb0I7TUFDbEI7UUFBRSxFQUFBLEVBQUksaUJBQU47UUFBeUIsS0FBQSxFQUFPLFFBQWhDO09BRGtCO0tBQXBCO0lBSUEsSUFBYyx3QkFBZDtBQUFBLGFBQUE7O0lBR0EsZ0JBQUEsR0FDRTtNQUFBLFlBQUEsRUFBYyxJQUFDLENBQUEsV0FBVyxDQUFDLElBQWIsQ0FBa0IsSUFBQyxDQUFBLE1BQU0sQ0FBQyxJQUFSLENBQUEsQ0FBbEIsQ0FBZDs7SUFDRixJQUFDLENBQUEsWUFBRCxHQUFnQixnQkFBZ0IsQ0FBQyxZQUFZLENBQUM7SUFHOUMsUUFBQSxHQUFXLElBQUMsQ0FBQSxRQUFRLENBQUMsTUFBVixDQUFBO0lBQ1gsS0FBQSxHQUFXLElBQUMsQ0FBQSxLQUFLLENBQUM7SUFFbEIsSUFBRyxJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFiLENBQWdCLE9BQWhCLENBQUg7TUFFRSxRQUFRLENBQUMsSUFBVCxDQUFjLGdCQUFkLEVBQWdDLGdCQUFoQztNQUNBLFFBQUEsR0FBVyxJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFiLENBQXlCLFFBQXpCLEVBSGI7S0FBQSxNQUFBO01BTUUsUUFBUSxDQUFDLElBQVQsQ0FBYyxlQUFkLEVBQStCLGdCQUEvQjtNQUNBLFFBQUEsR0FBVyxJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFiLENBQTBCLFFBQTFCLEVBUGI7O0lBVUEsSUFBZ0MsQ0FBQyxLQUFqQztNQUFBLFFBQVEsQ0FBQyxJQUFULENBQWMsY0FBZCxFQUFBOztJQUdBLGVBQUEsR0FBa0IsSUFBQyxDQUFBLFFBQVEsQ0FBQyxLQUFLLENBQUMsUUFBaEIsQ0FBQTtJQUNsQixJQUFDLENBQUEsT0FBRCxHQUFXLElBQUMsQ0FBQSxZQUFZLENBQUMsSUFBZCxDQUFtQixRQUFuQixFQUNFO01BQUEsR0FBQSxFQUFLLFFBQUw7TUFDQSxRQUFBLEVBQVUsZUFEVjtNQUVBLE1BQUEsRUFBUSxJQUZSO0tBREY7SUFLWCxJQUFDLENBQUEsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFsQixDQUFBO1dBQ0EsSUFBQyxDQUFBLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBakIsQ0FBc0IsQ0FBQyxJQUFDLENBQUEsT0FBRixDQUF0QjtFQXJDSTs7b0JBdUNOLElBQUEsR0FBTSxTQUFBO1dBQU0sSUFBQyxDQUFBLE1BQUQsQ0FBQTtFQUFOOztvQkFFTixNQUFBLEdBQVEsU0FBQTtJQUNOLElBQUMsQ0FBQSxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQWYsQ0FBQTtJQUNBLElBQUMsQ0FBQSxRQUFRLENBQUMsT0FBTyxDQUFDLE1BQWxCLENBQUE7V0FDQSxJQUFDLENBQUEsUUFBUSxDQUFDLE1BQU0sQ0FBQyxNQUFqQixDQUFBO0VBSE07O29CQUtSLE1BQUEsR0FBUSxTQUFDLE9BQUQsRUFBVSxPQUFWLEVBQW1CLElBQW5CO0lBQ04sSUFBcUIsT0FBUSxDQUFBLGlCQUFBLENBQVIsSUFDQSxPQUFRLENBQUEsZUFBQSxDQUQ3QjtBQUFBLGFBQU8sSUFBQyxDQUFBLE9BQUQsQ0FBQSxFQUFQOztFQURNOzs7O0dBdkVZOztBQTZFdEIsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"../../../util":175,"../../primitive":44}],99:[function(require,module,exports){
var Parent, RTT, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Parent = require('../base/parent');

Util = require('../../../util');

RTT = (function(superClass) {
  extend(RTT, superClass);

  function RTT() {
    return RTT.__super__.constructor.apply(this, arguments);
  }

  RTT.traits = ['node', 'root', 'scene', 'vertex', 'texture', 'rtt', 'source', 'index', 'image'];

  RTT.defaults = {
    minFilter: 'linear',
    magFilter: 'linear',
    type: 'unsignedByte'
  };

  RTT.prototype.init = function() {
    return this.rtt = this.scene = this.camera = this.width = this.height = this.history = this.rootSize = this.size = null;
  };

  RTT.prototype.indexShader = function(shader) {
    return shader;
  };

  RTT.prototype.imageShader = function(shader) {
    return this.rtt.shaderRelative(shader);
  };

  RTT.prototype.sourceShader = function(shader) {
    return this.rtt.shaderAbsolute(shader, this.history);
  };

  RTT.prototype.getDimensions = function() {
    return {
      items: 1,
      width: this.width,
      height: this.height,
      depth: this.history
    };
  };

  RTT.prototype.getActiveDimensions = function() {
    return this.getDimensions();
  };

  RTT.prototype.make = function() {
    var aspect, height, heightFactor, history, magFilter, minFilter, ref, ref1, relativeSize, size, type, viewHeight, viewWidth, width, widthFactor;
    this.parentRoot = this._inherit('root');
    this.rootSize = this.parentRoot.getSize();
    this._listen(this.parentRoot, 'root.pre', this.pre);
    this._listen(this.parentRoot, 'root.update', this.update);
    this._listen(this.parentRoot, 'root.render', this.render);
    this._listen(this.parentRoot, 'root.post', this.post);
    this._listen(this.parentRoot, 'root.camera', this.setCamera);
    this._listen(this.parentRoot, 'root.resize', function(event) {
      return this.resize(event.size);
    });
    if (this.rootSize == null) {
      return;
    }
    ref = this.props, minFilter = ref.minFilter, magFilter = ref.magFilter, type = ref.type;
    ref1 = this.props, width = ref1.width, height = ref1.height, history = ref1.history, size = ref1.size;
    relativeSize = size === this.node.attributes['rtt.size']["enum"].relative;
    widthFactor = relativeSize ? this.rootSize.renderWidth : 1;
    heightFactor = relativeSize ? this.rootSize.renderHeight : 1;
    this.width = Math.round(width != null ? width * widthFactor : this.rootSize.renderWidth);
    this.height = Math.round(height != null ? height * heightFactor : this.rootSize.renderHeight);
    this.history = history;
    this.aspect = aspect = this.width / this.height;
    if (this.scene == null) {
      this.scene = this._renderables.make('scene');
    }
    this.rtt = this._renderables.make('renderToTexture', {
      scene: this.scene,
      camera: this._context.defaultCamera,
      width: this.width,
      height: this.height,
      frames: this.history,
      minFilter: minFilter,
      magFilter: magFilter,
      type: type
    });
    aspect = width || height ? aspect : this.rootSize.aspect;
    viewWidth = width != null ? width : this.rootSize.viewWidth;
    viewHeight = height != null ? height : this.rootSize.viewHeight;
    return this.size = {
      renderWidth: this.width,
      renderHeight: this.height,
      aspect: aspect,
      viewWidth: viewWidth,
      viewHeight: viewHeight,
      pixelRatio: this.height / viewHeight
    };
  };

  RTT.prototype.made = function() {
    this.trigger({
      type: 'source.rebuild'
    });
    if (this.size) {
      return this.trigger({
        type: 'root.resize',
        size: this.size
      });
    }
  };

  RTT.prototype.unmake = function(rebuild) {
    if (this.rtt == null) {
      return;
    }
    this.rtt.dispose();
    if (!rebuild) {
      this.scene.dispose();
    }
    return this.rtt = this.width = this.height = this.history = null;
  };

  RTT.prototype.change = function(changed, touched, init) {
    if (touched['texture'] || changed['rtt.width'] || changed['rtt.height']) {
      return this.rebuild();
    }
    if (changed['root.camera'] || init) {
      this._unattach();
      this._attach(this.props.camera, 'camera', this.setCamera, this, this, true);
      return this.setCamera();
    }
  };

  RTT.prototype.adopt = function(renderable) {
    var i, len, object, ref, results;
    ref = renderable.renders;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      object = ref[i];
      results.push(this.scene.add(object));
    }
    return results;
  };

  RTT.prototype.unadopt = function(renderable) {
    var i, len, object, ref, results;
    ref = renderable.renders;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      object = ref[i];
      results.push(this.scene.remove(object));
    }
    return results;
  };

  RTT.prototype.resize = function(size) {
    var height, ref, relativeSize, width;
    this.rootSize = size;
    ref = this.props, width = ref.width, height = ref.height, size = ref.size;
    relativeSize = size === this.node.attributes['rtt.size']["enum"].relative;
    if (!this.rtt || (width == null) || (height == null) || relativeSize) {
      return this.rebuild();
    }
  };

  RTT.prototype.select = function(selector) {
    return this._root.node.model.select(selector, [this.node]);
  };

  RTT.prototype.watch = function(selector, handler) {
    return this._root.node.model.watch(selector, handler);
  };

  RTT.prototype.unwatch = function(handler) {
    return this._root.node.model.unwatch(handler);
  };

  RTT.prototype.pre = function(e) {
    return this.trigger(e);
  };

  RTT.prototype.update = function(e) {
    var camera;
    if ((camera = this.getOwnCamera()) != null) {
      camera.aspect = this.aspect || 1;
      camera.updateProjectionMatrix();
    }
    return this.trigger(e);
  };

  RTT.prototype.render = function(e) {
    var ref;
    this.trigger(e);
    return (ref = this.rtt) != null ? ref.render(this.getCamera()) : void 0;
  };

  RTT.prototype.post = function(e) {
    return this.trigger(e);
  };

  RTT.prototype.setCamera = function() {
    var camera, ref;
    camera = (ref = this.select(this.props.camera)[0]) != null ? ref.controller : void 0;
    if (this.camera !== camera) {
      this.camera = camera;
      this.rtt.camera = this.getCamera();
      return this.trigger({
        type: 'root.camera'
      });
    } else if (!this.camera) {
      return this.trigger({
        type: 'root.camera'
      });
    }
  };

  RTT.prototype.getOwnCamera = function() {
    var ref;
    return (ref = this.camera) != null ? ref.getCamera() : void 0;
  };

  RTT.prototype.getCamera = function() {
    var ref;
    return (ref = this.getOwnCamera()) != null ? ref : this._inherit('root').getCamera();
  };

  RTT.prototype.vertex = function(shader, pass) {
    if (pass === 2) {
      return shader.pipe('view.position');
    }
    if (pass === 3) {
      return shader.pipe('root.position');
    }
    return shader;
  };

  return RTT;

})(Parent);

module.exports = RTT;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxydHRcXHJ0dC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccHJpbWl0aXZlc1xcdHlwZXNcXHJ0dFxccnR0LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLGlCQUFBO0VBQUE7OztBQUFBLE1BQUEsR0FBUyxPQUFBLENBQVEsZ0JBQVI7O0FBQ1QsSUFBQSxHQUFPLE9BQUEsQ0FBUSxlQUFSOztBQUVEOzs7Ozs7O0VBQ0osR0FBQyxDQUFBLE1BQUQsR0FBVSxDQUFDLE1BQUQsRUFBUyxNQUFULEVBQWlCLE9BQWpCLEVBQTBCLFFBQTFCLEVBQW9DLFNBQXBDLEVBQStDLEtBQS9DLEVBQXNELFFBQXRELEVBQWdFLE9BQWhFLEVBQXlFLE9BQXpFOztFQUNWLEdBQUMsQ0FBQSxRQUFELEdBQ0U7SUFBQSxTQUFBLEVBQVcsUUFBWDtJQUNBLFNBQUEsRUFBVyxRQURYO0lBRUEsSUFBQSxFQUFXLGNBRlg7OztnQkFJRixJQUFBLEdBQU0sU0FBQTtXQUNKLElBQUMsQ0FBQSxHQUFELEdBQU8sSUFBQyxDQUFBLEtBQUQsR0FBUyxJQUFDLENBQUEsTUFBRCxHQUFVLElBQUMsQ0FBQSxLQUFELEdBQVMsSUFBQyxDQUFBLE1BQUQsR0FBVSxJQUFDLENBQUEsT0FBRCxHQUFXLElBQUMsQ0FBQSxRQUFELEdBQVksSUFBQyxDQUFBLElBQUQsR0FBUTtFQUR4RTs7Z0JBR04sV0FBQSxHQUFhLFNBQUMsTUFBRDtXQUFZO0VBQVo7O2dCQUNiLFdBQUEsR0FBYSxTQUFDLE1BQUQ7V0FBWSxJQUFDLENBQUEsR0FBRyxDQUFDLGNBQUwsQ0FBb0IsTUFBcEI7RUFBWjs7Z0JBQ2IsWUFBQSxHQUFjLFNBQUMsTUFBRDtXQUFZLElBQUMsQ0FBQSxHQUFHLENBQUMsY0FBTCxDQUFvQixNQUFwQixFQUE0QixJQUFDLENBQUEsT0FBN0I7RUFBWjs7Z0JBRWQsYUFBQSxHQUFlLFNBQUE7V0FDYjtNQUFBLEtBQUEsRUFBUSxDQUFSO01BQ0EsS0FBQSxFQUFRLElBQUMsQ0FBQSxLQURUO01BRUEsTUFBQSxFQUFRLElBQUMsQ0FBQSxNQUZUO01BR0EsS0FBQSxFQUFRLElBQUMsQ0FBQSxPQUhUOztFQURhOztnQkFNZixtQkFBQSxHQUFxQixTQUFBO1dBQU0sSUFBQyxDQUFBLGFBQUQsQ0FBQTtFQUFOOztnQkFFckIsSUFBQSxHQUFNLFNBQUE7QUFDSixRQUFBO0lBQUEsSUFBQyxDQUFBLFVBQUQsR0FBYyxJQUFDLENBQUEsUUFBRCxDQUFVLE1BQVY7SUFDZCxJQUFDLENBQUEsUUFBRCxHQUFZLElBQUMsQ0FBQSxVQUFVLENBQUMsT0FBWixDQUFBO0lBRVosSUFBQyxDQUFBLE9BQUQsQ0FBUyxJQUFDLENBQUEsVUFBVixFQUFzQixVQUF0QixFQUFxQyxJQUFDLENBQUEsR0FBdEM7SUFDQSxJQUFDLENBQUEsT0FBRCxDQUFTLElBQUMsQ0FBQSxVQUFWLEVBQXNCLGFBQXRCLEVBQXFDLElBQUMsQ0FBQSxNQUF0QztJQUNBLElBQUMsQ0FBQSxPQUFELENBQVMsSUFBQyxDQUFBLFVBQVYsRUFBc0IsYUFBdEIsRUFBcUMsSUFBQyxDQUFBLE1BQXRDO0lBQ0EsSUFBQyxDQUFBLE9BQUQsQ0FBUyxJQUFDLENBQUEsVUFBVixFQUFzQixXQUF0QixFQUFxQyxJQUFDLENBQUEsSUFBdEM7SUFDQSxJQUFDLENBQUEsT0FBRCxDQUFTLElBQUMsQ0FBQSxVQUFWLEVBQXNCLGFBQXRCLEVBQXFDLElBQUMsQ0FBQSxTQUF0QztJQUNBLElBQUMsQ0FBQSxPQUFELENBQVMsSUFBQyxDQUFBLFVBQVYsRUFBc0IsYUFBdEIsRUFBcUMsU0FBQyxLQUFEO2FBQVcsSUFBQyxDQUFBLE1BQUQsQ0FBUSxLQUFLLENBQUMsSUFBZDtJQUFYLENBQXJDO0lBRUEsSUFBYyxxQkFBZDtBQUFBLGFBQUE7O0lBRUEsTUFBK0IsSUFBQyxDQUFBLEtBQWhDLEVBQUMseUJBQUQsRUFBWSx5QkFBWixFQUF1QjtJQUV2QixPQUFpQyxJQUFDLENBQUEsS0FBbEMsRUFBQyxrQkFBRCxFQUFRLG9CQUFSLEVBQWdCLHNCQUFoQixFQUF5QjtJQUV6QixZQUFBLEdBQWUsSUFBQSxLQUFRLElBQUMsQ0FBQSxJQUFJLENBQUMsVUFBVyxDQUFBLFVBQUEsQ0FBVyxFQUFDLElBQUQsRUFBSyxDQUFDO0lBQ3pELFdBQUEsR0FBa0IsWUFBSCxHQUFxQixJQUFDLENBQUEsUUFBUSxDQUFDLFdBQS9CLEdBQWlEO0lBQ2hFLFlBQUEsR0FBa0IsWUFBSCxHQUFxQixJQUFDLENBQUEsUUFBUSxDQUFDLFlBQS9CLEdBQWlEO0lBRWhFLElBQUMsQ0FBQSxLQUFELEdBQVksSUFBSSxDQUFDLEtBQUwsQ0FBYyxhQUFILEdBQWlCLEtBQUEsR0FBUyxXQUExQixHQUE2QyxJQUFDLENBQUEsUUFBUSxDQUFDLFdBQWxFO0lBQ1osSUFBQyxDQUFBLE1BQUQsR0FBWSxJQUFJLENBQUMsS0FBTCxDQUFjLGNBQUgsR0FBaUIsTUFBQSxHQUFTLFlBQTFCLEdBQTZDLElBQUMsQ0FBQSxRQUFRLENBQUMsWUFBbEU7SUFDWixJQUFDLENBQUEsT0FBRCxHQUFZO0lBQ1osSUFBQyxDQUFBLE1BQUQsR0FBWSxNQUFBLEdBQVMsSUFBQyxDQUFBLEtBQUQsR0FBUyxJQUFDLENBQUE7O01BRS9CLElBQUMsQ0FBQSxRQUFTLElBQUMsQ0FBQSxZQUFZLENBQUMsSUFBZCxDQUFtQixPQUFuQjs7SUFDVixJQUFDLENBQUEsR0FBRCxHQUFVLElBQUMsQ0FBQSxZQUFZLENBQUMsSUFBZCxDQUFtQixpQkFBbkIsRUFDUjtNQUFBLEtBQUEsRUFBVyxJQUFDLENBQUEsS0FBWjtNQUNBLE1BQUEsRUFBVyxJQUFDLENBQUEsUUFBUSxDQUFDLGFBRHJCO01BRUEsS0FBQSxFQUFXLElBQUMsQ0FBQSxLQUZaO01BR0EsTUFBQSxFQUFXLElBQUMsQ0FBQSxNQUhaO01BSUEsTUFBQSxFQUFXLElBQUMsQ0FBQSxPQUpaO01BS0EsU0FBQSxFQUFXLFNBTFg7TUFNQSxTQUFBLEVBQVcsU0FOWDtNQU9BLElBQUEsRUFBVyxJQVBYO0tBRFE7SUFVVixNQUFBLEdBQWdCLEtBQUEsSUFBUyxNQUFaLEdBQXdCLE1BQXhCLEdBQW9DLElBQUMsQ0FBQSxRQUFRLENBQUM7SUFDM0QsU0FBQSxtQkFBYSxRQUFTLElBQUMsQ0FBQSxRQUFRLENBQUM7SUFDaEMsVUFBQSxvQkFBYSxTQUFTLElBQUMsQ0FBQSxRQUFRLENBQUM7V0FFaEMsSUFBQyxDQUFBLElBQUQsR0FDRTtNQUFBLFdBQUEsRUFBYyxJQUFDLENBQUEsS0FBZjtNQUNBLFlBQUEsRUFBYyxJQUFDLENBQUEsTUFEZjtNQUVBLE1BQUEsRUFBYyxNQUZkO01BR0EsU0FBQSxFQUFjLFNBSGQ7TUFJQSxVQUFBLEVBQWMsVUFKZDtNQUtBLFVBQUEsRUFBYyxJQUFDLENBQUEsTUFBRCxHQUFVLFVBTHhCOztFQTFDRTs7Z0JBaUROLElBQUEsR0FBTSxTQUFBO0lBRUosSUFBQyxDQUFBLE9BQUQsQ0FDRTtNQUFBLElBQUEsRUFBTSxnQkFBTjtLQURGO0lBR0EsSUFBRyxJQUFDLENBQUEsSUFBSjthQUNFLElBQUMsQ0FBQSxPQUFELENBQ0U7UUFBQSxJQUFBLEVBQU0sYUFBTjtRQUNBLElBQUEsRUFBTSxJQUFDLENBQUEsSUFEUDtPQURGLEVBREY7O0VBTEk7O2dCQVVOLE1BQUEsR0FBUSxTQUFDLE9BQUQ7SUFDTixJQUFjLGdCQUFkO0FBQUEsYUFBQTs7SUFFQSxJQUFDLENBQUEsR0FBRyxDQUFDLE9BQUwsQ0FBQTtJQUNBLElBQUEsQ0FBd0IsT0FBeEI7TUFBQSxJQUFDLENBQUEsS0FBSyxDQUFDLE9BQVAsQ0FBQSxFQUFBOztXQUVBLElBQUMsQ0FBQSxHQUFELEdBQU8sSUFBQyxDQUFBLEtBQUQsR0FBUyxJQUFDLENBQUEsTUFBRCxHQUFVLElBQUMsQ0FBQSxPQUFELEdBQVc7RUFOL0I7O2dCQVFSLE1BQUEsR0FBUSxTQUFDLE9BQUQsRUFBVSxPQUFWLEVBQW1CLElBQW5CO0lBQ04sSUFBcUIsT0FBUSxDQUFBLFNBQUEsQ0FBUixJQUNBLE9BQVEsQ0FBQSxXQUFBLENBRFIsSUFFQSxPQUFRLENBQUEsWUFBQSxDQUY3QjtBQUFBLGFBQU8sSUFBQyxDQUFBLE9BQUQsQ0FBQSxFQUFQOztJQUlBLElBQUcsT0FBUSxDQUFBLGFBQUEsQ0FBUixJQUNBLElBREg7TUFHRSxJQUFDLENBQUEsU0FBRCxDQUFBO01BQ0EsSUFBQyxDQUFBLE9BQUQsQ0FBUyxJQUFDLENBQUEsS0FBSyxDQUFDLE1BQWhCLEVBQXdCLFFBQXhCLEVBQWtDLElBQUMsQ0FBQSxTQUFuQyxFQUE4QyxJQUE5QyxFQUFpRCxJQUFqRCxFQUFvRCxJQUFwRDthQUNBLElBQUMsQ0FBQSxTQUFELENBQUEsRUFMRjs7RUFMTTs7Z0JBWVIsS0FBQSxHQUFTLFNBQUMsVUFBRDtBQUFnQixRQUFBO0FBQUE7QUFBQTtTQUFBLHFDQUFBOzttQkFBQSxJQUFDLENBQUEsS0FBSyxDQUFDLEdBQVAsQ0FBYyxNQUFkO0FBQUE7O0VBQWhCOztnQkFDVCxPQUFBLEdBQVMsU0FBQyxVQUFEO0FBQWdCLFFBQUE7QUFBQTtBQUFBO1NBQUEscUNBQUE7O21CQUFBLElBQUMsQ0FBQSxLQUFLLENBQUMsTUFBUCxDQUFjLE1BQWQ7QUFBQTs7RUFBaEI7O2dCQUVULE1BQUEsR0FBUSxTQUFDLElBQUQ7QUFDTixRQUFBO0lBQUEsSUFBQyxDQUFBLFFBQUQsR0FBWTtJQUVaLE1BQXdCLElBQUMsQ0FBQSxLQUF6QixFQUFDLGlCQUFELEVBQVEsbUJBQVIsRUFBZ0I7SUFDaEIsWUFBQSxHQUFlLElBQUEsS0FBUSxJQUFDLENBQUEsSUFBSSxDQUFDLFVBQVcsQ0FBQSxVQUFBLENBQVcsRUFBQyxJQUFELEVBQUssQ0FBQztJQUV6RCxJQUFxQixDQUFDLElBQUMsQ0FBQSxHQUFGLElBQVUsZUFBVixJQUFxQixnQkFBckIsSUFBZ0MsWUFBckQ7QUFBQSxhQUFPLElBQUMsQ0FBQSxPQUFELENBQUEsRUFBUDs7RUFOTTs7Z0JBUVIsTUFBQSxHQUFRLFNBQUMsUUFBRDtXQUNOLElBQUMsQ0FBQSxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFsQixDQUF5QixRQUF6QixFQUFtQyxDQUFDLElBQUMsQ0FBQSxJQUFGLENBQW5DO0VBRE07O2dCQUdSLEtBQUEsR0FBTyxTQUFDLFFBQUQsRUFBVyxPQUFYO1dBQ0wsSUFBQyxDQUFBLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQWxCLENBQXdCLFFBQXhCLEVBQWtDLE9BQWxDO0VBREs7O2dCQUdQLE9BQUEsR0FBUyxTQUFDLE9BQUQ7V0FDUCxJQUFDLENBQUEsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBbEIsQ0FBMEIsT0FBMUI7RUFETzs7Z0JBR1QsR0FBQSxHQUFRLFNBQUMsQ0FBRDtXQUNOLElBQUMsQ0FBQSxPQUFELENBQVMsQ0FBVDtFQURNOztnQkFFUixNQUFBLEdBQVEsU0FBQyxDQUFEO0FBQ04sUUFBQTtJQUFBLElBQUcsc0NBQUg7TUFDRSxNQUFNLENBQUMsTUFBUCxHQUFnQixJQUFDLENBQUEsTUFBRCxJQUFXO01BQzNCLE1BQU0sQ0FBQyxzQkFBUCxDQUFBLEVBRkY7O1dBR0EsSUFBQyxDQUFBLE9BQUQsQ0FBUyxDQUFUO0VBSk07O2dCQUtSLE1BQUEsR0FBUSxTQUFDLENBQUQ7QUFDTixRQUFBO0lBQUEsSUFBQyxDQUFBLE9BQUQsQ0FBUyxDQUFUO3lDQUNJLENBQUUsTUFBTixDQUFhLElBQUMsQ0FBQSxTQUFELENBQUEsQ0FBYjtFQUZNOztnQkFHUixJQUFBLEdBQVEsU0FBQyxDQUFEO1dBQ04sSUFBQyxDQUFBLE9BQUQsQ0FBUyxDQUFUO0VBRE07O2dCQUdSLFNBQUEsR0FBVyxTQUFBO0FBQ1QsUUFBQTtJQUFBLE1BQUEsMERBQWtDLENBQUU7SUFDcEMsSUFBRyxJQUFDLENBQUEsTUFBRCxLQUFXLE1BQWQ7TUFDRSxJQUFDLENBQUEsTUFBRCxHQUFVO01BQ1YsSUFBQyxDQUFBLEdBQUcsQ0FBQyxNQUFMLEdBQWMsSUFBQyxDQUFBLFNBQUQsQ0FBQTthQUNkLElBQUMsQ0FBQSxPQUFELENBQVM7UUFBQyxJQUFBLEVBQU0sYUFBUDtPQUFULEVBSEY7S0FBQSxNQUlLLElBQUcsQ0FBQyxJQUFDLENBQUEsTUFBTDthQUNILElBQUMsQ0FBQSxPQUFELENBQVM7UUFBQyxJQUFBLEVBQU0sYUFBUDtPQUFULEVBREc7O0VBTkk7O2dCQVNYLFlBQUEsR0FBYyxTQUFBO0FBQU0sUUFBQTs0Q0FBTyxDQUFFLFNBQVQsQ0FBQTtFQUFOOztnQkFDZCxTQUFBLEdBQWMsU0FBQTtBQUFNLFFBQUE7dURBQWtCLElBQUMsQ0FBQSxRQUFELENBQVUsTUFBVixDQUFpQixDQUFDLFNBQWxCLENBQUE7RUFBeEI7O2dCQUdkLE1BQUEsR0FBUSxTQUFDLE1BQUQsRUFBUyxJQUFUO0lBQ04sSUFBc0MsSUFBQSxLQUFRLENBQTlDO0FBQUEsYUFBTyxNQUFNLENBQUMsSUFBUCxDQUFZLGVBQVosRUFBUDs7SUFDQSxJQUFzQyxJQUFBLEtBQVEsQ0FBOUM7QUFBQSxhQUFPLE1BQU0sQ0FBQyxJQUFQLENBQVksZUFBWixFQUFQOztXQUNBO0VBSE07Ozs7R0FuSlE7O0FBd0psQixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"../../../util":175,"../base/parent":47}],100:[function(require,module,exports){
var Primitive, Shader, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Primitive = require('../../primitive');

Util = require('../../../util');

Shader = (function(superClass) {
  extend(Shader, superClass);

  function Shader() {
    return Shader.__super__.constructor.apply(this, arguments);
  }

  Shader.traits = ['node', 'bind', 'shader'];

  Shader.freeform = true;

  Shader.prototype.init = function() {
    return this.shader = null;
  };

  Shader.prototype.make = function() {
    var code, def, i, language, len, make, ref, ref1, snippet, type, types, uniforms;
    ref = this.props, language = ref.language, code = ref.code;
    if (language !== 'glsl') {
      throw new Error("GLSL required");
    }
    this._helpers.bind.make([
      {
        to: 'shader.sources',
        trait: 'source',
        multiple: true
      }
    ]);
    snippet = this._shaders.fetch(code);
    types = this._types;
    uniforms = {};
    make = (function(_this) {
      return function(type) {
        var t;
        switch (type) {
          case 'i':
            return types.int();
          case 'f':
            return types.number();
          case 'v2':
            return types.vec2();
          case 'v3':
            return types.vec3();
          case 'v4':
            return types.vec4();
          case 'm3':
            return types.mat3();
          case 'm4':
            return types.mat4();
          case 't':
            return types.object();
          default:
            t = type.split('');
            if (t.pop() === 'v') {
              return types.array(make(t.join('')));
            } else {
              return null;
            }
        }
      };
    })(this);
    ref1 = snippet._signatures.uniform;
    for (i = 0, len = ref1.length; i < len; i++) {
      def = ref1[i];
      if (type = make(def.type)) {
        uniforms[def.name] = type;
      }
    }
    return this.reconfigure({
      props: {
        uniform: uniforms
      }
    });
  };

  Shader.prototype.made = function() {
    return this.trigger({
      type: 'source.rebuild'
    });
  };

  Shader.prototype.unmake = function() {
    return this.shader = null;
  };

  Shader.prototype.change = function(changed, touched, init) {
    if (changed['shader.uniforms'] || changed['shader.code'] || changed['shader.language']) {
      return this.rebuild();
    }
  };

  Shader.prototype.shaderBind = function(uniforms) {
    var code, i, k, language, len, name, ref, ref1, ref2, s, source, u, v;
    if (uniforms == null) {
      uniforms = {};
    }
    ref = this.props, language = ref.language, code = ref.code;
    ref1 = this.node.attributes;
    for (k in ref1) {
      v = ref1[k];
      if ((v.type != null) && (v.short != null) && v.ns === 'uniform') {
        if (uniforms[name = v.short] == null) {
          uniforms[name] = v;
        }
      }
    }
    if ((u = this.props.uniforms) != null) {
      for (k in u) {
        v = u[k];
        uniforms[k] = v;
      }
    }
    s = this._shaders.shader();
    if (this.bind.sources != null) {
      ref2 = this.bind.sources;
      for (i = 0, len = ref2.length; i < len; i++) {
        source = ref2[i];
        s.require(source.sourceShader(this._shaders.shader()));
      }
    }
    return s.pipe(code, uniforms);
  };

  return Shader;

})(Primitive);

module.exports = Shader;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFxzaGFkZXJcXHNoYWRlci5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccHJpbWl0aXZlc1xcdHlwZXNcXHNoYWRlclxcc2hhZGVyLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLHVCQUFBO0VBQUE7OztBQUFBLFNBQUEsR0FBWSxPQUFBLENBQVEsaUJBQVI7O0FBQ1osSUFBQSxHQUFZLE9BQUEsQ0FBUSxlQUFSOztBQUVOOzs7Ozs7O0VBQ0osTUFBQyxDQUFBLE1BQUQsR0FBVSxDQUFDLE1BQUQsRUFBUyxNQUFULEVBQWlCLFFBQWpCOztFQUNWLE1BQUMsQ0FBQSxRQUFELEdBQVk7O21CQUVaLElBQUEsR0FBTSxTQUFBO1dBQ0osSUFBQyxDQUFBLE1BQUQsR0FBVTtFQUROOzttQkFHTixJQUFBLEdBQU0sU0FBQTtBQUNKLFFBQUE7SUFBQSxNQUFtQixJQUFDLENBQUEsS0FBcEIsRUFBQyx1QkFBRCxFQUFXO0lBQ1gsSUFBbUMsUUFBQSxLQUFZLE1BQS9DO0FBQUEsWUFBTSxJQUFJLEtBQUosQ0FBVSxlQUFWLEVBQU47O0lBR0EsSUFBQyxDQUFBLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBZixDQUFvQjtNQUNsQjtRQUFFLEVBQUEsRUFBSSxnQkFBTjtRQUF3QixLQUFBLEVBQU8sUUFBL0I7UUFBeUMsUUFBQSxFQUFVLElBQW5EO09BRGtCO0tBQXBCO0lBS0EsT0FBQSxHQUFVLElBQUMsQ0FBQSxRQUFRLENBQUMsS0FBVixDQUFnQixJQUFoQjtJQUdWLEtBQUEsR0FBVyxJQUFDLENBQUE7SUFDWixRQUFBLEdBQVc7SUFDWCxJQUFBLEdBQU8sQ0FBQSxTQUFBLEtBQUE7YUFBQSxTQUFDLElBQUQ7QUFDTCxZQUFBO0FBQUEsZ0JBQU8s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

},{"../../../util":175,"../../primitive":44}],101:[function(require,module,exports){
var Format, Operator, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Operator = require('../operator/operator');

Util = require('../../../util');

Format = (function(superClass) {
  extend(Format, superClass);

  function Format() {
    return Format.__super__.constructor.apply(this, arguments);
  }

  Format.traits = ['node', 'bind', 'operator', 'texture', 'text', 'format', 'font'];

  Format.defaults = {
    minFilter: 'linear',
    magFilter: 'linear'
  };

  Format.prototype.init = function() {
    Format.__super__.init.apply(this, arguments);
    this.atlas = this.buffer = this.used = this.time = null;
    return this.filled = false;
  };

  Format.prototype.sourceShader = function(shader) {
    return this.buffer.shader(shader);
  };

  Format.prototype.textShader = function(shader) {
    return this.atlas.shader(shader);
  };

  Format.prototype.textIsSDF = function() {
    return this.props.sdf > 0;
  };

  Format.prototype.textHeight = function() {
    return this.props.detail;
  };

  Format.prototype.make = function() {
    var atlas, depth, detail, dims, emit, font, height, items, magFilter, minFilter, ref, ref1, sdf, style, type, variant, weight, width;
    this._helpers.bind.make([
      {
        to: 'operator.source',
        trait: 'raw'
      }
    ]);
    ref = this.props, minFilter = ref.minFilter, magFilter = ref.magFilter, type = ref.type;
    ref1 = this.props, font = ref1.font, style = ref1.style, variant = ref1.variant, weight = ref1.weight, detail = ref1.detail, sdf = ref1.sdf;
    this.atlas = this._renderables.make('textAtlas', {
      font: font,
      size: detail,
      style: style,
      variant: variant,
      weight: weight,
      outline: sdf,
      minFilter: minFilter,
      magFilter: magFilter,
      type: type
    });
    minFilter = THREE.NearestFilter;
    magFilter = THREE.NearestFilter;
    type = THREE.FloatType;
    dims = this.bind.source.getDimensions();
    items = dims.items, width = dims.width, height = dims.height, depth = dims.depth;
    this.buffer = this._renderables.make('voxelBuffer', {
      width: width,
      height: height,
      depth: depth,
      channels: 4,
      items: items,
      minFilter: minFilter,
      magFilter: magFilter,
      type: type
    });
    atlas = this.atlas;
    emit = this.buffer.streamer.emit;
    this.buffer.streamer.emit = function(t) {
      return atlas.map(t, emit);
    };
    this.clockParent = this._inherit('clock');
    return this._listen('root', 'root.update', this.update);
  };

  Format.prototype.made = function() {
    Format.__super__.made.apply(this, arguments);
    return this.resize();
  };

  Format.prototype.unmake = function() {
    Format.__super__.unmake.apply(this, arguments);
    if (this.buffer) {
      this.buffer.dispose();
      this.buffer = null;
    }
    if (this.atlas) {
      this.atlas.dispose();
      return this.atlas = null;
    }
  };

  Format.prototype.update = function() {
    var dst, src, used;
    src = this.bind.source.rawBuffer();
    dst = this.buffer;
    if ((this.filled && !this.props.live) || !this.through) {
      return;
    }
    this.time = this.clockParent.getTime();
    used = this.used;
    this.atlas.begin();
    this.used = this.through();
    this.buffer.write(this.used);
    this.atlas.end();
    this.filled = true;
    if (used !== this.used) {
      return this.trigger({
        type: 'source.resize'
      });
    }
  };

  Format.prototype.change = function(changed, touched, init) {
    var data, digits, expr, length, map, ref;
    if (touched['font']) {
      return this.rebuild();
    }
    if (changed['format.expr'] || changed['format.digits'] || changed['format.data'] || init) {
      ref = this.props, digits = ref.digits, expr = ref.expr, data = ref.data;
      if (expr == null) {
        if (data != null) {
          expr = function(x, y, z, w, i) {
            return data[i];
          };
        } else {
          expr = function(x) {
            return x;
          };
        }
      }
      length = expr.length;
      if (digits != null) {
        expr = (function(expr) {
          return function(x, y, z, w, i, j, k, l, t, d) {
            return +(expr(x, y, z, w, i, j, k, l, t, d)).toPrecision(digits);
          };
        })(expr);
      }
      if (length > 8) {
        map = (function(_this) {
          return function(emit, x, y, z, w, i, j, k, l, t, d) {
            return emit(expr(x, y, z, w, i, j, k, l, _this.time.clock, _this.time.step));
          };
        })(this);
      } else {
        map = (function(_this) {
          return function(emit, x, y, z, w, i, j, k, l) {
            return emit(expr(x, y, z, w, i, j, k, l));
          };
        })(this);
      }
      return this.through = this.bind.source.rawBuffer().through(map, this.buffer);
    }
  };

  return Format;

})(Operator);

module.exports = Format;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx0ZXh0XFxmb3JtYXQuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx0ZXh0XFxmb3JtYXQuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsc0JBQUE7RUFBQTs7O0FBQUEsUUFBQSxHQUFXLE9BQUEsQ0FBUSxzQkFBUjs7QUFDWCxJQUFBLEdBQU8sT0FBQSxDQUFRLGVBQVI7O0FBRUQ7Ozs7Ozs7RUFDSixNQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLE1BQVQsRUFBaUIsVUFBakIsRUFBNkIsU0FBN0IsRUFBd0MsTUFBeEMsRUFBZ0QsUUFBaEQsRUFBMEQsTUFBMUQ7O0VBQ1YsTUFBQyxDQUFBLFFBQUQsR0FDRTtJQUFBLFNBQUEsRUFBVyxRQUFYO0lBQ0EsU0FBQSxFQUFXLFFBRFg7OzttQkFHRixJQUFBLEdBQU0sU0FBQTtJQUNKLGtDQUFBLFNBQUE7SUFDQSxJQUFDLENBQUEsS0FBRCxHQUFTLElBQUMsQ0FBQSxNQUFELEdBQVUsSUFBQyxDQUFBLElBQUQsR0FBUSxJQUFDLENBQUEsSUFBRCxHQUFRO1dBQ25DLElBQUMsQ0FBQSxNQUFELEdBQVU7RUFITjs7bUJBS04sWUFBQSxHQUFjLFNBQUMsTUFBRDtXQUNaLElBQUMsQ0FBQSxNQUFNLENBQUMsTUFBUixDQUFlLE1BQWY7RUFEWTs7bUJBR2QsVUFBQSxHQUFZLFNBQUMsTUFBRDtXQUNWLElBQUMsQ0FBQSxLQUFLLENBQUMsTUFBUCxDQUFjLE1BQWQ7RUFEVTs7bUJBR1osU0FBQSxHQUFZLFNBQUE7V0FBTSxJQUFDLENBQUEsS0FBSyxDQUFDLEdBQVAsR0FBYTtFQUFuQjs7bUJBQ1osVUFBQSxHQUFZLFNBQUE7V0FBTSxJQUFD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

},{"../../../util":175,"../operator/operator":78}],102:[function(require,module,exports){
var Label, Primitive, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Primitive = require('../../primitive');

Util = require('../../../util');

Label = (function(superClass) {
  extend(Label, superClass);

  function Label() {
    return Label.__super__.constructor.apply(this, arguments);
  }

  Label.traits = ['node', 'bind', 'object', 'visible', 'style', 'label', 'attach', 'geometry', 'position'];

  Label.prototype.make = function() {
    var color, combine, depth, height, items, labelUniforms, map, mask, pointDims, position, snippet, sprite, styleUniforms, textDims, textIsSDF, uniforms, unitUniforms, width;
    Label.__super__.make.apply(this, arguments);
    this._helpers.bind.make([
      {
        to: 'label.text',
        trait: 'text'
      }, {
        to: 'geometry.points',
        trait: 'source'
      }, {
        to: 'geometry.colors',
        trait: 'source'
      }
    ]);
    if (this.bind.points == null) {
      return;
    }
    if (this.bind.text == null) {
      return;
    }
    pointDims = this.bind.points.getDimensions();
    textDims = this.bind.text.getDimensions();
    textIsSDF = this.bind.text.textIsSDF();
    items = Math.min(pointDims.items, textDims.items);
    width = Math.min(pointDims.width, textDims.width);
    height = Math.min(pointDims.height, textDims.height);
    depth = Math.min(pointDims.depth, textDims.depth);
    position = this.bind.points.sourceShader(this._shaders.shader());
    position = this._helpers.position.pipeline(position);
    sprite = this.bind.text.sourceShader(this._shaders.shader());
    map = this._shaders.shader().pipe('label.map');
    map.pipe(this.bind.text.textShader(this._shaders.shader()));
    labelUniforms = {
      spriteDepth: this.node.attributes['attach.depth'],
      spriteOffset: this.node.attributes['attach.offset'],
      spriteSnap: this.node.attributes['attach.snap'],
      spriteScale: this._attributes.make(this._types.number()),
      outlineStep: this._attributes.make(this._types.number()),
      outlineExpand: this._attributes.make(this._types.number()),
      outlineColor: this.node.attributes['label.background']
    };
    this.spriteScale = labelUniforms.spriteScale;
    this.outlineStep = labelUniforms.outlineStep;
    this.outlineExpand = labelUniforms.outlineExpand;
    snippet = textIsSDF ? 'label.outline' : 'label.alpha';
    combine = this._shaders.shader().pipe(snippet, labelUniforms);
    if (this.bind.colors) {
      color = this._shaders.shader();
      this.bind.colors.sourceShader(color);
    }
    mask = this._helpers.object.mask();
    styleUniforms = this._helpers.style.uniforms();
    unitUniforms = this._inherit('unit').getUnitUniforms();
    uniforms = Util.JS.merge(unitUniforms, styleUniforms, labelUniforms);
    this.sprite = this._renderables.make('sprite', {
      uniforms: uniforms,
      width: width,
      height: height,
      depth: depth,
      items: items,
      position: position,
      sprite: sprite,
      map: map,
      combine: combine,
      color: color,
      mask: mask,
      linear: true
    });
    this._helpers.visible.make();
    return this._helpers.object.make([this.sprite]);
  };

  Label.prototype.unmake = function() {
    this._helpers.bind.unmake();
    this._helpers.visible.unmake();
    this._helpers.object.unmake();
    return this.sprite = null;
  };

  Label.prototype.resize = function() {
    var depth, height, items, pointDims, textDims, width;
    pointDims = this.bind.points.getActiveDimensions();
    textDims = this.bind.text.getActiveDimensions();
    items = Math.min(pointDims.items, textDims.items);
    width = Math.min(pointDims.width, textDims.width);
    height = Math.min(pointDims.height, textDims.height);
    depth = Math.min(pointDims.depth, textDims.depth);
    return this.sprite.geometry.clip(width, height, depth, items);
  };

  Label.prototype.change = function(changed, touched, init) {
    var expand, height, outline, scale, size;
    if (touched['geometry'] || changed['label.text']) {
      return this.rebuild();
    }
    if (this.bind.points == null) {
      return;
    }
    size = this.props.size;
    outline = this.props.outline;
    expand = this.props.expand;
    height = this.bind.text.textHeight();
    scale = size / height;
    this.outlineExpand.value = expand / scale * 16 / 255;
    this.outlineStep.value = outline / scale * 16 / 255;
    return this.spriteScale.value = scale;
  };

  return Label;

})(Primitive);

module.exports = Label;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx0ZXh0XFxsYWJlbC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccHJpbWl0aXZlc1xcdHlwZXNcXHRleHRcXGxhYmVsLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLHNCQUFBO0VBQUE7OztBQUFBLFNBQUEsR0FBWSxPQUFBLENBQVEsaUJBQVI7O0FBQ1osSUFBQSxHQUFVLE9BQUEsQ0FBUSxlQUFSOztBQUVKOzs7Ozs7O0VBQ0osS0FBQyxDQUFBLE1BQUQsR0FBVSxDQUFDLE1BQUQsRUFBUyxNQUFULEVBQWlCLFFBQWpCLEVBQTJCLFNBQTNCLEVBQXNDLE9BQXRDLEVBQStDLE9BQS9DLEVBQXdELFFBQXhELEVBQWtFLFVBQWxFLEVBQThFLFVBQTlFOztrQkFFVixJQUFBLEdBQU0sU0FBQTtBQUNKLFFBQUE7SUFBQSxpQ0FBQSxTQUFBO0lBR0EsSUFBQyxDQUFBLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBZixDQUFvQjtNQUNsQjtRQUFFLEVBQUEsRUFBSSxZQUFOO1FBQXlCLEtBQUEsRUFBTyxNQUFoQztPQURrQixFQUVsQjtRQUFFLEVBQUEsRUFBSSxpQkFBTjtRQUF5QixLQUFBLEVBQU8sUUFBaEM7T0FGa0IsRUFHbEI7UUFBRSxFQUFBLEVBQUksaUJBQU47UUFBeUIsS0FBQSxFQUFPLFFBQWhDO09BSGtCO0tBQXBCO0lBTUEsSUFBYyx3QkFBZDtBQUFBLGFBQUE7O0lBQ0EsSUFBYyxzQkFBZDtBQUFBLGFBQUE7O0lBR0EsU0FBQSxHQUFZLElBQUMsQ0FBQSxJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWIsQ0FBQTtJQUNaLFFBQUEsR0FBWSxJQUFDLENBQUEsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFYLENBQUE7SUFDWixTQUFB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

},{"../../../util":175,"../../primitive":44}],103:[function(require,module,exports){
var Resample, Retext, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Resample = require('../operator/resample');

Util = require('../../../util');

Retext = (function(superClass) {
  extend(Retext, superClass);

  function Retext() {
    return Retext.__super__.constructor.apply(this, arguments);
  }

  Retext.traits = ['node', 'bind', 'operator', 'resample', 'sampler:x', 'sampler:y', 'sampler:z', 'sampler:w', 'include', 'text'];

  Retext.prototype.init = function() {
    return this.sourceSpec = [
      {
        to: 'operator.source',
        trait: 'text'
      }
    ];
  };

  Retext.prototype.textShader = function(shader) {
    return this.bind.source.textShader(shader);
  };

  Retext.prototype.textIsSDF = function() {
    var ref;
    return ((ref = this.bind.source) != null ? ref.props.sdf : void 0) > 0;
  };

  Retext.prototype.textHeight = function() {
    var ref;
    return (ref = this.bind.source) != null ? ref.props.detail : void 0;
  };

  return Retext;

})(Resample);

module.exports = Retext;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx0ZXh0XFxyZXRleHQuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx0ZXh0XFxyZXRleHQuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsc0JBQUE7RUFBQTs7O0FBQUEsUUFBQSxHQUFXLE9BQUEsQ0FBUSxzQkFBUjs7QUFDWCxJQUFBLEdBQVcsT0FBQSxDQUFRLGVBQVI7O0FBRUw7Ozs7Ozs7RUFDSixNQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLE1BQVQsRUFBaUIsVUFBakIsRUFBNkIsVUFBN0IsRUFBeUMsV0FBekMsRUFBc0QsV0FBdEQsRUFBbUUsV0FBbkUsRUFBZ0YsV0FBaEYsRUFBNkYsU0FBN0YsRUFBd0csTUFBeEc7O21CQUVWLElBQUEsR0FBTSxTQUFBO1dBQ0osSUFBQyxDQUFBLFVBQUQsR0FBYztNQUNaO1FBQUUsRUFBQSxFQUFJLGlCQUFOO1FBQXlCLEtBQUEsRUFBTyxNQUFoQztPQURZOztFQURWOzttQkFLTixVQUFBLEdBQVksU0FBQyxNQUFEO1dBQ1YsSUFBQyxDQUFBLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBYixDQUF3QixNQUF4QjtFQURVOzttQkFHWixTQUFBLEdBQVksU0FBQTtBQUFNLFFBQUE7a0RBQVksQ0FBRSxLQUFLLENBQUMsYUFBcEIsR0FBMEI7RUFBaEM7O21CQUNaLFVBQUEsR0FBWSxTQUFBO0FBQU0sUUFBQTtpREFBWSxDQUFFLEtBQUssQ0FBQztFQUExQjs7OztHQVpPOztBQWNyQixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"../../../util":175,"../operator/resample":81}],104:[function(require,module,exports){
var Buffer, Text, Util, Voxel,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Buffer = require('../data/buffer');

Voxel = require('../data/voxel');

Util = require('../../../util');

Text = (function(superClass) {
  extend(Text, superClass);

  function Text() {
    return Text.__super__.constructor.apply(this, arguments);
  }

  Text.traits = ['node', 'buffer', 'active', 'data', 'texture', 'voxel', 'text', 'font'];

  Text.defaults = {
    minFilter: 'linear',
    magFilter: 'linear'
  };

  Text.finals = {
    channels: 1
  };

  Text.prototype.init = function() {
    Text.__super__.init.apply(this, arguments);
    return this.atlas = null;
  };

  Text.prototype.textShader = function(shader) {
    return this.atlas.shader(shader);
  };

  Text.prototype.textIsSDF = function() {
    return this.props.sdf > 0;
  };

  Text.prototype.textHeight = function() {
    return this.props.detail;
  };

  Text.prototype.make = function() {
    var atlas, channels, data, depth, detail, dims, emit, font, height, items, magFilter, minFilter, ref, ref1, ref2, ref3, ref4, reserveX, reserveY, reserveZ, sdf, space, style, type, variant, weight, width;
    ref = this.props, minFilter = ref.minFilter, magFilter = ref.magFilter, type = ref.type;
    ref1 = this.props, font = ref1.font, style = ref1.style, variant = ref1.variant, weight = ref1.weight, detail = ref1.detail, sdf = ref1.sdf;
    this.atlas = this._renderables.make('textAtlas', {
      font: font,
      size: detail,
      style: style,
      variant: variant,
      weight: weight,
      outline: sdf,
      minFilter: minFilter,
      magFilter: magFilter,
      type: type
    });
    this.minFilter = THREE.NearestFilter;
    this.magFilter = THREE.NearestFilter;
    this.type = THREE.FloatType;
    Buffer.prototype.make.call(this);
    minFilter = (ref2 = this.minFilter) != null ? ref2 : this.props.minFilter;
    magFilter = (ref3 = this.magFilter) != null ? ref3 : this.props.magFilter;
    type = (ref4 = this.type) != null ? ref4 : this.props.type;
    width = this.props.width;
    height = this.props.height;
    depth = this.props.depth;
    reserveX = this.props.bufferWidth;
    reserveY = this.props.bufferHeight;
    reserveZ = this.props.bufferDepth;
    channels = this.props.channels;
    items = this.props.items;
    dims = this.spec = {
      channels: channels,
      items: items,
      width: width,
      height: height,
      depth: depth
    };
    this.items = dims.items;
    this.channels = dims.channels;
    data = this.props.data;
    dims = Util.Data.getDimensions(data, dims);
    space = this.space;
    space.width = Math.max(reserveX, dims.width || 1);
    space.height = Math.max(reserveY, dims.height || 1);
    space.depth = Math.max(reserveZ, dims.depth || 1);
    this.buffer = this._renderables.make(this.storage, {
      width: space.width,
      height: space.height,
      depth: space.depth,
      channels: 4,
      items: items,
      minFilter: minFilter,
      magFilter: magFilter,
      type: type
    });
    atlas = this.atlas;
    emit = this.buffer.streamer.emit;
    return this.buffer.streamer.emit = function(text) {
      return atlas.map(text, emit);
    };
  };

  Text.prototype.unmake = function() {
    Text.__super__.unmake.apply(this, arguments);
    if (this.atlas) {
      this.atlas.dispose();
      return this.atlas = null;
    }
  };

  Text.prototype.update = function() {
    this.atlas.begin();
    Text.__super__.update.apply(this, arguments);
    return this.atlas.end();
  };

  Text.prototype.change = function(changed, touched, init) {
    if (touched['font']) {
      return this.rebuild();
    }
    return Text.__super__.change.call(this, changed, touched, init);
  };

  return Text;

})(Voxel);

module.exports = Text;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx0ZXh0XFx0ZXh0LmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxwcmltaXRpdmVzXFx0eXBlc1xcdGV4dFxcdGV4dC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSx5QkFBQTtFQUFBOzs7QUFBQSxNQUFBLEdBQVMsT0FBQSxDQUFRLGdCQUFSOztBQUNULEtBQUEsR0FBUSxPQUFBLENBQVEsZUFBUjs7QUFDUixJQUFBLEdBQU8sT0FBQSxDQUFRLGVBQVI7O0FBRUQ7Ozs7Ozs7RUFDSixJQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLFFBQVQsRUFBbUIsUUFBbkIsRUFBNkIsTUFBN0IsRUFBcUMsU0FBckMsRUFBZ0QsT0FBaEQsRUFBeUQsTUFBekQsRUFBaUUsTUFBakU7O0VBQ1YsSUFBQyxDQUFBLFFBQUQsR0FDRTtJQUFBLFNBQUEsRUFBVyxRQUFYO0lBQ0EsU0FBQSxFQUFXLFFBRFg7OztFQUVGLElBQUMsQ0FBQSxNQUFELEdBQ0U7SUFBQSxRQUFBLEVBQVUsQ0FBVjs7O2lCQUVGLElBQUEsR0FBTSxTQUFBO0lBQ0osZ0NBQUEsU0FBQTtXQUNBLElBQUMsQ0FBQSxLQUFELEdBQVM7RUFGTDs7aUJBSU4sVUFBQSxHQUFZLFNBQUMsTUFBRDtXQUNWLElBQUMsQ0FBQSxLQUFLLENBQUMsTUFBUCxDQUFjLE1BQWQ7RUFEVTs7aUJBR1osU0FBQSxHQUFZLFNBQUE7V0FBTSxJQUFDLENBQUEsS0FBSyxDQUFDLEdBQVAsR0FBYTtFQUFuQjs7aUJBQ1osVUFBQSxHQUFZLFNBQUE7V0FBTSxJQUFDLENBQUEsS0FBSyxDQUFDO0VBQWI7O2lCQUVaLElBQUEsR0FBTSxTQUFBO0FBRUosUUFBQTtJQUFBLE1BQStCLElBQUMsQ0FBQSxLQUFoQyxFQUFDLHlCQUFELEVBQVkseUJBQVosRUFBdUI7SUFHdkIsT0FBOEMsSUFBQyxDQUFBLEtBQS9DLEVBQUMsZ0JBQUQsRUFBTyxrQkFBUCxFQUFjLHNCQUFkLEVBQXVCLG9CQUF2QixFQUErQixvQkFBL0IsRUFBdUM7SUFHdkMsSUFBQyxDQUFBLEtBQUQsR0FBUyxJQUFDLENBQUEsWUFBWSxDQUFDLElBQWQsQ0FBbUIsV0FBbkIsRUFDRTtNQUFBLElBQUEsRUFBVyxJQUFYO01BQ0EsSUFBQSxFQUFXLE1BRFg7TUFFQSxLQUFBLEVBQVcsS0FGWDtNQUdBLE9BQUEsRUFBVyxPQUhYO01BSUEsTUFBQSxFQUFXLE1BSlg7TUFLQSxPQUFBLEVBQVcsR0FMWDtNQU1BLFNBQUEsRUFBVyxTQU5YO01BT0EsU0FBQSxFQUFXLFNBUFg7TUFRQSxJQUFBLEVBQVcsSUFSWDtLQURGO0lBWVQsSUFBQyxDQUFBLFNBQUQsR0FBYSxLQUFLLENBQUM7SUFDbkIsSUFBQyxDQUFBLFNBQUQsR0FBYSxLQUFLLENBQUM7SUFDbkIsSUFBQyxDQUFBLElBQUQsR0FBYSxLQUFLLENBQUM7SUFHbkIsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBdEIsQ0FBMkIsSUFBM0I7SUFHQSxTQUFBLDRDQUF5QixJQUFDLENBQUEsS0FBSyxDQUFDO0lBQ2hDLFNBQUEsNENBQXlCLElBQUMsQ0FBQSxLQUFLLENBQUM7SUFDaEMsSUFBQSx1Q0FBeUIsSUFBQyxDQUFBLEtBQUssQ0FBQztJQUdoQyxLQUFBLEdBQVcsSUFBQyxDQUFBLEtBQUssQ0FBQztJQUNsQixNQUFBLEdBQVcsSUFBQyxDQUFBLEtBQUssQ0FBQztJQUNsQixLQUFBLEdBQVcsSUFBQyxDQUFBLEtBQUssQ0FBQztJQUNsQixRQUFBLEdBQVcsSUFBQyxDQUFBLEtBQUssQ0FBQztJQUNsQixRQUFBLEdBQVcsSUFBQyxDQUFBLEtBQUssQ0FBQztJQUNsQixRQUFBLEdBQVcsSUFBQyxDQUFBLEtBQUssQ0FBQztJQUNsQixRQUFBLEdBQVcsSUFBQyxDQUFBLEtBQUssQ0FBQztJQUNsQixLQUFBLEdBQVcsSUFBQyxDQUFBLEtBQUssQ0FBQztJQUVsQixJQUFBLEdBQU8sSUFBQyxDQUFBLElBQUQsR0FBUTtNQUFDLFVBQUEsUUFBRDtNQUFXLE9BQUEsS0FBWDtNQUFrQixPQUFBLEtBQWxCO01BQXlCLFFBQUEsTUFBekI7TUFBaUMsT0FBQSxLQUFqQzs7SUFFZixJQUFDLENBQUEsS0FBRCxHQUFZLElBQUksQ0FBQztJQUNqQixJQUFDLENBQUEsUUFBRCxHQUFZLElBQUksQ0FBQztJQUdqQixJQUFBLEdBQU8sSUFBQyxDQUFBLEtBQUssQ0FBQztJQUNkLElBQUEsR0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQVYsQ0FBd0IsSUFBeEIsRUFBOEIsSUFBOUI7SUFFUCxLQUFBLEdBQVEsSUFBQyxDQUFBO0lBQ1QsS0FBSyxDQUFDLEtBQU4sR0FBZSxJQUFJLENBQUMsR0FBTCxDQUFTLFFBQVQsRUFBb0IsSUFBSSxDQUFDLEtBQUwsSUFBZSxDQUFuQztJQUNmLEtBQUssQ0FBQyxNQUFOLEdBQWUsSUFBSSxDQUFDLEdBQUwsQ0FBUyxRQUFULEVBQW9CLElBQUksQ0FBQyxNQUFMLElBQWUsQ0FBbkM7SUFDZixLQUFLLENBQUMsS0FBTixHQUFlLElBQUksQ0FBQyxHQUFMLENBQVMsUUFBVCxFQUFvQixJQUFJLENBQUMsS0FBTCxJQUFlLENBQW5DO0lBR2YsSUFBQyxDQUFBLE1BQUQsR0FBVSxJQUFDLENBQUEsWUFBWSxDQUFDLElBQWQsQ0FBbUIsSUFBQyxDQUFBLE9BQXBCLEVBQ0E7TUFBQSxLQUFBLEVBQVcsS0FBSyxDQUFDLEtBQWpCO01BQ0EsTUFBQSxFQUFXLEtBQUssQ0FBQyxNQURqQjtNQUVBLEtBQUEsRUFBVyxLQUFLLENBQUMsS0FGakI7TUFHQSxRQUFBLEVBQVcsQ0FIWDtNQUlBLEtBQUEsRUFBVyxLQUpYO01BS0EsU0FBQSxFQUFXLFNBTFg7TUFNQSxTQUFBLEVBQVcsU0FOWDtNQU9BLElBQUEsRUFBVyxJQVBYO0tBREE7SUFXVixLQUFBLEdBQVEsSUFBQyxDQUFBO0lBQ1QsSUFBQSxHQUFRLElBQUMsQ0FBQSxNQUFNLENBQUMsUUFBUSxDQUFDO1dBQ3pCLElBQUMsQ0FBQSxNQUFNLENBQUMsUUFBUSxDQUFDLElBQWpCLEdBQXdCLFNBQUMsSUFBRDthQUFVLEtBQUssQ0FBQyxHQUFOLENBQVUsSUFBVixFQUFnQixJQUFoQjtJQUFWO0VBdEVwQjs7aUJBd0VOLE1BQUEsR0FBUSxTQUFBO0lBQ04sa0NBQUEsU0FBQTtJQUNBLElBQUcsSUFBQyxDQUFBLEtBQUo7TUFDRSxJQUFDLENBQUEsS0FBSyxDQUFDLE9BQVAsQ0FBQTthQUNBLElBQUMsQ0FBQSxLQUFELEdBQVMsS0FGWDs7RUFGTTs7aUJBTVIsTUFBQSxHQUFRLFNBQUE7SUFDTixJQUFDLENBQUEsS0FBSyxDQUFDLEtBQVAsQ0FBQTtJQUNBLGtDQUFBLFNBQUE7V0FDQSxJQUFDLENBQUEsS0FBSyxDQUFDLEdBQVAsQ0FBQTtFQUhNOztpQkFLUixNQUFBLEdBQVEsU0FBQyxPQUFELEVBQVUsT0FBVixFQUFtQixJQUFuQjtJQUNOLElBQXFCLE9BQVEsQ0FBQSxNQUFBLENBQTdCO0FBQUEsYUFBTyxJQUFDLENBQUEsT0FBRCxDQUFBLEVBQVA7O1dBQ0EsaUNBQU0sT0FBTixFQUFlLE9BQWYsRUFBd0IsSUFBeEI7RUFGTTs7OztHQXJHUzs7QUF5R25CLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{"../../../util":175,"../data/buffer":55,"../data/voxel":61}],105:[function(require,module,exports){
var Clock, Parent,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Parent = require('../base/parent');

Clock = (function(superClass) {
  extend(Clock, superClass);

  function Clock() {
    return Clock.__super__.constructor.apply(this, arguments);
  }

  Clock.traits = ['node', 'clock', 'seek', 'play'];

  Clock.prototype.init = function() {
    this.skew = 0;
    this.last = 0;
    return this.time = {
      now: +new Date() / 1000,
      time: 0,
      delta: 0,
      clock: 0,
      step: 0
    };
  };

  Clock.prototype.make = function() {
    return this._listen('clock', 'clock.tick', this.tick);
  };

  Clock.prototype.reset = function() {
    return this.skew = 0;
  };

  Clock.prototype.tick = function(e) {
    var clock, delay, delta, from, pace, parent, ratio, realtime, ref, seek, speed, time, to;
    ref = this.props, from = ref.from, to = ref.to, speed = ref.speed, seek = ref.seek, pace = ref.pace, delay = ref.delay, realtime = ref.realtime;
    parent = this._inherit('clock').getTime();
    time = realtime ? parent.time : parent.clock;
    delta = realtime ? parent.delta : parent.step;
    ratio = speed / pace;
    this.skew += delta * (ratio - 1);
    if (this.last > time) {
      this.skew = 0;
    }
    this.time.now = parent.now + this.skew;
    this.time.time = parent.time;
    this.time.delta = parent.delta;
    clock = seek != null ? seek : parent.clock + this.skew;
    this.time.clock = Math.min(to, from + Math.max(0, clock - delay * ratio));
    this.time.step = delta * ratio;
    this.last = time;
    return this.trigger(e);
  };

  Clock.prototype.getTime = function() {
    return this.time;
  };

  return Clock;

})(Parent);

module.exports = Clock;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx0aW1lXFxjbG9jay5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccHJpbWl0aXZlc1xcdHlwZXNcXHRpbWVcXGNsb2NrLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLGFBQUE7RUFBQTs7O0FBQUEsTUFBQSxHQUFTLE9BQUEsQ0FBUSxnQkFBUjs7QUFFSDs7Ozs7OztFQUNKLEtBQUMsQ0FBQSxNQUFELEdBQVUsQ0FBQyxNQUFELEVBQVMsT0FBVCxFQUFrQixNQUFsQixFQUEwQixNQUExQjs7a0JBRVYsSUFBQSxHQUFNLFNBQUE7SUFDSixJQUFDLENBQUEsSUFBRCxHQUFTO0lBQ1QsSUFBQyxDQUFBLElBQUQsR0FBUztXQUNULElBQUMsQ0FBQSxJQUFELEdBQVM7TUFDUCxHQUFBLEVBQUssQ0FBQyxJQUFJLElBQUosQ0FBQSxDQUFELEdBQWMsSUFEWjtNQUVQLElBQUEsRUFBTyxDQUZBO01BRUcsS0FBQSxFQUFPLENBRlY7TUFHUCxLQUFBLEVBQU8sQ0FIQTtNQUdHLElBQUEsRUFBTyxDQUhWOztFQUhMOztrQkFTTixJQUFBLEdBQU0sU0FBQTtXQUVKLElBQUMsQ0FBQSxPQUFELENBQVMsT0FBVCxFQUFrQixZQUFsQixFQUFnQyxJQUFDLENBQUEsSUFBakM7RUFGSTs7a0JBSU4sS0FBQSxHQUFPLFNBQUE7V0FDTCxJQUFDLENBQUEsSUFBRCxHQUFRO0VBREg7O2tCQUdQLElBQUEsR0FBTSxTQUFDLENBQUQ7QUFDSixRQUFBO0lBQUEsTUFBaUQsSUFBQyxDQUFBLEtBQWxELEVBQUMsZUFBRCxFQUFPLFdBQVAsRUFBVyxpQkFBWCxFQUFrQixlQUFsQixFQUF3QixlQUF4QixFQUE4QixpQkFBOUIsRUFBcUM7SUFFckMsTUFBQSxHQUFTLElBQUMsQ0FBQSxRQUFELENBQVUsT0FBVixDQUFrQixDQUFDLE9BQW5CLENBQUE7SUFFVCxJQUFBLEdBQVcsUUFBSCxHQUFpQixNQUFNLENBQUMsSUFBeEIsR0FBbUMsTUFBTSxDQUFDO0lBQ2xELEtBQUEsR0FBVyxRQUFILEdBQWlCLE1BQU0sQ0FBQyxLQUF4QixHQUFtQyxNQUFNLENBQUM7SUFDbEQsS0FBQSxHQUFRLEtBQUEsR0FBUTtJQUVoQixJQUFDLENBQUEsSUFBRCxJQUFTLEtBQUEsR0FBUSxDQUFDLEtBQUEsR0FBUSxDQUFUO0lBQ2pCLElBQWEsSUFBQyxDQUFBLElBQUQsR0FBUSxJQUFyQjtNQUFBLElBQUMsQ0FBQSxJQUFELEdBQVEsRUFBUjs7SUFFQSxJQUFDLENBQUEsSUFBSSxDQUFDLEdBQU4sR0FBYyxNQUFNLENBQUMsR0FBUCxHQUFhLElBQUMsQ0FBQTtJQUU1QixJQUFDLENBQUEsSUFBSSxDQUFDLElBQU4sR0FBYyxNQUFNLENBQUM7SUFDckIsSUFBQyxDQUFBLElBQUksQ0FBQyxLQUFOLEdBQWMsTUFBTSxDQUFDO0lBRXJCLEtBQUEsR0FBVyxZQUFILEdBQWMsSUFBZCxHQUF3QixNQUFNLENBQUMsS0FBUCxHQUFlLElBQUMsQ0FBQTtJQUNoRCxJQUFDLENBQUEsSUFBSSxDQUFDLEtBQU4sR0FBYyxJQUFJLENBQUMsR0FBTCxDQUFTLEVBQVQsRUFBYSxJQUFBLEdBQU8sSUFBSSxDQUFDLEdBQUwsQ0FBUyxDQUFULEVBQVksS0FBQSxHQUFRLEtBQUEsR0FBUSxLQUE1QixDQUFwQjtJQUNkLElBQUMsQ0FBQSxJQUFJLENBQUMsSUFBTixHQUFjLEtBQUEsR0FBUTtJQUV0QixJQUFDLENBQUEsSUFBRCxHQUFRO1dBRVIsSUFBQyxDQUFBLE9BQUQsQ0FBUyxDQUFUO0VBdkJJOztrQkF5Qk4sT0FBQSxHQUFTLFNBQUE7V0FDUCxJQUFDLENBQUE7RUFETTs7OztHQTVDUzs7QUErQ3BCLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{"../base/parent":47}],106:[function(require,module,exports){
var Now, Parent,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Parent = require('../base/parent');

Now = (function(superClass) {
  extend(Now, superClass);

  function Now() {
    return Now.__super__.constructor.apply(this, arguments);
  }

  Now.traits = ['node', 'clock', 'now'];

  Now.prototype.init = function() {
    var now;
    this.now = now = +new Date() / 1000;
    this.skew = 0;
    return this.time = {
      now: now,
      time: 0,
      delta: 0,
      clock: 0,
      step: 0
    };
  };

  Now.prototype.make = function() {
    this.clockParent = this._inherit('clock');
    return this._listen('clock', 'clock.tick', this.tick);
  };

  Now.prototype.unmake = function() {
    return this.clockParent = null;
  };

  Now.prototype.change = function(changed, touched, init) {
    if (changed['date.now']) {
      return this.skew = 0;
    }
  };

  Now.prototype.tick = function(e) {
    var now, pace, parent, ref, ref1, seek, speed;
    ref = this.props, now = ref.now, seek = ref.seek, pace = ref.pace, speed = ref.speed;
    parent = this.clockParent.getTime();
    this.skew += parent.step * pace / speed;
    if (seek != null) {
      this.skew = seek;
    }
    this.time.now = this.time.time = this.time.clock = ((ref1 = this.props.now) != null ? ref1 : this.now) + this.skew;
    this.time.delta = this.time.step = parent.delta;
    return this.trigger(e);
  };

  Now.prototype.getTime = function() {
    return this.time;
  };

  return Now;

})(Parent);

module.exports = Now;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx0aW1lXFxub3cuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx0aW1lXFxub3cuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsV0FBQTtFQUFBOzs7QUFBQSxNQUFBLEdBQVMsT0FBQSxDQUFRLGdCQUFSOztBQUVIOzs7Ozs7O0VBQ0osR0FBQyxDQUFBLE1BQUQsR0FBVSxDQUFDLE1BQUQsRUFBUyxPQUFULEVBQWtCLEtBQWxCOztnQkFFVixJQUFBLEdBQU0sU0FBQTtBQUNKLFFBQUE7SUFBQSxJQUFDLENBQUEsR0FBRCxHQUFRLEdBQUEsR0FBTSxDQUFDLElBQUksSUFBSixDQUFBLENBQUQsR0FBYztJQUM1QixJQUFDLENBQUEsSUFBRCxHQUFRO1dBQ1IsSUFBQyxDQUFBLElBQUQsR0FBUTtNQUNOLEtBQUEsR0FETTtNQUVOLElBQUEsRUFBTyxDQUZEO01BRUksS0FBQSxFQUFPLENBRlg7TUFHTixLQUFBLEVBQU8sQ0FIRDtNQUdJLElBQUEsRUFBTyxDQUhYOztFQUhKOztnQkFTTixJQUFBLEdBQU0sU0FBQTtJQUVKLElBQUMsQ0FBQSxXQUFELEdBQWUsSUFBQyxDQUFBLFFBQUQsQ0FBVSxPQUFWO1dBQ2YsSUFBQyxDQUFBLE9BQUQsQ0FBUyxPQUFULEVBQWtCLFlBQWxCLEVBQWdDLElBQUMsQ0FBQSxJQUFqQztFQUhJOztnQkFLTixNQUFBLEdBQVEsU0FBQTtXQUNOLElBQUMsQ0FBQSxXQUFELEdBQWU7RUFEVDs7Z0JBR1IsTUFBQSxHQUFRLFNBQUMsT0FBRCxFQUFVLE9BQVYsRUFBbUIsSUFBbkI7SUFFTixJQUFHLE9BQVEsQ0FBQSxVQUFBLENBQVg7YUFDRSxJQUFDLENBQUEsSUFBRCxHQUFRLEVBRFY7O0VBRk07O2dCQUtSLElBQUEsR0FBTSxTQUFDLENBQUQ7QUFDSixRQUFBO0lBQUEsTUFBMkIsSUFBQyxDQUFBLEtBQTVCLEVBQUMsYUFBRCxFQUFNLGVBQU4sRUFBWSxlQUFaLEVBQWtCO0lBRWxCLE1BQUEsR0FBUyxJQUFDLENBQUEsV0FBVyxDQUFDLE9BQWIsQ0FBQTtJQUVULElBQUMsQ0FBQSxJQUFELElBQVMsTUFBTSxDQUFDLElBQVAsR0FBYyxJQUFkLEdBQXFCO0lBQzlCLElBQWlCLFlBQWpCO01BQUEsSUFBQyxDQUFBLElBQUQsR0FBUyxLQUFUOztJQUVBLElBQUMsQ0FBQSxJQUFJLENBQUMsR0FBTixHQUFjLElBQUMsQ0FBQSxJQUFJLENBQUMsSUFBTixHQUFhLElBQUMsQ0FBQSxJQUFJLENBQUMsS0FBTixHQUFjLDBDQUFjLElBQUMsQ0FBQSxHQUFmLENBQUEsR0FBc0IsSUFBQyxDQUFBO0lBQ2hFLElBQUMsQ0FBQSxJQUFJLENBQUMsS0FBTixHQUFjLElBQUMsQ0FBQSxJQUFJLENBQUMsSUFBTixHQUFhLE1BQU0sQ0FBQztXQUVsQyxJQUFDLENBQUEsT0FBRCxDQUFTLENBQVQ7RUFYSTs7Z0JBYU4sT0FBQSxHQUFTLFNBQUE7V0FDUCxJQUFDLENBQUE7RUFETTs7OztHQXRDTzs7QUF5Q2xCLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{"../base/parent":47}],107:[function(require,module,exports){
var Traits, Types;

Types = require('./types');

Traits = {
  node: {
    id: Types.nullable(Types.string()),
    classes: Types.classes()
  },
  entity: {
    active: Types.bool(true)
  },
  object: {
    visible: Types.bool(true)
  },
  unit: {
    scale: Types.nullable(Types.number()),
    fov: Types.nullable(Types.number()),
    focus: Types.nullable(Types.number(1), true)
  },
  span: {
    range: Types.nullable(Types.vec2(-1, 1))
  },
  view: {
    range: Types.array(Types.vec2(-1, 1), 4)
  },
  view3: {
    position: Types.vec3(),
    quaternion: Types.quat(),
    rotation: Types.vec3(),
    scale: Types.vec3(1, 1, 1),
    eulerOrder: Types.swizzle('xyz')
  },
  view4: {
    position: Types.vec4(),
    scale: Types.vec4(1, 1, 1, 1)
  },
  layer: {
    depth: Types.number(1),
    fit: Types.fit('y')
  },
  vertex: {
    pass: Types.vertexPass()
  },
  fragment: {
    pass: Types.fragmentPass(),
    gamma: Types.bool(false)
  },
  transform3: {
    position: Types.vec3(),
    quaternion: Types.quat(),
    rotation: Types.vec3(),
    eulerOrder: Types.swizzle('xyz'),
    scale: Types.vec3(1, 1, 1),
    matrix: Types.mat4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
  },
  transform4: {
    position: Types.vec4(),
    scale: Types.vec4(1, 1, 1, 1),
    matrix: Types.mat4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
  },
  camera: {
    proxy: Types.bool(false),
    position: Types.nullable(Types.vec3()),
    quaternion: Types.nullable(Types.quat()),
    rotation: Types.nullable(Types.vec3()),
    lookAt: Types.nullable(Types.vec3()),
    up: Types.nullable(Types.vec3()),
    eulerOrder: Types.swizzle('xyz'),
    fov: Types.nullable(Types.number(1))
  },
  polar: {
    bend: Types.number(1),
    helix: Types.number(0)
  },
  spherical: {
    bend: Types.number(1)
  },
  stereographic: {
    bend: Types.number(1)
  },
  interval: {
    axis: Types.axis()
  },
  area: {
    axes: Types.swizzle([1, 2], 2)
  },
  volume: {
    axes: Types.swizzle([1, 2, 3], 3)
  },
  origin: {
    origin: Types.vec4()
  },
  scale: {
    divide: Types.number(10),
    unit: Types.number(1),
    base: Types.number(10),
    mode: Types.scale(),
    start: Types.bool(true),
    end: Types.bool(true),
    zero: Types.bool(true),
    factor: Types.positive(Types.number(1)),
    nice: Types.bool(true)
  },
  grid: {
    lineX: Types.bool(true),
    lineY: Types.bool(true),
    crossed: Types.bool(false),
    closedX: Types.bool(false),
    closedY: Types.bool(false)
  },
  axis: {
    detail: Types.int(1),
    crossed: Types.bool(false)
  },
  data: {
    data: Types.nullable(Types.data()),
    expr: Types.nullable(Types.emitter()),
    bind: Types.nullable(Types.func()),
    live: Types.bool(true)
  },
  buffer: {
    channels: Types["enum"](4, [1, 2, 3, 4]),
    items: Types.int(1),
    fps: Types.nullable(Types.int(60)),
    hurry: Types.int(5),
    limit: Types.int(60),
    realtime: Types.bool(false),
    observe: Types.bool(false),
    aligned: Types.bool(false)
  },
  sampler: {
    centered: Types.bool(false),
    padding: Types.number(0)
  },
  array: {
    width: Types.nullable(Types.positive(Types.int(1), true)),
    bufferWidth: Types.int(1),
    history: Types.int(1)
  },
  matrix: {
    width: Types.nullable(Types.positive(Types.int(1), true)),
    height: Types.nullable(Types.positive(Types.int(1), true)),
    history: Types.int(1),
    bufferWidth: Types.int(1),
    bufferHeight: Types.int(1)
  },
  voxel: {
    width: Types.nullable(Types.positive(Types.int(1), true)),
    height: Types.nullable(Types.positive(Types.int(1), true)),
    depth: Types.nullable(Types.positive(Types.int(1), true)),
    bufferWidth: Types.int(1),
    bufferHeight: Types.int(1),
    bufferDepth: Types.int(1)
  },
  resolve: {
    expr: Types.nullable(Types.func()),
    items: Types.int(1)
  },
  style: {
    opacity: Types.positive(Types.number(1)),
    color: Types.color(),
    blending: Types.blending(),
    zWrite: Types.bool(true),
    zTest: Types.bool(true),
    zIndex: Types.positive(Types.round()),
    zBias: Types.number(0),
    zOrder: Types.nullable(Types.int())
  },
  geometry: {
    points: Types.select(),
    colors: Types.nullable(Types.select())
  },
  point: {
    size: Types.positive(Types.number(4)),
    sizes: Types.nullable(Types.select()),
    shape: Types.shape(),
    optical: Types.bool(true),
    fill: Types.bool(true),
    depth: Types.number(1)
  },
  line: {
    width: Types.positive(Types.number(2)),
    depth: Types.positive(Types.number(1)),
    join: Types.join(),
    stroke: Types.stroke(),
    proximity: Types.nullable(Types.number(2e308)),
    closed: Types.bool(false)
  },
  mesh: {
    fill: Types.bool(true),
    shaded: Types.bool(false),
    map: Types.nullable(Types.select()),
    lineBias: Types.number(5)
  },
  strip: {
    line: Types.bool(false)
  },
  face: {
    line: Types.bool(false)
  },
  arrow: {
    size: Types.number(3),
    start: Types.bool(false),
    end: Types.bool(false)
  },
  ticks: {
    normal: Types.vec3(0, 0, 1),
    size: Types.positive(Types.number(10)),
    epsilon: Types.positive(Types.number(0.001))
  },
  attach: {
    offset: Types.vec2(0, -20),
    snap: Types.bool(false),
    depth: Types.number(0)
  },
  format: {
    digits: Types.nullable(Types.positive(Types.number(3))),
    data: Types.nullable(Types.data()),
    expr: Types.nullable(Types.func()),
    live: Types.bool(true)
  },
  font: {
    font: Types.font('sans-serif'),
    style: Types.string(),
    variant: Types.string(),
    weight: Types.string(),
    detail: Types.number(24),
    sdf: Types.number(5)
  },
  label: {
    text: Types.select(),
    size: Types.number(16),
    outline: Types.number(2),
    expand: Types.number(0),
    background: Types.color(1, 1, 1)
  },
  overlay: {
    opacity: Types.number(1),
    zIndex: Types.positive(Types.round(0))
  },
  dom: {
    points: Types.select(),
    html: Types.select(),
    size: Types.number(16),
    outline: Types.number(2),
    zoom: Types.number(1),
    color: Types.nullable(Types.color()),
    attributes: Types.nullable(Types.object()),
    pointerEvents: Types.bool(false)
  },
  texture: {
    minFilter: Types.filter('nearest'),
    magFilter: Types.filter('nearest'),
    type: Types.type('float')
  },
  shader: {
    sources: Types.nullable(Types.select()),
    language: Types.string('glsl'),
    code: Types.string(),
    uniforms: Types.nullable(Types.object())
  },
  include: {
    shader: Types.select()
  },
  operator: {
    source: Types.select()
  },
  spread: {
    unit: Types.mapping(),
    items: Types.nullable(Types.vec4()),
    width: Types.nullable(Types.vec4()),
    height: Types.nullable(Types.vec4()),
    depth: Types.nullable(Types.vec4()),
    alignItems: Types.anchor(),
    alignWidth: Types.anchor(),
    alignHeight: Types.anchor(),
    alignDepth: Types.anchor()
  },
  grow: {
    scale: Types.number(1),
    items: Types.nullable(Types.anchor()),
    width: Types.nullable(Types.anchor()),
    height: Types.nullable(Types.anchor()),
    depth: Types.nullable(Types.anchor())
  },
  split: {
    order: Types.transpose('wxyz'),
    axis: Types.nullable(Types.axis()),
    length: Types.int(1),
    overlap: Types.int(0)
  },
  join: {
    order: Types.transpose('wxyz'),
    axis: Types.nullable(Types.axis()),
    overlap: Types.int(0)
  },
  swizzle: {
    order: Types.swizzle()
  },
  transpose: {
    order: Types.transpose()
  },
  repeat: {
    items: Types.number(1),
    width: Types.number(1),
    height: Types.number(1),
    depth: Types.number(1)
  },
  slice: {
    items: Types.nullable(Types.vec2()),
    width: Types.nullable(Types.vec2()),
    height: Types.nullable(Types.vec2()),
    depth: Types.nullable(Types.vec2())
  },
  lerp: {
    size: Types.mapping('absolute'),
    items: Types.nullable(Types.number()),
    width: Types.nullable(Types.number()),
    height: Types.nullable(Types.number()),
    depth: Types.nullable(Types.number())
  },
  subdivide: {
    items: Types.nullable(Types.positive(Types.int(), true)),
    width: Types.nullable(Types.positive(Types.int(), true)),
    height: Types.nullable(Types.positive(Types.int(), true)),
    depth: Types.nullable(Types.positive(Types.int(), true)),
    bevel: Types.number(1),
    lerp: Types.bool(true)
  },
  resample: {
    indices: Types.number(4),
    channels: Types.number(4),
    sample: Types.mapping(),
    size: Types.mapping('absolute'),
    items: Types.nullable(Types.number()),
    width: Types.nullable(Types.number()),
    height: Types.nullable(Types.number()),
    depth: Types.nullable(Types.number())
  },
  readback: {
    type: Types.type('float'),
    expr: Types.nullable(Types.func()),
    data: Types.data(),
    channels: Types["enum"](4, [1, 2, 3, 4]),
    items: Types.nullable(Types.int()),
    width: Types.nullable(Types.int()),
    height: Types.nullable(Types.int()),
    depth: Types.nullable(Types.int())
  },
  root: {
    speed: Types.number(1),
    camera: Types.select('[camera]')
  },
  inherit: {
    source: Types.select(),
    traits: Types.array(Types.string())
  },
  rtt: {
    size: Types.mapping('absolute'),
    width: Types.nullable(Types.number()),
    height: Types.nullable(Types.number()),
    history: Types.int(1)
  },
  compose: {
    alpha: Types.bool(false)
  },
  present: {
    index: Types.int(1),
    directed: Types.bool(true),
    length: Types.number(0)
  },
  slide: {
    order: Types.nullable(Types.int(0)),
    steps: Types.number(1),
    early: Types.int(0),
    late: Types.int(0),
    from: Types.nullable(Types.int(0)),
    to: Types.nullable(Types.int(1))
  },
  transition: {
    stagger: Types.vec4(),
    enter: Types.nullable(Types.number(1)),
    exit: Types.nullable(Types.number(1)),
    delay: Types.number(0),
    delayEnter: Types.nullable(Types.number(0)),
    delayExit: Types.nullable(Types.number(0)),
    duration: Types.number(.3),
    durationEnter: Types.nullable(Types.number(0)),
    durationExit: Types.nullable(Types.number(0))
  },
  move: {
    from: Types.vec4(),
    to: Types.vec4()
  },
  seek: {
    seek: Types.nullable(Types.number(0))
  },
  track: {
    target: Types.select(),
    script: Types.object({}),
    ease: Types.ease('cosine')
  },
  trigger: {
    trigger: Types.nullable(Types.int(1), true)
  },
  step: {
    playback: Types.ease('linear'),
    stops: Types.nullable(Types.array(Types.number())),
    delay: Types.number(0),
    duration: Types.number(.3),
    pace: Types.number(0),
    speed: Types.number(1),
    rewind: Types.number(2),
    skip: Types.bool(true),
    realtime: Types.bool(false)
  },
  play: {
    delay: Types.number(0),
    pace: Types.number(1),
    speed: Types.number(1),
    from: Types.number(0),
    to: Types.number(2e308),
    realtime: Types.bool(false),
    loop: Types.bool(false)
  },
  now: {
    now: Types.nullable(Types.timestamp()),
    seek: Types.nullable(Types.number(0)),
    pace: Types.number(1),
    speed: Types.number(1)
  }
};

module.exports = Traits;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,

},{"./types":115}],108:[function(require,module,exports){
var Fragment, Transform,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Transform = require('./transform');

Fragment = (function(superClass) {
  extend(Fragment, superClass);

  function Fragment() {
    return Fragment.__super__.constructor.apply(this, arguments);
  }

  Fragment.traits = ['node', 'include', 'fragment', 'bind'];

  Fragment.prototype.make = function() {
    return this._helpers.bind.make([
      {
        to: 'include.shader',
        trait: 'shader',
        optional: true
      }
    ]);
  };

  Fragment.prototype.unmake = function() {
    return this._helpers.bind.unmake();
  };

  Fragment.prototype.change = function(changed, touched, init) {
    if (touched['include'] || changed['fragment.gamma']) {
      return this.rebuild();
    }
  };

  Fragment.prototype.fragment = function(shader, pass) {
    if (this.bind.shader != null) {
      if (pass === this.props.pass) {
        if (this.props.gamma) {
          shader.pipe('mesh.gamma.out');
        }
        shader.pipe(this.bind.shader.shaderBind());
        shader.split();
        if (this.props.gamma) {
          shader.pipe('mesh.gamma.in');
        }
        shader.pass();
      }
    }
    return Fragment.__super__.fragment.call(this, shader, pass);
  };

  return Fragment;

})(Transform);

module.exports = Fragment;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx0cmFuc2Zvcm1cXGZyYWdtZW50LmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxwcmltaXRpdmVzXFx0eXBlc1xcdHJhbnNmb3JtXFxmcmFnbWVudC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxtQkFBQTtFQUFBOzs7QUFBQSxTQUFBLEdBQVksT0FBQSxDQUFRLGFBQVI7O0FBRU47Ozs7Ozs7RUFDSixRQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLFNBQVQsRUFBb0IsVUFBcEIsRUFBZ0MsTUFBaEM7O3FCQUVWLElBQUEsR0FBTSxTQUFBO1dBRUosSUFBQyxDQUFBLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBZixDQUFvQjtNQUNsQjtRQUFFLEVBQUEsRUFBSSxnQkFBTjtRQUF3QixLQUFBLEVBQU8sUUFBL0I7UUFBeUMsUUFBQSxFQUFVLElBQW5EO09BRGtCO0tBQXBCO0VBRkk7O3FCQU1OLE1BQUEsR0FBUSxTQUFBO1dBQ04sSUFBQyxDQUFBLFFBQVEsQ0FBQyxJQUFJLENBQUMsTUFBZixDQUFBO0VBRE07O3FCQUdSLE1BQUEsR0FBUSxTQUFDLE9BQUQsRUFBVSxPQUFWLEVBQW1CLElBQW5CO0lBQ04sSUFBcUIsT0FBUSxDQUFBLFNBQUEsQ0FBUixJQUFzQixPQUFRLENBQUEsZ0JBQUEsQ0FBbkQ7QUFBQSxhQUFPLElBQUMsQ0FBQSxPQUFELENBQUEsRUFBUDs7RUFETTs7cUJBR1IsUUFBQSxHQUFVLFNBQUMsTUFBRCxFQUFTLElBQVQ7SUFDUixJQUFHLHdCQUFIO01BQ0UsSUFBRyxJQUFBLEtBQVEsSUFBQyxDQUFBLEtBQUssQ0FBQyxJQUFsQjtRQUNFLElBQWdDLElBQUMsQ0FBQSxLQUFLLENBQUMsS0FBdkM7VUFBQSxNQUFNLENBQUMsSUFBUCxDQUFZLGdCQUFaLEVBQUE7O1FBQ0EsTUFBTSxDQUFDLElBQVAsQ0FBWSxJQUFDLENBQUEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFiLENBQUEsQ0FBWjtRQUNBLE1BQU0sQ0FBQyxLQUFQLENBQUE7UUFDQSxJQUFnQyxJQUFDLENBQUEsS0FBSyxDQUFDLEtBQXZDO1VBQUEsTUFBTSxDQUFDLElBQVAsQ0FBWSxlQUFaLEVBQUE7O1FBQ0EsTUFBTSxDQUFDLElBQVAsQ0FBQSxFQUxGO09BREY7O1dBT0EsdUNBQU0sTUFBTixFQUFjLElBQWQ7RUFSUTs7OztHQWZXOztBQXlCdkIsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"./transform":111}],109:[function(require,module,exports){
var Layer, Transform, π,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Transform = require('./transform');

π = Math.PI;

Layer = (function(superClass) {
  extend(Layer, superClass);

  function Layer() {
    return Layer.__super__.constructor.apply(this, arguments);
  }

  Layer.traits = ['node', 'vertex', 'layer'];

  Layer.prototype.make = function() {
    this._listen('root', 'root.resize', this.update);
    return this.uniforms = {
      layerScale: this._attributes.make(this._types.vec4()),
      layerBias: this._attributes.make(this._types.vec4())
    };
  };

  Layer.prototype.update = function() {
    var _enum, aspect, camera, depth, fit, fov, pitch, ref, ref1, ref2, scale, size;
    camera = this._inherit('root').getCamera();
    size = this._inherit('root').getSize();
    aspect = (ref = camera.aspect) != null ? ref : 1;
    fov = (ref1 = camera.fov) != null ? ref1 : 1;
    pitch = Math.tan(fov * π / 360);
    _enum = this.node.attributes['layer.fit']["enum"];
    ref2 = this.props, fit = ref2.fit, depth = ref2.depth, scale = ref2.scale;
    switch (fit) {
      case _enum.contain:
        fit = aspect > 1 ? _enum.y : _enum.x;
        break;
      case _enum.cover:
        fit = aspect > 1 ? _enum.x : _enum.y;
    }
    switch (fit) {
      case _enum.x:
        this.uniforms.layerScale.value.set(pitch * aspect, pitch * aspect);
        break;
      case _enum.y:
        this.uniforms.layerScale.value.set(pitch, pitch);
    }
    return this.uniforms.layerBias.value.set(0, 0, -depth, 0);
  };

  Layer.prototype.change = function(changed, touched, init) {
    if (changed['layer.fit'] || changed['layer.depth'] || init) {
      return this.update();
    }
  };

  Layer.prototype.vertex = function(shader, pass) {
    if (pass === 2) {
      return shader.pipe('layer.position', this.uniforms);
    }
    if (pass === 3) {
      return shader.pipe('root.position');
    }
    return shader;
  };

  return Layer;

})(Transform);

module.exports = Layer;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx0cmFuc2Zvcm1cXGxheWVyLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxwcmltaXRpdmVzXFx0eXBlc1xcdHJhbnNmb3JtXFxsYXllci5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxtQkFBQTtFQUFBOzs7QUFBQSxTQUFBLEdBQVksT0FBQSxDQUFRLGFBQVI7O0FBQ1osQ0FBQSxHQUFJLElBQUksQ0FBQzs7QUFFSDs7Ozs7OztFQUNKLEtBQUMsQ0FBQSxNQUFELEdBQVUsQ0FBQyxNQUFELEVBQVMsUUFBVCxFQUFtQixPQUFuQjs7a0JBRVYsSUFBQSxHQUFNLFNBQUE7SUFDSixJQUFDLENBQUEsT0FBRCxDQUFTLE1BQVQsRUFBaUIsYUFBakIsRUFBZ0MsSUFBQyxDQUFBLE1BQWpDO1dBRUEsSUFBQyxDQUFBLFFBQUQsR0FDRTtNQUFBLFVBQUEsRUFBWSxJQUFDLENBQUEsV0FBVyxDQUFDLElBQWIsQ0FBa0IsSUFBQyxDQUFBLE1BQU0sQ0FBQyxJQUFSLENBQUEsQ0FBbEIsQ0FBWjtNQUNBLFNBQUEsRUFBWSxJQUFDLENBQUEsV0FBVyxDQUFDLElBQWIsQ0FBa0IsSUFBQyxDQUFBLE1BQU0sQ0FBQyxJQUFSLENBQUEsQ0FBbEIsQ0FEWjs7RUFKRTs7a0JBT04sTUFBQSxHQUFRLFNBQUE7QUFDTixRQUFBO0lBQUEsTUFBQSxHQUFTLElBQUMsQ0FBQSxRQUFELENBQVUsTUFBVixDQUFpQixDQUFDLFNBQWxCLENBQUE7SUFDVCxJQUFBLEdBQVMsSUFBQyxDQUFBLFFBQUQsQ0FBVSxNQUFWLENBQWlCLENBQUMsT0FBbEIsQ0FBQTtJQUVULE1BQUEseUNBQXlCO0lBQ3pCLEdBQUEsd0NBQXlCO0lBRXpCLEtBQUEsR0FBUyxJQUFJLENBQUMsR0FBTCxDQUFTLEdBQUEsR0FBTSxDQUFOLEdBQVUsR0FBbkI7SUFFVCxLQUFBLEdBQVEsSUFBQyxDQUFBLElBQUksQ0FBQyxVQUFXLENBQUEsV0FBQSxDQUFZLEVBQUMsSUFBRDtJQUVyQyxPQUFzQixJQUFDLENBQUEsS0FBdkIsRUFBQyxjQUFELEVBQU0sa0JBQU4sRUFBYTtBQUdiLFlBQU8sR0FBUDtBQUFBLFdBQ08sS0FBSyxDQUFDLE9BRGI7UUFFSSxHQUFBLEdBQVMsTUFBQSxHQUFTLENBQVosR0FBbUIsS0FBSyxDQUFDLENBQXpCLEdBQWdDLEtBQUssQ0FBQztBQUR6QztBQURQLFdBR08sS0FBSyxDQUFDLEtBSGI7UUFJSSxHQUFBLEdBQVMsTUFBQSxHQUFTLENBQVosR0FBbUIsS0FBSyxDQUFDLENBQXpCLEdBQWdDLEtBQUssQ0FBQztBQUpoRDtBQU9BLFlBQU8sR0FBUDtBQUFBLFdBQ08sS0FBSyxDQUFDLENBRGI7UUFFSSxJQUFDLENBQUEsUUFBUSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsR0FBM0IsQ0FBK0IsS0FBQSxHQUFRLE1BQXZDLEVBQStDLEtBQUEsR0FBUSxNQUF2RDtBQURHO0FBRFAsV0FHTyxLQUFLLENBQUMsQ0FIYjtRQUlJLElBQUMsQ0FBQSxRQUFRLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxHQUEzQixDQUErQixLQUEvQixFQUFzQyxLQUF0QztBQUpKO1dBTUEsSUFBQyxDQUFBLFFBQVEsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLEdBQTFCLENBQThCLENBQTlCLEVBQWlDLENBQWpDLEVBQW9DLENBQUMsS0FBckMsRUFBNEMsQ0FBNUM7RUEzQk07O2tCQTZCUixNQUFBLEdBQVEsU0FBQyxPQUFELEVBQVUsT0FBVixFQUFtQixJQUFuQjtJQUNOLElBQUcsT0FBUSxDQUFBLFdBQUEsQ0FBUixJQUNBLE9BQVEsQ0FBQSxhQUFBLENBRFIsSUFFQSxJQUZIO2FBSUUsSUFBQyxDQUFBLE1BQUQsQ0FBQSxFQUpGOztFQURNOztrQkFRUixNQUFBLEdBQVEsU0FBQyxNQUFELEVBQVMsSUFBVDtJQUNOLElBQWtELElBQUEsS0FBUSxDQUExRDtBQUFBLGFBQU8sTUFBTSxDQUFDLElBQVAsQ0FBWSxnQkFBWixFQUE4QixJQUFDLENBQUEsUUFBL0IsRUFBUDs7SUFDQSxJQUFrRCxJQUFBLEtBQVEsQ0FBMUQ7QUFBQSxhQUFPLE1BQU0sQ0FBQyxJQUFQLENBQVksZUFBWixFQUFQOztXQUNBO0VBSE07Ozs7R0EvQ1U7O0FBb0RwQixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"./transform":111}],110:[function(require,module,exports){
var Mask, Parent,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Parent = require('../base/parent');

Mask = (function(superClass) {
  extend(Mask, superClass);

  function Mask() {
    return Mask.__super__.constructor.apply(this, arguments);
  }

  Mask.traits = ['node', 'include', 'mask', 'bind'];

  Mask.prototype.make = function() {
    return this._helpers.bind.make([
      {
        to: 'include.shader',
        trait: 'shader',
        optional: true
      }
    ]);
  };

  Mask.prototype.unmake = function() {
    return this._helpers.bind.unmake();
  };

  Mask.prototype.change = function(changed, touched, init) {
    if (touched['include']) {
      return this.rebuild();
    }
  };

  Mask.prototype.mask = function(shader) {
    var ref, ref1, s;
    if (this.bind.shader != null) {
      if (shader) {
        s = this._shaders.shader();
        s.pipe(Util.GLSL.identity('vec4'));
        s.fan();
        s.pipe(shader);
        s.next();
        s.pipe(this.bind.shader.shaderBind());
        s.end();
        s.pipe("float combine(float a, float b) { return min(a, b); }");
      } else {
        s = this._shaders.shader();
        s.pipe(this.bind.shader.shaderBind());
      }
    } else {
      s = shader;
    }
    return (ref = (ref1 = this._inherit('mask')) != null ? ref1.mask(s) : void 0) != null ? ref : s;
  };

  return Mask;

})(Parent);

module.exports = Mask;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx0cmFuc2Zvcm1cXG1hc2suY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx0cmFuc2Zvcm1cXG1hc2suY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsWUFBQTtFQUFBOzs7QUFBQSxNQUFBLEdBQVMsT0FBQSxDQUFRLGdCQUFSOztBQUVIOzs7Ozs7O0VBQ0osSUFBQyxDQUFBLE1BQUQsR0FBVSxDQUFDLE1BQUQsRUFBUyxTQUFULEVBQW9CLE1BQXBCLEVBQTRCLE1BQTVCOztpQkFFVixJQUFBLEdBQU0sU0FBQTtXQUVKLElBQUMsQ0FBQSxRQUFRLENBQUMsSUFBSSxDQUFDLElBQWYsQ0FBb0I7TUFDbEI7UUFBRSxFQUFBLEVBQUksZ0JBQU47UUFBd0IsS0FBQSxFQUFPLFFBQS9CO1FBQXlDLFFBQUEsRUFBVSxJQUFuRDtPQURrQjtLQUFwQjtFQUZJOztpQkFNTixNQUFBLEdBQVEsU0FBQTtXQUNOLElBQUMsQ0FBQSxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQWYsQ0FBQTtFQURNOztpQkFHUixNQUFBLEdBQVEsU0FBQyxPQUFELEVBQVUsT0FBVixFQUFtQixJQUFuQjtJQUNOLElBQXFCLE9BQVEsQ0FBQSxTQUFBLENBQTdCO0FBQUEsYUFBTyxJQUFDLENBQUEsT0FBRCxDQUFBLEVBQVA7O0VBRE07O2lCQUdSLElBQUEsR0FBTSxTQUFDLE1BQUQ7QUFDSixRQUFBO0lBQUEsSUFBRyx3QkFBSDtNQUNFLElBQUcsTUFBSDtRQUNFLENBQUEsR0FBSSxJQUFDLENBQUEsUUFBUSxDQUFDLE1BQVYsQ0FBQTtRQUNKLENBQUMsQ0FBQyxJQUFGLENBQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFWLENBQW1CLE1BQW5CLENBQVA7UUFDQSxDQUFDLENBQUMsR0FBRixDQUFBO1FBQ0EsQ0FBRyxDQUFDLElBQUosQ0FBUyxNQUFUO1FBQ0EsQ0FBQyxDQUFDLElBQUYsQ0FBQTtRQUNBLENBQUcsQ0FBQyxJQUFKLENBQVMsSUFBQyxDQUFBLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBYixDQUFBLENBQVQ7UUFDQSxDQUFDLENBQUMsR0FBRixDQUFBO1FBQ0EsQ0FBQyxDQUFDLElBQUYsQ0FBTyx1REFBUCxFQVJGO09BQUEsTUFBQTtRQVVFLENBQUEsR0FBSSxJQUFDLENBQUEsUUFBUSxDQUFDLE1BQVYsQ0FBQTtRQUNKLENBQUMsQ0FBQyxJQUFGLENBQU8sSUFBQyxDQUFBLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBYixDQUFBLENBQVAsRUFYRjtPQURGO0tBQUEsTUFBQTtNQWNFLENBQUEsR0FBSSxPQWROOztrR0FnQjZCO0VBakJ6Qjs7OztHQWZXOztBQWtDbkIsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"../base/parent":47}],111:[function(require,module,exports){
var Parent, Transform,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Parent = require('../base/parent');

Transform = (function(superClass) {
  extend(Transform, superClass);

  function Transform() {
    return Transform.__super__.constructor.apply(this, arguments);
  }

  Transform.traits = ['node', 'vertex', 'fragment'];

  Transform.prototype.vertex = function(shader, pass) {
    var ref, ref1;
    return (ref = (ref1 = this._inherit('vertex')) != null ? ref1.vertex(shader, pass) : void 0) != null ? ref : shader;
  };

  Transform.prototype.fragment = function(shader, pass) {
    var ref, ref1;
    return (ref = (ref1 = this._inherit('fragment')) != null ? ref1.fragment(shader, pass) : void 0) != null ? ref : shader;
  };

  return Transform;

})(Parent);

module.exports = Transform;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx0cmFuc2Zvcm1cXHRyYW5zZm9ybS5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccHJpbWl0aXZlc1xcdHlwZXNcXHRyYW5zZm9ybVxcdHJhbnNmb3JtLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLGlCQUFBO0VBQUE7OztBQUFBLE1BQUEsR0FBUyxPQUFBLENBQVEsZ0JBQVI7O0FBRUg7Ozs7Ozs7RUFDSixTQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLFFBQVQsRUFBbUIsVUFBbkI7O3NCQUVWLE1BQUEsR0FBUSxTQUFDLE1BQUQsRUFBUyxJQUFUO0FBQ04sUUFBQTtpSEFBNEM7RUFEdEM7O3NCQUdSLFFBQUEsR0FBVSxTQUFDLE1BQUQsRUFBUyxJQUFUO0FBQ1IsUUFBQTtxSEFBZ0Q7RUFEeEM7Ozs7R0FOWTs7QUFTeEIsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"../base/parent":47}],112:[function(require,module,exports){
var Transform, Transform3, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Transform = require('./transform');

Util = require('../../../util');

Transform3 = (function(superClass) {
  extend(Transform3, superClass);

  function Transform3() {
    return Transform3.__super__.constructor.apply(this, arguments);
  }

  Transform3.traits = ['node', 'vertex', 'transform3'];

  Transform3.prototype.make = function() {
    this.uniforms = {
      transformMatrix: this._attributes.make(this._types.mat4())
    };
    return this.composer = Util.Three.transformComposer();
  };

  Transform3.prototype.unmake = function() {
    return delete this.uniforms;
  };

  Transform3.prototype.change = function(changed, touched, init) {
    var e, m, p, q, r, s;
    if (changed['transform3.pass']) {
      return this.rebuild();
    }
    if (!(touched['transform3'] || init)) {
      return;
    }
    p = this.props.position;
    q = this.props.quaternion;
    r = this.props.rotation;
    s = this.props.scale;
    m = this.props.matrix;
    e = this.props.eulerOrder;
    return this.uniforms.transformMatrix.value = this.composer(p, r, q, s, m, e);
  };

  Transform3.prototype.vertex = function(shader, pass) {
    if (pass === this.props.pass) {
      shader.pipe('transform3.position', this.uniforms);
    }
    return Transform3.__super__.vertex.call(this, shader, pass);
  };

  return Transform3;

})(Transform);

module.exports = Transform3;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx0cmFuc2Zvcm1cXHRyYW5zZm9ybTMuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx0cmFuc2Zvcm1cXHRyYW5zZm9ybTMuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsMkJBQUE7RUFBQTs7O0FBQUEsU0FBQSxHQUFZLE9BQUEsQ0FBUSxhQUFSOztBQUNaLElBQUEsR0FBTyxPQUFBLENBQVEsZUFBUjs7QUFFRDs7Ozs7OztFQUNKLFVBQUMsQ0FBQSxNQUFELEdBQVUsQ0FBQyxNQUFELEVBQVMsUUFBVCxFQUFtQixZQUFuQjs7dUJBRVYsSUFBQSxHQUFNLFNBQUE7SUFDSixJQUFDLENBQUEsUUFBRCxHQUNFO01BQUEsZUFBQSxFQUFpQixJQUFDLENBQUEsV0FBVyxDQUFDLElBQWIsQ0FBa0IsSUFBQyxDQUFBLE1BQU0sQ0FBQyxJQUFSLENBQUEsQ0FBbEIsQ0FBakI7O1dBRUYsSUFBQyxDQUFBLFFBQUQsR0FBWSxJQUFJLENBQUMsS0FBSyxDQUFDLGlCQUFYLENBQUE7RUFKUjs7dUJBTU4sTUFBQSxHQUFRLFNBQUE7V0FDTixPQUFPLElBQUMsQ0FBQTtFQURGOzt1QkFHUixNQUFBLEdBQU8sU0FBQyxPQUFELEVBQVUsT0FBVixFQUFtQixJQUFuQjtBQUNMLFFBQUE7SUFBQSxJQUFxQixPQUFRLENBQUEsaUJBQUEsQ0FBN0I7QUFBQSxhQUFPLElBQUMsQ0FBQSxPQUFELENBQUEsRUFBUDs7SUFDQSxJQUFBLENBQUEsQ0FBYyxPQUFRLENBQUEsWUFBQSxDQUFSLElBQXlCLElBQXZDLENBQUE7QUFBQSxhQUFBOztJQUVBLENBQUEsR0FBSSxJQUFDLENBQUEsS0FBSyxDQUFDO0lBQ1gsQ0FBQSxHQUFJLElBQUMsQ0FBQSxLQUFLLENBQUM7SUFDWCxDQUFBLEdBQUksSUFBQyxDQUFBLEtBQUssQ0FBQztJQUNYLENBQUEsR0FBSSxJQUFDLENBQUEsS0FBSyxDQUFDO0lBQ1gsQ0FBQSxHQUFJLElBQUMsQ0FBQSxLQUFLLENBQUM7SUFDWCxDQUFBLEdBQUksSUFBQyxDQUFBLEtBQUssQ0FBQztXQUVYLElBQUMsQ0FBQSxRQUFRLENBQUMsZUFBZSxDQUFDLEtBQTFCLEdBQWtDLElBQUMsQ0FBQSxRQUFELENBQVUsQ0FBVixFQUFhLENBQWIsRUFBZ0IsQ0FBaEIsRUFBbUIsQ0FBbkIsRUFBc0IsQ0FBdEIsRUFBeUIsQ0FBekI7RUFYN0I7O3VCQWFQLE1BQUEsR0FBUSxTQUFDLE1BQUQsRUFBUyxJQUFUO0lBQ04sSUFBZ0QsSUFBQSxLQUFRLElBQUMsQ0FBQSxLQUFLLENBQUMsSUFBL0Q7TUFBQSxNQUFNLENBQUMsSUFBUCxDQUFZLHFCQUFaLEVBQW1DLElBQUMsQ0FBQSxRQUFwQyxFQUFBOztXQUNBLHVDQUFNLE1BQU4sRUFBYyxJQUFkO0VBRk07Ozs7R0F6QmU7O0FBNkJ6QixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"../../../util":175,"./transform":111}],113:[function(require,module,exports){
var Transform, Transform4,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Transform = require('./transform');

Transform4 = (function(superClass) {
  extend(Transform4, superClass);

  function Transform4() {
    return Transform4.__super__.constructor.apply(this, arguments);
  }

  Transform4.traits = ['node', 'vertex', 'transform4'];

  Transform4.prototype.make = function() {
    this.uniforms = {
      transformMatrix: this._attributes.make(this._types.mat4()),
      transformOffset: this.node.attributes['transform4.position']
    };
    return this.transformMatrix = this.uniforms.transformMatrix.value;
  };

  Transform4.prototype.unmake = function() {
    return delete this.uniforms;
  };

  Transform4.prototype.change = function(changed, touched, init) {
    var m, s, t;
    if (changed['transform4.pass']) {
      return this.rebuild();
    }
    if (!(touched['transform4'] || init)) {
      return;
    }
    s = this.props.scale;
    m = this.props.matrix;
    t = this.transformMatrix;
    t.copy(m);
    return t.scale(s);
  };

  Transform4.prototype.vertex = function(shader, pass) {
    if (pass === this.props.pass) {
      shader.pipe('transform4.position', this.uniforms);
    }
    return Transform4.__super__.vertex.call(this, shader, pass);
  };

  return Transform4;

})(Transform);

module.exports = Transform4;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx0cmFuc2Zvcm1cXHRyYW5zZm9ybTQuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx0cmFuc2Zvcm1cXHRyYW5zZm9ybTQuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEscUJBQUE7RUFBQTs7O0FBQUEsU0FBQSxHQUFZLE9BQUEsQ0FBUSxhQUFSOztBQUVOOzs7Ozs7O0VBQ0osVUFBQyxDQUFBLE1BQUQsR0FBVSxDQUFDLE1BQUQsRUFBUyxRQUFULEVBQW1CLFlBQW5COzt1QkFFVixJQUFBLEdBQU0sU0FBQTtJQUNKLElBQUMsQ0FBQSxRQUFELEdBQ0U7TUFBQSxlQUFBLEVBQWlCLElBQUMsQ0FBQSxXQUFXLENBQUMsSUFBYixDQUFrQixJQUFDLENBQUEsTUFBTSxDQUFDLElBQVIsQ0FBQSxDQUFsQixDQUFqQjtNQUNBLGVBQUEsRUFBaUIsSUFBQyxDQUFBLElBQUksQ0FBQyxVQUFXLENBQUEscUJBQUEsQ0FEbEM7O1dBR0YsSUFBQyxDQUFBLGVBQUQsR0FBbUIsSUFBQyxDQUFBLFFBQVEsQ0FBQyxlQUFlLENBQUM7RUFMekM7O3VCQU9OLE1BQUEsR0FBUSxTQUFBO1dBQ04sT0FBTyxJQUFDLENBQUE7RUFERjs7dUJBR1IsTUFBQSxHQUFRLFNBQUMsT0FBRCxFQUFVLE9BQVYsRUFBbUIsSUFBbkI7QUFDTixRQUFBO0lBQUEsSUFBcUIsT0FBUSxDQUFBLGlCQUFBLENBQTdCO0FBQUEsYUFBTyxJQUFDLENBQUEsT0FBRCxDQUFBLEVBQVA7O0lBQ0EsSUFBQSxDQUFBLENBQWMsT0FBUSxDQUFBLFlBQUEsQ0FBUixJQUF5QixJQUF2QyxDQUFBO0FBQUEsYUFBQTs7SUFFQSxDQUFBLEdBQUksSUFBQyxDQUFBLEtBQUssQ0FBQztJQUNYLENBQUEsR0FBSSxJQUFDLENBQUEsS0FBSyxDQUFDO0lBRVgsQ0FBQSxHQUFJLElBQUMsQ0FBQTtJQUNMLENBQUMsQ0FBQyxJQUFGLENBQVEsQ0FBUjtXQUNBLENBQUMsQ0FBQyxLQUFGLENBQVEsQ0FBUjtFQVRNOzt1QkFXUixNQUFBLEdBQVEsU0FBQyxNQUFELEVBQVMsSUFBVDtJQUNOLElBQWdELElBQUEsS0FBUSxJQUFDLENBQUEsS0FBSyxDQUFDLElBQS9EO01BQUEsTUFBTSxDQUFDLElBQVAsQ0FBWSxxQkFBWixFQUFtQyxJQUFDLENBQUEsUUFBcEMsRUFBQTs7V0FDQSx1Q0FBTSxNQUFOLEVBQWMsSUFBZDtFQUZNOzs7O0dBeEJlOztBQTRCekIsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"./transform":111}],114:[function(require,module,exports){
var Transform, Vertex,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Transform = require('./transform');

Vertex = (function(superClass) {
  extend(Vertex, superClass);

  function Vertex() {
    return Vertex.__super__.constructor.apply(this, arguments);
  }

  Vertex.traits = ['node', 'include', 'vertex', 'bind'];

  Vertex.prototype.make = function() {
    return this._helpers.bind.make([
      {
        to: 'include.shader',
        trait: 'shader',
        optional: true
      }
    ]);
  };

  Vertex.prototype.unmake = function() {
    return this._helpers.bind.unmake();
  };

  Vertex.prototype.change = function(changed, touched, init) {
    if (touched['include']) {
      return this.rebuild();
    }
  };

  Vertex.prototype.vertex = function(shader, pass) {
    if (this.bind.shader != null) {
      if (pass === this.props.pass) {
        shader.pipe(this.bind.shader.shaderBind());
      }
    }
    return Vertex.__super__.vertex.call(this, shader, pass);
  };

  return Vertex;

})(Transform);

module.exports = Vertex;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx0cmFuc2Zvcm1cXHZlcnRleC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccHJpbWl0aXZlc1xcdHlwZXNcXHRyYW5zZm9ybVxcdmVydGV4LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLGlCQUFBO0VBQUE7OztBQUFBLFNBQUEsR0FBWSxPQUFBLENBQVEsYUFBUjs7QUFFTjs7Ozs7OztFQUNKLE1BQUMsQ0FBQSxNQUFELEdBQVUsQ0FBQyxNQUFELEVBQVMsU0FBVCxFQUFvQixRQUFwQixFQUE4QixNQUE5Qjs7bUJBRVYsSUFBQSxHQUFNLFNBQUE7V0FFSixJQUFDLENBQUEsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFmLENBQW9CO01BQ2xCO1FBQUUsRUFBQSxFQUFJLGdCQUFOO1FBQXdCLEtBQUEsRUFBTyxRQUEvQjtRQUF5QyxRQUFBLEVBQVUsSUFBbkQ7T0FEa0I7S0FBcEI7RUFGSTs7bUJBTU4sTUFBQSxHQUFRLFNBQUE7V0FDTixJQUFDLENBQUEsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFmLENBQUE7RUFETTs7bUJBR1IsTUFBQSxHQUFRLFNBQUMsT0FBRCxFQUFVLE9BQVYsRUFBbUIsSUFBbkI7SUFDTixJQUFxQixPQUFRLENBQUEsU0FBQSxDQUE3QjtBQUFBLGFBQU8sSUFBQyxDQUFBLE9BQUQsQ0FBQSxFQUFQOztFQURNOzttQkFHUixNQUFBLEdBQVEsU0FBQyxNQUFELEVBQVMsSUFBVDtJQUNOLElBQUcsd0JBQUg7TUFDRSxJQUF5QyxJQUFBLEtBQVEsSUFBQyxDQUFBLEtBQUssQ0FBQyxJQUF4RDtRQUFBLE1BQU0sQ0FBQyxJQUFQLENBQVksSUFBQyxDQUFBLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBYixDQUFBLENBQVosRUFBQTtPQURGOztXQUVBLG1DQUFNLE1BQU4sRUFBYyxJQUFkO0VBSE07Ozs7R0FmVzs7QUFvQnJCLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{"./transform":111}],115:[function(require,module,exports){
var Types, Util, decorate,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

Util = require('../../util');

Types = {
  array: function(type, size, value) {
    var lerp, op;
    if (value == null) {
      value = null;
    }
    lerp = type.lerp ? function(a, b, target, f) {
      var i, j, l, ref;
      l = Math.min(a.length, b.length);
      for (i = j = 0, ref = l; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
        target[i] = type.lerp(a[i], b[i], target[i], f);
      }
      return target;
    } : void 0;
    op = type.op ? function(a, b, target, op) {
      var i, j, l, ref;
      l = Math.min(a.length, b.length);
      for (i = j = 0, ref = l; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
        target[i] = type.op(a[i], b[i], target[i], op);
      }
      return target;
    } : void 0;
    if ((value != null) && !(value instanceof Array)) {
      value = [value];
    }
    return {
      uniform: function() {
        if (type.uniform) {
          return type.uniform() + 'v';
        } else {
          return void 0;
        }
      },
      make: function() {
        var i, j, ref, results;
        if (value != null) {
          return value.slice();
        }
        if (!size) {
          return [];
        }
        results = [];
        for (i = j = 0, ref = size; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
          results.push(type.make());
        }
        return results;
      },
      validate: function(value, target, invalid) {
        var i, input, j, l, ref, ref1;
        if (!(value instanceof Array)) {
          value = [value];
        }
        l = target.length = size ? size : value.length;
        for (i = j = 0, ref = l; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
          input = (ref1 = value[i]) != null ? ref1 : type.make();
          target[i] = type.validate(input, target[i], invalid);
        }
        return target;
      },
      equals: function(a, b) {
        var al, bl, i, j, l, ref;
        al = a.length;
        bl = b.length;
        if (al !== bl) {
          return false;
        }
        l = Math.min(al, bl);
        for (i = j = 0, ref = l; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
          if (!(typeof type.equals === "function" ? type.equals(a[i], b[i]) : void 0)) {
            return false;
          }
        }
        return true;
      },
      lerp: lerp,
      op: op,
      clone: function(v) {
        var j, len, results, x;
        results = [];
        for (j = 0, len = v.length; j < len; j++) {
          x = v[j];
          results.push(type.clone(x));
        }
        return results;
      }
    };
  },
  letters: function(type, size, value) {
    var array, i, j, len, v;
    if (value == null) {
      value = null;
    }
    if (value != null) {
      if (value === "" + value) {
        value = value.split('');
      }
      for (i = j = 0, len = value.length; j < len; i = ++j) {
        v = value[i];
        value[i] = type.validate(v, v);
      }
    }
    array = Types.array(type, size, value);
    return {
      uniform: function() {
        return array.uniform();
      },
      make: function() {
        return array.make();
      },
      validate: function(value, target, invalid) {
        if (value === "" + value) {
          value = value.split('');
        }
        return array.validate(value, target, invalid);
      },
      equals: function(a, b) {
        return array.equals(a, b);
      },
      clone: array.clone
    };
  },
  nullable: function(type, make) {
    var emitter, lerp, op, value;
    if (make == null) {
      make = false;
    }
    value = make ? type.make() : null;
    emitter = type.emitter ? function(expr1, expr2) {
      if (expr2 == null) {
        return expr1;
      }
      if (expr1 == null) {
        return expr2;
      }
      return type.emitter(expr1, expr2);
    } : void 0;
    lerp = type.lerp ? function(a, b, target, f) {
      if (a === null || b === null) {
        if (f < .5) {
          return a;
        } else {
          return b;
        }
      }
      if (target == null) {
        target = type.make();
      }
      value = type.lerp(a, b, target, f);
      return target;
    } : void 0;
    op = type.op ? function(a, b, target, op) {
      if (a === null || b === null) {
        return null;
      }
      if (target == null) {
        target = type.make();
      }
      value = type.op(a, b, target, op);
      return value;
    } : void 0;
    return {
      make: function() {
        return value;
      },
      validate: function(value, target, invalid) {
        if (value === null) {
          return value;
        }
        if (target === null) {
          target = type.make();
        }
        return type.validate(value, target, invalid);
      },
      uniform: function() {
        return typeof type.uniform === "function" ? type.uniform() : void 0;
      },
      equals: function(a, b) {
        var an, bn, ref;
        an = a === null;
        bn = b === null;
        if (an && bn) {
          return true;
        }
        if (an ^ bn) {
          return false;
        }
        return (ref = typeof type.equals === "function" ? type.equals(a, b) : void 0) != null ? ref : a === b;
      },
      lerp: lerp,
      op: op,
      emitter: emitter
    };
  },
  "enum": function(value, keys, map) {
    var i, j, key, len, len1, n, values;
    if (keys == null) {
      keys = [];
    }
    if (map == null) {
      map = {};
    }
    i = 0;
    values = {};
    for (j = 0, len = keys.length; j < len; j++) {
      key = keys[j];
      if (key !== +key) {
        if (map[key] == null) {
          map[key] = i++;
        }
      }
    }
    for (n = 0, len1 = keys.length; n < len1; n++) {
      key = keys[n];
      if (key === +key) {
        values[key] = key;
      }
    }
    for (key in map) {
      i = map[key];
      values[i] = true;
    }
    if (values[value] == null) {
      value = map[value];
    }
    return {
      "enum": function() {
        return map;
      },
      make: function() {
        return value;
      },
      validate: function(value, target, invalid) {
        var v;
        v = values[value] ? value : map[value];
        if (v != null) {
          return v;
        }
        return invalid();
      }
    };
  },
  enumber: function(value, keys, map) {
    var _enum;
    if (map == null) {
      map = {};
    }
    _enum = Types["enum"](value, keys, map);
    return {
      "enum": _enum["enum"],
      uniform: function() {
        return 'f';
      },
      make: function() {
        var ref;
        return (ref = _enum.make()) != null ? ref : +value;
      },
      validate: function(value, target, invalid) {
        if (value === +value) {
          return value;
        }
        return _enum.validate(value, target, invalid);
      },
      op: function(a, b, target, op) {
        return op(a, b);
      }
    };
  },
  select: function(value) {
    if (value == null) {
      value = '<';
    }
    value;
    return {
      make: function() {
        return value;
      },
      validate: function(value, target, invalid) {
        if (typeof value === 'string') {
          return value;
        }
        if (typeof value === 'object') {
          return value;
        }
        return invalid();
      }
    };
  },
  bool: function(value) {
    value = !!value;
    return {
      uniform: function() {
        return 'f';
      },
      make: function() {
        return value;
      },
      validate: function(value, target, invalid) {
        return !!value;
      }
    };
  },
  int: function(value) {
    if (value == null) {
      value = 0;
    }
    value = +Math.round(value);
    return {
      uniform: function() {
        return 'i';
      },
      make: function() {
        return value;
      },
      validate: function(value, target, invalid) {
        var x;
        if (value !== (x = +value)) {
          return invalid();
        }
        return Math.round(x) || 0;
      },
      op: function(a, b, target, op) {
        return op(a, b);
      }
    };
  },
  round: function(value) {
    if (value == null) {
      value = 0;
    }
    value = +Math.round(value);
    return {
      uniform: function() {
        return 'f';
      },
      make: function() {
        return value;
      },
      validate: function(value, target, invalid) {
        var x;
        if (value !== (x = +value)) {
          return invalid();
        }
        return Math.round(x) || 0;
      },
      op: function(a, b, target, op) {
        return op(a, b);
      }
    };
  },
  number: function(value) {
    if (value == null) {
      value = 0;
    }
    return {
      uniform: function() {
        return 'f';
      },
      make: function() {
        return +value;
      },
      validate: function(value, target, invalid) {
        var x;
        if (value !== (x = +value)) {
          return invalid();
        }
        return x || 0;
      },
      op: function(a, b, target, op) {
        return op(a, b);
      }
    };
  },
  positive: function(type, strict) {
    if (strict == null) {
      strict = false;
    }
    return {
      uniform: type.uniform,
      make: type.make,
      validate: function(value, target, invalid) {
        value = type.validate(value, target, invalid);
        if ((value < 0) || (strict && value <= 0)) {
          return invalid();
        }
        return value;
      },
      op: function(a, b, target, op) {
        return op(a, b);
      }
    };
  },
  string: function(value) {
    if (value == null) {
      value = '';
    }
    return {
      make: function() {
        return "" + value;
      },
      validate: function(value, target, invalid) {
        var x;
        if (value !== (x = "" + value)) {
          return invalid();
        }
        return x;
      }
    };
  },
  func: function() {
    return {
      make: function() {
        return function() {};
      },
      validate: function(value, target, invalid) {
        if (typeof value === 'function') {
          return value;
        }
        return invalid();
      }
    };
  },
  emitter: function() {
    return {
      make: function() {
        return function(emit) {
          return emit(1, 1, 1, 1);
        };
      },
      validate: function(value, target, invalid) {
        if (typeof value === 'function') {
          return value;
        }
        return invalid();
      },
      emitter: function(a, b) {
        return Util.Data.getLerpEmitter(a, b);
      }
    };
  },
  object: function(value) {
    return {
      make: function() {
        return value != null ? value : {};
      },
      validate: function(value, target, invalid) {
        if (typeof value === 'object') {
          return value;
        }
        return invalid();
      },
      clone: function(v) {
        return JSON.parse(JSON.stringify(v));
      }
    };
  },
  timestamp: function(value) {
    if (value == null) {
      value = null;
    }
    if (typeof value === 'string') {
      value = Date.parse(value);
    }
    return {
      uniform: function() {
        return 'f';
      },
      make: function() {
        return value != null ? value : +new Date();
      },
      validate: function(value, target, invalid) {
        var x;
        value = Date.parse(value);
        if (value !== (x = +value)) {
          return invalid();
        }
        return value;
      },
      op: function(a, b, target, op) {
        return op(a, b);
      }
    };
  },
  vec2: function(x, y) {
    var defaults;
    if (x == null) {
      x = 0;
    }
    if (y == null) {
      y = 0;
    }
    defaults = [x, y];
    return {
      uniform: function() {
        return 'v2';
      },
      make: function() {
        return new THREE.Vector2(x, y);
      },
      validate: function(value, target, invalid) {
        var ref, ref1, xx, yy;
        if (value === +value) {
          value = [value];
        }
        if (value instanceof THREE.Vector2) {
          target.copy(value);
        } else if (value instanceof Array) {
          value = value.concat(defaults.slice(value.length));
          target.set.apply(target, value);
        } else if (value != null) {
          xx = (ref = value.x) != null ? ref : x;
          yy = (ref1 = value.y) != null ? ref1 : y;
          target.set(xx, yy);
        } else {
          return invalid();
        }
        return target;
      },
      equals: function(a, b) {
        return a.x === b.x && a.y === b.y;
      },
      op: function(a, b, target, op) {
        target.x = op(a.x, b.x);
        target.y = op(a.y, b.y);
        return target;
      }
    };
  },
  ivec2: function(x, y) {
    var validate, vec2;
    if (x == null) {
      x = 0;
    }
    if (y == null) {
      y = 0;
    }
    vec2 = Types.vec2(x, y);
    validate = vec2.validate;
    vec2.validate = function(value, target, invalid) {
      validate(value, target, invalid);
      target.x = Math.round(target.x);
      target.y = Math.round(target.y);
      return target;
    };
    return vec2;
  },
  vec3: function(x, y, z) {
    var defaults;
    if (x == null) {
      x = 0;
    }
    if (y == null) {
      y = 0;
    }
    if (z == null) {
      z = 0;
    }
    defaults = [x, y, z];
    return {
      uniform: function() {
        return 'v3';
      },
      make: function() {
        return new THREE.Vector3(x, y, z);
      },
      validate: function(value, target, invalid) {
        var ref, ref1, ref2, xx, yy, zz;
        if (value === +value) {
          value = [value];
        }
        if (value instanceof THREE.Vector3) {
          target.copy(value);
        } else if (value instanceof Array) {
          value = value.concat(defaults.slice(value.length));
          target.set.apply(target, value);
        } else if (value != null) {
          xx = (ref = value.x) != null ? ref : x;
          yy = (ref1 = value.y) != null ? ref1 : y;
          zz = (ref2 = value.z) != null ? ref2 : z;
          target.set(xx, yy, zz);
        } else {
          return invalid();
        }
        return target;
      },
      equals: function(a, b) {
        return a.x === b.x && a.y === b.y && a.z === b.z;
      },
      op: function(a, b, target, op) {
        target.x = op(a.x, b.x);
        target.y = op(a.y, b.y);
        target.z = op(a.z, b.z);
        return target;
      }
    };
  },
  ivec3: function(x, y, z) {
    var validate, vec3;
    if (x == null) {
      x = 0;
    }
    if (y == null) {
      y = 0;
    }
    if (z == null) {
      z = 0;
    }
    vec3 = Types.vec3(x, y, z);
    validate = vec3.validate;
    vec3.validate = function(value, target) {
      validate(value, target, invalid);
      target.x = Math.round(target.x);
      target.y = Math.round(target.y);
      target.z = Math.round(target.z);
      return target;
    };
    return vec3;
  },
  vec4: function(x, y, z, w) {
    var defaults;
    if (x == null) {
      x = 0;
    }
    if (y == null) {
      y = 0;
    }
    if (z == null) {
      z = 0;
    }
    if (w == null) {
      w = 0;
    }
    defaults = [x, y, z, w];
    return {
      uniform: function() {
        return 'v4';
      },
      make: function() {
        return new THREE.Vector4(x, y, z, w);
      },
      validate: function(value, target, invalid) {
        var ref, ref1, ref2, ref3, ww, xx, yy, zz;
        if (value === +value) {
          value = [value];
        }
        if (value instanceof THREE.Vector4) {
          target.copy(value);
        } else if (value instanceof Array) {
          value = value.concat(defaults.slice(value.length));
          target.set.apply(target, value);
        } else if (value != null) {
          xx = (ref = value.x) != null ? ref : x;
          yy = (ref1 = value.y) != null ? ref1 : y;
          zz = (ref2 = value.z) != null ? ref2 : z;
          ww = (ref3 = value.w) != null ? ref3 : w;
          target.set(xx, yy, zz, ww);
        } else {
          return invalid();
        }
        return target;
      },
      equals: function(a, b) {
        return a.x === b.x && a.y === b.y && a.z === b.z && a.w === b.w;
      },
      op: function(a, b, target, op) {
        target.x = op(a.x, b.x);
        target.y = op(a.y, b.y);
        target.z = op(a.z, b.z);
        target.w = op(a.w, b.w);
        return target;
      }
    };
  },
  ivec4: function(x, y, z, w) {
    var validate, vec4;
    if (x == null) {
      x = 0;
    }
    if (y == null) {
      y = 0;
    }
    if (z == null) {
      z = 0;
    }
    if (w == null) {
      w = 0;
    }
    vec4 = Types.vec4(x, y, z, w);
    validate = vec4.validate;
    vec4.validate = function(value, target) {
      validate(value, target, invalid);
      target.x = Math.round(target.x);
      target.y = Math.round(target.y);
      target.z = Math.round(target.z);
      target.w = Math.round(target.w);
      return target;
    };
    return vec4;
  },
  mat3: function(n11, n12, n13, n21, n22, n23, n31, n32, n33) {
    var defaults;
    if (n11 == null) {
      n11 = 1;
    }
    if (n12 == null) {
      n12 = 0;
    }
    if (n13 == null) {
      n13 = 0;
    }
    if (n21 == null) {
      n21 = 0;
    }
    if (n22 == null) {
      n22 = 1;
    }
    if (n23 == null) {
      n23 = 0;
    }
    if (n31 == null) {
      n31 = 0;
    }
    if (n32 == null) {
      n32 = 0;
    }
    if (n33 == null) {
      n33 = 1;
    }
    defaults = [n11, n12, n13, n21, n22, n23, n31, n32, n33];
    return {
      uniform: function() {
        return 'm4';
      },
      make: function() {
        var m;
        m = new THREE.Matrix3;
        m.set(n11, n12, n13, n21, n22, n23, n31, n32, n33);
        return m;
      },
      validate: function(value, target, invalid) {
        if (value instanceof THREE.Matrix3) {
          target.copy(value);
        } else if (value instanceof Array) {
          value = value.concat(defaults.slice(value.length));
          target.set.apply(target, value);
        } else {
          return invalid();
        }
        return target;
      }
    };
  },
  mat4: function(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {
    var defaults;
    if (n11 == null) {
      n11 = 1;
    }
    if (n12 == null) {
      n12 = 0;
    }
    if (n13 == null) {
      n13 = 0;
    }
    if (n14 == null) {
      n14 = 0;
    }
    if (n21 == null) {
      n21 = 0;
    }
    if (n22 == null) {
      n22 = 1;
    }
    if (n23 == null) {
      n23 = 0;
    }
    if (n24 == null) {
      n24 = 0;
    }
    if (n31 == null) {
      n31 = 0;
    }
    if (n32 == null) {
      n32 = 0;
    }
    if (n33 == null) {
      n33 = 1;
    }
    if (n34 == null) {
      n34 = 0;
    }
    if (n41 == null) {
      n41 = 0;
    }
    if (n42 == null) {
      n42 = 0;
    }
    if (n43 == null) {
      n43 = 0;
    }
    if (n44 == null) {
      n44 = 1;
    }
    defaults = [n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44];
    return {
      uniform: function() {
        return 'm4';
      },
      make: function() {
        var m;
        m = new THREE.Matrix4;
        m.set(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44);
        return m;
      },
      validate: function(value, target, invalid) {
        if (value instanceof THREE.Matrix4) {
          target.copy(value);
        } else if (value instanceof Array) {
          value = value.concat(defaults.slice(value.length));
          target.set.apply(target, value);
        } else {
          return invalid();
        }
        return target;
      }
    };
  },
  quat: function(x, y, z, w) {
    var vec4;
    if (x == null) {
      x = 0;
    }
    if (y == null) {
      y = 0;
    }
    if (z == null) {
      z = 0;
    }
    if (w == null) {
      w = 1;
    }
    vec4 = Types.vec4(x, y, z, w);
    return {
      uniform: function() {
        return 'v4';
      },
      make: function() {
        return new THREE.Quaternion;
      },
      validate: function(value, target, invalid) {
        if (value instanceof THREE.Quaternion) {
          target.copy(value);
        } else {
          target = vec4.validate(value, target, invalid);
        }
        target.normalize();
        return target;
      },
      equals: function(a, b) {
        return a.x === b.x && a.y === b.y && a.z === b.z && a.w === b.w;
      },
      op: function(a, b, target, op) {
        target.x = op(a.x, b.x);
        target.y = op(a.y, b.y);
        target.z = op(a.z, b.z);
        target.w = op(a.w, b.w);
        target.normalize();
        return target;
      },
      lerp: function(a, b, target, f) {
        THREE.Quaternion.slerp(a, b, target, f);
        return target;
      }
    };
  },
  color: function(r, g, b) {
    var defaults;
    if (r == null) {
      r = .5;
    }
    if (g == null) {
      g = .5;
    }
    if (b == null) {
      b = .5;
    }
    defaults = [r, g, b];
    return {
      uniform: function() {
        return 'c';
      },
      make: function() {
        return new THREE.Color(r, g, b);
      },
      validate: function(value, target, invalid) {
        var bb, gg, ref, ref1, ref2, rr;
        if (value === "" + value) {
          value = new THREE.Color().setStyle(value);
        } else if (value === +value) {
          value = new THREE.Color(value);
        }
        if (value instanceof THREE.Color) {
          target.copy(value);
        } else if (value instanceof Array) {
          value = value.concat(defaults.slice(value.length));
          target.setRGB.apply(target, value);
        } else if (value != null) {
          rr = (ref = value.r) != null ? ref : r;
          gg = (ref1 = value.g) != null ? ref1 : g;
          bb = (ref2 = value.b) != null ? ref2 : b;
          target.set(rr, gg, bb);
        } else {
          return invalid();
        }
        return target;
      },
      equals: function(a, b) {
        return a.r === b.r && a.g === b.g && a.b === b.b;
      },
      op: function(a, b, target, op) {
        target.r = op(a.r, b.r);
        target.g = op(a.g, b.g);
        target.b = op(a.b, b.b);
        return target;
      }
    };
  },
  axis: function(value, allowZero) {
    var map, range, v;
    if (value == null) {
      value = 1;
    }
    if (allowZero == null) {
      allowZero = false;
    }
    map = {
      x: 1,
      y: 2,
      z: 3,
      w: 4,
      W: 1,
      H: 2,
      D: 3,
      I: 4,
      zero: 0,
      "null": 0,
      width: 1,
      height: 2,
      depth: 3,
      items: 4
    };
    range = allowZero ? [0, 1, 2, 3, 4] : [1, 2, 3, 4];
    if ((v = map[value]) != null) {
      value = v;
    }
    return {
      make: function() {
        return value;
      },
      validate: function(value, target, invalid) {
        var ref;
        if ((v = map[value]) != null) {
          value = v;
        }
        value = (ref = Math.round(value)) != null ? ref : 0;
        if (indexOf.call(range, value) >= 0) {
          return value;
        }
        return invalid();
      }
    };
  },
  transpose: function(order) {
    var axesArray, looseArray;
    if (order == null) {
      order = [1, 2, 3, 4];
    }
    looseArray = Types.letters(Types.axis(null, false), 0, order);
    axesArray = Types.letters(Types.axis(null, false), 4, order);
    return {
      make: function() {
        return axesArray.make();
      },
      validate: function(value, target, invalid) {
        var i, letter, missing, temp, unique;
        temp = [1, 2, 3, 4];
        looseArray.validate(value, temp, invalid);
        if (temp.length < 4) {
          missing = [1, 2, 3, 4].filter(function(x) {
            return temp.indexOf(x) === -1;
          });
          temp = temp.concat(missing);
        }
        unique = (function() {
          var j, len, results;
          results = [];
          for (i = j = 0, len = temp.length; j < len; i = ++j) {
            letter = temp[i];
            results.push(temp.indexOf(letter) === i);
          }
          return results;
        })();
        if (unique.indexOf(false) < 0) {
          return axesArray.validate(temp, target, invalid);
        }
        return invalid();
      },
      equals: axesArray.equals,
      clone: axesArray.clone
    };
  },
  swizzle: function(order, size) {
    var axesArray, looseArray;
    if (order == null) {
      order = [1, 2, 3, 4];
    }
    if (size == null) {
      size = null;
    }
    if (size == null) {
      size = order.length;
    }
    order = order.slice(0, size);
    looseArray = Types.letters(Types.axis(null, false), 0, order);
    axesArray = Types.letters(Types.axis(null, true), size, order);
    return {
      make: function() {
        return axesArray.make();
      },
      validate: function(value, target, invalid) {
        var temp;
        temp = order.slice();
        looseArray.validate(value, temp, invalid);
        if (temp.length < size) {
          temp = temp.concat([0, 0, 0, 0]).slice(0, size);
        }
        return axesArray.validate(temp, target, invalid);
      },
      equals: axesArray.equals,
      clone: axesArray.clone
    };
  },
  classes: function() {
    var stringArray;
    stringArray = Types.array(Types.string());
    return {
      make: function() {
        return stringArray.make();
      },
      validate: function(value, target, invalid) {
        if (value === "" + value) {
          value = value.split(' ');
        }
        value = value.filter(function(x) {
          return !!x.length;
        });
        return stringArray.validate(value, target, invalid);
      },
      equals: stringArray.equals,
      clone: stringArray.clone
    };
  },
  blending: function(value) {
    var keys;
    if (value == null) {
      value = 'normal';
    }
    keys = ['no', 'normal', 'add', 'subtract', 'multiply', 'custom'];
    return Types["enum"](value, keys);
  },
  filter: function(value) {
    var map;
    if (value == null) {
      value = 'nearest';
    }
    map = {
      nearest: THREE.NearestFilter,
      nearestMipMapNearest: THREE.NearestMipMapNearestFilter,
      nearestMipMapLinear: THREE.NearestMipMapLinearFilter,
      linear: THREE.LinearFilter,
      linearMipMapNearest: THREE.LinearMipMapNearestFilter,
      linearMipmapLinear: THREE.LinearMipMapLinearFilter
    };
    return Types["enum"](value, [], map);
  },
  type: function(value) {
    var map;
    if (value == null) {
      value = 'unsignedByte';
    }
    map = {
      unsignedByte: THREE.UnsignedByteType,
      byte: THREE.ByteType,
      short: THREE.ShortType,
      unsignedShort: THREE.UnsignedShortType,
      int: THREE.IntType,
      unsignedInt: THREE.UnsignedIntType,
      float: THREE.FloatType
    };
    return Types["enum"](value, [], map);
  },
  scale: function(value) {
    var keys;
    if (value == null) {
      value = 'linear';
    }
    keys = ['linear', 'log'];
    return Types["enum"](value, keys);
  },
  mapping: function(value) {
    var keys;
    if (value == null) {
      value = 'relative';
    }
    keys = ['relative', 'absolute'];
    return Types["enum"](value, keys);
  },
  indexing: function(value) {
    var keys;
    if (value == null) {
      value = 'original';
    }
    keys = ['original', 'final'];
    return Types["enum"](value, keys);
  },
  shape: function(value) {
    var keys;
    if (value == null) {
      value = 'circle';
    }
    keys = ['circle', 'square', 'diamond', 'up', 'down', 'left', 'right'];
    return Types["enum"](value, keys);
  },
  join: function(value) {
    var keys;
    if (value == null) {
      value = 'miter';
    }
    keys = ['miter', 'round', 'bevel'];
    return Types["enum"](value, keys);
  },
  stroke: function(value) {
    var keys;
    if (value == null) {
      value = 'solid';
    }
    keys = ['solid', 'dotted', 'dashed'];
    return Types["enum"](value, keys);
  },
  vertexPass: function(value) {
    var keys;
    if (value == null) {
      value = 'view';
    }
    keys = ['data', 'view', 'world', 'eye'];
    return Types["enum"](value, keys);
  },
  fragmentPass: function(value) {
    var keys;
    if (value == null) {
      value = 'light';
    }
    keys = ['color', 'light', 'rgba'];
    return Types["enum"](value, keys);
  },
  ease: function(value) {
    var keys;
    if (value == null) {
      value = 'linear';
    }
    keys = ['linear', 'cosine', 'binary', 'hold'];
    return Types["enum"](value, keys);
  },
  fit: function(value) {
    var keys;
    if (value == null) {
      value = 'contain';
    }
    keys = ['x', 'y', 'contain', 'cover'];
    return Types["enum"](value, keys);
  },
  anchor: function(value) {
    var map;
    if (value == null) {
      value = 'middle';
    }
    map = {
      first: 1,
      middle: 0,
      last: -1
    };
    return Types.enumber(value, [], map);
  },
  transitionState: function(value) {
    var map;
    if (value == null) {
      value = 'enter';
    }
    map = {
      enter: -1,
      visible: 0,
      exit: 1
    };
    return Types.enumber(value, [], map);
  },
  font: function(value) {
    var parse, stringArray;
    if (value == null) {
      value = 'sans-serif';
    }
    parse = Util.JS.parseQuoted;
    if (!(value instanceof Array)) {
      value = parse(value);
    }
    stringArray = Types.array(Types.string(), 0, value);
    return {
      make: function() {
        return stringArray.make();
      },
      validate: function(value, target, invalid) {
        try {
          if (!(value instanceof Array)) {
            value = parse(value);
          }
        } catch (error) {
          return invalid();
        }
        value = value.filter(function(x) {
          return !!x.length;
        });
        return stringArray.validate(value, target, invalid);
      },
      equals: stringArray.equals,
      clone: stringArray.clone
    };
  },
  data: function(value) {
    if (value == null) {
      value = [];
    }
    return {
      make: function() {
        return [];
      },
      validate: function(value, target, invalid) {
        if (value instanceof Array) {
          return value;
        } else if ((value != null ? value.length : void 0) != null) {
          return value;
        } else {
          return invalid();
        }
      },
      emitter: function(a, b) {
        return Util.Data.getLerpThunk(a, b);
      }
    };
  }
};

decorate = function(types) {
  var k, type;
  for (k in types) {
    type = types[k];
    types[k] = (function(type) {
      return function() {
        var t;
        t = type.apply(type, arguments);
        if (t.validate == null) {
          t.validate = function(v) {
            return v != null;
          };
        }
        if (t.equals == null) {
          t.equals = function(a, b) {
            return a === b;
          };
        }
        if (t.clone == null) {
          t.clone = function(v) {
            var ref;
            return (ref = v != null ? typeof v.clone === "function" ? v.clone() : void 0 : void 0) != null ? ref : v;
          };
        }
        return t;
      };
    })(type);
  }
  return types;
};

module.exports = decorate(Types);

//# sourceMappingURL=data:application/json;charset=utf-8;base64,

},{"../../util":175}],116:[function(require,module,exports){
var Cartesian, Util, View,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

View = require('./view');

Util = require('../../../util');

Cartesian = (function(superClass) {
  extend(Cartesian, superClass);

  function Cartesian() {
    return Cartesian.__super__.constructor.apply(this, arguments);
  }

  Cartesian.traits = ['node', 'object', 'visible', 'view', 'view3', 'vertex'];

  Cartesian.prototype.make = function() {
    Cartesian.__super__.make.apply(this, arguments);
    this.uniforms = {
      viewMatrix: this._attributes.make(this._types.mat4())
    };
    this.viewMatrix = this.uniforms.viewMatrix.value;
    return this.composer = Util.Three.transformComposer();
  };

  Cartesian.prototype.unmake = function() {
    Cartesian.__super__.unmake.apply(this, arguments);
    delete this.viewMatrix;
    delete this.objectMatrix;
    return delete this.uniforms;
  };

  Cartesian.prototype.change = function(changed, touched, init) {
    var dx, dy, dz, e, g, p, q, r, s, sx, sy, sz, transformMatrix, x, y, z;
    if (!(touched['view'] || touched['view3'] || init)) {
      return;
    }
    p = this.props.position;
    s = this.props.scale;
    q = this.props.quaternion;
    r = this.props.rotation;
    g = this.props.range;
    e = this.props.eulerOrder;
    x = g[0].x;
    y = g[1].x;
    z = g[2].x;
    dx = (g[0].y - x) || 1;
    dy = (g[1].y - y) || 1;
    dz = (g[2].y - z) || 1;
    sx = s.x;
    sy = s.y;
    sz = s.z;
    this.viewMatrix.set(2 / dx, 0, 0, -(2 * x + dx) / dx, 0, 2 / dy, 0, -(2 * y + dy) / dy, 0, 0, 2 / dz, -(2 * z + dz) / dz, 0, 0, 0, 1);
    transformMatrix = this.composer(p, r, q, s, null, e);
    this.viewMatrix.multiplyMatrices(transformMatrix, this.viewMatrix);
    if (changed['view.range']) {
      return this.trigger({
        type: 'view.range'
      });
    }
  };

  Cartesian.prototype.vertex = function(shader, pass) {
    if (pass === 1) {
      shader.pipe('cartesian.position', this.uniforms);
    }
    return Cartesian.__super__.vertex.call(this, shader, pass);
  };

  return Cartesian;

})(View);

module.exports = Cartesian;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx2aWV3XFxjYXJ0ZXNpYW4uY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx2aWV3XFxjYXJ0ZXNpYW4uY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEscUJBQUE7RUFBQTs7O0FBQUEsSUFBQSxHQUFPLE9BQUEsQ0FBUSxRQUFSOztBQUNQLElBQUEsR0FBTyxPQUFBLENBQVEsZUFBUjs7QUFFRDs7Ozs7OztFQUNKLFNBQUMsQ0FBQSxNQUFELEdBQVUsQ0FBQyxNQUFELEVBQVMsUUFBVCxFQUFtQixTQUFuQixFQUE4QixNQUE5QixFQUFzQyxPQUF0QyxFQUErQyxRQUEvQzs7c0JBRVYsSUFBQSxHQUFNLFNBQUE7SUFDSixxQ0FBQSxTQUFBO0lBRUEsSUFBQyxDQUFBLFFBQUQsR0FDRTtNQUFBLFVBQUEsRUFBcUIsSUFBQyxDQUFBLFdBQVcsQ0FBQyxJQUFiLENBQWtCLElBQUMsQ0FBQSxNQUFNLENBQUMsSUFBUixDQUFBLENBQWxCLENBQXJCOztJQUVGLElBQUMsQ0FBQSxVQUFELEdBQWMsSUFBQyxDQUFBLFFBQVEsQ0FBQyxVQUFVLENBQUM7V0FDbkMsSUFBQyxDQUFBLFFBQUQsR0FBYyxJQUFJLENBQUMsS0FBSyxDQUFDLGlCQUFYLENBQUE7RUFQVjs7c0JBU04sTUFBQSxHQUFRLFNBQUE7SUFDTix1Q0FBQSxTQUFBO0lBRUEsT0FBTyxJQUFDLENBQUE7SUFDUixPQUFPLElBQUMsQ0FBQTtXQUNSLE9BQU8sSUFBQyxDQUFBO0VBTEY7O3NCQU9SLE1BQUEsR0FBUSxTQUFDLE9BQUQsRUFBVSxPQUFWLEVBQW1CLElBQW5CO0FBRU4sUUFBQTtJQUFBLElBQUEsQ0FBQSxDQUFjLE9BQVEsQ0FBQSxNQUFBLENBQVIsSUFBbUIsT0FBUSxDQUFBLE9BQUEsQ0FBM0IsSUFBdUMsSUFBckQsQ0FBQTtBQUFBLGFBQUE7O0lBRUEsQ0FBQSxHQUFJLElBQUMsQ0FBQSxLQUFLLENBQUM7SUFDWCxDQUFBLEdBQUksSUFBQyxDQUFBLEtBQUssQ0FBQztJQUNYLENBQUEsR0FBSSxJQUFDLENBQUEsS0FBSyxDQUFDO0lBQ1gsQ0FBQSxHQUFJLElBQUMsQ0FBQSxLQUFLLENBQUM7SUFDWCxDQUFBLEdBQUksSUFBQyxDQUFBLEtBQUssQ0FBQztJQUNYLENBQUEsR0FBSSxJQUFDLENBQUEsS0FBSyxDQUFDO0lBRVgsQ0FBQSxHQUFJLENBQUUsQ0FBQSxDQUFBLENBQUUsQ0FBQztJQUNULENBQUEsR0FBSSxDQUFFLENBQUEsQ0FBQSxDQUFFLENBQUM7SUFDVCxDQUFBLEdBQUksQ0FBRSxDQUFBLENBQUEsQ0FBRSxDQUFDO0lBQ1QsRUFBQSxHQUFLLENBQUMsQ0FBRSxDQUFBLENBQUEsQ0FBRSxDQUFDLENBQUwsR0FBUyxDQUFWLENBQUEsSUFBZ0I7SUFDckIsRUFBQSxHQUFLLENBQUMsQ0FBRSxDQUFBLENBQUEsQ0FBRSxDQUFDLENBQUwsR0FBUyxDQUFWLENBQUEsSUFBZ0I7SUFDckIsRUFBQSxHQUFLLENBQUMsQ0FBRSxDQUFBLENBQUEsQ0FBRSxDQUFDLENBQUwsR0FBUyxDQUFWLENBQUEsSUFBZ0I7SUFDckIsRUFBQSxHQUFLLENBQUMsQ0FBQztJQUNQLEVBQUEsR0FBSyxDQUFDLENBQUM7SUFDUCxFQUFBLEdBQUssQ0FBQyxDQUFDO0lBR1AsSUFBQyxDQUFBLFVBQVUsQ0FBQyxHQUFaLENBQ0UsQ0FBQSxHQUFFLEVBREosRUFDUSxDQURSLEVBQ1csQ0FEWCxFQUNjLENBQUMsQ0FBQyxDQUFBLEdBQUUsQ0FBRixHQUFJLEVBQUwsQ0FBRCxHQUFVLEVBRHhCLEVBRUUsQ0FGRixFQUVLLENBQUEsR0FBRSxFQUZQLEVBRVcsQ0FGWCxFQUVjLENBQUMsQ0FBQyxDQUFBLEdBQUUsQ0FBRixHQUFJLEVBQUwsQ0FBRCxHQUFVLEVBRnhCLEVBR0UsQ0FIRixFQUdLLENBSEwsRUFHUSxDQUFBLEdBQUUsRUFIVixFQUdjLENBQUMsQ0FBQyxDQUFBLEdBQUUsQ0FBRixHQUFJLEVBQUwsQ0FBRCxHQUFVLEVBSHhCLEVBSUUsQ0FKRixFQUlLLENBSkwsRUFJUSxDQUpSLEVBSVcsQ0FKWDtJQU9BLGVBQUEsR0FBa0IsSUFBQyxDQUFBLFFBQUQsQ0FBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQixFQUFtQixDQUFuQixFQUFzQixJQUF0QixFQUE0QixDQUE1QjtJQUNsQixJQUFDLENBQUEsVUFBVSxDQUFDLGdCQUFaLENBQTZCLGVBQTdCLEVBQThDLElBQUMsQ0FBQSxVQUEvQztJQUVBLElBQUcsT0FBUSxDQUFBLFlBQUEsQ0FBWDthQUNFLElBQUMsQ0FBQSxPQUFELENBQ0U7UUFBQSxJQUFBLEVBQU0sWUFBTjtPQURGLEVBREY7O0VBaENNOztzQkFvQ1IsTUFBQSxHQUFRLFNBQUMsTUFBRCxFQUFTLElBQVQ7SUFDTixJQUErQyxJQUFBLEtBQVEsQ0FBdkQ7TUFBQSxNQUFNLENBQUMsSUFBUCxDQUFZLG9CQUFaLEVBQWtDLElBQUMsQ0FBQSxRQUFuQyxFQUFBOztXQUNBLHNDQUFNLE1BQU4sRUFBYyxJQUFkO0VBRk07Ozs7R0F2RGM7O0FBMkR4QixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"../../../util":175,"./view":122}],117:[function(require,module,exports){
var Cartesian4, View,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

View = require('./view');

Cartesian4 = (function(superClass) {
  extend(Cartesian4, superClass);

  function Cartesian4() {
    return Cartesian4.__super__.constructor.apply(this, arguments);
  }

  Cartesian4.traits = ['node', 'object', 'visible', 'view', 'view4', 'vertex'];

  Cartesian4.prototype.make = function() {
    Cartesian4.__super__.make.apply(this, arguments);
    this.uniforms = {
      basisOffset: this._attributes.make(this._types.vec4()),
      basisScale: this._attributes.make(this._types.vec4())
    };
    this.basisScale = this.uniforms.basisScale.value;
    return this.basisOffset = this.uniforms.basisOffset.value;
  };

  Cartesian4.prototype.unmake = function() {
    Cartesian4.__super__.unmake.apply(this, arguments);
    delete this.basisScale;
    delete this.basisOffset;
    return delete this.uniforms;
  };

  Cartesian4.prototype.change = function(changed, touched, init) {
    var dw, dx, dy, dz, g, mult, p, s, w, x, y, z;
    if (!(touched['view'] || touched['view4'] || init)) {
      return;
    }
    p = this.props.position;
    s = this.props.scale;
    g = this.props.range;
    x = g[0].x;
    y = g[1].x;
    z = g[2].x;
    w = g[3].x;
    dx = (g[0].y - x) || 1;
    dy = (g[1].y - y) || 1;
    dz = (g[2].y - z) || 1;
    dw = (g[3].y - w) || 1;
    mult = function(a, b) {
      a.x *= b.x;
      a.y *= b.y;
      a.z *= b.z;
      return a.w *= b.w;
    };
    this.basisScale.set(2 / dx, 2 / dy, 2 / dz, 2 / dw);
    this.basisOffset.set(-(2 * x + dx) / dx, -(2 * y + dy) / dy, -(2 * z + dz) / dz, -(2 * w + dw) / dw);
    mult(this.basisScale, s);
    mult(this.basisOffset, s);
    this.basisOffset.add(p);
    if (changed['view.range']) {
      return this.trigger({
        type: 'view.range'
      });
    }
  };

  Cartesian4.prototype.vertex = function(shader, pass) {
    if (pass === 1) {
      shader.pipe('cartesian4.position', this.uniforms);
    }
    return Cartesian4.__super__.vertex.call(this, shader, pass);
  };

  return Cartesian4;

})(View);

module.exports = Cartesian4;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx2aWV3XFxjYXJ0ZXNpYW40LmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxwcmltaXRpdmVzXFx0eXBlc1xcdmlld1xcY2FydGVzaWFuNC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxnQkFBQTtFQUFBOzs7QUFBQSxJQUFBLEdBQU8sT0FBQSxDQUFRLFFBQVI7O0FBRUQ7Ozs7Ozs7RUFDSixVQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLFFBQVQsRUFBbUIsU0FBbkIsRUFBOEIsTUFBOUIsRUFBc0MsT0FBdEMsRUFBK0MsUUFBL0M7O3VCQUVWLElBQUEsR0FBTSxTQUFBO0lBQ0osc0NBQUEsU0FBQTtJQUVBLElBQUMsQ0FBQSxRQUFELEdBQ0U7TUFBQSxXQUFBLEVBQXFCLElBQUMsQ0FBQSxXQUFXLENBQUMsSUFBYixDQUFrQixJQUFDLENBQUEsTUFBTSxDQUFDLElBQVIsQ0FBQSxDQUFsQixDQUFyQjtNQUNBLFVBQUEsRUFBcUIsSUFBQyxDQUFBLFdBQVcsQ0FBQyxJQUFiLENBQWtCLElBQUMsQ0FBQSxNQUFNLENBQUMsSUFBUixDQUFBLENBQWxCLENBRHJCOztJQUdGLElBQUMsQ0FBQSxVQUFELEdBQXVCLElBQUMsQ0FBQSxRQUFRLENBQUMsVUFBVSxDQUFDO1dBQzVDLElBQUMsQ0FBQSxXQUFELEdBQXVCLElBQUMsQ0FBQSxRQUFRLENBQUMsV0FBVyxDQUFDO0VBUnpDOzt1QkFVTixNQUFBLEdBQVEsU0FBQTtJQUNOLHdDQUFBLFNBQUE7SUFDQSxPQUFPLElBQUMsQ0FBQTtJQUNSLE9BQU8sSUFBQyxDQUFBO1dBQ1IsT0FBTyxJQUFDLENBQUE7RUFKRjs7dUJBTVIsTUFBQSxHQUFRLFNBQUMsT0FBRCxFQUFV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

},{"./view":122}],118:[function(require,module,exports){
var Polar, Util, View,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

View = require('./view');

Util = require('../../../util');

Polar = (function(superClass) {
  extend(Polar, superClass);

  function Polar() {
    return Polar.__super__.constructor.apply(this, arguments);
  }

  Polar.traits = ['node', 'object', 'visible', 'view', 'view3', 'polar', 'vertex'];

  Polar.prototype.make = function() {
    var types;
    Polar.__super__.make.apply(this, arguments);
    types = this._attributes.types;
    this.uniforms = {
      polarBend: this.node.attributes['polar.bend'],
      polarHelix: this.node.attributes['polar.helix'],
      polarFocus: this._attributes.make(types.number()),
      polarAspect: this._attributes.make(types.number()),
      viewMatrix: this._attributes.make(types.mat4())
    };
    this.viewMatrix = this.uniforms.viewMatrix.value;
    this.composer = Util.Three.transformComposer();
    return this.aspect = 1;
  };

  Polar.prototype.unmake = function() {
    Polar.__super__.unmake.apply(this, arguments);
    delete this.viewMatrix;
    delete this.objectMatrix;
    delete this.aspect;
    return delete this.uniforms;
  };

  Polar.prototype.change = function(changed, touched, init) {
    var ady, aspect, bend, dx, dy, dz, e, fdx, focus, g, helix, idx, p, q, r, ref, s, sdx, sdy, sx, sy, sz, transformMatrix, x, y, z;
    if (!(touched['view'] || touched['view3'] || touched['polar'] || init)) {
      return;
    }
    this.helix = helix = this.props.helix;
    this.bend = bend = this.props.bend;
    this.focus = focus = bend > 0 ? 1 / bend - 1 : 0;
    p = this.props.position;
    s = this.props.scale;
    q = this.props.quaternion;
    r = this.props.rotation;
    g = this.props.range;
    e = this.props.eulerOrder;
    x = g[0].x;
    y = g[1].x;
    z = g[2].x;
    dx = (g[0].y - x) || 1;
    dy = (g[1].y - y) || 1;
    dz = (g[2].y - z) || 1;
    sx = s.x;
    sy = s.y;
    sz = s.z;
    idx = dx > 0 ? 1 : -1;
    ref = Util.Axis.recenterAxis(y, dy, bend), y = ref[0], dy = ref[1];
    ady = Math.abs(dy);
    fdx = dx + (ady * idx - dx) * bend;
    sdx = fdx / sx;
    sdy = dy / sy;
    this.aspect = aspect = Math.abs(sdx / sdy);
    this.uniforms.polarFocus.value = focus;
    this.uniforms.polarAspect.value = aspect;
    this.viewMatrix.set(2 / fdx, 0, 0, -(2 * x + dx) / dx, 0, 2 / dy, 0, -(2 * y + dy) / dy, 0, 0, 2 / dz, -(2 * z + dz) / dz, 0, 0, 0, 1);
    transformMatrix = this.composer(p, r, q, s, null, e);
    this.viewMatrix.multiplyMatrices(transformMatrix, this.viewMatrix);
    if (changed['view.range'] || touched['polar']) {
      return this.trigger({
        type: 'view.range'
      });
    }
  };

  Polar.prototype.vertex = function(shader, pass) {
    if (pass === 1) {
      shader.pipe('polar.position', this.uniforms);
    }
    return Polar.__super__.vertex.call(this, shader, pass);
  };

  Polar.prototype.axis = function(dimension) {
    var max, min, range;
    range = this.props.range[dimension - 1];
    min = range.x;
    max = range.y;
    if (dimension === 2 && this.bend > 0) {
      max = Math.max(Math.abs(max), Math.abs(min));
      min = Math.max(-this.focus / this.aspect, min);
    }
    return new THREE.Vector2(min, max);
  };

  return Polar;

})(View);

module.exports = Polar;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx2aWV3XFxwb2xhci5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccHJpbWl0aXZlc1xcdHlwZXNcXHZpZXdcXHBvbGFyLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLGlCQUFBO0VBQUE7OztBQUFBLElBQUEsR0FBTyxPQUFBLENBQVEsUUFBUjs7QUFDUCxJQUFBLEdBQU8sT0FBQSxDQUFRLGVBQVI7O0FBRUQ7Ozs7Ozs7RUFDSixLQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLFFBQVQsRUFBbUIsU0FBbkIsRUFBOEIsTUFBOUIsRUFBc0MsT0FBdEMsRUFBK0MsT0FBL0MsRUFBd0QsUUFBeEQ7O2tCQUVWLElBQUEsR0FBTSxTQUFBO0FBQ0osUUFBQTtJQUFBLGlDQUFBLFNBQUE7SUFFQSxLQUFBLEdBQVEsSUFBQyxDQUFBLFdBQVcsQ0FBQztJQUNyQixJQUFDLENBQUEsUUFBRCxHQUNFO01BQUEsU0FBQSxFQUFhLElBQUMsQ0FBQSxJQUFJLENBQUMsVUFBVyxDQUFBLFlBQUEsQ0FBOUI7TUFDQSxVQUFBLEVBQWEsSUFBQyxDQUFBLElBQUksQ0FBQyxVQUFXLENBQUEsYUFBQSxDQUQ5QjtNQUVBLFVBQUEsRUFBYSxJQUFDLENBQUEsV0FBVyxDQUFDLElBQWIsQ0FBa0IsS0FBSyxDQUFDLE1BQU4sQ0FBQSxDQUFsQixDQUZiO01BR0EsV0FBQSxFQUFhLElBQUMsQ0FBQSxXQUFXLENBQUMsSUFBYixDQUFrQixLQUFLLENBQUMsTUFBTixDQUFBLENBQWxCLENBSGI7TUFJQSxVQUFBLEVBQWEsSUFBQyxDQUFBLFdBQVcsQ0FBQyxJQUFiLENBQWtCLEtBQUssQ0FBQyxJQUFOLENBQUEsQ0FBbEIsQ0FKYjs7SUFNRixJQUFD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

},{"../../../util":175,"./view":122}],119:[function(require,module,exports){
var Spherical, Util, View,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

View = require('./view');

Util = require('../../../util');

Spherical = (function(superClass) {
  extend(Spherical, superClass);

  function Spherical() {
    return Spherical.__super__.constructor.apply(this, arguments);
  }

  Spherical.traits = ['node', 'object', 'visible', 'view', 'view3', 'spherical', 'vertex'];

  Spherical.prototype.make = function() {
    var types;
    Spherical.__super__.make.apply(this, arguments);
    types = this._attributes.types;
    this.uniforms = {
      sphericalBend: this.node.attributes['spherical.bend'],
      sphericalFocus: this._attributes.make(this._types.number()),
      sphericalAspectX: this._attributes.make(this._types.number()),
      sphericalAspectY: this._attributes.make(this._types.number()),
      sphericalScaleY: this._attributes.make(this._types.number()),
      viewMatrix: this._attributes.make(this._types.mat4())
    };
    this.viewMatrix = this.uniforms.viewMatrix.value;
    this.composer = Util.Three.transformComposer();
    this.aspectX = 1;
    return this.aspectY = 1;
  };

  Spherical.prototype.unmake = function() {
    Spherical.__super__.unmake.apply(this, arguments);
    delete this.viewMatrix;
    delete this.objectMatrix;
    delete this.aspectX;
    delete this.aspectY;
    return delete this.uniforms;
  };

  Spherical.prototype.change = function(changed, touched, init) {
    var adz, aspectX, aspectY, aspectZ, bend, dx, dy, dz, e, fdx, fdy, focus, g, idx, idy, p, q, r, ref, ref1, s, scaleY, sdx, sdy, sdz, sx, sy, sz, transformMatrix, x, y, z;
    if (!(touched['view'] || touched['view3'] || touched['spherical'] || init)) {
      return;
    }
    this.bend = bend = this.props.bend;
    this.focus = focus = bend > 0 ? 1 / bend - 1 : 0;
    p = this.props.position;
    s = this.props.scale;
    q = this.props.quaternion;
    r = this.props.rotation;
    g = this.props.range;
    e = this.props.eulerOrder;
    x = g[0].x;
    y = g[1].x;
    z = g[2].x;
    dx = (g[0].y - x) || 1;
    dy = (g[1].y - y) || 1;
    dz = (g[2].y - z) || 1;
    sx = s.x;
    sy = s.y;
    sz = s.z;
    ref = Util.Axis.recenterAxis(y, dy, bend), y = ref[0], dy = ref[1];
    ref1 = Util.Axis.recenterAxis(z, dz, bend), z = ref1[0], dz = ref1[1];
    idx = dx > 0 ? 1 : -1;
    idy = dy > 0 ? 1 : -1;
    adz = Math.abs(dz);
    fdx = dx + (adz * idx - dx) * bend;
    fdy = dy + (adz * idy - dy) * bend;
    sdx = fdx / sx;
    sdy = fdy / sy;
    sdz = dz / sz;
    this.aspectX = aspectX = Math.abs(sdx / sdz);
    this.aspectY = aspectY = Math.abs(sdy / sdz / aspectX);
    aspectZ = dy / dx * sx / sy * 2;
    this.scaleY = scaleY = Math.min(aspectY / bend, 1 + (aspectZ - 1) * bend);
    this.uniforms.sphericalBend.value = bend;
    this.uniforms.sphericalFocus.value = focus;
    this.uniforms.sphericalAspectX.value = aspectX;
    this.uniforms.sphericalAspectY.value = aspectY;
    this.uniforms.sphericalScaleY.value = scaleY;
    this.viewMatrix.set(2 / fdx, 0, 0, -(2 * x + dx) / dx, 0, 2 / fdy, 0, -(2 * y + dy) / dy, 0, 0, 2 / dz, -(2 * z + dz) / dz, 0, 0, 0, 1);
    transformMatrix = this.composer(p, r, q, s, null, e);
    this.viewMatrix.multiplyMatrices(transformMatrix, this.viewMatrix);
    if (changed['view.range'] || touched['spherical']) {
      return this.trigger({
        type: 'view.range'
      });
    }
  };

  Spherical.prototype.vertex = function(shader, pass) {
    if (pass === 1) {
      shader.pipe('spherical.position', this.uniforms);
    }
    return Spherical.__super__.vertex.call(this, shader, pass);
  };

  Spherical.prototype.axis = function(dimension) {
    var max, min, range;
    range = this.props.range[dimension - 1];
    min = range.x;
    max = range.y;
    if (dimension === 3 && this.bend > 0) {
      max = Math.max(Math.abs(max), Math.abs(min));
      min = Math.max(-this.focus / this.aspectX + .001, min);
    }
    return new THREE.Vector2(min, max);
  };

  return Spherical;

})(View);

module.exports = Spherical;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx2aWV3XFxzcGhlcmljYWwuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx2aWV3XFxzcGhlcmljYWwuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEscUJBQUE7RUFBQTs7O0FBQUEsSUFBQSxHQUFPLE9BQUEsQ0FBUSxRQUFSOztBQUNQLElBQUEsR0FBTyxPQUFBLENBQVEsZUFBUjs7QUFFRDs7Ozs7OztFQUNKLFNBQUMsQ0FBQSxNQUFELEdBQVUsQ0FBQyxNQUFELEVBQVMsUUFBVCxFQUFtQixTQUFuQixFQUE4QixNQUE5QixFQUFzQyxPQUF0QyxFQUErQyxXQUEvQyxFQUE0RCxRQUE1RDs7c0JBRVYsSUFBQSxHQUFNLFNBQUE7QUFDSixRQUFBO0lBQUEscUNBQUEsU0FBQTtJQUVBLEtBQUEsR0FBUSxJQUFDLENBQUEsV0FBVyxDQUFDO0lBQ3JCLElBQUMsQ0FBQSxRQUFELEdBQ0U7TUFBQSxhQUFBLEVBQWtCLElBQUMsQ0FBQSxJQUFJLENBQUMsVUFBVyxDQUFBLGdCQUFBLENBQW5DO01BQ0EsY0FBQSxFQUFrQixJQUFDLENBQUEsV0FBVyxDQUFDLElBQWIsQ0FBa0IsSUFBQyxDQUFBLE1BQU0sQ0FBQyxNQUFSLENBQUEsQ0FBbEIsQ0FEbEI7TUFFQSxnQkFBQSxFQUFrQixJQUFDLENBQUEsV0FBVyxDQUFDLElBQWIsQ0FBa0IsSUFBQyxDQUFBLE1BQU0sQ0FBQyxNQUFSLENBQUEsQ0FBbEIsQ0FGbEI7TUFHQSxnQkFBQSxFQUFrQixJQUFDLENBQUEsV0FBVyxDQUFDLElBQWIsQ0FBa0IsSUFBQyxDQUFBLE1BQU0sQ0FBQyxNQUFSLENBQUEsQ0FBbEIsQ0FIbEI7TUFJQSxlQUFBLEVBQWtCLElB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

},{"../../../util":175,"./view":122}],120:[function(require,module,exports){
var Stereographic, Util, View,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

View = require('./view');

Util = require('../../../util');

Stereographic = (function(superClass) {
  extend(Stereographic, superClass);

  function Stereographic() {
    return Stereographic.__super__.constructor.apply(this, arguments);
  }

  Stereographic.traits = ['node', 'object', 'visible', 'view', 'view3', 'stereographic', 'vertex'];

  Stereographic.prototype.make = function() {
    var types;
    Stereographic.__super__.make.apply(this, arguments);
    types = this._attributes.types;
    this.uniforms = {
      stereoBend: this.node.attributes['stereographic.bend'],
      viewMatrix: this._attributes.make(this._types.mat4())
    };
    this.viewMatrix = this.uniforms.viewMatrix.value;
    return this.composer = Util.Three.transformComposer();
  };

  Stereographic.prototype.unmake = function() {
    Stereographic.__super__.unmake.apply(this, arguments);
    delete this.viewMatrix;
    delete this.rotationMatrix;
    return delete this.uniforms;
  };

  Stereographic.prototype.change = function(changed, touched, init) {
    var bend, dx, dy, dz, e, g, p, q, r, ref, s, sx, sy, sz, transformMatrix, x, y, z;
    if (!(touched['view'] || touched['view3'] || touched['stereographic'] || init)) {
      return;
    }
    this.bend = bend = this.props.bend;
    p = this.props.position;
    s = this.props.scale;
    q = this.props.quaternion;
    r = this.props.rotation;
    g = this.props.range;
    e = this.props.eulerOrder;
    x = g[0].x;
    y = g[1].x;
    z = g[2].x;
    dx = (g[0].y - x) || 1;
    dy = (g[1].y - y) || 1;
    dz = (g[2].y - z) || 1;
    sx = s.x;
    sy = s.y;
    sz = s.z;
    ref = Util.Axis.recenterAxis(z, dz, bend, 1), z = ref[0], dz = ref[1];
    this.uniforms.stereoBend.value = bend;
    this.viewMatrix.set(2 / dx, 0, 0, -(2 * x + dx) / dx, 0, 2 / dy, 0, -(2 * y + dy) / dy, 0, 0, 2 / dz, -(2 * z + dz) / dz, 0, 0, 0, 1);
    transformMatrix = this.composer(p, r, q, s, null, e);
    this.viewMatrix.multiplyMatrices(transformMatrix, this.viewMatrix);
    if (changed['view.range'] || touched['stereographic']) {
      return this.trigger({
        type: 'view.range'
      });
    }
  };

  Stereographic.prototype.vertex = function(shader, pass) {
    if (pass === 1) {
      shader.pipe('stereographic.position', this.uniforms);
    }
    return Stereographic.__super__.vertex.call(this, shader, pass);
  };

  return Stereographic;

})(View);

module.exports = Stereographic;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx2aWV3XFxzdGVyZW9ncmFwaGljLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxwcmltaXRpdmVzXFx0eXBlc1xcdmlld1xcc3RlcmVvZ3JhcGhpYy5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSx5QkFBQTtFQUFBOzs7QUFBQSxJQUFBLEdBQU8sT0FBQSxDQUFRLFFBQVI7O0FBQ1AsSUFBQSxHQUFPLE9BQUEsQ0FBUSxlQUFSOztBQUVEOzs7Ozs7O0VBQ0osYUFBQyxDQUFBLE1BQUQsR0FBVSxDQUFDLE1BQUQsRUFBUyxRQUFULEVBQW1CLFNBQW5CLEVBQThCLE1BQTlCLEVBQXNDLE9BQXRDLEVBQStDLGVBQS9DLEVBQWdFLFFBQWhFOzswQkFFVixJQUFBLEdBQU0sU0FBQTtBQUNKLFFBQUE7SUFBQSx5Q0FBQSxTQUFBO0lBRUEsS0FBQSxHQUFRLElBQUMsQ0FBQSxXQUFXLENBQUM7SUFDckIsSUFBQyxDQUFBLFFBQUQsR0FDRTtNQUFBLFVBQUEsRUFBZ0IsSUFBQyxDQUFBLElBQUksQ0FBQyxVQUFXLENBQUEsb0JBQUEsQ0FBakM7TUFDQSxVQUFBLEVBQWdCLElBQUMsQ0FBQSxXQUFXLENBQUMsSUFBYixDQUFrQixJQUFDLENBQUEsTUFBTSxDQUFDLElBQVIsQ0FBQSxDQUFsQixDQURoQjs7SUFHRixJQUFDLENBQUEsVUFBRCxHQUFjLElBQUMsQ0FBQSxRQUFRLENBQUMsVUFBVSxDQUFDO1dBQ25DLElBQUMsQ0FBQSxRQUFELEdBQWMsSUFBSSxDQUFDLEtBQUssQ0FBQyxpQkFBWCxDQUFBO0VBVFY7OzBCQVdOLE1BQUEsR0FBUSxTQUFBO0lBQ04sMkNBQUEsU0FBQTtJQUVBLE9BQU8sSUFBQyxDQUFBO0lBQ1IsT0FBTyxJQUFD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

},{"../../../util":175,"./view":122}],121:[function(require,module,exports){
var Stereographic4, Util, View,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

View = require('./view');

Util = require('../../../util');

Stereographic4 = (function(superClass) {
  extend(Stereographic4, superClass);

  function Stereographic4() {
    return Stereographic4.__super__.constructor.apply(this, arguments);
  }

  Stereographic4.traits = ['node', 'object', 'visible', 'view', 'view4', 'stereographic', 'vertex'];

  Stereographic4.prototype.make = function() {
    Stereographic4.__super__.make.apply(this, arguments);
    this.uniforms = {
      basisOffset: this._attributes.make(this._types.vec4()),
      basisScale: this._attributes.make(this._types.vec4()),
      stereoBend: this.node.attributes['stereographic.bend']
    };
    this.basisScale = this.uniforms.basisScale.value;
    return this.basisOffset = this.uniforms.basisOffset.value;
  };

  Stereographic4.prototype.unmake = function() {
    Stereographic4.__super__.unmake.apply(this, arguments);
    delete this.basisScale;
    delete this.basisOffset;
    return delete this.uniforms;
  };

  Stereographic4.prototype.change = function(changed, touched, init) {
    var bend, dw, dx, dy, dz, g, mult, p, ref, s, w, x, y, z;
    if (!(touched['view'] || touched['view4'] || touched['stereographic'] || init)) {
      return;
    }
    this.bend = bend = this.props.bend;
    p = this.props.position;
    s = this.props.scale;
    g = this.props.range;
    x = g[0].x;
    y = g[1].x;
    z = g[2].x;
    w = g[3].x;
    dx = (g[0].y - x) || 1;
    dy = (g[1].y - y) || 1;
    dz = (g[2].y - z) || 1;
    dw = (g[3].y - w) || 1;
    mult = function(a, b) {
      a.x *= b.x;
      a.y *= b.y;
      a.z *= b.z;
      return a.w *= b.w;
    };
    ref = Util.Axis.recenterAxis(w, dw, bend, 1), w = ref[0], dw = ref[1];
    this.basisScale.set(2 / dx, 2 / dy, 2 / dz, 2 / dw);
    this.basisOffset.set(-(2 * x + dx) / dx, -(2 * y + dy) / dy, -(2 * z + dz) / dz, -(2 * w + dw) / dw);
    mult(this.basisScale, s);
    mult(this.basisOffset, s);
    this.basisOffset.add(p);
    if (changed['view.range'] || touched['stereographic']) {
      return this.trigger({
        type: 'view.range'
      });
    }
  };

  Stereographic4.prototype.vertex = function(shader, pass) {
    if (pass === 1) {
      shader.pipe('stereographic4.position', this.uniforms);
    }
    return Stereographic4.__super__.vertex.call(this, shader, pass);
  };

  return Stereographic4;

})(View);

module.exports = Stereographic4;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx2aWV3XFxzdGVyZW9ncmFwaGljNC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccHJpbWl0aXZlc1xcdHlwZXNcXHZpZXdcXHN0ZXJlb2dyYXBoaWM0LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLDBCQUFBO0VBQUE7OztBQUFBLElBQUEsR0FBTyxPQUFBLENBQVEsUUFBUjs7QUFDUCxJQUFBLEdBQU8sT0FBQSxDQUFRLGVBQVI7O0FBRUQ7Ozs7Ozs7RUFDSixjQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLFFBQVQsRUFBbUIsU0FBbkIsRUFBOEIsTUFBOUIsRUFBc0MsT0FBdEMsRUFBK0MsZUFBL0MsRUFBZ0UsUUFBaEU7OzJCQUVWLElBQUEsR0FBTSxTQUFBO0lBQ0osMENBQUEsU0FBQTtJQUVBLElBQUMsQ0FBQSxRQUFELEdBQ0U7TUFBQSxXQUFBLEVBQXFCLElBQUMsQ0FBQSxXQUFXLENBQUMsSUFBYixDQUFrQixJQUFDLENBQUEsTUFBTSxDQUFDLElBQVIsQ0FBQSxDQUFsQixDQUFyQjtNQUNBLFVBQUEsRUFBcUIsSUFBQyxDQUFBLFdBQVcsQ0FBQyxJQUFiLENBQWtCLElBQUMsQ0FBQSxNQUFNLENBQUMsSUFBUixDQUFBLENBQWxCLENBRHJCO01BRUEsVUFBQSxFQUFxQixJQUFDLENBQUEsSUFBSSxDQUFDLFVBQVcsQ0FBQSxvQkFBQSxDQUZ0Qzs7SUFJRixJQUFDLENBQUEsVUFBRCxHQUF1QixJQUFDLENBQUEsUUFBUSxDQUFDLFVBQVUsQ0FBQztXQUM1QyxJQUFDLENBQUEsV0FBRCxHQUF1QixJQUFDLENBQUEsUUFBUSxDQUFDLFdBQVcsQ0FBQztFQVR6Qzs7MkJBV04sTUFBQSxHQUFRLFNBQUE7SUFD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

},{"../../../util":175,"./view":122}],122:[function(require,module,exports){
var Transform, View,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Transform = require('../transform/transform');

View = (function(superClass) {
  extend(View, superClass);

  function View() {
    return View.__super__.constructor.apply(this, arguments);
  }

  View.traits = ['node', 'object', 'visible', 'view', 'vertex'];

  View.prototype.make = function() {
    return this._helpers.visible.make();
  };

  View.prototype.unmake = function() {
    return this._helpers.visible.unmake();
  };

  View.prototype.axis = function(dimension) {
    return this.props.range[dimension - 1];
  };

  return View;

})(Transform);

module.exports = View;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHByaW1pdGl2ZXNcXHR5cGVzXFx2aWV3XFx2aWV3LmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxwcmltaXRpdmVzXFx0eXBlc1xcdmlld1xcdmlldy5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxlQUFBO0VBQUE7OztBQUFBLFNBQUEsR0FBWSxPQUFBLENBQVEsd0JBQVI7O0FBRU47Ozs7Ozs7RUFDSixJQUFDLENBQUEsTUFBRCxHQUFVLENBQUMsTUFBRCxFQUFTLFFBQVQsRUFBbUIsU0FBbkIsRUFBOEIsTUFBOUIsRUFBc0MsUUFBdEM7O2lCQUVWLElBQUEsR0FBTSxTQUFBO1dBQ0osSUFBQyxDQUFBLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBbEIsQ0FBQTtFQURJOztpQkFHTixNQUFBLEdBQVEsU0FBQTtXQUNOLElBQUMsQ0FBQSxRQUFRLENBQUMsT0FBTyxDQUFDLE1BQWxCLENBQUE7RUFETTs7aUJBR1IsSUFBQSxHQUFNLFNBQUMsU0FBRDtXQUNKLElBQUMsQ0FBQSxLQUFLLENBQUMsS0FBTSxDQUFBLFNBQUEsR0FBWSxDQUFaO0VBRFQ7Ozs7R0FUVzs7QUFZbkIsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"../transform/transform":111}],123:[function(require,module,exports){
var ArrayBuffer_, DataBuffer, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

DataBuffer = require('./databuffer');

Util = require('../../util');


/*
 * 1D + history array
 */

ArrayBuffer_ = (function(superClass) {
  extend(ArrayBuffer_, superClass);

  function ArrayBuffer_(renderer, shaders, options) {
    this.width = options.width || 1;
    this.history = options.history || 1;
    this.samples = this.width;
    this.wrap = this.history > 1;
    options.width = this.width;
    options.height = this.history;
    options.depth = 1;
    ArrayBuffer_.__super__.constructor.call(this, renderer, shaders, options);
  }

  ArrayBuffer_.prototype.build = function(options) {
    ArrayBuffer_.__super__.build.apply(this, arguments);
    this.index = 0;
    this.pad = 0;
    return this.streamer = this.generate(this.data);
  };

  ArrayBuffer_.prototype.setActive = function(i) {
    return this.pad = Math.max(0, this.width - i);
  };

  ArrayBuffer_.prototype.fill = function() {
    var callback, count, done, emit, i, limit, ref, reset, skip;
    callback = this.callback;
    if (typeof callback.reset === "function") {
      callback.reset();
    }
    ref = this.streamer, emit = ref.emit, skip = ref.skip, count = ref.count, done = ref.done, reset = ref.reset;
    reset();
    limit = this.samples - this.pad;
    i = 0;
    while (!done() && i < limit && callback(emit, i++) !== false) {
      true;
    }
    return Math.floor(count() / this.items);
  };

  ArrayBuffer_.prototype.write = function(n) {
    if (n == null) {
      n = this.samples;
    }
    n *= this.items;
    this.texture.write(this.data, 0, this.index, n, 1);
    this.dataPointer.set(.5, this.index + .5);
    this.index = (this.index + this.history - 1) % this.history;
    return this.filled = Math.min(this.history, this.filled + 1);
  };

  ArrayBuffer_.prototype.through = function(callback, target) {
    var consume, done, dst, emit, i, pipe, ref, src;
    ref = src = this.streamer, consume = ref.consume, done = ref.done;
    emit = (dst = target.streamer).emit;
    i = 0;
    pipe = function() {
      return consume(function(x, y, z, w) {
        return callback(emit, x, y, z, w, i);
      });
    };
    pipe = Util.Data.repeatCall(pipe, this.items);
    return (function(_this) {
      return function() {
        var limit;
        src.reset();
        dst.reset();
        limit = _this.samples - _this.pad;
        i = 0;
        while (!done() && i < limit) {
          pipe();
          i++;
        }
        return src.count();
      };
    })(this);
  };

  return ArrayBuffer_;

})(DataBuffer);

module.exports = ArrayBuffer_;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcYnVmZmVyXFxhcnJheWJ1ZmZlci5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccmVuZGVyXFxidWZmZXJcXGFycmF5YnVmZmVyLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLDhCQUFBO0VBQUE7OztBQUFBLFVBQUEsR0FBYyxPQUFBLENBQVEsY0FBUjs7QUFDZCxJQUFBLEdBQWMsT0FBQSxDQUFRLFlBQVI7OztBQUVkOzs7O0FBR007OztFQUNTLHNCQUFDLFFBQUQsRUFBVyxPQUFYLEVBQW9CLE9BQXBCO0lBQ1gsSUFBQyxDQUFBLEtBQUQsR0FBWSxPQUFPLENBQUMsS0FBUixJQUFvQjtJQUNoQyxJQUFDLENBQUEsT0FBRCxHQUFZLE9BQU8sQ0FBQyxPQUFSLElBQW9CO0lBRWhDLElBQUMsQ0FBQSxPQUFELEdBQVcsSUFBQyxDQUFBO0lBQ1osSUFBQyxDQUFBLElBQUQsR0FBVyxJQUFDLENBQUEsT0FBRCxHQUFXO0lBRXRCLE9BQU8sQ0FBQyxLQUFSLEdBQWlCLElBQUMsQ0FBQTtJQUNsQixPQUFPLENBQUMsTUFBUixHQUFpQixJQUFDLENBQUE7SUFDbEIsT0FBTyxDQUFDLEtBQVIsR0FBaUI7SUFDakIsOENBQU0sUUFBTixFQUFnQixPQUFoQixFQUF5QixPQUF6QjtFQVZXOzt5QkFZYixLQUFBLEdBQU8sU0FBQyxPQUFEO0lBQ0wseUNBQUEsU0FBQTtJQUVBLElBQUMsQ0FBQSxLQUFELEdBQVk7SUFDWixJQUFDLENBQUEsR0FBRCxHQUFZO1dBQ1osSUFBQyxDQUFBLFFBQUQsR0FBWSxJQUFDLENBQUEsUUFBRCxDQUFVLElBQUMsQ0FBQSxJQUFYO0VBTFA7O3lCQU9QLFNBQUEsR0FBVyxTQUFDLENBQUQ7V0FBTyxJQUFDLENBQUEsR0FBRCxHQUFP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

},{"../../util":175,"./databuffer":126}],124:[function(require,module,exports){
var Atlas, BackedTexture, DataTexture, Renderable, Row, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Renderable = require('../renderable');

Util = require('../../util');

DataTexture = require('./texture/datatexture');

BackedTexture = require('./texture/backedtexture');


/*
 * Dynamic sprite atlas
 *
 * - Allocates variable-sized sprites in rows
 * - Will grow itself when full
 */

Atlas = (function(superClass) {
  extend(Atlas, superClass);

  function Atlas(renderer, shaders, options) {
    if (this.width == null) {
      this.width = options.width || 512;
    }
    if (this.height == null) {
      this.height = options.height || 512;
    }
    if (this.channels == null) {
      this.channels = options.channels || 4;
    }
    if (this.backed == null) {
      this.backed = options.backed || false;
    }
    this.samples = this.width * this.height;
    Atlas.__super__.constructor.call(this, renderer, shaders);
    this.build(options);
  }

  Atlas.prototype.shader = function(shader) {
    shader.pipe("map.2d.data", this.uniforms);
    shader.pipe("sample.2d", this.uniforms);
    if (this.channels < 4) {
      shader.pipe(Util.GLSL.swizzleVec4(['0000', 'x000', 'xw00', 'xyz0'][this.channels]));
    }
    return shader;
  };

  Atlas.prototype.build = function(options) {
    var klass;
    this.klass = klass = this.backed ? BackedTexture : DataTexture;
    this.texture = new klass(this.renderer, this.width, this.height, this.channels, options);
    this.uniforms = {
      dataPointer: {
        type: 'v2',
        value: new THREE.Vector2(0, 0)
      }
    };
    this._adopt(this.texture.uniforms);
    return this.reset();
  };

  Atlas.prototype.reset = function() {
    this.rows = [];
    return this.bottom = 0;
  };

  Atlas.prototype.resize = function(width, height) {
    if (!this.backed) {
      throw new Error("Cannot resize unbacked texture atlas");
    }
    if (width > 2048 && height > 2048) {
      console.warn("Giant text atlas " + width + "x" + height + ".");
    } else {
      console.info("Resizing text atlas " + width + "x" + height + ".");
    }
    this.texture.resize(width, height);
    this.width = width;
    this.height = height;
    return this.samples = width * height;
  };

  Atlas.prototype.collapse = function(row) {
    var ref, ref1, rows;
    rows = this.rows;
    rows.splice(rows.indexOf(row), 1);
    this.bottom = (ref = (ref1 = rows[rows.length - 1]) != null ? ref1.bottom : void 0) != null ? ref : 0;
    if (this.last === row) {
      return this.last = null;
    }
  };

  Atlas.prototype.allocate = function(key, width, height, emit) {
    var bottom, gap, h, i, index, j, len, max, ref, row, top, w;
    w = this.width;
    h = this.height;
    max = height * 2;
    if (width > w) {
      this.resize(w * 2, h * 2);
      this.last = null;
      return this.allocate(key, width, height, emit);
    }
    row = this.last;
    if (row != null) {
      if (row.height >= height && row.height < max && row.width + width <= w) {
        row.append(key, width, height, emit);
        return;
      }
    }
    bottom = 0;
    index = -1;
    top = 0;
    ref = this.rows;
    for (i = j = 0, len = ref.length; j < len; i = ++j) {
      row = ref[i];
      gap = row.top - bottom;
      if (gap >= height && index < 0) {
        index = i;
        top = bottom;
      }
      bottom = row.bottom;
      if (row.height >= height && row.height < max && row.width + width <= w) {
        row.append(key, width, height, emit);
        this.last = row;
        return;
      }
    }
    if (index >= 0) {
      row = new Row(top, height);
      this.rows.splice(index, 0, row);
    } else {
      top = bottom;
      bottom += height;
      if (bottom >= h) {
        this.resize(w * 2, h * 2);
        this.last = null;
        return this.allocate(key, width, height, emit);
      }
      row = new Row(top, height);
      this.rows.push(row);
      this.bottom = bottom;
    }
    row.append(key, width, height, emit);
    this.last = row;
  };

  Atlas.prototype.read = function() {
    return this.texture.textureObject;
  };

  Atlas.prototype.write = function(data, x, y, w, h) {
    return this.texture.write(data, x, y, w, h);
  };

  Atlas.prototype.dispose = function() {
    this.texture.dispose();
    this.data = null;
    return Atlas.__super__.dispose.apply(this, arguments);
  };

  return Atlas;

})(Renderable);

Row = (function() {
  function Row(top, height) {
    this.top = top;
    this.bottom = top + height;
    this.width = 0;
    this.height = height;
    this.alive = 0;
    this.keys = [];
  }

  Row.prototype.append = function(key, width, height, emit) {
    var x, y;
    x = this.width;
    y = this.top;
    this.alive++;
    this.width += width;
    this.keys.push(key);
    return emit(this, x, y);
  };

  return Row;

})();

module.exports = Atlas;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcYnVmZmVyXFxhdGxhcy5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccmVuZGVyXFxidWZmZXJcXGF0bGFzLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLHdEQUFBO0VBQUE7OztBQUFBLFVBQUEsR0FBZ0IsT0FBQSxDQUFRLGVBQVI7O0FBQ2hCLElBQUEsR0FBZ0IsT0FBQSxDQUFRLFlBQVI7O0FBQ2hCLFdBQUEsR0FBZ0IsT0FBQSxDQUFRLHVCQUFSOztBQUNoQixhQUFBLEdBQWdCLE9BQUEsQ0FBUSx5QkFBUjs7O0FBRWhCOzs7Ozs7O0FBTU07OztFQUNTLGVBQUMsUUFBRCxFQUFXLE9BQVgsRUFBb0IsT0FBcEI7O01BQ1gsSUFBQyxDQUFBLFFBQVksT0FBTyxDQUFDLEtBQVIsSUFBb0I7OztNQUNqQyxJQUFDLENBQUEsU0FBWSxPQUFPLENBQUMsTUFBUixJQUFvQjs7O01BQ2pDLElBQUMsQ0FBQSxXQUFZLE9BQU8sQ0FBQyxRQUFSLElBQW9COzs7TUFDakMsSUFBQyxDQUFBLFNBQVksT0FBTyxDQUFDLE1BQVIsSUFBb0I7O0lBRWpDLElBQUMsQ0FBQSxPQUFELEdBQVcsSUFBQyxDQUFBLEtBQUQsR0FBUyxJQUFDLENBQUE7SUFFckIsdUNBQU0sUUFBTixFQUFnQixPQUFoQjtJQUNBLElBQUMsQ0FBQSxLQUFELENBQU8sT0FBUDtFQVRXOztrQkFXYixNQUFBLEdBQVEsU0FBQyxNQUFEO0lBQ04sTUFBTSxDQUFDLElBQVAsQ0FBWSxhQUFaLEVBQTJCLElBQUMsQ0FBQSxRQUE1QjtJQUNBLE1BQU0sQ0FBQyxJQUFQLENBQVksV0FBWixFQUF5QixJQUFDLENBQUEsUUFBMUI7SUFDQSxJQUFpRixJQUFDLENBQUEsUUFBRCxHQUFZLENBQTdGO01BQUEs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

},{"../../util":175,"../renderable":161,"./texture/backedtexture":133,"./texture/datatexture":134}],125:[function(require,module,exports){
var Buffer, Renderable, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Renderable = require('../renderable');

Util = require('../../util');


/*
 * Base class for sample buffers
 */

Buffer = (function(superClass) {
  extend(Buffer, superClass);

  function Buffer(renderer, shaders, options) {
    if (this.items == null) {
      this.items = options.items || 1;
    }
    if (this.samples == null) {
      this.samples = options.samples || 1;
    }
    if (this.channels == null) {
      this.channels = options.channels || 4;
    }
    if (this.callback == null) {
      this.callback = options.callback || function() {};
    }
    Buffer.__super__.constructor.call(this, renderer, shaders);
  }

  Buffer.prototype.dispose = function() {
    return Buffer.__super__.dispose.apply(this, arguments);
  };

  Buffer.prototype.update = function() {
    var n;
    n = this.fill();
    this.write(n);
    return n;
  };

  Buffer.prototype.setActive = function(i, j, k, l) {};

  Buffer.prototype.setCallback = function(callback) {
    this.callback = callback;
  };

  Buffer.prototype.write = function() {};

  Buffer.prototype.fill = function() {};

  Buffer.prototype.generate = function(data) {
    return Util.Data.getStreamer(data, this.samples, this.channels, this.items);
  };

  return Buffer;

})(Renderable);

module.exports = Buffer;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcYnVmZmVyXFxidWZmZXIuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcYnVmZmVyXFxidWZmZXIuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsd0JBQUE7RUFBQTs7O0FBQUEsVUFBQSxHQUFhLE9BQUEsQ0FBUSxlQUFSOztBQUNiLElBQUEsR0FBYSxPQUFBLENBQVEsWUFBUjs7O0FBRWI7Ozs7QUFHTTs7O0VBQ1MsZ0JBQUMsUUFBRCxFQUFXLE9BQVgsRUFBb0IsT0FBcEI7O01BQ1gsSUFBQyxDQUFBLFFBQVksT0FBTyxDQUFDLEtBQVIsSUFBb0I7OztNQUNqQyxJQUFDLENBQUEsVUFBWSxPQUFPLENBQUMsT0FBUixJQUFvQjs7O01BQ2pDLElBQUMsQ0FBQSxXQUFZLE9BQU8sQ0FBQyxRQUFSLElBQW9COzs7TUFDakMsSUFBQyxDQUFBLFdBQVksT0FBTyxDQUFDLFFBQVIsSUFBb0IsU0FBQSxHQUFBOztJQUVqQyx3Q0FBTSxRQUFOLEVBQWdCLE9BQWhCO0VBTlc7O21CQVFiLE9BQUEsR0FBUyxTQUFBO1dBQ1AscUNBQUEsU0FBQTtFQURPOzttQkFHVCxNQUFBLEdBQVEsU0FBQTtBQUNOLFFBQUE7SUFBQSxDQUFBLEdBQUksSUFBQyxDQUFBLElBQUQsQ0FBQTtJQUNKLElBQUMsQ0FBQSxLQUFELENBQU8sQ0FBUDtXQUNBO0VBSE07O21CQUtSLFNBQUEsR0FBVyxTQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsR0FBQTs7bUJBQ1gsV0FBQSxHQUFhLFNBQUMsUUFBRDtJQUFDLElBQUMsQ0FBQSxXQUFEO0VBQUQ7O21CQUViLEtBQUEsR0FBTyxTQUFBLEdBQUE7O21CQUNQLElBQUEsR0FBTyxTQUFBLEdBQUE7O21CQUNQLFFBQUEsR0FBVSxTQUFDLElBQUQ7V0FBVSxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVYsQ0FBc0IsSUFBdEIsRUFBNEIsSUFBQyxDQUFBLE9BQTdCLEVBQXNDLElBQUMsQ0FBQSxRQUF2QyxFQUFpRCxJQUFDLENBQUEsS0FBbEQ7RUFBVjs7OztHQXRCUzs7QUF3QnJCLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{"../../util":175,"../renderable":161}],126:[function(require,module,exports){
var Buffer, DataBuffer, DataTexture, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Buffer = require('./buffer');

DataTexture = require('./texture/datatexture');

Util = require('../../util');


/*
 * Data buffer on the GPU
 * - Stores samples (1-n) x items (1-n) x channels (1-4)
 * - Provides generic sampler shader
 * - Provides generic copy/write handler
 * => specialized into Array/Matrix/VoxelBuffer
 */

DataBuffer = (function(superClass) {
  extend(DataBuffer, superClass);

  function DataBuffer(renderer, shaders, options) {
    this.width = options.width || 1;
    this.height = options.height || 1;
    this.depth = options.depth || 1;
    if (this.samples == null) {
      this.samples = this.width * this.height * this.depth;
    }
    DataBuffer.__super__.constructor.call(this, renderer, shaders, options);
    this.build(options);
  }

  DataBuffer.prototype.shader = function(shader, indices) {
    if (indices == null) {
      indices = 4;
    }
    if (this.items > 1 || this.depth > 1) {
      if (indices !== 4) {
        shader.pipe(Util.GLSL.extendVec(indices, 4));
      }
      shader.pipe('map.xyzw.texture', this.uniforms);
    } else {
      if (indices !== 2) {
        shader.pipe(Util.GLSL.truncateVec(indices, 2));
      }
    }
    shader.pipe("map.2d.data", this.uniforms);
    shader.pipe("sample.2d", this.uniforms);
    if (this.channels < 4) {
      shader.pipe(Util.GLSL.swizzleVec4(['0000', 'x000', 'xw00', 'xyz0'][this.channels]));
    }
    return shader;
  };

  DataBuffer.prototype.build = function(options) {
    this.data = new Float32Array(this.samples * this.channels * this.items);
    this.texture = new DataTexture(this.renderer, this.items * this.width, this.height * this.depth, this.channels, options);
    this.filled = 0;
    this.used = 0;
    this._adopt(this.texture.uniforms);
    this._adopt({
      dataPointer: {
        type: 'v2',
        value: new THREE.Vector2()
      },
      textureItems: {
        type: 'f',
        value: this.items
      },
      textureHeight: {
        type: 'f',
        value: this.height
      }
    });
    this.dataPointer = this.uniforms.dataPointer.value;
    return this.streamer = this.generate(this.data);
  };

  DataBuffer.prototype.dispose = function() {
    this.data = null;
    this.texture.dispose();
    return DataBuffer.__super__.dispose.apply(this, arguments);
  };

  DataBuffer.prototype.getFilled = function() {
    return this.filled;
  };

  DataBuffer.prototype.setCallback = function(callback1) {
    this.callback = callback1;
    return this.filled = 0;
  };

  DataBuffer.prototype.copy = function(data) {
    var d, i, j, n, ref;
    n = Math.min(data.length, this.samples * this.channels * this.items);
    d = this.data;
    for (i = j = 0, ref = n; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      d[i] = data[i];
    }
    return this.write(Math.ceil(n / this.channels / this.items));
  };

  DataBuffer.prototype.write = function(n) {
    var height, width;
    if (n == null) {
      n = this.samples;
    }
    height = n / this.width;
    n *= this.items;
    width = height < 1 ? n : this.items * this.width;
    height = Math.ceil(height);
    this.texture.write(this.data, 0, 0, width, height);
    this.dataPointer.set(.5, .5);
    this.filled = 1;
    return this.used = n;
  };

  DataBuffer.prototype.through = function(callback, target) {
    var consume, done, dst, emit, i, pipe, ref, src;
    ref = src = this.streamer, consume = ref.consume, done = ref.done;
    emit = (dst = target.streamer).emit;
    i = 0;
    pipe = function() {
      return consume(function(x, y, z, w) {
        return callback(emit, x, y, z, w, i);
      });
    };
    pipe = Util.Data.repeatCall(pipe, this.items);
    return (function(_this) {
      return function() {
        var limit;
        src.reset();
        dst.reset();
        limit = _this.used;
        i = 0;
        while (!done() && i < limit) {
          pipe();
          i++;
        }
        return src.count();
      };
    })(this);
  };

  return DataBuffer;

})(Buffer);

module.exports = DataBuffer;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcYnVmZmVyXFxkYXRhYnVmZmVyLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxyZW5kZXJcXGJ1ZmZlclxcZGF0YWJ1ZmZlci5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxxQ0FBQTtFQUFBOzs7QUFBQSxNQUFBLEdBQWMsT0FBQSxDQUFRLFVBQVI7O0FBQ2QsV0FBQSxHQUFjLE9BQUEsQ0FBUSx1QkFBUjs7QUFDZCxJQUFBLEdBQWMsT0FBQSxDQUFRLFlBQVI7OztBQUVkOzs7Ozs7OztBQU9NOzs7RUFDUyxvQkFBQyxRQUFELEVBQVcsT0FBWCxFQUFvQixPQUFwQjtJQUNYLElBQUMsQ0FBQSxLQUFELEdBQVksT0FBTyxDQUFDLEtBQVIsSUFBb0I7SUFDaEMsSUFBQyxDQUFBLE1BQUQsR0FBWSxPQUFPLENBQUMsTUFBUixJQUFvQjtJQUNoQyxJQUFDLENBQUEsS0FBRCxHQUFZLE9BQU8sQ0FBQyxLQUFSLElBQW9COztNQUVoQyxJQUFDLENBQUEsVUFBVyxJQUFDLENBQUEsS0FBRCxHQUFTLElBQUMsQ0FBQSxNQUFWLEdBQW1CLElBQUMsQ0FBQTs7SUFDaEMsNENBQU0sUUFBTixFQUFnQixPQUFoQixFQUF5QixPQUF6QjtJQUVBLElBQUMsQ0FBQSxLQUFELENBQU8sT0FBUDtFQVJXOzt1QkFVYixNQUFBLEdBQVEsU0FBQyxNQUFELEVBQVMsT0FBVDs7TUFBUyxVQUFVOztJQUN6QixJQUFHLElBQUMsQ0FBQSxLQUFELEdBQVMsQ0FBVCxJQUFjLElBQUMsQ0FBQSxLQUFELEdBQVMsQ0FBMUI7TUFDRSxJQUFnRCxPQUFBLEtBQVcsQ0FBM0Q7UUFBQSxNQUFNLENBQUMsSUFBUCxDQUFZLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBVixDQUFzQixPQUF0QixFQUErQixDQUEvQixDQUFaLEVBQUE7O01BQ0EsTUFBTSxDQUFDLElBQVAsQ0FBWSxrQkFBWixFQUFnQyxJQUFDLENBQUEsUUFBakMsRUFGRjtLQUFBLE1BQUE7TUFJRSxJQUFnRCxPQUFBLEtBQVcsQ0FBM0Q7UUFBQSxNQUFNLENBQUMsSUFBUCxDQUFZLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVixDQUFzQixPQUF0QixFQUErQixDQUEvQixDQUFaLEVBQUE7T0FKRjs7SUFNQSxNQUFNLENBQUMsSUFBUCxDQUFZLGFBQVosRUFBMkIsSUFBQyxDQUFBLFFBQTVCO0lBQ0EsTUFBTSxDQUFDLElBQVAsQ0FBWSxXQUFaLEVBQXlCLElBQUMsQ0FBQSxRQUExQjtJQUNBLElBQWlGLElBQUMsQ0FBQSxRQUFELEdBQVksQ0FBN0Y7TUFBQSxNQUFNLENBQUMsSUFBUCxDQUFZLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVixDQUFzQixDQUFDLE1BQUQsRUFBUyxNQUFULEVBQWlCLE1BQWpCLEVBQXlCLE1BQXpCLENBQWlDLENBQUEsSUFBQyxDQUFBLFFBQUQsQ0FBdkQsQ0FBWixFQUFBOztXQUNBO0VBVk07O3VCQVlSLEtBQUEsR0FBTyxTQUFDLE9BQUQ7SUFDTCxJQUFDLENBQUEsSUFBRCxHQUFXLElBQUksWUFBSixDQUFpQixJQUFDLENBQUEsT0FBRCxHQUFXLElBQUMsQ0FBQSxRQUFaLEdBQXVCLElBQUMsQ0FBQSxLQUF6QztJQUNYLElBQUMsQ0FBQSxPQUFELEdBQVcsSUFBSSxXQUFKLENBQWlCLElBQUMsQ0FBQSxRQUFsQixFQUE0QixJQUFDLENBQUEsS0FBRCxHQUFTLElBQUMsQ0FBQSxLQUF0QyxFQUE2QyxJQUFDLENBQUEsTUFBRCxHQUFVLElBQUMsQ0FBQSxLQUF4RCxFQUErRCxJQUFDLENBQUEsUUFBaEUsRUFBMEUsT0FBMUU7SUFDWCxJQUFDLENBQUEsTUFBRCxHQUFXO0lBQ1gsSUFBQyxDQUFBLElBQUQsR0FBVztJQUVYLElBQUMsQ0FBQSxNQUFELENBQVEsSUFBQyxDQUFBLE9BQU8sQ0FBQyxRQUFqQjtJQUNBLElBQUMsQ0FBQSxNQUFELENBQ0U7TUFBQSxXQUFBLEVBQWU7UUFBRSxJQUFBLEVBQU0sSUFBUjtRQUFjLEtBQUEsRUFBTyxJQUFJLEtBQUssQ0FBQyxPQUFWLENBQUEsQ0FBckI7T0FBZjtNQUNBLFlBQUEsRUFBZTtRQUFFLElBQUEsRUFBTSxHQUFSO1FBQWMsS0FBQSxFQUFPLElBQUMsQ0FBQSxLQUF0QjtPQURmO01BRUEsYUFBQSxFQUFlO1FBQUUsSUFBQSxFQUFNLEdBQVI7UUFBYyxLQUFBLEVBQU8sSUFBQyxDQUFBLE1BQXRCO09BRmY7S0FERjtJQUtBLElBQUMsQ0FBQSxXQUFELEdBQWUsSUFBQyxDQUFBLFFBQVEsQ0FBQyxXQUFXLENBQUM7V0FFckMsSUFBQyxDQUFBLFFBQUQsR0FBWSxJQUFDLENBQUEsUUFBRCxDQUFVLElBQUMsQ0FBQSxJQUFYO0VBZFA7O3VCQWdCUCxPQUFBLEdBQVMsU0FBQTtJQUNQLElBQUMsQ0FBQSxJQUFELEdBQVE7SUFDUixJQUFDLENBQUEsT0FBTyxDQUFDLE9BQVQsQ0FBQTtXQUNBLHlDQUFBLFNBQUE7RUFITzs7dUJBS1QsU0FBQSxHQUFXLFNBQUE7V0FBTSxJQUFDLENBQUE7RUFBUDs7dUJBQ1gsV0FBQSxHQUFhLFNBQUMsU0FBRDtJQUFDLElBQUMsQ0FBQSxXQUFEO1dBQWMsSUFBQyxDQUFBLE1BQUQsR0FBVTtFQUF6Qjs7dUJBRWIsSUFBQSxHQUFNLFNBQUMsSUFBRDtBQUNKLFFBQUE7SUFBQSxDQUFBLEdBQU8sSUFBSSxDQUFDLEdBQUwsQ0FBUyxJQUFJLENBQUMsTUFBZCxFQUFzQixJQUFDLENBQUEsT0FBRCxHQUFXLElBQUMsQ0FBQSxRQUFaLEdBQXVCLElBQUMsQ0FBQSxLQUE5QztJQUNQLENBQUEsR0FBTyxJQUFDLENBQUE7QUFDUixTQUF3QiwwRUFBeEI7TUFBQSxDQUFFLENBQUEsQ0FBQSxDQUFGLEdBQU8sSUFBSyxDQUFBLENBQUE7QUFBWjtXQUNBLElBQUMsQ0FBQSxLQUFELENBQU8sSUFBSSxDQUFDLElBQUwsQ0FBVSxDQUFBLEdBQUksSUFBQyxDQUFBLFFBQUwsR0FBZ0IsSUFBQyxDQUFBLEtBQTNCLENBQVA7RUFKSTs7dUJBTU4sS0FBQSxHQUFPLFNBQUMsQ0FBRDtBQUNMLFFBQUE7O01BRE0sSUFBSSxJQUFDLENBQUE7O0lBQ1gsTUFBQSxHQUFTLENBQUEsR0FBSSxJQUFDLENBQUE7SUFDZCxDQUFBLElBQUssSUFBQyxDQUFBO0lBQ04sS0FBQSxHQUFXLE1BQUEsR0FBUyxDQUFaLEdBQW1CLENBQW5CLEdBQTBCLElBQUMsQ0FBQSxLQUFELEdBQVMsSUFBQyxDQUFBO0lBQzVDLE1BQUEsR0FBUyxJQUFJLENBQUMsSUFBTCxDQUFVLE1BQVY7SUFFVCxJQUFDLENBQUEsT0FBTyxDQUFDLEtBQVQsQ0FBZSxJQUFDLENBQUEsSUFBaEIsRUFBc0IsQ0FBdEIsRUFBeUIsQ0FBekIsRUFBNEIsS0FBNUIsRUFBbUMsTUFBbkM7SUFDQSxJQUFDLENBQUEsV0FBVyxDQUFDLEdBQWIsQ0FBaUIsRUFBakIsRUFBcUIsRUFBckI7SUFFQSxJQUFDLENBQUEsTUFBRCxHQUFVO1dBQ1YsSUFBQyxDQUFBLElBQUQsR0FBVTtFQVZMOzt1QkFZUCxPQUFBLEdBQVMsU0FBQyxRQUFELEVBQVcsTUFBWDtBQUNQLFFBQUE7SUFBQSxNQUFrQixHQUFBLEdBQU0sSUFBQyxDQUFBLFFBQXpCLEVBQUMscUJBQUQsRUFBVTtJQUNULE9BQWlCLENBQUEsR0FBQSxHQUFNLE1BQU0sQ0FBQyxRQUFiO0lBRWxCLENBQUEsR0FBSTtJQUVKLElBQUEsR0FBTyxTQUFBO2FBQU0sT0FBQSxDQUFRLFNBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxDQUFQLEVBQVUsQ0FBVjtlQUFnQixRQUFBLENBQVMsSUFBVCxFQUFlLENBQWYsRUFBa0IsQ0FBbEIsRUFBcUIsQ0FBckIsRUFBd0IsQ0FBeEIsRUFBMkIsQ0FBM0I7TUFBaEIsQ0FBUjtJQUFOO0lBQ1AsSUFBQSxHQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVixDQUFxQixJQUFyQixFQUEyQixJQUFDLENBQUEsS0FBNUI7V0FFUCxDQUFBLFNBQUEsS0FBQTthQUFBLFNBQUE7QUFDRSxZQUFBO1FBQUEsR0FBRyxDQUFDLEtBQUosQ0FBQTtRQUNBLEdBQUcsQ0FBQyxLQUFKLENBQUE7UUFDQSxLQUFBLEdBQVEsS0FBQyxDQUFBO1FBQ1QsQ0FBQSxHQUFJO0FBQ0osZUFBTSxDQUFDLElBQUEsQ0FBQSxDQUFELElBQVcsQ0FBQSxHQUFJLEtBQXJCO1VBQ0UsSUFBQSxDQUFBO1VBQ0EsQ0FBQTtRQUZGO0FBSUEsZUFBTyxHQUFHLENBQUMsS0FBSixDQUFBO01BVFQ7SUFBQSxDQUFBLENBQUEsQ0FBQSxJQUFBO0VBVE87Ozs7R0FqRWM7O0FBcUZ6QixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"../../util":175,"./buffer":125,"./texture/datatexture":134}],127:[function(require,module,exports){
var DataBuffer, MatrixBuffer, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

DataBuffer = require('./databuffer');

Util = require('../../util');


/*
 * 2D + history array
 */

MatrixBuffer = (function(superClass) {
  extend(MatrixBuffer, superClass);

  function MatrixBuffer(renderer, shaders, options) {
    this.width = options.width || 1;
    this.height = options.height || 1;
    this.history = options.history || 1;
    this.samples = this.width * this.height;
    this.wrap = this.history > 1;
    options.depth = this.history;
    MatrixBuffer.__super__.constructor.call(this, renderer, shaders, options);
  }

  MatrixBuffer.prototype.build = function(options) {
    MatrixBuffer.__super__.build.apply(this, arguments);
    this.index = 0;
    this.pad = {
      x: 0,
      y: 0
    };
    return this.streamer = this.generate(this.data);
  };

  MatrixBuffer.prototype.getFilled = function() {
    return this.filled;
  };

  MatrixBuffer.prototype.setActive = function(i, j) {
    var ref;
    return ref = [Math.max(0, this.width - i), Math.max(0, this.height - j)], this.pad.x = ref[0], this.pad.y = ref[1], ref;
  };

  MatrixBuffer.prototype.fill = function() {
    var callback, count, done, emit, i, j, k, limit, n, pad, ref, repeat, reset, skip;
    callback = this.callback;
    if (typeof callback.reset === "function") {
      callback.reset();
    }
    ref = this.streamer, emit = ref.emit, skip = ref.skip, count = ref.count, done = ref.done, reset = ref.reset;
    reset();
    n = this.width;
    pad = this.pad.x;
    limit = this.samples - this.pad.y * n;
    i = j = k = 0;
    if (pad) {
      while (!done() && k < limit) {
        k++;
        repeat = callback(emit, i, j);
        if (++i === n - pad) {
          skip(pad);
          i = 0;
          j++;
        }
        if (repeat === false) {
          break;
        }
      }
    } else {
      while (!done() && k < limit) {
        k++;
        repeat = callback(emit, i, j);
        if (++i === n) {
          i = 0;
          j++;
        }
        if (repeat === false) {
          break;
        }
      }
    }
    return Math.floor(count() / this.items);
  };

  MatrixBuffer.prototype.write = function(n) {
    var height, width;
    if (n == null) {
      n = this.samples;
    }
    n *= this.items;
    width = this.width * this.items;
    height = Math.ceil(n / width);
    this.texture.write(this.data, 0, this.index * this.height, width, height);
    this.dataPointer.set(.5, this.index * this.height + .5);
    this.index = (this.index + this.history - 1) % this.history;
    return this.filled = Math.min(this.history, this.filled + 1);
  };

  MatrixBuffer.prototype.through = function(callback, target) {
    var consume, done, dst, emit, i, j, pipe, ref, src;
    ref = src = this.streamer, consume = ref.consume, done = ref.done;
    emit = (dst = target.streamer).emit;
    i = j = 0;
    pipe = function() {
      return consume(function(x, y, z, w) {
        return callback(emit, x, y, z, w, i, j);
      });
    };
    pipe = Util.Data.repeatCall(pipe, this.items);
    return (function(_this) {
      return function() {
        var k, limit, n, pad;
        src.reset();
        dst.reset();
        n = _this.width;
        pad = _this.pad.x;
        limit = _this.samples - _this.pad.y * n;
        i = j = k = 0;
        if (pad) {
          while (!done() && k < limit) {
            k++;
            pipe();
            if (++i === n - pad) {
              skip(pad);
              i = 0;
              j++;
            }
          }
        } else {
          while (!done() && k < limit) {
            k++;
            pipe();
            if (++i === n) {
              i = 0;
              j++;
            }
          }
        }
        return src.count();
      };
    })(this);
  };

  return MatrixBuffer;

})(DataBuffer);

module.exports = MatrixBuffer;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcYnVmZmVyXFxtYXRyaXhidWZmZXIuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcYnVmZmVyXFxtYXRyaXhidWZmZXIuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsOEJBQUE7RUFBQTs7O0FBQUEsVUFBQSxHQUFjLE9BQUEsQ0FBUSxjQUFSOztBQUNkLElBQUEsR0FBYyxPQUFBLENBQVEsWUFBUjs7O0FBRWQ7Ozs7QUFHTTs7O0VBQ1Msc0JBQUMsUUFBRCxFQUFXLE9BQVgsRUFBb0IsT0FBcEI7SUFDWCxJQUFDLENBQUEsS0FBRCxHQUFZLE9BQU8sQ0FBQyxLQUFSLElBQW9CO0lBQ2hDLElBQUMsQ0FBQSxNQUFELEdBQVksT0FBTyxDQUFDLE1BQVIsSUFBb0I7SUFDaEMsSUFBQyxDQUFBLE9BQUQsR0FBWSxPQUFPLENBQUMsT0FBUixJQUFvQjtJQUVoQyxJQUFDLENBQUEsT0FBRCxHQUFXLElBQUMsQ0FBQSxLQUFELEdBQVMsSUFBQyxDQUFBO0lBQ3JCLElBQUMsQ0FBQSxJQUFELEdBQVcsSUFBQyxDQUFBLE9BQUQsR0FBVztJQUV0QixPQUFPLENBQUMsS0FBUixHQUFnQixJQUFDLENBQUE7SUFDakIsOENBQU0sUUFBTixFQUFnQixPQUFoQixFQUF5QixPQUF6QjtFQVRXOzt5QkFXYixLQUFBLEdBQU8sU0FBQyxPQUFEO0lBQ0wseUNBQUEsU0FBQTtJQUVBLElBQUMsQ0FBQSxLQUFELEdBQVk7SUFDWixJQUFDLENBQUEsR0FBRCxHQUFZO01BQUMsQ0FBQSxFQUFHLENBQUo7TUFBUSxDQUFBLEVBQUcsQ0FBWDs7V0FDWixJQUFDLENBQUEsUUFBRCxHQUFZLElBQUMsQ0FBQSxRQUFELENBQVUsSUFBQyxDQUFBLElBQVg7RUFMUDs7eUJB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

},{"../../util":175,"./databuffer":126}],128:[function(require,module,exports){
var Memo, RenderToTexture, Renderable, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Renderable = require('../renderable');

RenderToTexture = require('./rendertotexture');

Util = require('../../util');


/*
 * Wrapped RTT for memoizing 4D arrays back to a 2D texture
 */

Memo = (function(superClass) {
  extend(Memo, superClass);

  function Memo(renderer, shaders, options) {
    if (this.items == null) {
      this.items = options.items || 1;
    }
    if (this.channels == null) {
      this.channels = options.channels || 4;
    }
    if (this.width == null) {
      this.width = options.width || 1;
    }
    if (this.height == null) {
      this.height = options.height || 1;
    }
    if (this.depth == null) {
      this.depth = options.depth || 1;
    }
    options.format = THREE.RGBAFormat;
    options.width = this._width = this.items * this.width;
    options.height = this._height = this.height * this.depth;
    options.frames = 1;
    delete options.items;
    delete options.depth;
    delete options.channels;
    Memo.__super__.constructor.call(this, renderer, shaders, options);
    this._adopt({
      textureItems: {
        type: 'f',
        value: this.items
      },
      textureHeight: {
        type: 'f',
        value: this.height
      }
    });
  }

  Memo.prototype.shaderAbsolute = function(shader) {
    if (shader == null) {
      shader = this.shaders.shader();
    }
    shader.pipe('map.xyzw.texture', this.uniforms);
    return Memo.__super__.shaderAbsolute.call(this, shader, 1, 2);
  };

  return Memo;

})(RenderToTexture);

module.exports = Memo;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcYnVmZmVyXFxtZW1vLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxyZW5kZXJcXGJ1ZmZlclxcbWVtby5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSx1Q0FBQTtFQUFBOzs7QUFBQSxVQUFBLEdBQWtCLE9BQUEsQ0FBUSxlQUFSOztBQUNsQixlQUFBLEdBQWtCLE9BQUEsQ0FBUSxtQkFBUjs7QUFDbEIsSUFBQSxHQUFrQixPQUFBLENBQVEsWUFBUjs7O0FBRWxCOzs7O0FBR007OztFQUVTLGNBQUMsUUFBRCxFQUFXLE9BQVgsRUFBb0IsT0FBcEI7O01BRVgsSUFBQyxDQUFBLFFBQVksT0FBTyxDQUFDLEtBQVIsSUFBb0I7OztNQUNqQyxJQUFDLENBQUEsV0FBWSxPQUFPLENBQUMsUUFBUixJQUFvQjs7O01BQ2pDLElBQUMsQ0FBQSxRQUFZLE9BQU8sQ0FBQyxLQUFSLElBQW9COzs7TUFDakMsSUFBQyxDQUFBLFNBQVksT0FBTyxDQUFDLE1BQVIsSUFBb0I7OztNQUNqQyxJQUFDLENBQUEsUUFBWSxPQUFPLENBQUMsS0FBUixJQUFvQjs7SUFHakMsT0FBTyxDQUFDLE1BQVIsR0FBaUIsS0FBSyxDQUFDO0lBQ3ZCLE9BQU8sQ0FBQyxLQUFSLEdBQWlCLElBQUMsQ0FBQSxNQUFELEdBQVcsSUFBQyxDQUFBLEtBQUQsR0FBVSxJQUFDLENBQUE7SUFDdkMsT0FBTyxDQUFDLE1BQVIsR0FBaUIsSUFBQyxDQUFBLE9BQUQsR0FBVyxJQUFDLENBQUEsTUFBRCxHQUFVLElBQUMsQ0FBQTtJQUN2QyxPQUFPLENBQUMsTUFBUixHQUFpQjtJQUVqQixPQUFPLE9BQU8sQ0FBQztJQUNmLE9BQU8sT0FBTyxDQUFDO0lBQ2YsT0FBTyxPQUFPLENBQUM7SUFFZixzQ0FBTSxRQUFOLEVBQWdCLE9BQWhCLEVBQXlCLE9BQXpCO0lBRUEsSUFBQyxDQUFBLE1BQUQsQ0FDRTtNQUFBLFlBQUEsRUFBZTtRQUFFLElBQUEsRUFBTSxHQUFSO1FBQWEsS0FBQSxFQUFPLElBQUMsQ0FBQSxLQUFyQjtPQUFmO01BQ0EsYUFBQSxFQUFlO1FBQUUsSUFBQSxFQUFNLEdBQVI7UUFBYSxLQUFBLEVBQU8sSUFBQyxDQUFBLE1BQXJCO09BRGY7S0FERjtFQXBCVzs7aUJBd0JiLGNBQUEsR0FBZ0IsU0FBQyxNQUFEOztNQUNkLFNBQVUsSUFBQyxDQUFBLE9BQU8sQ0FBQyxNQUFULENBQUE7O0lBQ1YsTUFBTSxDQUFDLElBQVAsQ0FBWSxrQkFBWixFQUFnQyxJQUFDLENBQUEsUUFBakM7V0FDQSx5Q0FBTSxNQUFOLEVBQWMsQ0FBZCxFQUFpQixDQUFqQjtFQUhjOzs7O0dBMUJDOztBQWdDbkIsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"../../util":175,"../renderable":161,"./rendertotexture":131}],129:[function(require,module,exports){
var Buffer, PushBuffer, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Buffer = require('./buffer');

Util = require('../../util');


/*
 * Buffer for CPU-side use
 */

PushBuffer = (function(superClass) {
  extend(PushBuffer, superClass);

  function PushBuffer(renderer, shaders, options) {
    this.width = options.width || 1;
    this.height = options.height || 1;
    this.depth = options.depth || 1;
    if (this.samples == null) {
      this.samples = this.width * this.height * this.depth;
    }
    PushBuffer.__super__.constructor.call(this, renderer, shaders, options);
    this.build(options);
  }

  PushBuffer.prototype.build = function(options) {
    this.data = [];
    this.data.length = this.samples;
    this.filled = 0;
    this.pad = {
      x: 0,
      y: 0,
      z: 0
    };
    return this.streamer = this.generate(this.data);
  };

  PushBuffer.prototype.dispose = function() {
    this.data = null;
    return PushBuffer.__super__.dispose.apply(this, arguments);
  };

  PushBuffer.prototype.getFilled = function() {
    return this.filled;
  };

  PushBuffer.prototype.setActive = function(i, j, k) {
    var ref;
    return ref = [this.width - i, this.height - j, this.depth - k], this.pad.x = ref[0], this.pad.y = ref[1], this.pad.z = ref[2], ref;
  };

  PushBuffer.prototype.read = function() {
    return this.data;
  };

  PushBuffer.prototype.copy = function(data) {
    var d, i, n, p, ref, results;
    n = Math.min(data.length, this.samples);
    d = this.data;
    results = [];
    for (i = p = 0, ref = n; 0 <= ref ? p < ref : p > ref; i = 0 <= ref ? ++p : --p) {
      results.push(d[i] = data[i]);
    }
    return results;
  };

  PushBuffer.prototype.fill = function() {
    var callback, count, done, emit, i, j, k, l, limit, m, n, o, padX, padY, ref, repeat, reset, skip;
    callback = this.callback;
    if (typeof callback.reset === "function") {
      callback.reset();
    }
    ref = this.streamer, emit = ref.emit, skip = ref.skip, count = ref.count, done = ref.done, reset = ref.reset;
    reset();
    n = this.width;
    m = this.height;
    o = this.depth;
    padX = this.pad.x;
    padY = this.pad.y;
    limit = this.samples - this.pad.z * n * m;
    i = j = k = l = 0;
    if (padX > 0 || padY > 0) {
      while (!done() && l < limit) {
        l++;
        repeat = callback(emit, i, j, k);
        if (++i === n - padX) {
          skip(padX);
          i = 0;
          if (++j === m - padY) {
            skip(n * padY);
            j = 0;
            k++;
          }
        }
        if (repeat === false) {
          break;
        }
      }
    } else {
      while (!done() && l < limit) {
        l++;
        repeat = callback(emit, i, j, k);
        if (++i === n) {
          i = 0;
          if (++j === m) {
            j = 0;
            k++;
          }
        }
        if (repeat === false) {
          break;
        }
      }
    }
    this.filled = 1;
    return count();
  };

  return PushBuffer;

})(Buffer);

module.exports = PushBuffer;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcYnVmZmVyXFxwdXNoYnVmZmVyLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxyZW5kZXJcXGJ1ZmZlclxccHVzaGJ1ZmZlci5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSx3QkFBQTtFQUFBOzs7QUFBQSxNQUFBLEdBQWMsT0FBQSxDQUFRLFVBQVI7O0FBQ2QsSUFBQSxHQUFjLE9BQUEsQ0FBUSxZQUFSOzs7QUFFZDs7OztBQUdNOzs7RUFDUyxvQkFBQyxRQUFELEVBQVcsT0FBWCxFQUFvQixPQUFwQjtJQUNYLElBQUMsQ0FBQSxLQUFELEdBQVksT0FBTyxDQUFDLEtBQVIsSUFBb0I7SUFDaEMsSUFBQyxDQUFBLE1BQUQsR0FBWSxPQUFPLENBQUMsTUFBUixJQUFvQjtJQUNoQyxJQUFDLENBQUEsS0FBRCxHQUFZLE9BQU8sQ0FBQyxLQUFSLElBQW9COztNQUVoQyxJQUFDLENBQUEsVUFBVyxJQUFDLENBQUEsS0FBRCxHQUFTLElBQUMsQ0FBQSxNQUFWLEdBQW1CLElBQUMsQ0FBQTs7SUFDaEMsNENBQU0sUUFBTixFQUFnQixPQUFoQixFQUF5QixPQUF6QjtJQUVBLElBQUMsQ0FBQSxLQUFELENBQU8sT0FBUDtFQVJXOzt1QkFVYixLQUFBLEdBQU8sU0FBQyxPQUFEO0lBQ0wsSUFBQyxDQUFBLElBQUQsR0FBWTtJQUNaLElBQUMsQ0FBQSxJQUFJLENBQUMsTUFBTixHQUFlLElBQUMsQ0FBQTtJQUVoQixJQUFDLENBQUEsTUFBRCxHQUFZO0lBQ1osSUFBQyxDQUFBLEdBQUQsR0FBWTtNQUFDLENBQUEsRUFBRyxDQUFKO01BQU8sQ0FBQSxFQUFHLENBQVY7TUFBYSxDQUFBLEVBQUcsQ0FBaEI7O1dBQ1osSUFBQyxDQUFBLFFBQUQsR0FBWSxJQUFDLENB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

},{"../../util":175,"./buffer":125}],130:[function(require,module,exports){
var Buffer, Memo, MemoScreen, Readback, Renderable, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Renderable = require('../renderable');

Buffer = require('./buffer');

Memo = require('./memo');

MemoScreen = require('../meshes/memoscreen');

Util = require('../../util');


/*
 * Readback up to 4D array of up to 4D data from GL
 */

Readback = (function(superClass) {
  extend(Readback, superClass);

  function Readback(renderer, shaders, options) {
    if (this.items == null) {
      this.items = options.items || 1;
    }
    if (this.channels == null) {
      this.channels = options.channels || 4;
    }
    if (this.width == null) {
      this.width = options.width || 1;
    }
    if (this.height == null) {
      this.height = options.height || 1;
    }
    if (this.depth == null) {
      this.depth = options.depth || 1;
    }
    if (this.type == null) {
      this.type = options.type || THREE.FloatType;
    }
    if (this.stpq == null) {
      this.stpq = options.stpq || false;
    }
    this.isFloat = this.type === THREE.FloatType;
    this.active = this.sampled = this.rect = this.pad = null;
    Readback.__super__.constructor.call(this, renderer, shaders);
    this.build(options);

    /*
     * log precision
    gl = @gl
    for name, pass of {Vertex: gl.VERTEX_SHADER, Fragment: gl.FRAGMENT_SHADER}
      bits = for prec in [gl.LOW_FLOAT, gl.MEDIUM_FLOAT, gl.HIGH_FLOAT]
        gl.getShaderPrecisionFormat(pass, prec).precision
      console.log name, 'shader precision',  bits
     */
  }

  Readback.prototype.build = function(options) {
    var channels, depth, encoder, h, height, indexer, isIndexed, items, map, ref, sampler, stpq, stretch, w, width;
    map = options.map;
    indexer = options.indexer;
    isIndexed = (indexer != null) && !indexer.empty();
    ref = this, items = ref.items, width = ref.width, height = ref.height, depth = ref.depth, stpq = ref.stpq;
    sampler = map;
    if (isIndexed) {
      this._adopt({
        indexModulus: {
          type: 'v4',
          value: new THREE.Vector4(items, items * width, items * width * height, 1)
        }
      });
      sampler = this.shaders.shader();
      sampler.require(map);
      sampler.require(indexer);
      sampler.pipe('float.index.pack', this.uniforms);
    }
    if (this.isFloat && this.channels > 1) {
      this.floatMemo = new Memo(this.renderer, this.shaders, {
        items: items,
        channels: 4,
        width: width,
        height: height,
        depth: depth,
        history: 0,
        type: THREE.FloatType
      });
      this.floatCompose = new MemoScreen(this.renderer, this.shaders, {
        map: sampler,
        items: items,
        width: width,
        height: height,
        depth: depth,
        stpq: stpq
      });
      this.floatMemo.adopt(this.floatCompose);
      stpq = false;
      sampler = this.shaders.shader();
      this.floatMemo.shaderAbsolute(sampler);
    }
    if (this.isFloat) {
      stretch = this.channels;
      channels = 4;
    } else {
      stretch = 1;
      channels = this.channels;
    }
    if (stretch > 1) {
      encoder = this.shaders.shader();
      encoder.pipe(Util.GLSL.mapByte2FloatOffset(stretch));
      encoder.require(sampler);
      encoder.pipe('float.stretch');
      encoder.pipe('float.encode');
      sampler = encoder;
    } else if (this.isFloat) {
      encoder = this.shaders.shader();
      encoder.pipe(sampler);
      encoder.pipe(Util.GLSL.truncateVec4(4, 1));
      encoder.pipe('float.encode');
      sampler = encoder;
    }
    this.byteMemo = new Memo(this.renderer, this.shaders, {
      items: items * stretch,
      channels: 4,
      width: width,
      height: height,
      depth: depth,
      history: 0,
      type: THREE.UnsignedByteType
    });
    this.byteCompose = new MemoScreen(this.renderer, this.shaders, {
      map: sampler,
      items: items * stretch,
      width: width,
      height: height,
      depth: depth,
      stpq: stpq
    });
    this.byteMemo.adopt(this.byteCompose);
    w = items * width * stretch;
    h = height * depth;
    this.samples = this.width * this.height * this.depth;
    this.bytes = new Uint8Array(w * h * 4);
    if (this.isFloat) {
      this.floats = new Float32Array(this.bytes.buffer);
    }
    this.data = this.isFloat ? this.floats : this.bytes;
    this.streamer = this.generate(this.data);
    this.active = {
      items: 0,
      width: 0,
      height: 0,
      depth: 0
    };
    this.sampled = {
      items: 0,
      width: 0,
      height: 0,
      depth: 0
    };
    this.rect = {
      w: 0,
      h: 0
    };
    this.pad = {
      x: 0,
      y: 0,
      z: 0,
      w: 0
    };
    this.stretch = stretch;
    this.isIndexed = isIndexed;
    return this.setActive(items, width, height, depth);
  };

  Readback.prototype.generate = function(data) {
    return Util.Data.getStreamer(data, this.samples, 4, this.items);
  };

  Readback.prototype.setActive = function(items, width, height, depth) {
    var h, ref, ref1, ref2, ref3, ref4, ref5, w;
    if (!(items !== this.active.items || width !== this.active.width || height !== this.active.height || depth !== this.active.depth)) {
      return;
    }
    ref = [items, width, height, depth], this.active.items = ref[0], this.active.width = ref[1], this.active.height = ref[2], this.active.depth = ref[3];
    if ((ref1 = this.floatCompose) != null) {
      ref1.cover(width, height, depth);
    }
    if ((ref2 = this.byteCompose) != null) {
      ref2.cover(width * this.stretch, height, depth);
    }
    items = this.items;
    width = this.active.width;
    height = this.depth === 1 ? this.active.height : this.height;
    depth = this.active.depth;
    w = items * width * this.stretch;
    h = height * depth;
    ref3 = [items, width, height, depth], this.sampled.items = ref3[0], this.sampled.width = ref3[1], this.sampled.height = ref3[2], this.sampled.depth = ref3[3];
    ref4 = [w, h], this.rect.w = ref4[0], this.rect.h = ref4[1];
    return ref5 = [this.sampled.width - this.active.width, this.sampled.height - this.active.height, this.sampled.depth - this.active.depth, this.sampled.items - this.active.items], this.pad.x = ref5[0], this.pad.y = ref5[1], this.pad.z = ref5[2], this.pad.w = ref5[3], ref5;
  };

  Readback.prototype.update = function(camera) {
    var ref, ref1;
    if ((ref = this.floatMemo) != null) {
      ref.render(camera);
    }
    return (ref1 = this.byteMemo) != null ? ref1.render(camera) : void 0;
  };

  Readback.prototype.post = function() {
    this.renderer.setRenderTarget(this.byteMemo.target.reads[0]);
    return this.gl.readPixels(0, 0, this.rect.w, this.rect.h, gl.RGBA, gl.UNSIGNED_BYTE, this.bytes);
  };

  Readback.prototype.readFloat = function(n) {
    var ref;
    return (ref = this.floatMemo) != null ? ref.read(n) : void 0;
  };

  Readback.prototype.readByte = function(n) {
    var ref;
    return (ref = this.byteMemo) != null ? ref.read(n) : void 0;
  };

  Readback.prototype.setCallback = function(callback) {
    return this.emitter = this.callback(callback);
  };

  Readback.prototype.callback = function(callback) {
    var f, m, n, o, p;
    if (!this.isIndexed) {
      return callback;
    }
    n = this.width;
    m = this.height;
    o = this.depth;
    p = this.items;
    f = function(x, y, z, w) {
      var idx, ii, jj, kk, ll;
      idx = w;
      ll = idx % p;
      idx = (idx - ll) / p;
      ii = idx % n;
      idx = (idx - ii) / n;
      jj = idx % m;
      idx = (idx - jj) / m;
      kk = idx;
      return callback(x, y, z, w, ii, jj, kk, ll);
    };
    f.reset = function() {
      return typeof callback.reset === "function" ? callback.reset() : void 0;
    };
    return f;
  };

  Readback.prototype.iterate = function() {
    var callback, consume, count, done, emit, i, j, k, l, limit, m, n, o, p, padW, padX, padY, padZ, ref, repeat, reset, skip;
    emit = this.emitter;
    if (typeof emit.reset === "function") {
      emit.reset();
    }
    ref = this.streamer, consume = ref.consume, skip = ref.skip, count = ref.count, done = ref.done, reset = ref.reset;
    reset();
    n = this.sampled.width | 0;
    m = this.sampled.height | 0;
    o = this.sampled.depth | 0;
    p = this.sampled.items | 0;
    padX = this.pad.x | 0;
    padY = this.pad.y | 0;
    padZ = this.pad.z | 0;
    padW = this.pad.w | 0;
    limit = n * m * p * (o - padZ);
    if (!this.isIndexed) {
      callback = emit;
      emit = function(x, y, z, w) {
        return callback(x, y, z, w, i, j, k, l);
      };
    }
    i = j = k = l = m = 0;
    while (!done() && m < limit) {
      m++;
      repeat = consume(emit);
      if (++l === p - padW) {
        skip(padX);
        l = 0;
        if (++i === n - padX) {
          skip(p * padX);
          i = 0;
          if (++j === m - padY) {
            skip(p * n * padY);
            j = 0;
            k++;
          }
        }
      }
      if (repeat === false) {
        break;
      }
    }
    return Math.floor(count() / p);
  };

  Readback.prototype.dispose = function() {
    var ref, ref1, ref2, ref3, ref4, ref5;
    if ((ref = this.floatMemo) != null) {
      ref.unadopt(this.floatCompose);
    }
    if ((ref1 = this.floatMemo) != null) {
      ref1.dispose();
    }
    if ((ref2 = this.floatCompose) != null) {
      ref2.dispose();
    }
    if ((ref3 = this.byteMemo) != null) {
      ref3.unadopt(this.byteCompose);
    }
    if ((ref4 = this.byteMemo) != null) {
      ref4.dispose();
    }
    if ((ref5 = this.byteCompose) != null) {
      ref5.dispose();
    }
    return this.floatMemo = this.byteMemo = this.floatCompose = this.byteCompose = null;
  };

  return Readback;

})(Renderable);

module.exports = Readback;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,

},{"../../util":175,"../meshes/memoscreen":155,"../renderable":161,"./buffer":125,"./memo":128}],131:[function(require,module,exports){
var RenderTarget, RenderToTexture, Renderable, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Renderable = require('../renderable');

RenderTarget = require('./texture/rendertarget');

Util = require('../../util');


/*
 * Render-To-Texture with history
 */

RenderToTexture = (function(superClass) {
  extend(RenderToTexture, superClass);

  function RenderToTexture(renderer, shaders, options) {
    var ref;
    this.scene = (ref = options.scene) != null ? ref : new THREE.Scene();
    this.camera = options.camera;
    RenderToTexture.__super__.constructor.call(this, renderer, shaders);
    this.build(options);
  }

  RenderToTexture.prototype.shaderRelative = function(shader) {
    if (shader == null) {
      shader = this.shaders.shader();
    }
    return shader.pipe("sample.2d", this.uniforms);
  };

  RenderToTexture.prototype.shaderAbsolute = function(shader, frames, indices) {
    var sample2DArray;
    if (frames == null) {
      frames = 1;
    }
    if (indices == null) {
      indices = 4;
    }
    if (shader == null) {
      shader = this.shaders.shader();
    }
    if (frames <= 1) {
      if (indices > 2) {
        shader.pipe(Util.GLSL.truncateVec(indices, 2));
      }
      shader.pipe("map.2d.data", this.uniforms);
      return shader.pipe("sample.2d", this.uniforms);
    } else {
      sample2DArray = Util.GLSL.sample2DArray(Math.min(frames, this.target.frames));
      if (indices < 4) {
        shader.pipe(Util.GLSL.extendVec(indices, 4));
      }
      shader.pipe("map.xyzw.2dv");
      shader.split();
      shader.pipe("map.2d.data", this.uniforms);
      shader.pass();
      return shader.pipe(sample2DArray, this.uniforms);
    }
  };

  RenderToTexture.prototype.build = function(options) {
    var base;
    if (!this.camera) {
      this.camera = new THREE.PerspectiveCamera();
      this.camera.position.set(0, 0, 3);
      this.camera.lookAt(new THREE.Vector3());
    }
    if (typeof (base = this.scene).inject === "function") {
      base.inject();
    }
    this.target = new RenderTarget(this.gl, options.width, options.height, options.frames, options);
    this.target.warmup((function(_this) {
      return function(target) {
        return _this.renderer.setRenderTarget(target);
      };
    })(this));
    this.renderer.setRenderTarget(null);
    this._adopt(this.target.uniforms);
    this._adopt({
      dataPointer: {
        type: 'v2',
        value: new THREE.Vector2(.5, .5)
      }
    });
    return this.filled = 0;
  };

  RenderToTexture.prototype.adopt = function(renderable) {
    var i, len, object, ref, results;
    ref = renderable.renders;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      object = ref[i];
      results.push(this.scene.add(object));
    }
    return results;
  };

  RenderToTexture.prototype.unadopt = function(renderable) {
    var i, len, object, ref, results;
    ref = renderable.renders;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      object = ref[i];
      results.push(this.scene.remove(object));
    }
    return results;
  };

  RenderToTexture.prototype.render = function(camera) {
    var ref;
    if (camera == null) {
      camera = this.camera;
    }
    this.renderer.render((ref = this.scene.scene) != null ? ref : this.scene, camera, this.target.write);
    this.target.cycle();
    if (this.filled < this.target.frames) {
      return this.filled++;
    }
  };

  RenderToTexture.prototype.read = function(frame) {
    if (frame == null) {
      frame = 0;
    }
    return this.target.reads[Math.abs(frame)];
  };

  RenderToTexture.prototype.getFrames = function() {
    return this.target.frames;
  };

  RenderToTexture.prototype.getFilled = function() {
    return this.filled;
  };

  RenderToTexture.prototype.dispose = function() {
    var base;
    if (typeof (base = this.scene).unject === "function") {
      base.unject();
    }
    this.scene = this.camera = null;
    this.target.dispose();
    return RenderToTexture.__super__.dispose.apply(this, arguments);
  };

  return RenderToTexture;

})(Renderable);

module.exports = RenderToTexture;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcYnVmZmVyXFxyZW5kZXJ0b3RleHR1cmUuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcYnVmZmVyXFxyZW5kZXJ0b3RleHR1cmUuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsK0NBQUE7RUFBQTs7O0FBQUEsVUFBQSxHQUFlLE9BQUEsQ0FBUSxlQUFSOztBQUNmLFlBQUEsR0FBZSxPQUFBLENBQVEsd0JBQVI7O0FBQ2YsSUFBQSxHQUFlLE9BQUEsQ0FBUSxZQUFSOzs7QUFFZjs7OztBQUdNOzs7RUFFUyx5QkFBQyxRQUFELEVBQVcsT0FBWCxFQUFvQixPQUFwQjtBQUNYLFFBQUE7SUFBQSxJQUFDLENBQUEsS0FBRCx5Q0FBMkIsSUFBSSxLQUFLLENBQUMsS0FBVixDQUFBO0lBQzNCLElBQUMsQ0FBQSxNQUFELEdBQVUsT0FBTyxDQUFDO0lBRWxCLGlEQUFNLFFBQU4sRUFBZ0IsT0FBaEI7SUFDQSxJQUFDLENBQUEsS0FBRCxDQUFPLE9BQVA7RUFMVzs7NEJBT2IsY0FBQSxHQUFnQixTQUFDLE1BQUQ7O01BQ2QsU0FBVSxJQUFDLENBQUEsT0FBTyxDQUFDLE1BQVQsQ0FBQTs7V0FDVixNQUFNLENBQUMsSUFBUCxDQUFZLFdBQVosRUFBeUIsSUFBQyxDQUFBLFFBQTFCO0VBRmM7OzRCQUloQixjQUFBLEdBQWdCLFNBQUMsTUFBRCxFQUFTLE1BQVQsRUFBcUIsT0FBckI7QUFDZCxRQUFBOztNQUR1QixTQUFTOzs7TUFBRyxVQUFVOzs7TUFDN0MsU0FBVSxJQUFDLENBQUEsT0FBTyxDQUFDLE1BQVQsQ0FBQTs7SUFDVixJQUFHLE1BQUEsSUFBVSxDQUFiO01BQ0UsSUFBaUQsT0FBQSxHQUFVLENBQTNEO1FBQUEsTUFBTSxDQUFDLElBQVAs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

},{"../../util":175,"../renderable":161,"./texture/rendertarget":135}],132:[function(require,module,exports){
var Atlas, SCRATCH_SIZE, TextAtlas,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Atlas = require('./atlas');

SCRATCH_SIZE = 512 / 16;


/*
 * Dynamic text atlas
 * - Stores entire strings as sprites
 * - Renders alpha mask (fast) or signed distance field (slow)
 * - Emits (x,y,width,height) pointers into the atlas
 */

TextAtlas = (function(superClass) {
  extend(TextAtlas, superClass);

  function TextAtlas(renderer, shaders, options) {
    var ref, ref1, ref2, ref3, ref4, ref5, ua;
    this.font = (ref = options.font) != null ? ref : ['sans-serif'];
    this.size = options.size || 24;
    this.style = (ref1 = options.style) != null ? ref1 : 'normal';
    this.variant = (ref2 = options.variant) != null ? ref2 : 'normal';
    this.weight = (ref3 = options.weight) != null ? ref3 : 'normal';
    this.outline = (ref4 = +((ref5 = options.outline) != null ? ref5 : 5)) != null ? ref4 : 0;
    options.width || (options.width = 256);
    options.height || (options.height = 256);
    options.type = THREE.UnsignedByteType;
    options.channels = 1;
    options.backed = true;
    this.gamma = 1;
    if (typeof navigator !== 'undefined') {
      ua = navigator.userAgent;
      if (ua.match(/Chrome/) && ua.match(/OS X/)) {
        this.gamma = .5;
      }
    }
    this.scratchW = this.scratchH = 0;
    TextAtlas.__super__.constructor.call(this, renderer, shaders, options);
  }

  TextAtlas.prototype.build = function(options) {
    var canvas, colors, context, dilate, font, hex, i, k, lineHeight, maxWidth, quote, ref, scratch;
    TextAtlas.__super__.build.call(this, options);
    lineHeight = 16;
    lineHeight = this.size;
    lineHeight += 4 + 2 * Math.min(1, this.outline);
    maxWidth = SCRATCH_SIZE * lineHeight;
    canvas = document.createElement('canvas');
    canvas.width = maxWidth;
    canvas.height = lineHeight;
    quote = function(str) {
      return "\"" + (str.replace(/(['"\\])/g, '\\$1')) + "\"";
    };
    font = this.font.map(quote).join(", ");
    context = canvas.getContext('2d');
    context.font = this.style + " " + this.variant + " " + this.weight + " " + this.size + "px " + this.font;
    context.fillStyle = '#FF0000';
    context.textAlign = 'left';
    context.textBaseline = 'bottom';
    context.lineJoin = 'round';

    /*
    document.body.appendChild canvas
    canvas.setAttribute('style', "position: absolute; top: 0; left: 0; z-index: 100; border: 1px solid red; background: rgba(255,0,255,.25);")
     */
    colors = [];
    dilate = this.outline * 3;
    for (i = k = 0, ref = dilate; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {
      hex = ('00' + Math.max(0, -i * 8 + 128 - (!i) * 8).toString(16)).slice(-2);
      colors.push('#' + hex + hex + hex);
    }
    scratch = new Uint8Array(maxWidth * lineHeight * 2);
    this.canvas = canvas;
    this.context = context;
    this.lineHeight = lineHeight;
    this.maxWidth = maxWidth;
    this.colors = colors;
    this.scratch = scratch;
    this._allocate = this.allocate.bind(this);
    return this._write = this.write.bind(this);
  };

  TextAtlas.prototype.reset = function() {
    TextAtlas.__super__.reset.apply(this, arguments);
    return this.mapped = {};
  };

  TextAtlas.prototype.begin = function() {
    var k, len, ref, results, row;
    ref = this.rows;
    results = [];
    for (k = 0, len = ref.length; k < len; k++) {
      row = ref[k];
      results.push(row.alive = 0);
    }
    return results;
  };

  TextAtlas.prototype.end = function() {
    var k, key, l, len, len1, mapped, ref, ref1, row;
    mapped = this.mapped;
    ref = this.rows.slice();
    for (k = 0, len = ref.length; k < len; k++) {
      row = ref[k];
      if (!(row.alive === 0)) {
        continue;
      }
      ref1 = row.keys;
      for (l = 0, len1 = ref1.length; l < len1; l++) {
        key = ref1[l];
        delete mapped[key];
      }
      this.collapse(row);
    }
  };

  TextAtlas.prototype.map = function(text, emit) {
    var allocate, c, data, h, mapped, w, write;
    mapped = this.mapped;
    c = mapped[text];
    if (c != null) {
      c.row.alive++;
      return emit(c.x, c.y, c.w, c.h);
    }
    this.draw(text);
    data = this.scratch;
    w = this.scratchW;
    h = this.scratchH;
    allocate = this._allocate;
    write = this._write;
    return allocate(text, w, h, function(row, x, y) {
      mapped[text] = {
        x: x,
        y: y,
        w: w,
        h: h,
        row: row
      };
      write(data, x, y, w, h);
      return emit(x, y, w, h);
    });
  };

  TextAtlas.prototype.draw = function(text) {
    var a, b, c, colors, ctx, data, dst, gamma, h, i, imageData, j, k, l, m, mask, max, n, o, ref, ref1, ref2, w, x, y;
    w = this.width;
    h = this.lineHeight;
    o = this.outline;
    ctx = this.context;
    dst = this.scratch;
    max = this.maxWidth;
    colors = this.colors;
    x = o + 1;
    y = Math.round(h * 1.05 - 1);
    m = ctx.measureText(text);
    w = Math.min(max, Math.ceil(m.width + 2 * x + 1));
    ctx.clearRect(0, 0, w, h);
    if (this.outline === 0) {
      ctx.fillText(text, x, y);
      data = (imageData = ctx.getImageData(0, 0, w, h)).data;
      j = 3;
      for (i = k = 0, ref = data.length / 4; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {
        dst[i] = data[j];
        j += 4;
      }
      this.scratchW = w;
      return this.scratchH = h;
    } else {
      ctx.globalCompositeOperation = 'source-over';
      for (i = l = ref1 = o + 1; ref1 <= 1 ? l <= 1 : l >= 1; i = ref1 <= 1 ? ++l : --l) {
        j = i > 1 ? i * 2 - 2 : i;
        ctx.strokeStyle = colors[j - 1];
        ctx.lineWidth = j;
        ctx.strokeText(text, x, y);
      }
      ctx.globalCompositeOperation = 'multiply';
      ctx.fillText(text, x, y);
      data = (imageData = ctx.getImageData(0, 0, w, h)).data;
      j = 0;
      gamma = this.gamma;
      for (i = n = 0, ref2 = data.length / 4; 0 <= ref2 ? n < ref2 : n > ref2; i = 0 <= ref2 ? ++n : --n) {
        a = data[j];
        mask = a ? data[j + 1] / a : 1;
        if (gamma === .5) {
          mask = Math.sqrt(mask);
        }
        mask = Math.min(1, Math.max(0, mask));
        b = 256 - a;
        c = b + (a - b) * mask;
        dst[i] = Math.max(0, Math.min(255, c + 2));
        j += 4;
      }

      /*
      j = 0
      for i in [0...data.length / 4]
        v = dst[i]
        #data[j] = v
        #data[j+1] = v
        data[j+2] = v
        data[j+3] = 255
        j += 4
      ctx.putImageData imageData, 0, 0
       */
      this.scratchW = w;
      return this.scratchH = h;
    }
  };

  return TextAtlas;

})(Atlas);

module.exports = TextAtlas;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcYnVmZmVyXFx0ZXh0YXRsYXMuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcYnVmZmVyXFx0ZXh0YXRsYXMuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsOEJBQUE7RUFBQTs7O0FBQUEsS0FBQSxHQUFRLE9BQUEsQ0FBUSxTQUFSOztBQUVSLFlBQUEsR0FBZSxHQUFBLEdBQU07OztBQUVyQjs7Ozs7OztBQU1NOzs7RUFDUyxtQkFBQyxRQUFELEVBQVcsT0FBWCxFQUFvQixPQUFwQjtBQUNYLFFBQUE7SUFBQSxJQUFDLENBQUEsSUFBRCx3Q0FBMEIsQ0FBQyxZQUFEO0lBQzFCLElBQUMsQ0FBQSxJQUFELEdBQVcsT0FBTyxDQUFDLElBQVIsSUFBZ0I7SUFDM0IsSUFBQyxDQUFBLEtBQUQsMkNBQTJCO0lBQzNCLElBQUMsQ0FBQSxPQUFELDZDQUE2QjtJQUM3QixJQUFDLENBQUEsTUFBRCw0Q0FBNEI7SUFDNUIsSUFBQyxDQUFBLE9BQUQsNEVBQW9DO0lBRXBDLE9BQU8sQ0FBQyxVQUFSLE9BQU8sQ0FBQyxRQUFhO0lBQ3JCLE9BQU8sQ0FBQyxXQUFSLE9BQU8sQ0FBQyxTQUFhO0lBRXJCLE9BQU8sQ0FBQyxJQUFSLEdBQW1CLEtBQUssQ0FBQztJQUN6QixPQUFPLENBQUMsUUFBUixHQUFtQjtJQUNuQixPQUFPLENBQUMsTUFBUixHQUFtQjtJQUVuQixJQUFDLENBQUEsS0FBRCxHQUFTO0lBQ1QsSUFBRyxPQUFPLFNBQVAsS0FBb0IsV0FBdkI7TUFDRSxFQUFBLEdBQUssU0FBUyxDQUFDO01BQ2YsSUFBZSxFQUFFLENBQUMsS0FBSCxDQUFTLFFBQVQsQ0FBQSxJQUF1QixFQUFFLENBQUMsS0FBSCxDQUFTLE1BQVQsQ0FBdEM7UUFBQSxJ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

},{"./atlas":124}],133:[function(require,module,exports){
var BackedTexture, DataTexture, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Util = require('../../../Util');

DataTexture = require('./datatexture');


/*
Manually allocated GL texture for data streaming, locally backed.

Allows partial updates via subImage.
Contains local copy of its data to allow quick resizing without gl.copyTexImage2d
(which requires render-to-framebuffer)
 */

BackedTexture = (function(superClass) {
  extend(BackedTexture, superClass);

  function BackedTexture(renderer, width, height, channels, options) {
    BackedTexture.__super__.constructor.call(this, renderer, width, height, channels, options);
    this.data = new this.ctor(this.n);
  }

  BackedTexture.prototype.resize = function(width, height) {
    var gl, old, oldHeight, oldWidth, state;
    old = this.data;
    oldWidth = this.width;
    oldHeight = this.height;
    this.width = width;
    this.height = height;
    this.n = width * height * this.channels;
    this.data = new this.ctor(this.n);
    gl = this.gl;
    state = this.renderer.state;
    state.bindTexture(gl.TEXTURE_2D, this.texture);
    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);
    gl.texImage2D(gl.TEXTURE_2D, 0, this.format, width, height, 0, this.format, this.type, this.data);
    this.uniforms.dataResolution.value.set(1 / width, 1 / height);
    return this.write(old, 0, 0, oldWidth, oldHeight);
  };

  BackedTexture.prototype.write = function(src, x, y, w, h) {
    var channels, dst, i, j, k, n, stride, width, ww, xx, yh, yy;
    width = this.width;
    dst = this.data;
    channels = this.channels;
    i = 0;
    if (width === w && x === 0) {
      j = y * w * channels;
      n = w * h * channels;
      while (i < n) {
        dst[j++] = src[i++];
      }
    } else {
      stride = width * channels;
      ww = w * channels;
      xx = x * channels;
      yy = y;
      yh = y + h;
      while (yy < yh) {
        k = 0;
        j = xx + yy * stride;
        while (k++ < ww) {
          dst[j++] = src[i++];
        }
        yy++;
      }
    }
    return BackedTexture.__super__.write.call(this, src, x, y, w, h);
  };

  BackedTexture.prototype.dispose = function() {
    this.data = null;
    return BackedTexture.__super__.dispose.apply(this, arguments);
  };

  return BackedTexture;

})(DataTexture);

module.exports = BackedTexture;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcYnVmZmVyXFx0ZXh0dXJlXFxiYWNrZWR0ZXh0dXJlLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxyZW5kZXJcXGJ1ZmZlclxcdGV4dHVyZVxcYmFja2VkdGV4dHVyZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxnQ0FBQTtFQUFBOzs7QUFBQSxJQUFBLEdBQU8sT0FBQSxDQUFRLGVBQVI7O0FBQ1AsV0FBQSxHQUFjLE9BQUEsQ0FBUSxlQUFSOzs7QUFFZDs7Ozs7Ozs7QUFPTTs7O0VBQ1MsdUJBQUMsUUFBRCxFQUFXLEtBQVgsRUFBa0IsTUFBbEIsRUFBMEIsUUFBMUIsRUFBb0MsT0FBcEM7SUFDWCwrQ0FBTSxRQUFOLEVBQWdCLEtBQWhCLEVBQXVCLE1BQXZCLEVBQStCLFFBQS9CLEVBQXlDLE9BQXpDO0lBQ0EsSUFBQyxDQUFBLElBQUQsR0FBWSxJQUFJLElBQUMsQ0FBQSxJQUFMLENBQVUsSUFBQyxDQUFBLENBQVg7RUFGRDs7MEJBSWIsTUFBQSxHQUFRLFNBQUMsS0FBRCxFQUFRLE1BQVI7QUFDTixRQUFBO0lBQUEsR0FBQSxHQUFZLElBQUMsQ0FBQTtJQUNiLFFBQUEsR0FBWSxJQUFDLENBQUE7SUFDYixTQUFBLEdBQVksSUFBQyxDQUFBO0lBRWIsSUFBQyxDQUFBLEtBQUQsR0FBVTtJQUNWLElBQUMsQ0FBQSxNQUFELEdBQVU7SUFDVixJQUFDLENBQUEsQ0FBRCxHQUFVLEtBQUEsR0FBUSxNQUFSLEdBQWlCLElBQUMsQ0FBQTtJQUM1QixJQUFDLENBQUEsSUFBRCxHQUFVLElBQUksSUFBQyxDQUFBLElBQUwsQ0FBVSxJQUFDLENBQUEsQ0FBWDtJQUVWLEVBQUEsR0FBSyxJQUFDLENBQUE7SUFDTixLQUFBLEdBQVEsSUFBQyxDQUFBLFFBQVEsQ0FBQztJQUNsQixLQUFLLENBQUMsV0FBTixDQUFrQixFQUFFLENBQUMsVUFBckIsRUFBaUMsSUFBQyxDQUFBLE9BQWxDO0lBQ0EsRUFBRSxDQUFDLFdBQUgsQ0FBZSxFQUFFLENBQUMsZ0JBQWxCLEVBQW9DLENBQXBDO0lBQ0EsRUFBRSxDQUFDLFVBQUgsQ0FBZSxFQUFFLENBQUMsVUFBbEIsRUFBOEIsQ0FBOUIsRUFBaUMsSUFBQyxDQUFBLE1BQWxDLEVBQTBDLEtBQTFDLEVBQWlELE1BQWpELEVBQXlELENBQXpELEVBQTRELElBQUMsQ0FBQSxNQUE3RCxFQUFxRSxJQUFDLENBQUEsSUFBdEUsRUFBNEUsSUFBQyxDQUFBLElBQTdFO0lBRUEsSUFBQyxDQUFBLFFBQVEsQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLEdBQS9CLENBQW1DLENBQUEsR0FBSSxLQUF2QyxFQUE4QyxDQUFBLEdBQUksTUFBbEQ7V0FFQSxJQUFDLENBQUEsS0FBRCxDQUFPLEdBQVAsRUFBWSxDQUFaLEVBQWUsQ0FBZixFQUFrQixRQUFsQixFQUE0QixTQUE1QjtFQWxCTTs7MEJBb0JSLEtBQUEsR0FBTyxTQUFDLEdBQUQsRUFBTSxDQUFOLEVBQVMsQ0FBVCxFQUFZLENBQVosRUFBZSxDQUFmO0FBQ0wsUUFBQTtJQUFBLEtBQUEsR0FBVyxJQUFDLENBQUE7SUFDWixHQUFBLEdBQVcsSUFBQyxDQUFBO0lBQ1osUUFBQSxHQUFXLElBQUMsQ0FBQTtJQUVaLENBQUEsR0FBSTtJQUNKLElBQUcsS0FBQSxLQUFTLENBQVQsSUFBZSxDQUFBLEtBQUssQ0FBdkI7TUFDRSxDQUFBLEdBQUksQ0FBQSxHQUFJLENBQUosR0FBUTtNQUNaLENBQUEsR0FBSSxDQUFBLEdBQUksQ0FBSixHQUFRO0FBQ1EsYUFBTSxDQUFBLEdBQUksQ0FBVjtRQUFwQixHQUFJLENBQUEsQ0FBQSxFQUFBLENBQUosR0FBVyxHQUFJLENBQUEsQ0FBQSxFQUFBO01BQUssQ0FIdEI7S0FBQSxNQUFBO01BS0UsTUFBQSxHQUFTLEtBQUEsR0FBUTtNQUNqQixFQUFBLEdBQUssQ0FBQSxHQUFJO01BQ1QsRUFBQSxHQUFLLENBQUEsR0FBSTtNQUNULEVBQUEsR0FBSztNQUNMLEVBQUEsR0FBSyxDQUFBLEdBQUk7QUFDVCxhQUFNLEVBQUEsR0FBSyxFQUFYO1FBQ0UsQ0FBQSxHQUFJO1FBQ0osQ0FBQSxHQUFJLEVBQUEsR0FBSyxFQUFBLEdBQUs7QUFDTSxlQUFNLENBQUEsRUFBQSxHQUFNLEVBQVo7VUFBcEIsR0FBSSxDQUFBLENBQUEsRUFBQSxDQUFKLEdBQVcsR0FBSSxDQUFBLENBQUEsRUFBQTtRQUFLO1FBQ3BCLEVBQUE7TUFKRixDQVZGOztXQWdCQSx5Q0FBTSxHQUFOLEVBQVcsQ0FBWCxFQUFjLENBQWQsRUFBaUIsQ0FBakIsRUFBb0IsQ0FBcEI7RUF0Qks7OzBCQXdCUCxPQUFBLEdBQVMsU0FBQTtJQUNQLElBQUMsQ0FBQSxJQUFELEdBQVE7V0FDUiw0Q0FBQSxTQUFBO0VBRk87Ozs7R0FqRGlCOztBQXFENUIsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"../../../Util":23,"./datatexture":134}],134:[function(require,module,exports){
var DataTexture, Util;

Util = require('../../../Util');


/*
Manually allocated GL texture for data streaming.

Allows partial updates via subImage.
 */

DataTexture = (function() {
  function DataTexture(renderer, width, height, channels, options) {
    var gl, magFilter, minFilter, ref, ref1, ref2, type;
    this.renderer = renderer;
    this.width = width;
    this.height = height;
    this.channels = channels;
    this.n = this.width * this.height * this.channels;
    gl = this.gl = this.renderer.context;
    minFilter = (ref = options.minFilter) != null ? ref : THREE.NearestFilter;
    magFilter = (ref1 = options.magFilter) != null ? ref1 : THREE.NearestFilter;
    type = (ref2 = options.type) != null ? ref2 : THREE.FloatType;
    this.minFilter = Util.Three.paramToGL(gl, minFilter);
    this.magFilter = Util.Three.paramToGL(gl, magFilter);
    this.type = Util.Three.paramToGL(gl, type);
    this.ctor = Util.Three.paramToArrayStorage(type);
    this.build(options);
  }

  DataTexture.prototype.build = function(options) {
    var gl, state;
    gl = this.gl;
    state = this.renderer.state;
    this.texture = gl.createTexture();
    this.format = [null, gl.LUMINANCE, gl.LUMINANCE_ALPHA, gl.RGB, gl.RGBA][this.channels];
    this.format3 = [null, THREE.LuminanceFormat, THREE.LuminanceAlphaFormat, THREE.RGBFormat, THREE.RGBAFormat][this.channels];
    state.bindTexture(gl.TEXTURE_2D, this.texture);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, this.minFilter);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, this.magFilter);
    this.data = new this.ctor(this.n);
    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);
    gl.texImage2D(gl.TEXTURE_2D, 0, this.format, this.width, this.height, 0, this.format, this.type, this.data);
    this.textureObject = new THREE.Texture(new Image(), THREE.UVMapping, THREE.ClampToEdgeWrapping, THREE.ClampToEdgeWrapping, options.minFilter, options.magFilter);
    this.textureProperties = this.renderer.properties.get(this.textureObject);
    this.textureProperties.__webglInit = true;
    this.textureProperties.__webglTexture = this.texture;
    this.textureObject.format = this.format3;
    this.textureObject.type = THREE.FloatType;
    this.textureObject.unpackAlignment = 1;
    this.textureObject.flipY = false;
    this.textureObject.generateMipmaps = false;
    return this.uniforms = {
      dataResolution: {
        type: 'v2',
        value: new THREE.Vector2(1 / this.width, 1 / this.height)
      },
      dataTexture: {
        type: 't',
        value: this.textureObject
      }
    };
  };

  DataTexture.prototype.write = function(data, x, y, w, h) {
    var gl, state;
    gl = this.gl;
    state = this.renderer.state;
    state.bindTexture(gl.TEXTURE_2D, this.texture);
    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);
    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);
    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);
    return gl.texSubImage2D(gl.TEXTURE_2D, 0, x, y, w, h, this.format, this.type, data);
  };

  DataTexture.prototype.dispose = function() {
    this.gl.deleteTexture(this.texture);
    this.textureProperties.__webglInit = false;
    this.textureProperties.__webglTexture = null;
    this.textureProperties = null;
    return this.textureObject = this.texture = null;
  };

  return DataTexture;

})();

module.exports = DataTexture;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcYnVmZmVyXFx0ZXh0dXJlXFxkYXRhdGV4dHVyZS5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccmVuZGVyXFxidWZmZXJcXHRleHR1cmVcXGRhdGF0ZXh0dXJlLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBOztBQUFBLElBQUEsR0FBTyxPQUFBLENBQVEsZUFBUjs7O0FBRVA7Ozs7OztBQUtNO0VBQ1MscUJBQUMsUUFBRCxFQUFZLEtBQVosRUFBb0IsTUFBcEIsRUFBNkIsUUFBN0IsRUFBd0MsT0FBeEM7QUFDWCxRQUFBO0lBRFksSUFBQyxDQUFBLFdBQUQ7SUFBVyxJQUFDLENBQUEsUUFBRDtJQUFRLElBQUMsQ0FBQSxTQUFEO0lBQVMsSUFBQyxDQUFBLFdBQUQ7SUFDeEMsSUFBQyxDQUFBLENBQUQsR0FBSyxJQUFDLENBQUEsS0FBRCxHQUFTLElBQUMsQ0FBQSxNQUFWLEdBQW1CLElBQUMsQ0FBQTtJQUV6QixFQUFBLEdBQUssSUFBQyxDQUFBLEVBQUQsR0FBTSxJQUFDLENBQUEsUUFBUSxDQUFDO0lBQ3JCLFNBQUEsNkNBQWdDLEtBQUssQ0FBQztJQUN0QyxTQUFBLCtDQUFnQyxLQUFLLENBQUM7SUFDdEMsSUFBQSwwQ0FBZ0MsS0FBSyxDQUFDO0lBRXRDLElBQUMsQ0FBQSxTQUFELEdBQWEsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFYLENBQXFCLEVBQXJCLEVBQXlCLFNBQXpCO0lBQ2IsSUFBQyxDQUFBLFNBQUQsR0FBYSxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVgsQ0FBcUIsRUFBckIsRUFBeUIsU0FBekI7SUFDYixJQUFDLENBQUEsSUFBRCxHQUFhLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBWCxDQUFxQixFQUFyQixFQUF5QixJQUF6QjtJ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

},{"../../../Util":23}],135:[function(require,module,exports){

/*
Virtual RenderTarget that cycles through multiple frames
Provides easy access to past rendered frames
@reads[] and @write contain WebGLRenderTargets whose internal pointers are rotated automatically
 */
var RenderTarget;

RenderTarget = (function() {
  function RenderTarget(gl, width, height, frames, options) {
    this.gl = gl;
    if (options == null) {
      options = {};
    }
    if (options.minFilter == null) {
      options.minFilter = THREE.NearestFilter;
    }
    if (options.magFilter == null) {
      options.magFilter = THREE.NearestFilter;
    }
    if (options.format == null) {
      options.format = THREE.RGBAFormat;
    }
    if (options.type == null) {
      options.type = THREE.UnsignedByteType;
    }
    this.options = options;
    this.width = width || 1;
    this.height = height || 1;
    this.frames = frames || 1;
    this.buffers = this.frames + 1;
    this.build();
  }

  RenderTarget.prototype.build = function() {
    var i, make, target;
    make = (function(_this) {
      return function() {
        return new THREE.WebGLRenderTarget(_this.width, _this.height, _this.options);
      };
    })(this);
    this.targets = (function() {
      var j, ref, results;
      results = [];
      for (i = j = 0, ref = this.buffers; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
        results.push(make());
      }
      return results;
    }).call(this);
    this.reads = (function() {
      var j, len, ref, results;
      ref = this.targets;
      results = [];
      for (j = 0, len = ref.length; j < len; j++) {
        target = ref[j];
        results.push(target.texture);
      }
      return results;
    }).call(this);
    this.write = this.targets[this.buffers - 1];
    return this.uniforms = {
      dataResolution: {
        type: 'v2',
        value: new THREE.Vector2(1 / this.width, 1 / this.height)
      },
      dataTexture: {
        type: 't',
        value: this.reads[0]
      },
      dataTextures: {
        type: 'tv',
        value: this.reads
      }
    };
  };

  RenderTarget.prototype.cycle = function() {
    this.targets.unshift(this.targets.pop());
    this.write = this.targets[this.buffers - 1];
    this.reads.unshift(this.reads.pop());
    return this.uniforms.dataTexture.value = this.reads[0];
  };

  RenderTarget.prototype.warmup = function(callback) {
    var i, j, ref, results;
    results = [];
    for (i = j = 0, ref = this.buffers; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      callback(this.write);
      results.push(this.cycle());
    }
    return results;
  };

  RenderTarget.prototype.dispose = function() {
    var j, len, ref, target;
    ref = this.targets;
    for (j = 0, len = ref.length; j < len; j++) {
      target = ref[j];
      target.dispose();
    }
    return this.targets = this.reads = this.write = null;
  };

  return RenderTarget;

})();

module.exports = RenderTarget;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcYnVmZmVyXFx0ZXh0dXJlXFxyZW5kZXJ0YXJnZXQuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcYnVmZmVyXFx0ZXh0dXJlXFxyZW5kZXJ0YXJnZXQuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7QUFBQSxJQUFBOztBQUtNO0VBQ1Msc0JBQUMsRUFBRCxFQUFNLEtBQU4sRUFBYSxNQUFiLEVBQXFCLE1BQXJCLEVBQTZCLE9BQTdCO0lBQUMsSUFBQyxDQUFBLEtBQUQ7O01BQTRCLFVBQVU7OztNQUNsRCxPQUFPLENBQUMsWUFBYSxLQUFLLENBQUM7OztNQUMzQixPQUFPLENBQUMsWUFBYSxLQUFLLENBQUM7OztNQUMzQixPQUFPLENBQUMsU0FBYSxLQUFLLENBQUM7OztNQUMzQixPQUFPLENBQUMsT0FBYSxLQUFLLENBQUM7O0lBRTNCLElBQUMsQ0FBQSxPQUFELEdBQVc7SUFFWCxJQUFDLENBQUEsS0FBRCxHQUFXLEtBQUEsSUFBVTtJQUNyQixJQUFDLENBQUEsTUFBRCxHQUFXLE1BQUEsSUFBVTtJQUNyQixJQUFDLENBQUEsTUFBRCxHQUFXLE1BQUEsSUFBVTtJQUNyQixJQUFDLENBQUEsT0FBRCxHQUFXLElBQUMsQ0FBQSxNQUFELEdBQVU7SUFFckIsSUFBQyxDQUFBLEtBQUQsQ0FBQTtFQWJXOzt5QkFlYixLQUFBLEdBQU8sU0FBQTtBQUVMLFFBQUE7SUFBQSxJQUFBLEdBQU8sQ0FBQSxTQUFBLEtBQUE7YUFBQSxTQUFBO2VBQU0sSUFBSSxLQUFLLENBQUMsaUJBQVYsQ0FBNEIsS0FBQyxDQUFBLEtBQTdCLEVBQW9DLEtBQUMsQ0FBQSxNQUFyQyxFQUE2QyxLQUFDLENBQUEsT0FBOUM7TUFBTjtJQUFBLENBQUEsQ0FBQSxDQUFBLElBQUE7SUFFUCxJQUFDLENBQUEsT0FBRDs7QUFBWTtXQUFnQixxRkFBaEI7cUJBQUEsSUFBQSxDQUFBO0FBQUE7OztJQUNaLElBQUMsQ0FBQSxLQUFEOztBQUFZO0FBQUE7V0FBQSxxQ0FBQTs7cUJBQUEsTUFBTSxDQUFDO0FBQVA7OztJQUNaLElBQUMsQ0FBQSxLQUFELEdBQVcsSUFBQyxDQUFBLE9BQVEsQ0FBQSxJQUFDLENBQUEsT0FBRCxHQUFTLENBQVQ7V0FHcEIsSUFBQyxDQUFBLFFBQUQsR0FDRTtNQUFBLGNBQUEsRUFDRTtRQUFBLElBQUEsRUFBTSxJQUFOO1FBQ0EsS0FBQSxFQUFPLElBQUksS0FBSyxDQUFDLE9BQVYsQ0FBa0IsQ0FBQSxHQUFJLElBQUMsQ0FBQSxLQUF2QixFQUE4QixDQUFBLEdBQUksSUFBQyxDQUFBLE1BQW5DLENBRFA7T0FERjtNQUdBLFdBQUEsRUFDRTtRQUFBLElBQUEsRUFBTSxHQUFOO1FBQ0EsS0FBQSxFQUFPLElBQUMsQ0FBQSxLQUFNLENBQUEsQ0FBQSxDQURkO09BSkY7TUFNQSxZQUFBLEVBQ0U7UUFBQSxJQUFBLEVBQU0sSUFBTjtRQUNBLEtBQUEsRUFBTyxJQUFDLENBQUEsS0FEUjtPQVBGOztFQVZHOzt5QkFvQlAsS0FBQSxHQUFPLFNBQUE7SUFDTCxJQUFDLENBQUEsT0FBTyxDQUFDLE9BQVQsQ0FBaUIsSUFBQyxDQUFBLE9BQU8sQ0FBQyxHQUFULENBQUEsQ0FBakI7SUFDQSxJQUFDLENBQUEsS0FBRCxHQUFTLElBQUMsQ0FBQSxPQUFRLENBQUEsSUFBQyxDQUFBLE9BQUQsR0FBUyxDQUFUO0lBQ2xCLElBQUMsQ0FBQSxLQUFLLENBQUMsT0FBUCxDQUFlLElBQUMsQ0FBQSxLQUFLLENBQUMsR0FBUCxDQUFBLENBQWY7V0FDQSxJQUFDLENBQUEsUUFBUSxDQUFDLFdBQVcsQ0FBQyxLQUF0QixHQUE4QixJQUFDLENBQUEsS0FBTSxDQUFBLENBQUE7RUFKaEM7O3lCQU1QLE1BQUEsR0FBUSxTQUFDLFFBQUQ7QUFDTixRQUFBO0FBQUE7U0FBUyxxRkFBVDtNQUNFLFFBQUEsQ0FBUyxJQUFDLENBQUEsS0FBVjttQkFDQSxJQUFDLENBQUEsS0FBRCxDQUFBO0FBRkY7O0VBRE07O3lCQUtSLE9BQUEsR0FBUyxTQUFBO0FBQ1AsUUFBQTtBQUFBO0FBQUEsU0FBQSxxQ0FBQTs7TUFBQSxNQUFNLENBQUMsT0FBUCxDQUFBO0FBQUE7V0FDQSxJQUFDLENBQUEsT0FBRCxHQUFXLElBQUMsQ0FBQSxLQUFELEdBQVMsSUFBQyxDQUFBLEtBQUQsR0FBUztFQUZ0Qjs7Ozs7O0FBSVgsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{}],136:[function(require,module,exports){
var DataBuffer, Util, VoxelBuffer,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

DataBuffer = require('./databuffer');

Util = require('../../util');

VoxelBuffer = (function(superClass) {
  extend(VoxelBuffer, superClass);

  function VoxelBuffer() {
    return VoxelBuffer.__super__.constructor.apply(this, arguments);
  }

  VoxelBuffer.prototype.build = function(options) {
    VoxelBuffer.__super__.build.apply(this, arguments);
    this.pad = {
      x: 0,
      y: 0,
      z: 0
    };
    return this.streamer = this.generate(this.data);
  };

  VoxelBuffer.prototype.setActive = function(i, j, k) {
    var ref;
    return ref = [Math.max(0, this.width - i), Math.max(0, this.height - j), Math.max(0, this.depth - k)], this.pad.x = ref[0], this.pad.y = ref[1], this.pad.z = ref[2], ref;
  };

  VoxelBuffer.prototype.fill = function() {
    var callback, count, done, emit, i, j, k, l, limit, m, n, o, padX, padY, ref, repeat, reset, skip;
    callback = this.callback;
    if (typeof callback.reset === "function") {
      callback.reset();
    }
    ref = this.streamer, emit = ref.emit, skip = ref.skip, count = ref.count, done = ref.done, reset = ref.reset;
    reset();
    n = this.width;
    m = this.height;
    o = this.depth;
    padX = this.pad.x;
    padY = this.pad.y;
    limit = this.samples - this.pad.z * n * m;
    i = j = k = l = 0;
    if (padX > 0 || padY > 0) {
      while (!done() && l < limit) {
        l++;
        repeat = callback(emit, i, j, k);
        if (++i === n - padX) {
          skip(padX);
          i = 0;
          if (++j === m - padY) {
            skip(n * padY);
            j = 0;
            k++;
          }
        }
        if (repeat === false) {
          break;
        }
      }
    } else {
      while (!done() && l < limit) {
        l++;
        repeat = callback(emit, i, j, k);
        if (++i === n) {
          i = 0;
          if (++j === m) {
            j = 0;
            k++;
          }
        }
        if (repeat === false) {
          break;
        }
      }
    }
    return Math.floor(count() / this.items);
  };

  VoxelBuffer.prototype.through = function(callback, target) {
    var consume, done, dst, emit, i, j, k, pipe, ref, src;
    ref = src = this.streamer, consume = ref.consume, done = ref.done;
    emit = (dst = target.streamer).emit;
    i = j = k = 0;
    pipe = function() {
      return consume(function(x, y, z, w) {
        return callback(emit, x, y, z, w, i, j, k);
      });
    };
    pipe = Util.Data.repeatCall(pipe, this.items);
    return (function(_this) {
      return function() {
        var l, limit, m, n, o, padX, padY;
        src.reset();
        dst.reset();
        n = _this.width;
        m = _this.height;
        o = _this.depth;
        padX = _this.pad.x;
        padY = _this.pad.y;
        limit = _this.samples - _this.pad.z * n * m;
        i = j = k = l = 0;
        if (padX > 0 || padY > 0) {
          while (!done() && l < limit) {
            l++;
            pipe();
            if (++i === n - padX) {
              skip(padX);
              i = 0;
              if (++j === m - padY) {
                skip(n * padY);
                j = 0;
                k++;
              }
            }
          }
        } else {
          while (!done() && l < limit) {
            l++;
            pipe();
            if (++i === n) {
              i = 0;
              if (++j === m) {
                j = 0;
                k++;
              }
            }
          }
        }
        return src.count();
      };
    })(this);
  };

  return VoxelBuffer;

})(DataBuffer);

module.exports = VoxelBuffer;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcYnVmZmVyXFx2b3hlbGJ1ZmZlci5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccmVuZGVyXFxidWZmZXJcXHZveGVsYnVmZmVyLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLDZCQUFBO0VBQUE7OztBQUFBLFVBQUEsR0FBYyxPQUFBLENBQVEsY0FBUjs7QUFDZCxJQUFBLEdBQWMsT0FBQSxDQUFRLFlBQVI7O0FBS1I7Ozs7Ozs7d0JBQ0osS0FBQSxHQUFPLFNBQUMsT0FBRDtJQUNMLHdDQUFBLFNBQUE7SUFDQSxJQUFDLENBQUEsR0FBRCxHQUFZO01BQUMsQ0FBQSxFQUFHLENBQUo7TUFBTyxDQUFBLEVBQUcsQ0FBVjtNQUFhLENBQUEsRUFBRyxDQUFoQjs7V0FDWixJQUFDLENBQUEsUUFBRCxHQUFZLElBQUMsQ0FBQSxRQUFELENBQVUsSUFBQyxDQUFBLElBQVg7RUFIUDs7d0JBS1AsU0FBQSxHQUFXLFNBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxDQUFQO0FBQWEsUUFBQTtXQUFBLE1BQTJCLENBQ2pELElBQUksQ0FBQyxHQUFMLENBQVMsQ0FBVCxFQUFZLElBQUMsQ0FBQSxLQUFELEdBQVMsQ0FBckIsQ0FEaUQsRUFDeEIsSUFBSSxDQUFDLEdBQUwsQ0FBUyxDQUFULEVBQVksSUFBQyxDQUFBLE1BQUQsR0FBVSxDQUF0QixDQUR3QixFQUNFLElBQUksQ0FBQyxHQUFMLENBQVMsQ0FBVCxFQUFZLElBQUMsQ0FBQSxLQUFELEdBQVMsQ0FBckIsQ0FERixDQUEzQixFQUFDLElBQUMsQ0FBQSxHQUFHLENBQUMsVUFBTixFQUFTLElBQUMsQ0FBQSxHQUFHLENBQUMsVUFBZCxFQUFpQixJQUFDLENBQUEsR0FBRyxDQUFDLFVBQXRCLEVBQUE7RUFBYjs7d0JBSVgsSUFBQSxHQUFNLFNBQUE7QUFDSixRQUFBO0lBQUEsUUFBQSxHQUFXLElBQUMsQ0FBQTs7TUFDWixRQUFRLENBQUM7O0lBRVQsTUFBbUMsSUFBQyxDQUFBLFFBQXBDLEVBQUMsZUFBRCxFQUFPLGVBQVAsRUFBYSxpQkFBYixFQUFvQixlQUFwQixFQUEwQjtJQUMxQixLQUFBLENBQUE7SUFFQSxDQUFBLEdBQVEsSUFBQyxDQUFBO0lBQ1QsQ0FBQSxHQUFRLElBQUMsQ0FBQTtJQUNULENBQUEsR0FBUSxJQUFDLENBQUE7SUFDVCxJQUFBLEdBQVEsSUFBQyxDQUFBLEdBQUcsQ0FBQztJQUNiLElBQUEsR0FBUSxJQUFDLENBQUEsR0FBRyxDQUFDO0lBQ2IsS0FBQSxHQUFRLElBQUMsQ0FBQSxPQUFELEdBQVcsSUFBQyxDQUFBLEdBQUcsQ0FBQyxDQUFMLEdBQVMsQ0FBVCxHQUFhO0lBRWhDLENBQUEsR0FBSSxDQUFBLEdBQUksQ0FBQSxHQUFJLENBQUEsR0FBSTtJQUNoQixJQUFHLElBQUEsR0FBTyxDQUFQLElBQVksSUFBQSxHQUFPLENBQXRCO0FBQ0UsYUFBTSxDQUFDLElBQUEsQ0FBQSxDQUFELElBQVcsQ0FBQSxHQUFJLEtBQXJCO1FBQ0UsQ0FBQTtRQUNBLE1BQUEsR0FBUyxRQUFBLENBQVMsSUFBVCxFQUFlLENBQWYsRUFBa0IsQ0FBbEIsRUFBcUIsQ0FBckI7UUFDVCxJQUFHLEVBQUUsQ0FBRixLQUFPLENBQUEsR0FBSSxJQUFkO1VBQ0UsSUFBQSxDQUFLLElBQUw7VUFDQSxDQUFBLEdBQUk7VUFDSixJQUFHLEVBQUUsQ0FBRixLQUFPLENBQUEsR0FBSSxJQUFkO1lBQ0UsSUFBQSxDQUFLLENBQUEsR0FBSSxJQUFUO1lBQ0EsQ0FBQSxHQUFJO1lBQ0osQ0FBQSxHQUhGO1dBSEY7O1FBT0EsSUFBRyxNQUFBLEtBQVUsS0FBYjtBQUNFLGdCQURGOztNQVZGLENBREY7S0FBQSxNQUFBO0FBY0UsYUFBTSxDQUFDLElBQUEsQ0FBQSxDQUFELElBQVcsQ0FBQSxHQUFJLEtBQXJCO1FBQ0UsQ0FBQTtRQUNBLE1BQUEsR0FBUyxRQUFBLENBQVMsSUFBVCxFQUFlLENBQWYsRUFBa0IsQ0FBbEIsRUFBcUIsQ0FBckI7UUFDVCxJQUFHLEVBQUUsQ0FBRixLQUFPLENBQVY7VUFDRSxDQUFBLEdBQUk7VUFDSixJQUFHLEVBQUUsQ0FBRixLQUFPLENBQVY7WUFDRSxDQUFBLEdBQUk7WUFDSixDQUFBLEdBRkY7V0FGRjs7UUFLQSxJQUFHLE1BQUEsS0FBVSxLQUFiO0FBQ0UsZ0JBREY7O01BUkYsQ0FkRjs7V0F5QkEsSUFBSSxDQUFDLEtBQUwsQ0FBVyxLQUFBLENBQUEsQ0FBQSxHQUFVLElBQUMsQ0FBQSxLQUF0QjtFQXhDSTs7d0JBMENOLE9BQUEsR0FBUyxTQUFDLFFBQUQsRUFBVyxNQUFYO0FBR1AsUUFBQTtJQUFBLE1BQWtCLEdBQUEsR0FBTSxJQUFDLENBQUEsUUFBekIsRUFBQyxxQkFBRCxFQUFVO0lBQ1QsT0FBaUIsQ0FBQSxHQUFBLEdBQU0sTUFBTSxDQUFDLFFBQWI7SUFFbEIsQ0FBQSxHQUFJLENBQUEsR0FBSSxDQUFBLEdBQUk7SUFFWixJQUFBLEdBQU8sU0FBQTthQUFNLE9BQUEsQ0FBUSxTQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVY7ZUFBZ0IsUUFBQSxDQUFTLElBQVQsRUFBZSxDQUFmLEVBQWtCLENBQWxCLEVBQXFCLENBQXJCLEVBQXdCLENBQXhCLEVBQTJCLENBQTNCLEVBQThCLENBQTlCLEVBQWlDLENBQWpDO01BQWhCLENBQVI7SUFBTjtJQUNQLElBQUEsR0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVYsQ0FBcUIsSUFBckIsRUFBMkIsSUFBQyxDQUFBLEtBQTVCO1dBRVAsQ0FBQSxTQUFBLEtBQUE7YUFBQSxTQUFBO0FBQ0UsWUFBQTtRQUFBLEdBQUcsQ0FBQyxLQUFKLENBQUE7UUFDQSxHQUFHLENBQUMsS0FBSixDQUFBO1FBRUEsQ0FBQSxHQUFRLEtBQUMsQ0FBQTtRQUNULENBQUEsR0FBUSxLQUFDLENBQUE7UUFDVCxDQUFBLEdBQVEsS0FBQyxDQUFBO1FBQ1QsSUFBQSxHQUFRLEtBQUMsQ0FBQSxHQUFHLENBQUM7UUFDYixJQUFBLEdBQVEsS0FBQyxDQUFBLEdBQUcsQ0FBQztRQUNiLEtBQUEsR0FBUSxLQUFDLENBQUEsT0FBRCxHQUFXLEtBQUMsQ0FBQSxHQUFHLENBQUMsQ0FBTCxHQUFTLENBQVQsR0FBYTtRQUVoQyxDQUFBLEdBQUksQ0FBQSxHQUFJLENBQUEsR0FBSSxDQUFBLEdBQUk7UUFDaEIsSUFBRyxJQUFBLEdBQU8sQ0FBUCxJQUFZLElBQUEsR0FBTyxDQUF0QjtBQUNFLGlCQUFNLENBQUMsSUFBQSxDQUFBLENBQUQsSUFBVyxDQUFBLEdBQUksS0FBckI7WUFDRSxDQUFBO1lBQ0EsSUFBQSxDQUFBO1lBQ0EsSUFBRyxFQUFFLENBQUYsS0FBTyxDQUFBLEdBQUksSUFBZDtjQUNFLElBQUEsQ0FBSyxJQUFMO2NBQ0EsQ0FBQSxHQUFJO2NBQ0osSUFBRyxFQUFFLENBQUYsS0FBTyxDQUFBLEdBQUksSUFBZDtnQkFDRSxJQUFBLENBQUssQ0FBQSxHQUFJLElBQVQ7Z0JBQ0EsQ0FBQSxHQUFJO2dCQUNKLENBQUEsR0FIRjtlQUhGOztVQUhGLENBREY7U0FBQSxNQUFBO0FBWUUsaUJBQU0sQ0FBQyxJQUFBLENBQUEsQ0FBRCxJQUFXLENBQUEsR0FBSSxLQUFyQjtZQUNFLENBQUE7WUFDQSxJQUFBLENBQUE7WUFDQSxJQUFHLEVBQUUsQ0FBRixLQUFPLENBQVY7Y0FDRSxDQUFBLEdBQUk7Y0FDSixJQUFHLEVBQUUsQ0FBRixLQUFPLENBQVY7Z0JBQ0UsQ0FBQSxHQUFJO2dCQUNKLENBQUEsR0FGRjtlQUZGOztVQUhGLENBWkY7O0FBcUJBLGVBQU8sR0FBRyxDQUFDLEtBQUosQ0FBQTtNQWpDVDtJQUFBLENBQUEsQ0FBQSxDQUFBLElBQUE7RUFYTzs7OztHQXBEZTs7QUFrRzFCLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{"../../util":175,"./databuffer":126}],137:[function(require,module,exports){
var Classes;

Classes = {
  sprite: require('./meshes/sprite'),
  point: require('./meshes/point'),
  line: require('./meshes/line'),
  surface: require('./meshes/surface'),
  face: require('./meshes/face'),
  strip: require('./meshes/strip'),
  arrow: require('./meshes/arrow'),
  screen: require('./meshes/screen'),
  memoScreen: require('./meshes/memoscreen'),
  debug: require('./meshes/debug'),
  dataBuffer: require('./buffer/databuffer'),
  arrayBuffer: require('./buffer/arraybuffer'),
  matrixBuffer: require('./buffer/matrixbuffer'),
  voxelBuffer: require('./buffer/voxelbuffer'),
  pushBuffer: require('./buffer/pushbuffer'),
  renderToTexture: require('./buffer/rendertotexture'),
  memo: require('./buffer/memo'),
  readback: require('./buffer/readback'),
  atlas: require('./buffer/atlas'),
  textAtlas: require('./buffer/textatlas'),
  scene: require('./scene')
};

module.exports = Classes;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcY2xhc3Nlcy5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccmVuZGVyXFxjbGFzc2VzLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBOztBQUFBLE9BQUEsR0FDRTtFQUFBLE1BQUEsRUFBaUIsT0FBQSxDQUFRLGlCQUFSLENBQWpCO0VBQ0EsS0FBQSxFQUFpQixPQUFBLENBQVEsZ0JBQVIsQ0FEakI7RUFFQSxJQUFBLEVBQWlCLE9BQUEsQ0FBUSxlQUFSLENBRmpCO0VBR0EsT0FBQSxFQUFpQixPQUFBLENBQVEsa0JBQVIsQ0FIakI7RUFJQSxJQUFBLEVBQWlCLE9BQUEsQ0FBUSxlQUFSLENBSmpCO0VBS0EsS0FBQSxFQUFpQixPQUFBLENBQVEsZ0JBQVIsQ0FMakI7RUFNQSxLQUFBLEVBQWlCLE9BQUEsQ0FBUSxnQkFBUixDQU5qQjtFQU9BLE1BQUEsRUFBaUIsT0FBQSxDQUFRLGlCQUFSLENBUGpCO0VBUUEsVUFBQSxFQUFpQixPQUFBLENBQVEscUJBQVIsQ0FSakI7RUFVQSxLQUFBLEVBQWlCLE9BQUEsQ0FBUSxnQkFBUixDQVZqQjtFQVlBLFVBQUEsRUFBaUIsT0FBQSxDQUFRLHFCQUFSLENBWmpCO0VBYUEsV0FBQSxFQUFpQixPQUFBLENBQVEsc0JBQVIsQ0FiakI7RUFjQSxZQUFBLEVBQWlCLE9BQUEsQ0FBUSx1QkFBUixDQWRqQjtFQWVBLFdBQUEsRUFBaUIsT0FBQSxDQUFRLHNCQUFSLENBZmpCO0VBZ0JBLFVBQUEsRUFBaUIsT0FBQSxDQUFRLHFCQUFSLENBaEJqQjtFQWlCQSxlQUFBLEVBQWlCLE9BQUEsQ0FBUSwwQkFBUixDQWpCakI7RUFrQkEsSUFBQSxFQUFpQixPQUFBLENBQVEsZUFBUixDQWxCakI7RUFtQkEsUUFBQSxFQUFpQixPQUFBLENBQVEsbUJBQVIsQ0FuQmpCO0VBb0JBLEtBQUEsRUFBaUIsT0FBQSxDQUFRLGdCQUFSLENBcEJqQjtFQXFCQSxTQUFBLEVBQWlCLE9BQUEsQ0FBUSxvQkFBUixDQXJCakI7RUF1QkEsS0FBQSxFQUFpQixPQUFBLENBQVEsU0FBUixDQXZCakI7OztBQXlCRixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"./buffer/arraybuffer":123,"./buffer/atlas":124,"./buffer/databuffer":126,"./buffer/matrixbuffer":127,"./buffer/memo":128,"./buffer/pushbuffer":129,"./buffer/readback":130,"./buffer/rendertotexture":131,"./buffer/textatlas":132,"./buffer/voxelbuffer":136,"./meshes/arrow":150,"./meshes/debug":152,"./meshes/face":153,"./meshes/line":154,"./meshes/memoscreen":155,"./meshes/point":156,"./meshes/screen":157,"./meshes/sprite":158,"./meshes/strip":159,"./meshes/surface":160,"./scene":162}],138:[function(require,module,exports){
var RenderFactory;

RenderFactory = (function() {
  function RenderFactory(classes, renderer, shaders) {
    this.classes = classes;
    this.renderer = renderer;
    this.shaders = shaders;
  }

  RenderFactory.prototype.getTypes = function() {
    return Object.keys(this.classes);
  };

  RenderFactory.prototype.make = function(type, options) {
    return new this.classes[type](this.renderer, this.shaders, options);
  };

  return RenderFactory;

})();

module.exports = RenderFactory;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcZmFjdG9yeS5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccmVuZGVyXFxmYWN0b3J5LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBOztBQUFNO0VBQ1MsdUJBQUMsT0FBRCxFQUFXLFFBQVgsRUFBc0IsT0FBdEI7SUFBQyxJQUFDLENBQUEsVUFBRDtJQUFVLElBQUMsQ0FBQSxXQUFEO0lBQVcsSUFBQyxDQUFBLFVBQUQ7RUFBdEI7OzBCQUViLFFBQUEsR0FBVSxTQUFBO1dBQ1IsTUFBTSxDQUFDLElBQVAsQ0FBWSxJQUFDLENBQUEsT0FBYjtFQURROzswQkFHVixJQUFBLEdBQU0sU0FBQyxJQUFELEVBQU8sT0FBUDtXQUNKLElBQUksSUFBQyxDQUFBLE9BQVEsQ0FBQSxJQUFBLENBQWIsQ0FBbUIsSUFBQyxDQUFBLFFBQXBCLEVBQThCLElBQUMsQ0FBQSxPQUEvQixFQUF3QyxPQUF4QztFQURJOzs7Ozs7QUFHUixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{}],139:[function(require,module,exports){
var ArrowGeometry, ClipGeometry,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ClipGeometry = require('./clipgeometry');


/*
Cones to attach as arrowheads on line strips

.....> .....> .....> .....>

.....> .....> .....> .....>

.....> .....> .....> .....>
 */

ArrowGeometry = (function(superClass) {
  extend(ArrowGeometry, superClass);

  function ArrowGeometry(options) {
    var a, anchor, angle, arrow, arrows, attach, b, back, base, c, circle, far, flip, i, index, j, k, l, layers, m, n, near, o, p, points, position, q, r, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ribbons, samples, sides, step, strips, tip, triangles, x, y, z;
    ArrowGeometry.__super__.constructor.call(this, options);
    this._clipUniforms();
    this.sides = sides = +options.sides || 12;
    this.samples = samples = +options.samples || 2;
    this.strips = strips = +options.strips || 1;
    this.ribbons = ribbons = +options.ribbons || 1;
    this.layers = layers = +options.layers || 1;
    this.flip = flip = (ref = options.flip) != null ? ref : false;
    this.anchor = anchor = (ref1 = options.anchor) != null ? ref1 : flip ? 0 : samples - 1;
    arrows = strips * ribbons * layers;
    points = (sides + 2) * arrows;
    triangles = (sides * 2) * arrows;
    this.setIndex(new THREE.BufferAttribute(new Uint32Array(triangles * 3), 1));
    this.addAttribute('position4', new THREE.BufferAttribute(new Float32Array(points * 4), 4));
    this.addAttribute('arrow', new THREE.BufferAttribute(new Float32Array(points * 3), 3));
    this.addAttribute('attach', new THREE.BufferAttribute(new Float32Array(points * 2), 2));
    index = this._emitter('index');
    position = this._emitter('position4');
    arrow = this._emitter('arrow');
    attach = this._emitter('attach');
    circle = [];
    for (k = j = 0, ref2 = sides; 0 <= ref2 ? j < ref2 : j > ref2; k = 0 <= ref2 ? ++j : --j) {
      angle = k / sides * τ;
      circle.push([Math.cos(angle), Math.sin(angle), 1]);
    }
    base = 0;
    for (i = m = 0, ref3 = arrows; 0 <= ref3 ? m < ref3 : m > ref3; i = 0 <= ref3 ? ++m : --m) {
      tip = base++;
      back = tip + sides + 1;
      for (k = n = 0, ref4 = sides; 0 <= ref4 ? n < ref4 : n > ref4; k = 0 <= ref4 ? ++n : --n) {
        a = base + k % sides;
        b = base + (k + 1) % sides;
        index(tip);
        index(a);
        index(b);
        index(b);
        index(a);
        index(back);
      }
      base += sides + 1;
    }
    step = flip ? 1 : -1;
    far = flip ? samples - 1 : 0;
    near = anchor + step;
    x = anchor;
    for (l = o = 0, ref5 = layers; 0 <= ref5 ? o < ref5 : o > ref5; l = 0 <= ref5 ? ++o : --o) {
      for (z = p = 0, ref6 = ribbons; 0 <= ref6 ? p < ref6 : p > ref6; z = 0 <= ref6 ? ++p : --p) {
        for (y = q = 0, ref7 = strips; 0 <= ref7 ? q < ref7 : q > ref7; y = 0 <= ref7 ? ++q : --q) {
          position(x, y, z, l);
          arrow(0, 0, 0);
          attach(near, far);
          for (k = r = 0, ref8 = sides; 0 <= ref8 ? r < ref8 : r > ref8; k = 0 <= ref8 ? ++r : --r) {
            position(x, y, z, l);
            c = circle[k];
            arrow(c[0], c[1], c[2]);
            attach(near, far);
          }
          position(x, y, z, l);
          arrow(0, 0, 1);
          attach(near, far);
        }
      }
    }
    this._finalize();
    this.clip();
    return;
  }

  ArrowGeometry.prototype.clip = function(samples, strips, ribbons, layers) {
    var dims, maxs, quads, segments;
    if (samples == null) {
      samples = this.samples;
    }
    if (strips == null) {
      strips = this.strips;
    }
    if (ribbons == null) {
      ribbons = this.ribbons;
    }
    if (layers == null) {
      layers = this.layers;
    }
    segments = Math.max(0, samples - 1);
    this._clipGeometry(samples, strips, ribbons, layers);
    if (samples > this.anchor) {
      dims = [layers, ribbons, strips];
      maxs = [this.layers, this.ribbons, this.strips];
      quads = this.sides * this._reduce(dims, maxs);
    } else {
      quads = 0;
    }
    return this._offsets([
      {
        start: 0,
        count: quads * 6
      }
    ]);
  };

  return ArrowGeometry;

})(ClipGeometry);

module.exports = ArrowGeometry;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcZ2VvbWV0cnlcXGFycm93Z2VvbWV0cnkuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcZ2VvbWV0cnlcXGFycm93Z2VvbWV0cnkuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsMkJBQUE7RUFBQTs7O0FBQUEsWUFBQSxHQUFlLE9BQUEsQ0FBUSxnQkFBUjs7O0FBRWY7Ozs7Ozs7Ozs7QUFVTTs7O0VBRVMsdUJBQUMsT0FBRDtBQUNYLFFBQUE7SUFBQSwrQ0FBTSxPQUFOO0lBRUEsSUFBQyxDQUFBLGFBQUQsQ0FBQTtJQUVBLElBQUMsQ0FBQSxLQUFELEdBQVksS0FBQSxHQUFVLENBQUMsT0FBTyxDQUFDLEtBQVQsSUFBb0I7SUFDMUMsSUFBQyxDQUFBLE9BQUQsR0FBWSxPQUFBLEdBQVUsQ0FBQyxPQUFPLENBQUMsT0FBVCxJQUFvQjtJQUMxQyxJQUFDLENBQUEsTUFBRCxHQUFZLE1BQUEsR0FBVSxDQUFDLE9BQU8sQ0FBQyxNQUFULElBQW9CO0lBQzFDLElBQUMsQ0FBQSxPQUFELEdBQVksT0FBQSxHQUFVLENBQUMsT0FBTyxDQUFDLE9BQVQsSUFBb0I7SUFDMUMsSUFBQyxDQUFBLE1BQUQsR0FBWSxNQUFBLEdBQVUsQ0FBQyxPQUFPLENBQUMsTUFBVCxJQUFvQjtJQUMxQyxJQUFDLENBQUEsSUFBRCxHQUFZLElBQUEsd0NBQTZCO0lBQ3pDLElBQUMsQ0FBQSxNQUFELEdBQVksTUFBQSw0Q0FBZ0MsSUFBSCxHQUFhLENBQWIsR0FBb0IsT0FBQSxHQUFVO0lBRXZFLE1BQUEsR0FBWSxNQUFBLEdBQVMsT0FBVCxHQUFtQjtJQUMvQixNQUFBLEdBQVksQ0FBQyxLQUFBLEdBQVEsQ0FBVCxDQUFBLEdBQWM7SUFDMUIsU0FBQSxHQUFZLENB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

},{"./clipgeometry":140}],140:[function(require,module,exports){
var ClipGeometry, Geometry, debug, tick,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Geometry = require('./geometry');

debug = false;

tick = function() {
  var now;
  now = +(new Date);
  return function(label) {
    var delta;
    delta = +new Date() - now;
    console.log(label, delta + " ms");
    return delta;
  };
};

ClipGeometry = (function(superClass) {
  extend(ClipGeometry, superClass);

  function ClipGeometry() {
    return ClipGeometry.__super__.constructor.apply(this, arguments);
  }

  ClipGeometry.prototype._clipUniforms = function() {
    this.geometryClip = new THREE.Vector4(1e10, 1e10, 1e10, 1e10);
    this.geometryResolution = new THREE.Vector4;
    this.mapSize = new THREE.Vector4;
    if (this.uniforms == null) {
      this.uniforms = {};
    }
    this.uniforms.geometryClip = {
      type: 'v4',
      value: this.geometryClip
    };
    this.uniforms.geometryResolution = {
      type: 'v4',
      value: this.geometryResolution
    };
    return this.uniforms.mapSize = {
      type: 'v4',
      value: this.mapSize
    };
  };

  ClipGeometry.prototype._clipGeometry = function(width, height, depth, items) {
    var c, r;
    c = function(x) {
      return Math.max(0, x - 1);
    };
    r = function(x) {
      return 1 / Math.max(1, x - 1);
    };
    this.geometryClip.set(c(width), c(height), c(depth), c(items));
    return this.geometryResolution.set(r(width), r(height), r(depth), r(items));
  };

  ClipGeometry.prototype._clipMap = function(mapWidth, mapHeight, mapDepth, mapItems) {
    return this.mapSize.set(mapWidth, mapHeight, mapDepth, mapItems);
  };

  ClipGeometry.prototype._clipOffsets = function(factor, width, height, depth, items, _width, _height, _depth, _items) {
    var dims, elements, maxs;
    dims = [depth, height, width, items];
    maxs = [_depth, _height, _width, _items];
    elements = this._reduce(dims, maxs);
    return this._offsets([
      {
        start: 0,
        count: elements * factor
      }
    ]);
  };

  return ClipGeometry;

})(Geometry);

module.exports = ClipGeometry;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcZ2VvbWV0cnlcXGNsaXBnZW9tZXRyeS5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccmVuZGVyXFxnZW9tZXRyeVxcY2xpcGdlb21ldHJ5LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLG1DQUFBO0VBQUE7OztBQUFBLFFBQUEsR0FBVyxPQUFBLENBQVEsWUFBUjs7QUFFWCxLQUFBLEdBQVE7O0FBRVIsSUFBQSxHQUFPLFNBQUE7QUFDTCxNQUFBO0VBQUEsR0FBQSxHQUFNLEVBQUMsSUFBSTtBQUNYLFNBQU8sU0FBQyxLQUFEO0FBQ0wsUUFBQTtJQUFBLEtBQUEsR0FBUSxDQUFDLElBQUksSUFBSixDQUFBLENBQUQsR0FBYztJQUN0QixPQUFPLENBQUMsR0FBUixDQUFZLEtBQVosRUFBbUIsS0FBQSxHQUFRLEtBQTNCO1dBQ0E7RUFISztBQUZGOztBQVFEOzs7Ozs7O3lCQUVKLGFBQUEsR0FBZSxTQUFBO0lBRWIsSUFBQyxDQUFBLFlBQUQsR0FBc0IsSUFBSSxLQUFLLENBQUMsT0FBVixDQUFrQixJQUFsQixFQUF3QixJQUF4QixFQUE4QixJQUE5QixFQUFvQyxJQUFwQztJQUN0QixJQUFDLENBQUEsa0JBQUQsR0FBc0IsSUFBSSxLQUFLLENBQUM7SUFDaEMsSUFBQyxDQUFBLE9BQUQsR0FBc0IsSUFBSSxLQUFLLENBQUM7O01BRWhDLElBQUMsQ0FBQSxXQUFZOztJQUNiLElBQUMsQ0FBQSxRQUFRLENBQUMsWUFBVixHQUNFO01BQUEsSUFBQSxFQUFNLElBQU47TUFDQSxLQUFBLEVBQU8sSUFBQyxDQUFBLFlBRFI7O0lBRUYsSUFBQyxDQUFBLFFBQVEsQ0FBQyxrQkFBVixHQUNFO01BQUEsSUFBQSxFQUFNLElBQU47TUFDQSxLQUFBLEVBQU8sSUFBQyxDQUFBLGtCQURSOztXQUVGLElBQUMsQ0FBQSxRQUFRLENBQUMsT0FBVixHQUNFO01BQUEsSUFBQSxFQUFNLElBQU47TUFDQSxLQUFBLEVBQU8sSUFBQyxDQUFBLE9BRFI7O0VBZFc7O3lCQWlCZixhQUFBLEdBQWUsU0FBQyxLQUFELEVBQVEsTUFBUixFQUFnQixLQUFoQixFQUF1QixLQUF2QjtBQUNiLFFBQUE7SUFBQSxDQUFBLEdBQUksU0FBQyxDQUFEO2FBQU8sSUFBSSxDQUFDLEdBQUwsQ0FBUyxDQUFULEVBQVksQ0FBQSxHQUFJLENBQWhCO0lBQVA7SUFDSixDQUFBLEdBQUksU0FBQyxDQUFEO2FBQU8sQ0FBQSxHQUFJLElBQUksQ0FBQyxHQUFMLENBQVMsQ0FBVCxFQUFZLENBQUEsR0FBSSxDQUFoQjtJQUFYO0lBRUosSUFBQyxDQUFBLFlBQVksQ0FBQyxHQUFkLENBQXdCLENBQUEsQ0FBRSxLQUFGLENBQXhCLEVBQWtDLENBQUEsQ0FBRSxNQUFGLENBQWxDLEVBQTZDLENBQUEsQ0FBRSxLQUFGLENBQTdDLEVBQXVELENBQUEsQ0FBRSxLQUFGLENBQXZEO1dBQ0EsSUFBQyxDQUFBLGtCQUFrQixDQUFDLEdBQXBCLENBQXdCLENBQUEsQ0FBRSxLQUFGLENBQXhCLEVBQWtDLENBQUEsQ0FBRSxNQUFGLENBQWxDLEVBQTZDLENBQUEsQ0FBRSxLQUFGLENBQTdDLEVBQXVELENBQUEsQ0FBRSxLQUFGLENBQXZEO0VBTGE7O3lCQU9mLFFBQUEsR0FBVSxTQUFDLFFBQUQsRUFBVyxTQUFYLEVBQXNCLFFBQXRCLEVBQWdDLFFBQWhDO1dBRVIsSUFBQyxDQUFBLE9BQU8sQ0FBQyxHQUFULENBQWEsUUFBYixFQUF1QixTQUF2QixFQUFrQyxRQUFsQyxFQUE0QyxRQUE1QztFQUZROzt5QkFJVixZQUFBLEdBQWMsU0FBQyxNQUFELEVBQVMsS0FBVCxFQUFnQixNQUFoQixFQUF3QixLQUF4QixFQUErQixLQUEvQixFQUFzQyxNQUF0QyxFQUE4QyxPQUE5QyxFQUF1RCxNQUF2RCxFQUErRCxNQUEvRDtBQUNaLFFBQUE7SUFBQSxJQUFBLEdBQVEsQ0FBRSxLQUFGLEVBQVUsTUFBVixFQUFtQixLQUFuQixFQUEyQixLQUEzQjtJQUNSLElBQUEsR0FBUSxDQUFDLE1BQUQsRUFBUyxPQUFULEVBQWtCLE1BQWxCLEVBQTBCLE1BQTFCO0lBQ1IsUUFBQSxHQUFXLElBQUMsQ0FBQSxPQUFELENBQVMsSUFBVCxFQUFlLElBQWY7V0FFWCxJQUFDLENBQUEsUUFBRCxDQUFVO01BQ1I7UUFBQSxLQUFBLEVBQU8sQ0FBUDtRQUNBLEtBQUEsRUFBTyxRQUFBLEdBQVcsTUFEbEI7T0FEUTtLQUFWO0VBTFk7Ozs7R0E5Qlc7O0FBd0MzQixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"./geometry":142}],141:[function(require,module,exports){
var ClipGeometry, FaceGeometry,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ClipGeometry = require('./clipgeometry');


/*
(flat) Triangle fans arranged in items, columns and rows

+-+     +-+     +-+     +-+     
|\\\    |\\\    |\\\    |\\\    
+-+-+   +-+-+   +-+-+   +-+-+   

+-+     +-+     +-+     +-+     
|\\\    |\\\    |\\\    |\\\    
+-+-+   +-+-+   +-+-+   +-+-+   

+-+     +-+     +-+     +-+     
|\\\    |\\\    |\\\    |\\\    
+-+-+   +-+-+   +-+-+   +-+-+
 */

FaceGeometry = (function(superClass) {
  extend(FaceGeometry, superClass);

  function FaceGeometry(options) {
    var base, depth, height, i, index, items, j, k, l, m, n, o, p, points, position, q, ref, ref1, ref2, ref3, ref4, ref5, samples, sides, triangles, width, x, y, z;
    FaceGeometry.__super__.constructor.call(this, options);
    this._clipUniforms();
    this.items = items = +options.items || 2;
    this.width = width = +options.width || 1;
    this.height = height = +options.height || 1;
    this.depth = depth = +options.depth || 1;
    this.sides = sides = Math.max(0, items - 2);
    samples = width * height * depth;
    points = items * samples;
    triangles = sides * samples;
    this.setIndex(new THREE.BufferAttribute(new Uint32Array(triangles * 3), 1));
    this.addAttribute('position4', new THREE.BufferAttribute(new Float32Array(points * 4), 4));
    index = this._emitter('index');
    position = this._emitter('position4');
    base = 0;
    for (i = k = 0, ref = samples; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {
      for (j = m = 0, ref1 = sides; 0 <= ref1 ? m < ref1 : m > ref1; j = 0 <= ref1 ? ++m : --m) {
        index(base);
        index(base + j + 1);
        index(base + j + 2);
      }
      base += items;
    }
    for (z = n = 0, ref2 = depth; 0 <= ref2 ? n < ref2 : n > ref2; z = 0 <= ref2 ? ++n : --n) {
      for (y = o = 0, ref3 = height; 0 <= ref3 ? o < ref3 : o > ref3; y = 0 <= ref3 ? ++o : --o) {
        for (x = p = 0, ref4 = width; 0 <= ref4 ? p < ref4 : p > ref4; x = 0 <= ref4 ? ++p : --p) {
          for (l = q = 0, ref5 = items; 0 <= ref5 ? q < ref5 : q > ref5; l = 0 <= ref5 ? ++q : --q) {
            position(x, y, z, l);
          }
        }
      }
    }
    this._finalize();
    this.clip();
    return;
  }

  FaceGeometry.prototype.clip = function(width, height, depth, items) {
    var sides;
    if (width == null) {
      width = this.width;
    }
    if (height == null) {
      height = this.height;
    }
    if (depth == null) {
      depth = this.depth;
    }
    if (items == null) {
      items = this.items;
    }
    sides = Math.max(0, items - 2);
    this._clipGeometry(width, height, depth, items);
    return this._clipOffsets(3, width, height, depth, sides, this.width, this.height, this.depth, this.sides);
  };

  return FaceGeometry;

})(ClipGeometry);

module.exports = FaceGeometry;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcZ2VvbWV0cnlcXGZhY2VnZW9tZXRyeS5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccmVuZGVyXFxnZW9tZXRyeVxcZmFjZWdlb21ldHJ5LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLDBCQUFBO0VBQUE7OztBQUFBLFlBQUEsR0FBZSxPQUFBLENBQVEsZ0JBQVI7OztBQUVmOzs7Ozs7Ozs7Ozs7Ozs7O0FBZ0JNOzs7RUFFUyxzQkFBQyxPQUFEO0FBQ1gsUUFBQTtJQUFBLDhDQUFNLE9BQU47SUFFQSxJQUFDLENBQUEsYUFBRCxDQUFBO0lBRUEsSUFBQyxDQUFBLEtBQUQsR0FBWSxLQUFBLEdBQVUsQ0FBQyxPQUFPLENBQUMsS0FBVCxJQUFvQjtJQUMxQyxJQUFDLENBQUEsS0FBRCxHQUFZLEtBQUEsR0FBVSxDQUFDLE9BQU8sQ0FBQyxLQUFULElBQW9CO0lBQzFDLElBQUMsQ0FBQSxNQUFELEdBQVksTUFBQSxHQUFVLENBQUMsT0FBTyxDQUFDLE1BQVQsSUFBb0I7SUFDMUMsSUFBQyxDQUFBLEtBQUQsR0FBWSxLQUFBLEdBQVUsQ0FBQyxPQUFPLENBQUMsS0FBVCxJQUFvQjtJQUMxQyxJQUFDLENBQUEsS0FBRCxHQUFZLEtBQUEsR0FBVSxJQUFJLENBQUMsR0FBTCxDQUFTLENBQVQsRUFBWSxLQUFBLEdBQVEsQ0FBcEI7SUFFdEIsT0FBQSxHQUFZLEtBQUEsR0FBUSxNQUFSLEdBQWlCO0lBQzdCLE1BQUEsR0FBWSxLQUFBLEdBQVE7SUFDcEIsU0FBQSxHQUFZLEtBQUEsR0FBUTtJQUVwQixJQUFDLENBQUEsUUFBRCxDQUFjLElBQUksS0FBSyxDQUFDLGVBQVYsQ0FBMEIsSUFBSyxXQUFMLENBQWlCLFNBQUEsR0FBWSxDQUE3QixDQUExQixFQUEyRCxDQUEzRCxDQUFkO0lBQ0EsSUFBQyxDQUFBLFlBQUQsQ0FBYyxXQUFkLEVBQTJCLElBQUksS0FBSyxDQUFDLGVBQVYsQ0FBMEIsSUFBSSxZQUFKLENBQWlCLE1BQUEsR0FBUyxDQUExQixDQUExQixFQUEyRCxDQUEzRCxDQUEzQjtJQUVBLEtBQUEsR0FBVyxJQUFDLENBQUEsUUFBRCxDQUFVLE9BQVY7SUFDWCxRQUFBLEdBQVcsSUFBQyxDQUFBLFFBQUQsQ0FBVSxXQUFWO0lBRVgsSUFBQSxHQUFPO0FBQ1AsU0FBUyxnRkFBVDtBQUNFLFdBQVMsbUZBQVQ7UUFDRSxLQUFBLENBQU0sSUFBTjtRQUNBLEtBQUEsQ0FBTSxJQUFBLEdBQU8sQ0FBUCxHQUFXLENBQWpCO1FBQ0EsS0FBQSxDQUFNLElBQUEsR0FBTyxDQUFQLEdBQVcsQ0FBakI7QUFIRjtNQUtBLElBQUEsSUFBUTtBQU5WO0FBUUEsU0FBUyxtRkFBVDtBQUNFLFdBQVMsb0ZBQVQ7QUFDRSxhQUFTLG1GQUFUO0FBQ0UsZUFBUyxtRkFBVDtZQUNFLFFBQUEsQ0FBUyxDQUFULEVBQVksQ0FBWixFQUFlLENBQWYsRUFBa0IsQ0FBbEI7QUFERjtBQURGO0FBREY7QUFERjtJQU1BLElBQUMsQ0FBQSxTQUFELENBQUE7SUFDQSxJQUFDLENBQUEsSUFBRCxDQUFBO0FBRUE7RUF2Q1c7O3lCQXlDYixJQUFBLEdBQU0sU0FBQyxLQUFELEVBQWlCLE1BQWpCLEVBQW1DLEtBQW5DLEVBQW1ELEtBQW5EO0FBRUosUUFBQTs7TUFGSyxRQUFRLElBQUMsQ0FBQTs7O01BQU8sU0FBUyxJQUFDLENBQUE7OztNQUFRLFFBQVEsSUFBQyxDQUFBOzs7TUFBTyxRQUFRLElBQUMsQ0FBQTs7SUFFaEUsS0FBQSxHQUFRLElBQUksQ0FBQyxHQUFMLENBQVMsQ0FBVCxFQUFZLEtBQUEsR0FBUSxDQUFwQjtJQUVSLElBQUMsQ0FBQSxhQUFELENBQWlCLEtBQWpCLEVBQXdCLE1BQXhCLEVBQWdDLEtBQWhDLEVBQXVDLEtBQXZDO1dBQ0EsSUFBQyxDQUFBLFlBQUQsQ0FBaUIsQ0FBakIsRUFDaUIsS0FEakIsRUFDd0IsTUFEeEIsRUFDaUMsS0FEakMsRUFDMEMsS0FEMUMsRUFFaUIsSUFBQyxDQUFBLEtBRmxCLEVBRXlCLElBQUMsQ0FBQSxNQUYxQixFQUVrQyxJQUFDLENBQUEsS0FGbkMsRUFFMEMsSUFBQyxDQUFBLEtBRjNDO0VBTEk7Ozs7R0EzQ21COztBQXFEM0IsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"./clipgeometry":140}],142:[function(require,module,exports){
var Geometry, debug, tick,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

debug = false;

tick = function() {
  var now;
  now = +(new Date);
  return function(label) {
    var delta;
    delta = +new Date() - now;
    console.log(label, delta + " ms");
    return delta;
  };
};

Geometry = (function(superClass) {
  extend(Geometry, superClass);

  function Geometry() {
    THREE.BufferGeometry.call(this);
    if (this.uniforms == null) {
      this.uniforms = {};
    }
    if (this.groups == null) {
      this.groups = [];
    }
  }

  Geometry.prototype._reduce = function(dims, maxs) {
    var dim, i, j, len, max, multiple, quads;
    multiple = false;
    for (i = j = 0, len = dims.length; j < len; i = ++j) {
      dim = dims[i];
      max = maxs[i];
      if (multiple) {
        dims[i] = max;
      }
      if (dim > 1) {
        multiple = true;
      }
    }
    return quads = dims.reduce(function(a, b) {
      return a * b;
    });
  };

  Geometry.prototype._emitter = function(name) {
    var array, attribute, dimensions, four, offset, one, three, two;
    if (name === 'index') {
      attribute = this.index;
    } else {
      attribute = this.attributes[name];
    }
    dimensions = attribute.itemSize;
    array = attribute.array;
    offset = 0;
    one = function(a) {
      return array[offset++] = a;
    };
    two = function(a, b) {
      array[offset++] = a;
      return array[offset++] = b;
    };
    three = function(a, b, c) {
      array[offset++] = a;
      array[offset++] = b;
      return array[offset++] = c;
    };
    four = function(a, b, c, d) {
      array[offset++] = a;
      array[offset++] = b;
      array[offset++] = c;
      return array[offset++] = d;
    };
    return [null, one, two, three, four][dimensions];
  };

  Geometry.prototype._finalize = function() {};

  Geometry.prototype._offsets = function(offsets) {
    return this.groups = offsets;
  };

  return Geometry;

})(THREE.BufferGeometry);

module.exports = Geometry;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcZ2VvbWV0cnlcXGdlb21ldHJ5LmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxyZW5kZXJcXGdlb21ldHJ5XFxnZW9tZXRyeS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxxQkFBQTtFQUFBOzs7QUFBQSxLQUFBLEdBQVE7O0FBRVIsSUFBQSxHQUFPLFNBQUE7QUFDTCxNQUFBO0VBQUEsR0FBQSxHQUFNLEVBQUMsSUFBSTtBQUNYLFNBQU8sU0FBQyxLQUFEO0FBQ0wsUUFBQTtJQUFBLEtBQUEsR0FBUSxDQUFDLElBQUksSUFBSixDQUFBLENBQUQsR0FBYztJQUN0QixPQUFPLENBQUMsR0FBUixDQUFZLEtBQVosRUFBbUIsS0FBQSxHQUFRLEtBQTNCO1dBQ0E7RUFISztBQUZGOztBQU9EOzs7RUFDUyxrQkFBQTtJQUNYLEtBQUssQ0FBQyxjQUFjLENBQUMsSUFBckIsQ0FBMEIsSUFBMUI7O01BQ0EsSUFBQyxDQUFBLFdBQVk7OztNQUNiLElBQUMsQ0FBQSxTQUFXOztFQUhEOztxQkFLYixPQUFBLEdBQVMsU0FBQyxJQUFELEVBQU8sSUFBUDtBQUNQLFFBQUE7SUFBQSxRQUFBLEdBQVc7QUFDWCxTQUFBLDhDQUFBOztNQUNFLEdBQUEsR0FBTSxJQUFLLENBQUEsQ0FBQTtNQUNYLElBQUcsUUFBSDtRQUNFLElBQUssQ0FBQSxDQUFBLENBQUwsR0FBVSxJQURaOztNQUVBLElBQUcsR0FBQSxHQUFNLENBQVQ7UUFDRSxRQUFBLEdBQVcsS0FEYjs7QUFKRjtXQU9BLEtBQUEsR0FBUSxJQUFJLENBQUMsTUFBTCxDQUFZLFNBQUMsQ0FBRCxFQUFJLENBQUo7YUFBVSxDQUFBLEdBQUk7SUFBZCxDQUFaO0VBVEQ7O3FCQVdULFFBQUEsR0FBVSxTQUFDLElBQUQ7QUFDUixRQUFBO0lBQUEsSUFBRyxJQUFBLEtBQVEsT0FBWDtNQUNFLFNBQUEsR0FBWSxJQUFDLENBQUEsTUFEZjtLQUFBLE1BQUE7TUFHRSxTQUFBLEdBQVksSUFBQyxDQUFBLFVBQVcsQ0FBQSxJQUFBLEVBSDFCOztJQUlBLFVBQUEsR0FBYSxTQUFTLENBQUM7SUFDdkIsS0FBQSxHQUFhLFNBQVMsQ0FBQztJQUV2QixNQUFBLEdBQVM7SUFFVCxHQUFBLEdBQU0sU0FBQyxDQUFEO2FBQ0osS0FBTSxDQUFBLE1BQUEsRUFBQSxDQUFOLEdBQWtCO0lBRGQ7SUFFTixHQUFBLEdBQU0sU0FBQyxDQUFELEVBQUksQ0FBSjtNQUNKLEtBQU0sQ0FBQSxNQUFBLEVBQUEsQ0FBTixHQUFrQjthQUNsQixLQUFNLENBQUEsTUFBQSxFQUFBLENBQU4sR0FBa0I7SUFGZDtJQUdOLEtBQUEsR0FBUSxTQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUDtNQUNOLEtBQU0sQ0FBQSxNQUFBLEVBQUEsQ0FBTixHQUFrQjtNQUNsQixLQUFNLENBQUEsTUFBQSxFQUFBLENBQU4sR0FBa0I7YUFDbEIsS0FBTSxDQUFBLE1BQUEsRUFBQSxDQUFOLEdBQWtCO0lBSFo7SUFJUixJQUFBLEdBQU8sU0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWO01BQ0wsS0FBTSxDQUFBLE1BQUEsRUFBQSxDQUFOLEdBQWtCO01BQ2xCLEtBQU0sQ0FBQSxNQUFBLEVBQUEsQ0FBTixHQUFrQjtNQUNsQixLQUFNLENBQUEsTUFBQSxFQUFBLENBQU4sR0FBa0I7YUFDbEIsS0FBTSxDQUFBLE1BQUEsRUFBQSxDQUFOLEdBQWtCO0lBSmI7V0FNUCxDQUFDLElBQUQsRUFBTyxHQUFQLEVBQVksR0FBWixFQUFpQixLQUFqQixFQUF3QixJQUF4QixDQUE4QixDQUFBLFVBQUE7RUF6QnRCOztxQkEyQlYsU0FBQSxHQUFXLFNBQUEsR0FBQTs7cUJBR1gsUUFBQSxHQUFVLFNBQUMsT0FBRDtXQUNSLElBQUMsQ0FBQSxNQUFELEdBQVU7RUFERjs7OztHQS9DVyxLQUFLLENBQUM7O0FBbUQ3QixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{}],143:[function(require,module,exports){
exports.Geometry = require('./geometry');

exports.ArrowGeometry = require('./arrowgeometry');

exports.FaceGeometry = require('./facegeometry');

exports.LineGeometry = require('./linegeometry');

exports.ScreenGeometry = require('./screengeometry');

exports.SpriteGeometry = require('./spritegeometry');

exports.StripGeometry = require('./stripgeometry');

exports.SurfaceGeometry = require('./surfacegeometry');

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcZ2VvbWV0cnlcXGluZGV4LmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxyZW5kZXJcXGdlb21ldHJ5XFxpbmRleC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxDQUFDLFFBQVIsR0FBMEIsT0FBQSxDQUFRLFlBQVI7O0FBQzFCLE9BQU8sQ0FBQyxhQUFSLEdBQTBCLE9BQUEsQ0FBUSxpQkFBUjs7QUFDMUIsT0FBTyxDQUFDLFlBQVIsR0FBMEIsT0FBQSxDQUFRLGdCQUFSOztBQUMxQixPQUFPLENBQUMsWUFBUixHQUEwQixPQUFBLENBQVEsZ0JBQVI7O0FBQzFCLE9BQU8sQ0FBQyxjQUFSLEdBQTBCLE9BQUEsQ0FBUSxrQkFBUjs7QUFDMUIsT0FBTyxDQUFDLGNBQVIsR0FBMEIsT0FBQSxDQUFRLGtCQUFSOztBQUMxQixPQUFPLENBQUMsYUFBUixHQUEwQixPQUFBLENBQVEsaUJBQVI7O0FBQzFCLE9BQU8sQ0FBQyxlQUFSLEdBQTBCLE9BQUEsQ0FBUSxtQkFBUiJ9

},{"./arrowgeometry":139,"./facegeometry":141,"./geometry":142,"./linegeometry":144,"./screengeometry":145,"./spritegeometry":146,"./stripgeometry":147,"./surfacegeometry":148}],144:[function(require,module,exports){
var ClipGeometry, LineGeometry,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ClipGeometry = require('./clipgeometry');


/*
Line strips arranged in columns and rows

+----+ +----+ +----+ +----+

+----+ +----+ +----+ +----+

+----+ +----+ +----+ +----+
 */

LineGeometry = (function(superClass) {
  extend(LineGeometry, superClass);

  function LineGeometry(options) {
    var base, closed, detail, edge, edger, i, i1, index, j, j1, joint, joints, k, l, layers, line, lines, m, n, o, p, points, position, q, quads, r, ref, ref1, ref10, ref11, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, ribbons, s, samples, segments, strip, strips, t, triangles, u, v, vertices, w, wrap, x, y, z;
    LineGeometry.__super__.constructor.call(this, options);
    this._clipUniforms();
    this.closed = closed = options.closed || false;
    this.samples = samples = (+options.samples || 2) + (closed ? 1 : 0);
    this.strips = strips = +options.strips || 1;
    this.ribbons = ribbons = +options.ribbons || 1;
    this.layers = layers = +options.layers || 1;
    this.detail = detail = +options.detail || 1;
    lines = samples - 1;
    this.joints = joints = detail - 1;
    this.vertices = vertices = (lines - 1) * joints + samples + (closed ? 2 * joints : 0);
    this.segments = segments = vertices - 1;
    wrap = samples - (closed ? 1 : 0);
    points = vertices * strips * ribbons * layers * 2;
    quads = segments * strips * ribbons * layers;
    triangles = quads * 2;
    this.setIndex(new THREE.BufferAttribute(new Uint32Array(triangles * 3), 1));
    this.addAttribute('position4', new THREE.BufferAttribute(new Float32Array(points * 4), 4));
    this.addAttribute('line', new THREE.BufferAttribute(new Float32Array(points * 2), 2));
    this.addAttribute('strip', new THREE.BufferAttribute(new Float32Array(points * 2), 2));
    if (detail > 1) {
      this.addAttribute('joint', new THREE.BufferAttribute(new Float32Array(points), 1));
    }
    index = this._emitter('index');
    position = this._emitter('position4');
    line = this._emitter('line');
    strip = this._emitter('strip');
    if (detail > 1) {
      joint = this._emitter('joint');
    }
    base = 0;
    for (i = n = 0, ref = ribbons * layers; 0 <= ref ? n < ref : n > ref; i = 0 <= ref ? ++n : --n) {
      for (j = o = 0, ref1 = strips; 0 <= ref1 ? o < ref1 : o > ref1; j = 0 <= ref1 ? ++o : --o) {
        for (k = p = 0, ref2 = segments; 0 <= ref2 ? p < ref2 : p > ref2; k = 0 <= ref2 ? ++p : --p) {
          index(base);
          index(base + 1);
          index(base + 2);
          index(base + 2);
          index(base + 1);
          index(base + 3);
          base += 2;
        }
        base += 2;
      }
    }
    edger = closed ? function() {
      return 0;
    } : function(x) {
      if (x === 0) {
        return -1;
      } else if (x === samples - 1) {
        return 1;
      } else {
        return 0;
      }
    };
    if (detail > 1) {
      for (l = q = 0, ref3 = layers; 0 <= ref3 ? q < ref3 : q > ref3; l = 0 <= ref3 ? ++q : --q) {
        for (z = r = 0, ref4 = ribbons; 0 <= ref4 ? r < ref4 : r > ref4; z = 0 <= ref4 ? ++r : --r) {
          for (y = s = 0, ref5 = strips; 0 <= ref5 ? s < ref5 : s > ref5; y = 0 <= ref5 ? ++s : --s) {
            for (x = t = 0, ref6 = samples; 0 <= ref6 ? t < ref6 : t > ref6; x = 0 <= ref6 ? ++t : --t) {
              if (closed) {
                x = x % wrap;
              }
              edge = edger(x);
              if (edge !== 0) {
                position(x, y, z, l);
                position(x, y, z, l);
                line(edge, 1);
                line(edge, -1);
                strip(0, segments);
                strip(0, segments);
                joint(0.5);
                joint(0.5);
              } else {
                for (m = u = 0, ref7 = detail; 0 <= ref7 ? u < ref7 : u > ref7; m = 0 <= ref7 ? ++u : --u) {
                  position(x, y, z, l);
                  position(x, y, z, l);
                  line(edge, 1);
                  line(edge, -1);
                  strip(0, segments);
                  strip(0, segments);
                  joint(m / joints);
                  joint(m / joints);
                }
              }
            }
          }
        }
      }
    } else {
      for (l = v = 0, ref8 = layers; 0 <= ref8 ? v < ref8 : v > ref8; l = 0 <= ref8 ? ++v : --v) {
        for (z = w = 0, ref9 = ribbons; 0 <= ref9 ? w < ref9 : w > ref9; z = 0 <= ref9 ? ++w : --w) {
          for (y = i1 = 0, ref10 = strips; 0 <= ref10 ? i1 < ref10 : i1 > ref10; y = 0 <= ref10 ? ++i1 : --i1) {
            for (x = j1 = 0, ref11 = samples; 0 <= ref11 ? j1 < ref11 : j1 > ref11; x = 0 <= ref11 ? ++j1 : --j1) {
              if (closed) {
                x = x % wrap;
              }
              edge = edger(x);
              position(x, y, z, l);
              position(x, y, z, l);
              line(edge, 1);
              line(edge, -1);
              strip(0, segments);
              strip(0, segments);
            }
          }
        }
      }
    }
    this._finalize();
    this.clip();
    return;
  }

  LineGeometry.prototype.clip = function(samples, strips, ribbons, layers) {
    var segments, vertices;
    if (samples == null) {
      samples = this.samples - this.closed;
    }
    if (strips == null) {
      strips = this.strips;
    }
    if (ribbons == null) {
      ribbons = this.ribbons;
    }
    if (layers == null) {
      layers = this.layers;
    }
    samples += this.closed;
    segments = Math.max(0, samples - (this.closed ? 1 : 0));
    vertices = samples + (samples - 2) * this.joints + (this.closed ? 2 * this.joints : 0);
    segments = vertices - 1;
    this._clipGeometry(vertices, strips, ribbons, layers);
    return this._clipOffsets(6, segments, strips, ribbons, layers, this.segments, this.strips, this.ribbons, this.layers);
  };

  return LineGeometry;

})(ClipGeometry);

module.exports = LineGeometry;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcZ2VvbWV0cnlcXGxpbmVnZW9tZXRyeS5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccmVuZGVyXFxnZW9tZXRyeVxcbGluZWdlb21ldHJ5LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLDBCQUFBO0VBQUE7OztBQUFBLFlBQUEsR0FBZSxPQUFBLENBQVEsZ0JBQVI7OztBQUVmOzs7Ozs7Ozs7O0FBVU07OztFQUVTLHNCQUFDLE9BQUQ7QUFDWCxRQUFBO0lBQUEsOENBQU0sT0FBTjtJQUVBLElBQUMsQ0FBQSxhQUFELENBQUE7SUFFQSxJQUFDLENBQUEsTUFBRCxHQUFZLE1BQUEsR0FBWSxPQUFPLENBQUMsTUFBUixJQUFtQjtJQUMzQyxJQUFDLENBQUEsT0FBRCxHQUFZLE9BQUEsR0FBVSxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQVQsSUFBb0IsQ0FBckIsQ0FBQSxHQUEwQixDQUFHLE1BQUgsR0FBZSxDQUFmLEdBQXNCLENBQXRCO0lBQ2hELElBQUMsQ0FBQSxNQUFELEdBQVksTUFBQSxHQUFXLENBQUMsT0FBTyxDQUFDLE1BQVQsSUFBb0I7SUFDM0MsSUFBQyxDQUFBLE9BQUQsR0FBWSxPQUFBLEdBQVcsQ0FBQyxPQUFPLENBQUMsT0FBVCxJQUFvQjtJQUMzQyxJQUFDLENBQUEsTUFBRCxHQUFZLE1BQUEsR0FBVyxDQUFDLE9BQU8sQ0FBQyxNQUFULElBQW9CO0lBQzNDLElBQUMsQ0FBQSxNQUFELEdBQVksTUFBQSxHQUFXLENBQUMsT0FBTyxDQUFDLE1BQVQsSUFBb0I7SUFFM0MsS0FBQSxHQUFZLE9BQUEsR0FBVTtJQUN0QixJQUFDLENBQUEsTUFBRCxHQUFZLE1BQUEsR0FBUyxNQUFBLEdBQVU7SUFFL0IsSUFBQyxDQUFBLFFBQUQsR0FBWSxR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

},{"./clipgeometry":140}],145:[function(require,module,exports){
var ScreenGeometry, SurfaceGeometry,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

SurfaceGeometry = require('./surfacegeometry');


/*
Grid Surface in normalized screen space

+----+----+----+----+
|    |    |    |    |
+----+----+----+----+
|    |    |    |    |
+----+----+----+----+

+----+----+----+----+
|    |    |    |    |
+----+----+----+----+
|    |    |    |    |
+----+----+----+----+
 */

ScreenGeometry = (function(superClass) {
  extend(ScreenGeometry, superClass);

  function ScreenGeometry(options) {
    var ref, ref1;
    if (this.uniforms == null) {
      this.uniforms = {};
    }
    this.uniforms.geometryScale = {
      type: 'v4',
      value: new THREE.Vector4
    };
    options.width = Math.max(2, (ref = +options.width) != null ? ref : 2);
    options.height = Math.max(2, (ref1 = +options.height) != null ? ref1 : 2);
    this.cover();
    ScreenGeometry.__super__.constructor.call(this, options);
  }

  ScreenGeometry.prototype.cover = function(scaleX, scaleY, scaleZ, scaleW) {
    this.scaleX = scaleX != null ? scaleX : 1;
    this.scaleY = scaleY != null ? scaleY : 1;
    this.scaleZ = scaleZ != null ? scaleZ : 1;
    this.scaleW = scaleW != null ? scaleW : 1;
  };

  ScreenGeometry.prototype.clip = function(width, height, surfaces, layers) {
    var invert;
    if (width == null) {
      width = this.width;
    }
    if (height == null) {
      height = this.height;
    }
    if (surfaces == null) {
      surfaces = this.surfaces;
    }
    if (layers == null) {
      layers = this.layers;
    }
    ScreenGeometry.__super__.clip.call(this, width, height, surfaces, layers);
    invert = function(x) {
      return 1 / Math.max(1, x - 1);
    };
    return this.uniforms.geometryScale.value.set(invert(width) * this.scaleX, invert(height) * this.scaleY, invert(surfaces) * this.scaleZ, invert(layers) * this.scaleW);
  };

  return ScreenGeometry;

})(SurfaceGeometry);

module.exports = ScreenGeometry;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcZ2VvbWV0cnlcXHNjcmVlbmdlb21ldHJ5LmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxyZW5kZXJcXGdlb21ldHJ5XFxzY3JlZW5nZW9tZXRyeS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSwrQkFBQTtFQUFBOzs7QUFBQSxlQUFBLEdBQWtCLE9BQUEsQ0FBUSxtQkFBUjs7O0FBRWxCOzs7Ozs7Ozs7Ozs7Ozs7O0FBZ0JNOzs7RUFFUyx3QkFBQyxPQUFEO0FBQ1gsUUFBQTs7TUFBQSxJQUFDLENBQUEsV0FBWTs7SUFDYixJQUFDLENBQUEsUUFBUSxDQUFDLGFBQVYsR0FDRTtNQUFBLElBQUEsRUFBTSxJQUFOO01BQ0EsS0FBQSxFQUFPLElBQUksS0FBSyxDQUFDLE9BRGpCOztJQUdGLE9BQU8sQ0FBQyxLQUFSLEdBQWlCLElBQUksQ0FBQyxHQUFMLENBQVMsQ0FBVCx5Q0FBOEIsQ0FBOUI7SUFDakIsT0FBTyxDQUFDLE1BQVIsR0FBaUIsSUFBSSxDQUFDLEdBQUwsQ0FBUyxDQUFULDRDQUE4QixDQUE5QjtJQUVqQixJQUFDLENBQUEsS0FBRCxDQUFBO0lBRUEsZ0RBQU0sT0FBTjtFQVhXOzsyQkFhYixLQUFBLEdBQU8sU0FBQyxNQUFELEVBQWMsTUFBZCxFQUEyQixNQUEzQixFQUF3QyxNQUF4QztJQUFDLElBQUMsQ0FBQSwwQkFBRCxTQUFVO0lBQUcsSUFBQyxDQUFBLDBCQUFELFNBQVU7SUFBRyxJQUFDLENBQUEsMEJBQUQsU0FBVTtJQUFHLElBQUMsQ0FBQSwwQkFBRCxTQUFVO0VBQWxEOzsyQkFFUCxJQUFBLEdBQU0sU0FBQyxLQUFELEVBQWlCLE1BQWpCLEVBQW1DLFFBQW5DLEVBQXlELE1BQXpEO0FBRUosUUFBQTs7TUFGSyxRQUFRLElBQUMsQ0FBQTs7O01BQU8sU0FBUyxJQUFDLENBQUE7OztNQUFRLFdBQVcsSUFBQyxDQUFBOzs7TUFBVSxTQUFTLElBQUMsQ0FBQTs7SUFFdkUseUNBQU0sS0FBTixFQUFhLE1BQWIsRUFBcUIsUUFBckIsRUFBK0IsTUFBL0I7SUFFQSxNQUFBLEdBQVMsU0FBQyxDQUFEO2FBQU8sQ0FBQSxHQUFJLElBQUksQ0FBQyxHQUFMLENBQVMsQ0FBVCxFQUFZLENBQUEsR0FBSSxDQUFoQjtJQUFYO1dBQ1QsSUFBQyxDQUFBLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLEdBQTlCLENBQWtDLE1BQUEsQ0FBTyxLQUFQLENBQUEsR0FBbUIsSUFBQyxDQUFBLE1BQXRELEVBQ2tDLE1BQUEsQ0FBTyxNQUFQLENBQUEsR0FBbUIsSUFBQyxDQUFBLE1BRHRELEVBRWtDLE1BQUEsQ0FBTyxRQUFQLENBQUEsR0FBbUIsSUFBQyxDQUFBLE1BRnRELEVBR2tDLE1BQUEsQ0FBTyxNQUFQLENBQUEsR0FBbUIsSUFBQyxDQUFBLE1BSHREO0VBTEk7Ozs7R0FqQnFCOztBQTJCN0IsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"./surfacegeometry":148}],146:[function(require,module,exports){
var ClipGeometry, SpriteGeometry,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ClipGeometry = require('./clipgeometry');


/*
Render points as quads

+----+  +----+  +----+  +----+
|    |  |    |  |    |  |    |
+----+  +----+  +----+  +----+

+----+  +----+  +----+  +----+
|    |  |    |  |    |  |    |
+----+  +----+  +----+  +----+

+----+  +----+  +----+  +----+
|    |  |    |  |    |  |    |
+----+  +----+  +----+  +----+
 */

SpriteGeometry = (function(superClass) {
  extend(SpriteGeometry, superClass);

  function SpriteGeometry(options) {
    var base, depth, height, i, index, items, j, k, l, len, m, n, o, p, points, position, quad, ref, ref1, ref2, ref3, ref4, samples, sprite, triangles, v, width, x, y, z;
    SpriteGeometry.__super__.constructor.call(this, options);
    this._clipUniforms();
    this.items = items = +options.items || 2;
    this.width = width = +options.width || 1;
    this.height = height = +options.height || 1;
    this.depth = depth = +options.depth || 1;
    samples = items * width * height * depth;
    points = samples * 4;
    triangles = samples * 2;
    this.setIndex(new THREE.BufferAttribute(new Uint32Array(triangles * 3), 1));
    this.addAttribute('position4', new THREE.BufferAttribute(new Float32Array(points * 4), 4));
    this.addAttribute('sprite', new THREE.BufferAttribute(new Float32Array(points * 2), 2));
    index = this._emitter('index');
    position = this._emitter('position4');
    sprite = this._emitter('sprite');
    quad = [[-1, -1], [-1, 1], [1, -1], [1, 1]];
    base = 0;
    for (i = j = 0, ref = samples; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      index(base);
      index(base + 1);
      index(base + 2);
      index(base + 1);
      index(base + 2);
      index(base + 3);
      base += 4;
    }
    for (z = k = 0, ref1 = depth; 0 <= ref1 ? k < ref1 : k > ref1; z = 0 <= ref1 ? ++k : --k) {
      for (y = m = 0, ref2 = height; 0 <= ref2 ? m < ref2 : m > ref2; y = 0 <= ref2 ? ++m : --m) {
        for (x = n = 0, ref3 = width; 0 <= ref3 ? n < ref3 : n > ref3; x = 0 <= ref3 ? ++n : --n) {
          for (l = o = 0, ref4 = items; 0 <= ref4 ? o < ref4 : o > ref4; l = 0 <= ref4 ? ++o : --o) {
            for (p = 0, len = quad.length; p < len; p++) {
              v = quad[p];
              position(x, y, z, l);
              sprite(v[0], v[1]);
            }
          }
        }
      }
    }
    this._finalize();
    this.clip();
    return;
  }

  SpriteGeometry.prototype.clip = function(width, height, depth, items) {
    if (width == null) {
      width = this.width;
    }
    if (height == null) {
      height = this.height;
    }
    if (depth == null) {
      depth = this.depth;
    }
    if (items == null) {
      items = this.items;
    }
    this._clipGeometry(width, height, depth, items);
    return this._clipOffsets(6, width, height, depth, items, this.width, this.height, this.depth, this.items);
  };

  return SpriteGeometry;

})(ClipGeometry);

module.exports = SpriteGeometry;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcZ2VvbWV0cnlcXHNwcml0ZWdlb21ldHJ5LmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxyZW5kZXJcXGdlb21ldHJ5XFxzcHJpdGVnZW9tZXRyeS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSw0QkFBQTtFQUFBOzs7QUFBQSxZQUFBLEdBQWUsT0FBQSxDQUFRLGdCQUFSOzs7QUFFZjs7Ozs7Ozs7Ozs7Ozs7OztBQWlCTTs7O0VBRVMsd0JBQUMsT0FBRDtBQUNYLFFBQUE7SUFBQSxnREFBTSxPQUFOO0lBRUEsSUFBQyxDQUFBLGFBQUQsQ0FBQTtJQUVBLElBQUMsQ0FBQSxLQUFELEdBQVksS0FBQSxHQUFVLENBQUMsT0FBTyxDQUFDLEtBQVQsSUFBb0I7SUFDMUMsSUFBQyxDQUFBLEtBQUQsR0FBWSxLQUFBLEdBQVUsQ0FBQyxPQUFPLENBQUMsS0FBVCxJQUFvQjtJQUMxQyxJQUFDLENBQUEsTUFBRCxHQUFZLE1BQUEsR0FBVSxDQUFDLE9BQU8sQ0FBQyxNQUFULElBQW9CO0lBQzFDLElBQUMsQ0FBQSxLQUFELEdBQVksS0FBQSxHQUFVLENBQUMsT0FBTyxDQUFDLEtBQVQsSUFBb0I7SUFFMUMsT0FBQSxHQUFZLEtBQUEsR0FBUSxLQUFSLEdBQWdCLE1BQWhCLEdBQXlCO0lBQ3JDLE1BQUEsR0FBWSxPQUFBLEdBQVU7SUFDdEIsU0FBQSxHQUFZLE9BQUEsR0FBVTtJQUV0QixJQUFDLENBQUEsUUFBRCxDQUFjLElBQUksS0FBSyxDQUFDLGVBQVYsQ0FBMEIsSUFBSyxXQUFMLENBQWlCLFNBQUEsR0FBWSxDQUE3QixDQUExQixFQUEyRCxDQUEzRCxDQUFkO0lBQ0EsSUFBQyxDQUFBLFlBQUQsQ0FBYyxXQUFkLEVBQTJCLElBQUksS0FBSyxDQUFDLGVBQVYsQ0FBMEIsSUFBSSxZQUFKLENBQWlCLE1BQUEsR0FBUyxDQUExQixDQUExQixFQUEyRCxDQUEzRCxDQUEzQjtJQUNBLElBQUMsQ0FBQSxZQUFELENBQWMsUUFBZCxFQUEyQixJQUFJLEtBQUssQ0FBQyxlQUFWLENBQTBCLElBQUksWUFBSixDQUFpQixNQUFBLEdBQVMsQ0FBMUIsQ0FBMUIsRUFBMkQsQ0FBM0QsQ0FBM0I7SUFFQSxLQUFBLEdBQVcsSUFBQyxDQUFBLFFBQUQsQ0FBVSxPQUFWO0lBQ1gsUUFBQSxHQUFXLElBQUMsQ0FBQSxRQUFELENBQVUsV0FBVjtJQUNYLE1BQUEsR0FBVyxJQUFDLENBQUEsUUFBRCxDQUFVLFFBQVY7SUFFWCxJQUFBLEdBQU8sQ0FDTCxDQUFDLENBQUMsQ0FBRixFQUFLLENBQUMsQ0FBTixDQURLLEVBRUwsQ0FBQyxDQUFDLENBQUYsRUFBTSxDQUFOLENBRkssRUFHTCxDQUFFLENBQUYsRUFBSyxDQUFDLENBQU4sQ0FISyxFQUlMLENBQUUsQ0FBRixFQUFNLENBQU4sQ0FKSztJQU9QLElBQUEsR0FBTztBQUNQLFNBQVMsZ0ZBQVQ7TUFDRSxLQUFBLENBQU0sSUFBTjtNQUNBLEtBQUEsQ0FBTSxJQUFBLEdBQU8sQ0FBYjtNQUNBLEtBQUEsQ0FBTSxJQUFBLEdBQU8sQ0FBYjtNQUVBLEtBQUEsQ0FBTSxJQUFBLEdBQU8sQ0FBYjtNQUNBLEtBQUEsQ0FBTSxJQUFBLEdBQU8sQ0FBYjtNQUNBLEtBQUEsQ0FBTSxJQUFBLEdBQU8sQ0FBYjtNQUVBLElBQUEsSUFBUTtBQVRWO0FBV0EsU0FBUyxtRkFBVDtBQUNFLFdBQVMsb0ZBQVQ7QUFDRSxhQUFTLG1GQUFUO0FBQ0UsZUFBUyxtRkFBVDtBQUVFLGlCQUFBLHNDQUFBOztjQUNFLFFBQUEsQ0FBUyxDQUFULEVBQVksQ0FBWixFQUFlLENBQWYsRUFBa0IsQ0FBbEI7Y0FDQSxNQUFBLENBQU8sQ0FBRSxDQUFBLENBQUEsQ0FBVCxFQUFhLENBQUUsQ0FBQSxDQUFBLENBQWY7QUFGRjtBQUZGO0FBREY7QUFERjtBQURGO0lBU0EsSUFBQyxDQUFBLFNBQUQsQ0FBQTtJQUNBLElBQUMsQ0FBQSxJQUFELENBQUE7QUFFQTtFQXJEVzs7MkJBdURiLElBQUEsR0FBTSxTQUFDLEtBQUQsRUFBaUIsTUFBakIsRUFBbUMsS0FBbkMsRUFBbUQsS0FBbkQ7O01BQUMsUUFBUSxJQUFDLENBQUE7OztNQUFPLFNBQVMsSUFBQyxDQUFBOzs7TUFBUSxRQUFRLElBQUMsQ0FBQTs7O01BQU8sUUFBUSxJQUFDLENBQUE7O0lBRWhFLElBQUMsQ0FBQSxhQUFELENBQWlCLEtBQWpCLEVBQXdCLE1BQXhCLEVBQWdDLEtBQWhDLEVBQXVDLEtBQXZDO1dBQ0EsSUFBQyxDQUFBLFlBQUQsQ0FBaUIsQ0FBakIsRUFDaUIsS0FEakIsRUFDeUIsTUFEekIsRUFDa0MsS0FEbEMsRUFDMEMsS0FEMUMsRUFFaUIsSUFBQyxDQUFBLEtBRmxCLEVBRXlCLElBQUMsQ0FBQSxNQUYxQixFQUVrQyxJQUFDLENBQUEsS0FGbkMsRUFFMEMsSUFBQyxDQUFBLEtBRjNDO0VBSEk7Ozs7R0F6RHFCOztBQWdFN0IsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"./clipgeometry":140}],147:[function(require,module,exports){
var ClipGeometry, StripGeometry,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ClipGeometry = require('./clipgeometry');


/*
Triangle strips arranged in items, columns and rows

+--+--+--+  +--+--+--+  +--+--+--+  +--+--+--+  
| /| /| /   | /| /| /   | /| /| /   | /| /| / 
+--+--+/    +--+--+/    +--+--+/    +--+--+/  

+--+--+--+  +--+--+--+  +--+--+--+  +--+--+--+  
| /| /| /   | /| /| /   | /| /| /   | /| /| / 
+--+--+/    +--+--+/    +--+--+/    +--+--+/  

+--+--+--+  +--+--+--+  +--+--+--+  +--+--+--+  
| /| /| /   | /| /| /   | /| /| /   | /| /| / 
+--+--+/    +--+--+/    +--+--+/    +--+--+/
 */

StripGeometry = (function(superClass) {
  extend(StripGeometry, superClass);

  function StripGeometry(options) {
    var base, depth, f, height, i, index, items, j, k, l, last, m, n, o, p, points, position, q, r, ref, ref1, ref2, ref3, ref4, ref5, samples, sides, strip, triangles, width, x, y, z;
    StripGeometry.__super__.constructor.call(this, options);
    this._clipUniforms();
    this.items = items = +options.items || 2;
    this.width = width = +options.width || 1;
    this.height = height = +options.height || 1;
    this.depth = depth = +options.depth || 1;
    this.sides = sides = Math.max(0, items - 2);
    samples = width * height * depth;
    points = items * samples;
    triangles = sides * samples;
    this.setIndex(new THREE.BufferAttribute(new Uint32Array(triangles * 3), 1));
    this.addAttribute('position4', new THREE.BufferAttribute(new Float32Array(points * 4), 4));
    this.addAttribute('strip', new THREE.BufferAttribute(new Float32Array(points * 3), 3));
    index = this._emitter('index');
    position = this._emitter('position4');
    strip = this._emitter('strip');
    base = 0;
    for (i = k = 0, ref = samples; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {
      o = base;
      for (j = m = 0, ref1 = sides; 0 <= ref1 ? m < ref1 : m > ref1; j = 0 <= ref1 ? ++m : --m) {
        if (j & 1) {
          index(o + 1);
          index(o);
          index(o + 2);
        } else {
          index(o);
          index(o + 1);
          index(o + 2);
        }
        o++;
      }
      base += items;
    }
    last = items - 1;
    for (z = n = 0, ref2 = depth; 0 <= ref2 ? n < ref2 : n > ref2; z = 0 <= ref2 ? ++n : --n) {
      for (y = p = 0, ref3 = height; 0 <= ref3 ? p < ref3 : p > ref3; y = 0 <= ref3 ? ++p : --p) {
        for (x = q = 0, ref4 = width; 0 <= ref4 ? q < ref4 : q > ref4; x = 0 <= ref4 ? ++q : --q) {
          f = 1;
          position(x, y, z, 0);
          strip(1, 2, f);
          for (l = r = 1, ref5 = last; 1 <= ref5 ? r < ref5 : r > ref5; l = 1 <= ref5 ? ++r : --r) {
            position(x, y, z, l);
            strip(l - 1, l + 1, f = -f);
          }
          position(x, y, z, last);
          strip(last - 2, last - 1, -f);
        }
      }
    }
    this._finalize();
    this.clip();
    return;
  }

  StripGeometry.prototype.clip = function(width, height, depth, items) {
    var sides;
    if (width == null) {
      width = this.width;
    }
    if (height == null) {
      height = this.height;
    }
    if (depth == null) {
      depth = this.depth;
    }
    if (items == null) {
      items = this.items;
    }
    sides = Math.max(0, items - 2);
    this._clipGeometry(width, height, depth, items);
    return this._clipOffsets(3, width, height, depth, sides, this.width, this.height, this.depth, this.sides);
  };

  return StripGeometry;

})(ClipGeometry);

module.exports = StripGeometry;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcZ2VvbWV0cnlcXHN0cmlwZ2VvbWV0cnkuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcZ2VvbWV0cnlcXHN0cmlwZ2VvbWV0cnkuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsMkJBQUE7RUFBQTs7O0FBQUEsWUFBQSxHQUFlLE9BQUEsQ0FBUSxnQkFBUjs7O0FBRWY7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQk07OztFQUVTLHVCQUFDLE9BQUQ7QUFDWCxRQUFBO0lBQUEsK0NBQU0sT0FBTjtJQUVBLElBQUMsQ0FBQSxhQUFELENBQUE7SUFFQSxJQUFDLENBQUEsS0FBRCxHQUFZLEtBQUEsR0FBVSxDQUFDLE9BQU8sQ0FBQyxLQUFULElBQW9CO0lBQzFDLElBQUMsQ0FBQSxLQUFELEdBQVksS0FBQSxHQUFVLENBQUMsT0FBTyxDQUFDLEtBQVQsSUFBb0I7SUFDMUMsSUFBQyxDQUFBLE1BQUQsR0FBWSxNQUFBLEdBQVUsQ0FBQyxPQUFPLENBQUMsTUFBVCxJQUFvQjtJQUMxQyxJQUFDLENBQUEsS0FBRCxHQUFZLEtBQUEsR0FBVSxDQUFDLE9BQU8sQ0FBQyxLQUFULElBQW9CO0lBQzFDLElBQUMsQ0FBQSxLQUFELEdBQVksS0FBQSxHQUFVLElBQUksQ0FBQyxHQUFMLENBQVMsQ0FBVCxFQUFZLEtBQUEsR0FBUSxDQUFwQjtJQUV0QixPQUFBLEdBQVksS0FBQSxHQUFRLE1BQVIsR0FBaUI7SUFDN0IsTUFBQSxHQUFZLEtBQUEsR0FBUTtJQUNwQixTQUFBLEdBQVksS0FBQSxHQUFRO0lBRXBCLElBQUMsQ0FBQSxRQUFELENBQWMsSUFBSSxLQUFLLENBQUMsZUFBVixDQUEwQixJQUFLLFdBQUwsQ0FBaUIsU0FBQSxHQUFZLENBQTdCLENBQTFCLEVB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

},{"./clipgeometry":140}],148:[function(require,module,exports){
var ClipGeometry, SurfaceGeometry,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ClipGeometry = require('./clipgeometry');


/*
Grid Surface

+----+----+----+----+
|    |    |    |    |
+----+----+----+----+
|    |    |    |    |
+----+----+----+----+

+----+----+----+----+
|    |    |    |    |
+----+----+----+----+
|    |    |    |    |
+----+----+----+----+
 */

SurfaceGeometry = (function(superClass) {
  extend(SurfaceGeometry, superClass);

  function SurfaceGeometry(options) {
    var base, closedX, closedY, edgeX, edgeY, edgerX, edgerY, height, i, index, j, k, l, layers, m, n, o, p, points, position, q, quads, r, ref, ref1, ref2, ref3, ref4, ref5, ref6, s, segmentsX, segmentsY, surface, surfaces, triangles, width, wrapX, wrapY, x, y, z;
    SurfaceGeometry.__super__.constructor.call(this, options);
    this._clipUniforms();
    this.closedX = closedX = options.closedX || false;
    this.closedY = closedY = options.closedY || false;
    this.width = width = (+options.width || 2) + (closedX ? 1 : 0);
    this.height = height = (+options.height || 2) + (closedY ? 1 : 0);
    this.surfaces = surfaces = +options.surfaces || 1;
    this.layers = layers = +options.layers || 1;
    wrapX = width - (closedX ? 1 : 0);
    wrapY = height - (closedY ? 1 : 0);
    this.segmentsX = segmentsX = Math.max(0, width - 1);
    this.segmentsY = segmentsY = Math.max(0, height - 1);
    points = width * height * surfaces * layers;
    quads = segmentsX * segmentsY * surfaces * layers;
    triangles = quads * 2;
    this.setIndex(new THREE.BufferAttribute(new Uint32Array(triangles * 3), 1));
    this.addAttribute('position4', new THREE.BufferAttribute(new Float32Array(points * 4), 4));
    this.addAttribute('surface', new THREE.BufferAttribute(new Float32Array(points * 2), 2));
    index = this._emitter('index');
    position = this._emitter('position4');
    surface = this._emitter('surface');
    base = 0;
    for (i = m = 0, ref = surfaces * layers; 0 <= ref ? m < ref : m > ref; i = 0 <= ref ? ++m : --m) {
      for (j = n = 0, ref1 = segmentsY; 0 <= ref1 ? n < ref1 : n > ref1; j = 0 <= ref1 ? ++n : --n) {
        for (k = o = 0, ref2 = segmentsX; 0 <= ref2 ? o < ref2 : o > ref2; k = 0 <= ref2 ? ++o : --o) {
          index(base);
          index(base + 1);
          index(base + width);
          index(base + width);
          index(base + 1);
          index(base + width + 1);
          base++;
        }
        base++;
      }
      base += width;
    }
    edgerX = closedX ? function() {
      return 0;
    } : function(x) {
      if (x === 0) {
        return -1;
      } else if (x === segmentsX) {
        return 1;
      } else {
        return 0;
      }
    };
    edgerY = closedY ? function() {
      return 0;
    } : function(y) {
      if (y === 0) {
        return -1;
      } else if (y === segmentsY) {
        return 1;
      } else {
        return 0;
      }
    };
    for (l = p = 0, ref3 = layers; 0 <= ref3 ? p < ref3 : p > ref3; l = 0 <= ref3 ? ++p : --p) {
      for (z = q = 0, ref4 = surfaces; 0 <= ref4 ? q < ref4 : q > ref4; z = 0 <= ref4 ? ++q : --q) {
        for (y = r = 0, ref5 = height; 0 <= ref5 ? r < ref5 : r > ref5; y = 0 <= ref5 ? ++r : --r) {
          if (closedY) {
            y = y % wrapY;
          }
          edgeY = edgerY(y);
          for (x = s = 0, ref6 = width; 0 <= ref6 ? s < ref6 : s > ref6; x = 0 <= ref6 ? ++s : --s) {
            if (closedX) {
              x = x % wrapX;
            }
            edgeX = edgerX(x);
            position(x, y, z, l);
            surface(edgeX, edgeY);
          }
        }
      }
    }
    this._finalize();
    this.clip();
    return;
  }

  SurfaceGeometry.prototype.clip = function(width, height, surfaces, layers) {
    var segmentsX, segmentsY;
    if (width == null) {
      width = this.width;
    }
    if (height == null) {
      height = this.height;
    }
    if (surfaces == null) {
      surfaces = this.surfaces;
    }
    if (layers == null) {
      layers = this.layers;
    }
    segmentsX = Math.max(0, width - 1);
    segmentsY = Math.max(0, height - 1);
    this._clipGeometry(width, height, surfaces, layers);
    return this._clipOffsets(6, segmentsX, segmentsY, surfaces, layers, this.segmentsX, this.segmentsY, this.surfaces, this.layers);
  };

  SurfaceGeometry.prototype.map = function(width, height, surfaces, layers) {
    if (width == null) {
      width = this.width;
    }
    if (height == null) {
      height = this.height;
    }
    if (surfaces == null) {
      surfaces = this.surfaces;
    }
    if (layers == null) {
      layers = this.layers;
    }
    return this._clipMap(width, height, surfaces, layers);
  };

  return SurfaceGeometry;

})(ClipGeometry);

module.exports = SurfaceGeometry;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcZ2VvbWV0cnlcXHN1cmZhY2VnZW9tZXRyeS5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccmVuZGVyXFxnZW9tZXRyeVxcc3VyZmFjZWdlb21ldHJ5LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLDZCQUFBO0VBQUE7OztBQUFBLFlBQUEsR0FBZSxPQUFBLENBQVEsZ0JBQVI7OztBQUVmOzs7Ozs7Ozs7Ozs7Ozs7O0FBZ0JNOzs7RUFFUyx5QkFBQyxPQUFEO0FBQ1gsUUFBQTtJQUFBLGlEQUFNLE9BQU47SUFFQSxJQUFDLENBQUEsYUFBRCxDQUFBO0lBRUEsSUFBQyxDQUFBLE9BQUQsR0FBWSxPQUFBLEdBQVksT0FBTyxDQUFDLE9BQVIsSUFBb0I7SUFDNUMsSUFBQyxDQUFBLE9BQUQsR0FBWSxPQUFBLEdBQVksT0FBTyxDQUFDLE9BQVIsSUFBb0I7SUFDNUMsSUFBQyxDQUFBLEtBQUQsR0FBWSxLQUFBLEdBQVUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFULElBQXFCLENBQXRCLENBQUEsR0FBMkIsQ0FBRyxPQUFILEdBQWdCLENBQWhCLEdBQXVCLENBQXZCO0lBQ2pELElBQUMsQ0FBQSxNQUFELEdBQVksTUFBQSxHQUFVLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBVCxJQUFxQixDQUF0QixDQUFBLEdBQTJCLENBQUcsT0FBSCxHQUFnQixDQUFoQixHQUF1QixDQUF2QjtJQUNqRCxJQUFDLENBQUEsUUFBRCxHQUFZLFFBQUEsR0FBVyxDQUFDLE9BQU8sQ0FBQyxRQUFULElBQXFCO0lBQzVDLElBQUMsQ0FBQSxNQUFELEdBQVksTUFBQSxHQUFXLENBQUMsT0FBTyxDQUFDLE1BQVQsSUFBcUI7SUFFNUMsS0FBQSxHQUFZLEtBQUEsR0FBUyxDQUFHLE9B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

},{"./clipgeometry":140}],149:[function(require,module,exports){
exports.Scene = require('./scene');

exports.Factory = require('./factory');

exports.Renderable = require('./scene');

exports.Classes = require('./classes');

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcaW5kZXguY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcaW5kZXguY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sQ0FBQyxLQUFSLEdBQXFCLE9BQUEsQ0FBUSxTQUFSOztBQUNyQixPQUFPLENBQUMsT0FBUixHQUFxQixPQUFBLENBQVEsV0FBUjs7QUFDckIsT0FBTyxDQUFDLFVBQVIsR0FBcUIsT0FBQSxDQUFRLFNBQVI7O0FBQ3JCLE9BQU8sQ0FBQyxPQUFSLEdBQXFCLE9BQUEsQ0FBUSxXQUFSIn0=

},{"./classes":137,"./factory":138,"./scene":162}],150:[function(require,module,exports){
var Arrow, ArrowGeometry, Base,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Base = require('./base');

ArrowGeometry = require('../geometry').ArrowGeometry;

Arrow = (function(superClass) {
  extend(Arrow, superClass);

  function Arrow(renderer, shaders, options) {
    var color, combine, f, factory, hasStyle, linear, map, mask, material, object, position, stpq, uniforms, v;
    Arrow.__super__.constructor.call(this, renderer, shaders, options);
    uniforms = options.uniforms, material = options.material, position = options.position, color = options.color, mask = options.mask, map = options.map, combine = options.combine, stpq = options.stpq, linear = options.linear;
    if (uniforms == null) {
      uniforms = {};
    }
    hasStyle = uniforms.styleColor != null;
    this.geometry = new ArrowGeometry({
      sides: options.sides,
      samples: options.samples,
      strips: options.strips,
      ribbons: options.ribbons,
      layers: options.layers,
      anchor: options.anchor,
      flip: options.flip
    });
    this._adopt(uniforms);
    this._adopt(this.geometry.uniforms);
    factory = shaders.material();
    v = factory.vertex;
    v.pipe(this._vertexColor(color, mask));
    v.require(this._vertexPosition(position, material, map, 1, stpq));
    v.pipe('arrow.position', this.uniforms);
    v.pipe('project.position', this.uniforms);
    factory.fragment = f = this._fragmentColor(hasStyle, material, color, mask, map, 1, stpq, combine, linear);
    f.pipe('fragment.color', this.uniforms);
    this.material = this._material(factory.link({}));
    object = new THREE.Mesh(this.geometry, this.material);
    object.frustumCulled = false;
    object.matrixAutoUpdate = false;
    this._raw(object);
    this.renders = [object];
  }

  Arrow.prototype.dispose = function() {
    this.geometry.dispose();
    this.material.dispose();
    this.renders = this.geometry = this.material = null;
    return Arrow.__super__.dispose.apply(this, arguments);
  };

  return Arrow;

})(Base);

module.exports = Arrow;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcbWVzaGVzXFxhcnJvdy5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccmVuZGVyXFxtZXNoZXNcXGFycm93LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLDBCQUFBO0VBQUE7OztBQUFBLElBQUEsR0FBZ0IsT0FBQSxDQUFRLFFBQVI7O0FBQ2hCLGFBQUEsR0FBZ0IsT0FBQSxDQUFRLGFBQVIsQ0FBc0IsQ0FBQzs7QUFFakM7OztFQUNTLGVBQUMsUUFBRCxFQUFXLE9BQVgsRUFBb0IsT0FBcEI7QUFDWCxRQUFBO0lBQUEsdUNBQU0sUUFBTixFQUFnQixPQUFoQixFQUF5QixPQUF6QjtJQUVDLDJCQUFELEVBQVcsMkJBQVgsRUFBcUIsMkJBQXJCLEVBQStCLHFCQUEvQixFQUFzQyxtQkFBdEMsRUFBNEMsaUJBQTVDLEVBQWlELHlCQUFqRCxFQUEwRCxtQkFBMUQsRUFBZ0U7O01BQ2hFLFdBQVk7O0lBRVosUUFBQSxHQUFXO0lBRVgsSUFBQyxDQUFBLFFBQUQsR0FBWSxJQUFJLGFBQUosQ0FDVjtNQUFBLEtBQUEsRUFBUyxPQUFPLENBQUMsS0FBakI7TUFDQSxPQUFBLEVBQVMsT0FBTyxDQUFDLE9BRGpCO01BRUEsTUFBQSxFQUFTLE9BQU8sQ0FBQyxNQUZqQjtNQUdBLE9BQUEsRUFBUyxPQUFPLENBQUMsT0FIakI7TUFJQSxNQUFBLEVBQVMsT0FBTyxDQUFDLE1BSmpCO01BS0EsTUFBQSxFQUFTLE9BQU8sQ0FBQyxNQUxqQjtNQU1BLElBQUEsRUFBUyxPQUFPLENBQUMsSUFOakI7S0FEVTtJQVNaLElBQUMsQ0FBQSxNQUFELENBQVEsUUFBUjtJQUNBLElBQUMsQ0FBQSxNQUFELENBQVEsSUFBQyxDQUFBLFFBQVEsQ0FBQyxRQUFsQjtJQUVBLE9BQUEsR0FBVSxPQUFPLENBQUMsUUFBUixDQUFBO0lBRVYsQ0FBQSxHQUFJLE9BQU8sQ0FBQztJQUVaLENBQUMsQ0FBQyxJQUFGLENBQU8sSUFBQyxDQUFBLFlBQUQsQ0FBYyxLQUFkLEVBQXFCLElBQXJCLENBQVA7SUFFQSxDQUFDLENBQUMsT0FBRixDQUFVLElBQUMsQ0FBQSxlQUFELENBQWlCLFFBQWpCLEVBQTJCLFFBQTNCLEVBQXFDLEdBQXJDLEVBQTBDLENBQTFDLEVBQTZDLElBQTdDLENBQVY7SUFDQSxDQUFDLENBQUMsSUFBRixDQUFPLGdCQUFQLEVBQWdDLElBQUMsQ0FBQSxRQUFqQztJQUNBLENBQUMsQ0FBQyxJQUFGLENBQU8sa0JBQVAsRUFBZ0MsSUFBQyxDQUFBLFFBQWpDO0lBRUEsT0FBTyxDQUFDLFFBQVIsR0FBbUIsQ0FBQSxHQUNqQixJQUFDLENBQUEsY0FBRCxDQUFnQixRQUFoQixFQUEwQixRQUExQixFQUFvQyxLQUFwQyxFQUEyQyxJQUEzQyxFQUFpRCxHQUFqRCxFQUFzRCxDQUF0RCxFQUF5RCxJQUF6RCxFQUErRCxPQUEvRCxFQUF3RSxNQUF4RTtJQUVGLENBQUMsQ0FBQyxJQUFGLENBQU8sZ0JBQVAsRUFBZ0MsSUFBQyxDQUFBLFFBQWpDO0lBRUEsSUFBQyxDQUFBLFFBQUQsR0FBWSxJQUFDLENBQUEsU0FBRCxDQUFXLE9BQU8sQ0FBQyxJQUFSLENBQWEsRUFBYixDQUFYO0lBRVosTUFBQSxHQUFTLElBQUksS0FBSyxDQUFDLElBQVYsQ0FBZSxJQUFDLENBQUEsUUFBaEIsRUFBMEIsSUFBQyxDQUFBLFFBQTNCO0lBQ1QsTUFBTSxDQUFDLGFBQVAsR0FBdUI7SUFDdkIsTUFBTSxDQUFDLGdCQUFQLEdBQTBCO0lBRTFCLElBQUMsQ0FBQSxJQUFELENBQU0sTUFBTjtJQUNBLElBQUMsQ0FBQSxPQUFELEdBQVcsQ0FBQyxNQUFEO0VBMUNBOztrQkE0Q2IsT0FBQSxHQUFTLFNBQUE7SUFDUCxJQUFDLENBQUEsUUFBUSxDQUFDLE9BQVYsQ0FBQTtJQUNBLElBQUMsQ0FBQSxRQUFRLENBQUMsT0FBVixDQUFBO0lBQ0EsSUFBQyxDQUFBLE9BQUQsR0FBVyxJQUFDLENBQUEsUUFBRCxHQUFZLElBQUMsQ0FBQSxRQUFELEdBQVk7V0FDbkMsb0NBQUEsU0FBQTtFQUpPOzs7O0dBN0NTOztBQW1EcEIsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"../geometry":143,"./base":151}],151:[function(require,module,exports){
var Base, Renderable, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Renderable = require('../renderable');

Util = require('../../util');

Base = (function(superClass) {
  extend(Base, superClass);

  function Base(renderer, shaders, options) {
    var ref;
    Base.__super__.constructor.call(this, renderer, shaders, options);
    this.zUnits = (ref = options.zUnits) != null ? ref : 0;
  }

  Base.prototype.raw = function() {
    var i, len, object, ref;
    ref = this.renders;
    for (i = 0, len = ref.length; i < len; i++) {
      object = ref[i];
      this._raw(object);
    }
    return null;
  };

  Base.prototype.depth = function(write, test) {
    var i, len, object, ref;
    ref = this.renders;
    for (i = 0, len = ref.length; i < len; i++) {
      object = ref[i];
      this._depth(object, write, test);
    }
    return null;
  };

  Base.prototype.polygonOffset = function(factor, units) {
    var i, len, object, ref;
    ref = this.renders;
    for (i = 0, len = ref.length; i < len; i++) {
      object = ref[i];
      this._polygonOffset(object, factor, units);
    }
    return null;
  };

  Base.prototype.show = function(transparent, blending, order) {
    var i, len, object, ref, results;
    ref = this.renders;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      object = ref[i];
      results.push(this._show(object, transparent, blending, order));
    }
    return results;
  };

  Base.prototype.hide = function() {
    var i, len, object, ref;
    ref = this.renders;
    for (i = 0, len = ref.length; i < len; i++) {
      object = ref[i];
      this._hide(object);
    }
    return null;
  };

  Base.prototype._material = function(options) {
    var fragmentPrefix, i, key, len, material, precision, ref, shaderOptions, vertexPrefix;
    precision = this.renderer.getPrecision();
    vertexPrefix = "    precision " + precision + " float;\n    precision " + precision + " int;\nuniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;";
    fragmentPrefix = "    precision " + precision + " float;\n    precision " + precision + " int;\nuniform mat4 viewMatrix;\nuniform vec3 cameraPosition;";
    shaderOptions = {};
    Object.assign(shaderOptions, options);
    delete shaderOptions.attributes;
    delete shaderOptions.varyings;
    delete shaderOptions.inspect;
    delete shaderOptions.vertexGraph;
    delete shaderOptions.fragmentGraph;
    material = new THREE.RawShaderMaterial(shaderOptions);
    ref = ['vertexGraph', 'fragmentGraph', 'inspect'];
    for (i = 0, len = ref.length; i < len; i++) {
      key = ref[i];
      material[key] = options[key];
    }
    material.vertexShader = [vertexPrefix, material.vertexShader].join('\n');
    material.fragmentShader = [fragmentPrefix, material.fragmentShader].join('\n');
    return material;
  };

  Base.prototype._raw = function(object) {
    object.rotationAutoUpdate = false;
    object.frustumCulled = false;
    object.matrixAutoUpdate = false;
    return object.material.defaultAttributeValues = void 0;
  };

  Base.prototype._depth = function(object, write, test) {
    var m;
    m = object.material;
    m.depthWrite = write;
    return m.depthTest = test;
  };

  Base.prototype._polygonOffset = function(object, factor, units) {
    var enabled, m;
    units -= this.zUnits;
    enabled = units !== 0;
    m = object.material;
    m.polygonOffset = enabled;
    if (enabled) {
      m.polygonOffsetFactor = factor;
      return m.polygonOffsetUnits = units;
    }
  };

  Base.prototype._show = function(object, transparent, blending, order) {
    var m;
    transparent = true;
    m = object.material;
    object.renderOrder = -order;
    object.visible = true;
    m.transparent = transparent;
    m.blending = blending;
    return null;
  };

  Base.prototype._hide = function(object) {
    return object.visible = false;
  };

  Base.prototype._vertexColor = function(color, mask) {
    var v;
    if (!(color || mask)) {
      return;
    }
    v = this.shaders.shader();
    if (color) {
      v.require(color);
      v.pipe('mesh.vertex.color', this.uniforms);
    }
    if (mask) {
      v.require(mask);
      v.pipe('mesh.vertex.mask', this.uniforms);
    }
    return v;
  };

  Base.prototype._vertexPosition = function(position, material, map, channels, stpq) {
    var defs, v;
    v = this.shaders.shader();
    if (map || (material && material !== true)) {
      defs = {};
      if (channels > 0 || stpq) {
        defs.POSITION_MAP = '';
      }
      if (channels > 0) {
        defs[['POSITION_U', 'POSITION_UV', 'POSITION_UVW', 'POSITION_UVWO'][channels - 1]] = '';
      }
      if (stpq) {
        defs.POSITION_STPQ = '';
      }
    }
    v.require(position);
    return v.pipe('mesh.vertex.position', this.uniforms, defs);
  };

  Base.prototype._fragmentColor = function(hasStyle, material, color, mask, map, channels, stpq, combine, linear) {
    var defs, f, gamma, join;
    f = this.shaders.shader();
    join = false;
    gamma = false;
    defs = {};
    if (channels > 0) {
      defs[['POSITION_U', 'POSITION_UV', 'POSITION_UVW', 'POSITION_UVWO'][channels - 1]] = '';
    }
    if (stpq) {
      defs.POSITION_STPQ = '';
    }
    if (hasStyle) {
      f.pipe('style.color', this.uniforms);
      join = true;
      if (color || map || material) {
        if (!linear || color) {
          f.pipe('mesh.gamma.in');
        }
        gamma = true;
      }
    }
    if (color) {
      f.isolate();
      f.pipe('mesh.fragment.color', this.uniforms);
      if (!linear || join) {
        f.pipe('mesh.gamma.in');
      }
      f.end();
      if (join) {
        f.pipe(Util.GLSL.binaryOperator('vec4', '*'));
      }
      if (linear && join) {
        f.pipe('mesh.gamma.out');
      }
      join = true;
      gamma = true;
    }
    if (map) {
      if (!join && combine) {
        f.pipe(Util.GLSL.constant('vec4', 'vec4(1.0)'));
      }
      f.isolate();
      f.require(map);
      f.pipe('mesh.fragment.map', this.uniforms, defs);
      if (!linear) {
        f.pipe('mesh.gamma.in');
      }
      f.end();
      if (combine) {
        f.pipe(combine);
      } else {
        if (join) {
          f.pipe(Util.GLSL.binaryOperator('vec4', '*'));
        }
      }
      join = true;
      gamma = true;
    }
    if (material) {
      if (!join) {
        f.pipe(Util.GLSL.constant('vec4', 'vec4(1.0)'));
      }
      if (material === true) {
        f.pipe('mesh.fragment.shaded', this.uniforms);
      } else {
        f.require(material);
        f.pipe('mesh.fragment.material', this.uniforms, defs);
      }
      gamma = true;
    }
    if (gamma && !linear) {
      f.pipe('mesh.gamma.out');
    }
    if (mask) {
      f.pipe('mesh.fragment.mask', this.uniforms);
      if (join) {
        f.pipe(Util.GLSL.binaryOperator('vec4', '*'));
      }
    }
    return f;
  };

  return Base;

})(Renderable);

module.exports = Base;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcbWVzaGVzXFxiYXNlLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxyZW5kZXJcXG1lc2hlc1xcYmFzZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxzQkFBQTtFQUFBOzs7QUFBQSxVQUFBLEdBQWEsT0FBQSxDQUFRLGVBQVI7O0FBQ2IsSUFBQSxHQUFhLE9BQUEsQ0FBUSxZQUFSOztBQUVQOzs7RUFDUyxjQUFDLFFBQUQsRUFBVyxPQUFYLEVBQW9CLE9BQXBCO0FBQ1gsUUFBQTtJQUFBLHNDQUFNLFFBQU4sRUFBZ0IsT0FBaEIsRUFBeUIsT0FBekI7SUFDQSxJQUFDLENBQUEsTUFBRCwwQ0FBMkI7RUFGaEI7O2lCQUliLEdBQUEsR0FBSyxTQUFBO0FBQ0gsUUFBQTtBQUFBO0FBQUEsU0FBQSxxQ0FBQTs7TUFBQSxJQUFDLENBQUEsSUFBRCxDQUFNLE1BQU47QUFBQTtXQUNBO0VBRkc7O2lCQUlMLEtBQUEsR0FBTyxTQUFDLEtBQUQsRUFBUSxJQUFSO0FBQ0wsUUFBQTtBQUFBO0FBQUEsU0FBQSxxQ0FBQTs7TUFBQSxJQUFDLENBQUEsTUFBRCxDQUFRLE1BQVIsRUFBZ0IsS0FBaEIsRUFBdUIsSUFBdkI7QUFBQTtXQUNBO0VBRks7O2lCQUlQLGFBQUEsR0FBZSxTQUFDLE1BQUQsRUFBUyxLQUFUO0FBQ2IsUUFBQTtBQUFBO0FBQUEsU0FBQSxxQ0FBQTs7TUFBQSxJQUFDLENBQUEsY0FBRCxDQUFnQixNQUFoQixFQUF3QixNQUF4QixFQUFnQyxLQUFoQztBQUFBO1dBQ0E7RUFGYTs7aUJBSWYsSUFBQSxHQUFNLFNBQUMsV0FBRCxFQUFjLFFBQWQsRUFBd0IsS0FBeEI7QUFDSixRQUFBO0FBQUE7QUFBQTtTQUFBLHFDQUFBOzttQkFBQSxJQUFDLENB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

},{"../../util":175,"../renderable":161}],152:[function(require,module,exports){
var Base, Debug,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Base = require('./base');

Debug = (function(superClass) {
  extend(Debug, superClass);

  function Debug(renderer, shaders, options) {
    var object;
    Debug.__super__.constructor.call(this, renderer, shaders, options);
    this.geometry = new THREE.PlaneGeometry(1, 1);
    this.material = new THREE.MeshBasicMaterial({
      map: options.map
    });
    this.material.side = THREE.DoubleSide;
    object = new THREE.Mesh(this.geometry, this.material);
    object.position.x += options.x || 0;
    object.position.y += options.y || 0;
    object.frustumCulled = false;
    object.scale.set(2, 2, 2);
    object.__debug = true;
    this.objects = [object];
  }

  Debug.prototype.dispose = function() {
    this.geometry.dispose();
    this.material.dispose();
    this.objects = this.geometry = this.material = null;
    return Debug.__super__.dispose.apply(this, arguments);
  };

  return Debug;

})(Base);

module.exports = Debug;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcbWVzaGVzXFxkZWJ1Zy5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccmVuZGVyXFxtZXNoZXNcXGRlYnVnLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLFdBQUE7RUFBQTs7O0FBQUEsSUFBQSxHQUFPLE9BQUEsQ0FBUSxRQUFSOztBQUVEOzs7RUFDUyxlQUFDLFFBQUQsRUFBVyxPQUFYLEVBQW9CLE9BQXBCO0FBQ1gsUUFBQTtJQUFBLHVDQUFNLFFBQU4sRUFBZ0IsT0FBaEIsRUFBeUIsT0FBekI7SUFFQSxJQUFDLENBQUEsUUFBRCxHQUFZLElBQUksS0FBSyxDQUFDLGFBQVYsQ0FBd0IsQ0FBeEIsRUFBMkIsQ0FBM0I7SUFDWixJQUFDLENBQUEsUUFBRCxHQUFZLElBQUksS0FBSyxDQUFDLGlCQUFWLENBQTRCO01BQUEsR0FBQSxFQUFLLE9BQU8sQ0FBQyxHQUFiO0tBQTVCO0lBQ1osSUFBQyxDQUFBLFFBQVEsQ0FBQyxJQUFWLEdBQWlCLEtBQUssQ0FBQztJQUV2QixNQUFBLEdBQVMsSUFBSSxLQUFLLENBQUMsSUFBVixDQUFlLElBQUMsQ0FBQSxRQUFoQixFQUEwQixJQUFDLENBQUEsUUFBM0I7SUFDVCxNQUFNLENBQUMsUUFBUSxDQUFDLENBQWhCLElBQXFCLE9BQU8sQ0FBQyxDQUFSLElBQWE7SUFDbEMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFoQixJQUFxQixPQUFPLENBQUMsQ0FBUixJQUFhO0lBQ2xDLE1BQU0sQ0FBQyxhQUFQLEdBQXVCO0lBQ3ZCLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBYixDQUFpQixDQUFqQixFQUFvQixDQUFwQixFQUF1QixDQUF2QjtJQUNBLE1BQU0sQ0FBQyxPQUFQLEdBQWlCO0lBRWpCLElBQUMsQ0FBQSxPQUFELEdBQVcsQ0FBQyxNQUFEO0VBZEE7O2tCQWdCYixPQUFBLEdBQVMsU0FBQTtJQUNQLElBQUMsQ0FBQSxRQUFRLENBQUMsT0FBVixDQUFBO0lBQ0EsSUFBQyxDQUFBLFFBQVEsQ0FBQyxPQUFWLENBQUE7SUFDQSxJQUFDLENBQUEsT0FBRCxHQUFXLElBQUMsQ0FBQSxRQUFELEdBQVksSUFBQyxDQUFBLFFBQUQsR0FBWTtXQUNuQyxvQ0FBQSxTQUFBO0VBSk87Ozs7R0FqQlM7O0FBdUJwQixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"./base":151}],153:[function(require,module,exports){
var Base, Face, FaceGeometry,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Base = require('./base');

FaceGeometry = require('../geometry').FaceGeometry;

Face = (function(superClass) {
  extend(Face, superClass);

  function Face(renderer, shaders, options) {
    var color, combine, f, factory, hasStyle, linear, map, mask, material, object, position, stpq, uniforms, v;
    Face.__super__.constructor.call(this, renderer, shaders, options);
    uniforms = options.uniforms, material = options.material, position = options.position, color = options.color, mask = options.mask, map = options.map, combine = options.combine, stpq = options.stpq, linear = options.linear;
    if (uniforms == null) {
      uniforms = {};
    }
    if (material == null) {
      material = true;
    }
    hasStyle = uniforms.styleColor != null;
    this.geometry = new FaceGeometry({
      items: options.items,
      width: options.width,
      height: options.height,
      depth: options.depth
    });
    this._adopt(uniforms);
    this._adopt(this.geometry.uniforms);
    factory = shaders.material();
    v = factory.vertex;
    v.pipe(this._vertexColor(color, mask));
    v.require(this._vertexPosition(position, material, map, 2, stpq));
    if (!material) {
      v.pipe('face.position', this.uniforms);
    }
    if (material) {
      v.pipe('face.position.normal', this.uniforms);
    }
    v.pipe('project.position', this.uniforms);
    factory.fragment = f = this._fragmentColor(hasStyle, material, color, mask, map, 2, stpq, combine, linear);
    f.pipe('fragment.color', this.uniforms);
    this.material = this._material(factory.link({
      side: THREE.DoubleSide
    }));
    object = new THREE.Mesh(this.geometry, this.material);
    this._raw(object);
    this.renders = [object];
  }

  Face.prototype.dispose = function() {
    this.geometry.dispose();
    this.material.dispose();
    this.renders = this.geometry = this.material = null;
    return Face.__super__.dispose.apply(this, arguments);
  };

  return Face;

})(Base);

module.exports = Face;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcbWVzaGVzXFxmYWNlLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxyZW5kZXJcXG1lc2hlc1xcZmFjZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSx3QkFBQTtFQUFBOzs7QUFBQSxJQUFBLEdBQWUsT0FBQSxDQUFRLFFBQVI7O0FBQ2YsWUFBQSxHQUFlLE9BQUEsQ0FBUSxhQUFSLENBQXNCLENBQUM7O0FBRWhDOzs7RUFDUyxjQUFDLFFBQUQsRUFBVyxPQUFYLEVBQW9CLE9BQXBCO0FBQ1gsUUFBQTtJQUFBLHNDQUFNLFFBQU4sRUFBZ0IsT0FBaEIsRUFBeUIsT0FBekI7SUFFQywyQkFBRCxFQUFXLDJCQUFYLEVBQXFCLDJCQUFyQixFQUErQixxQkFBL0IsRUFBc0MsbUJBQXRDLEVBQTRDLGlCQUE1QyxFQUFpRCx5QkFBakQsRUFBMEQsbUJBQTFELEVBQWdFOztNQUVoRSxXQUFZOzs7TUFDWixXQUFZOztJQUVaLFFBQUEsR0FBVztJQUVYLElBQUMsQ0FBQSxRQUFELEdBQVksSUFBSSxZQUFKLENBQ1Y7TUFBQSxLQUFBLEVBQVEsT0FBTyxDQUFDLEtBQWhCO01BQ0EsS0FBQSxFQUFRLE9BQU8sQ0FBQyxLQURoQjtNQUVBLE1BQUEsRUFBUSxPQUFPLENBQUMsTUFGaEI7TUFHQSxLQUFBLEVBQVEsT0FBTyxDQUFDLEtBSGhCO0tBRFU7SUFNWixJQUFDLENBQUEsTUFBRCxDQUFRLFFBQVI7SUFDQSxJQUFDLENBQUEsTUFBRCxDQUFRLElBQUMsQ0FBQSxRQUFRLENBQUMsUUFBbEI7SUFFQSxPQUFBLEdBQVUsT0FBTyxDQUFDLFFBQVIsQ0FBQTtJQUVWLENBQUEsR0FBSSxPQUFPLENBQUM7SUFFWixDQUFDLENBQUMsSUFBRixDQUFPLElBQUMsQ0FBQSxZQUFELENBQWMsS0FBZCxFQUFxQixJQUFyQixDQUFQO0lBRUEsQ0FBQyxDQUFDLE9BQUYsQ0FBVSxJQUFDLENBQUEsZUFBRCxDQUFpQixRQUFqQixFQUEyQixRQUEzQixFQUFxQyxHQUFyQyxFQUEwQyxDQUExQyxFQUE2QyxJQUE3QyxDQUFWO0lBQ0EsSUFBNkMsQ0FBQyxRQUE5QztNQUFBLENBQUMsQ0FBQyxJQUFGLENBQU8sZUFBUCxFQUFnQyxJQUFDLENBQUEsUUFBakMsRUFBQTs7SUFDQSxJQUE4QyxRQUE5QztNQUFBLENBQUMsQ0FBQyxJQUFGLENBQU8sc0JBQVAsRUFBZ0MsSUFBQyxDQUFBLFFBQWpDLEVBQUE7O0lBQ0EsQ0FBQyxDQUFDLElBQUYsQ0FBTyxrQkFBUCxFQUFnQyxJQUFDLENBQUEsUUFBakM7SUFFQSxPQUFPLENBQUMsUUFBUixHQUFtQixDQUFBLEdBQ2pCLElBQUMsQ0FBQSxjQUFELENBQWdCLFFBQWhCLEVBQTBCLFFBQTFCLEVBQW9DLEtBQXBDLEVBQTJDLElBQTNDLEVBQWlELEdBQWpELEVBQXNELENBQXRELEVBQXlELElBQXpELEVBQStELE9BQS9ELEVBQXdFLE1BQXhFO0lBRUYsQ0FBQyxDQUFDLElBQUYsQ0FBTyxnQkFBUCxFQUFnQyxJQUFDLENBQUEsUUFBakM7SUFFQSxJQUFDLENBQUEsUUFBRCxHQUFZLElBQUMsQ0FBQSxTQUFELENBQVcsT0FBTyxDQUFDLElBQVIsQ0FDckI7TUFBQSxJQUFBLEVBQU0sS0FBSyxDQUFDLFVBQVo7S0FEcUIsQ0FBWDtJQUdaLE1BQUEsR0FBUyxJQUFJLEtBQUssQ0FBQyxJQUFWLENBQWUsSUFBQyxDQUFBLFFBQWhCLEVBQTBCLElBQUMsQ0FBQSxRQUEzQjtJQUVULElBQUMsQ0FBQSxJQUFELENBQU0sTUFBTjtJQUNBLElBQUMsQ0FBQSxPQUFELEdBQVcsQ0FBQyxNQUFEO0VBekNBOztpQkEyQ2IsT0FBQSxHQUFTLFNBQUE7SUFDUCxJQUFDLENBQUEsUUFBUSxDQUFDLE9BQVYsQ0FBQTtJQUNBLElBQUMsQ0FBQSxRQUFRLENBQUMsT0FBVixDQUFBO0lBQ0EsSUFBQyxDQUFBLE9BQUQsR0FBVyxJQUFDLENBQUEsUUFBRCxHQUFZLElBQUMsQ0FBQSxRQUFELEdBQVk7V0FDbkMsbUNBQUEsU0FBQTtFQUpPOzs7O0dBNUNROztBQWtEbkIsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"../geometry":143,"./base":151}],154:[function(require,module,exports){
var Base, Line, LineGeometry,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Base = require('./base');

LineGeometry = require('../geometry').LineGeometry;

Line = (function(superClass) {
  extend(Line, superClass);

  function Line(renderer, shaders, options) {
    var clip, color, combine, defs, detail, f, factory, hasStyle, join, linear, map, mask, material, object, position, proximity, ref, stpq, stroke, uniforms, v;
    Line.__super__.constructor.call(this, renderer, shaders, options);
    uniforms = options.uniforms, material = options.material, position = options.position, color = options.color, mask = options.mask, map = options.map, combine = options.combine, stpq = options.stpq, linear = options.linear, clip = options.clip, stroke = options.stroke, join = options.join, proximity = options.proximity;
    if (uniforms == null) {
      uniforms = {};
    }
    stroke = [null, 'dotted', 'dashed'][stroke];
    hasStyle = uniforms.styleColor != null;
    join = (ref = ['miter', 'round', 'bevel'][join]) != null ? ref : 'miter';
    detail = {
      miter: 1,
      round: 4,
      bevel: 2
    }[join];
    this.geometry = new LineGeometry({
      samples: options.samples,
      strips: options.strips,
      ribbons: options.ribbons,
      layers: options.layers,
      anchor: options.anchor,
      closed: options.closed,
      detail: detail
    });
    this._adopt(uniforms);
    this._adopt(this.geometry.uniforms);
    factory = shaders.material();
    defs = {};
    if (stroke) {
      defs.LINE_STROKE = '';
    }
    if (clip) {
      defs.LINE_CLIP = '';
    }
    if (proximity != null) {
      defs.LINE_PROXIMITY = '';
    }
    defs['LINE_JOIN_' + join.toUpperCase()] = '';
    if (detail > 1) {
      defs['LINE_JOIN_DETAIL'] = detail;
    }
    v = factory.vertex;
    v.pipe(this._vertexColor(color, mask));
    v.require(this._vertexPosition(position, material, map, 2, stpq));
    v.pipe('line.position', this.uniforms, defs);
    v.pipe('project.position', this.uniforms);
    f = factory.fragment;
    if (stroke) {
      f.pipe("fragment.clip." + stroke, this.uniforms);
    }
    if (clip) {
      f.pipe('fragment.clip.ends', this.uniforms);
    }
    if (proximity != null) {
      f.pipe('fragment.clip.proximity', this.uniforms);
    }
    f.pipe(this._fragmentColor(hasStyle, material, color, mask, map, 2, stpq, combine, linear));
    f.pipe('fragment.color', this.uniforms);
    this.material = this._material(factory.link({
      side: THREE.DoubleSide
    }));
    object = new THREE.Mesh(this.geometry, this.material);
    this._raw(object);
    this.renders = [object];
  }

  Line.prototype.dispose = function() {
    this.geometry.dispose();
    this.material.dispose();
    this.renders = this.geometry = this.material = null;
    return Line.__super__.dispose.apply(this, arguments);
  };

  return Line;

})(Base);

module.exports = Line;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcbWVzaGVzXFxsaW5lLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxyZW5kZXJcXG1lc2hlc1xcbGluZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSx3QkFBQTtFQUFBOzs7QUFBQSxJQUFBLEdBQWUsT0FBQSxDQUFRLFFBQVI7O0FBQ2YsWUFBQSxHQUFlLE9BQUEsQ0FBUSxhQUFSLENBQXNCLENBQUM7O0FBRWhDOzs7RUFDUyxjQUFDLFFBQUQsRUFBVyxPQUFYLEVBQW9CLE9BQXBCO0FBQ1gsUUFBQTtJQUFBLHNDQUFNLFFBQU4sRUFBZ0IsT0FBaEIsRUFBeUIsT0FBekI7SUFFQywyQkFBRCxFQUFXLDJCQUFYLEVBQXFCLDJCQUFyQixFQUErQixxQkFBL0IsRUFBc0MsbUJBQXRDLEVBQTRDLGlCQUE1QyxFQUFpRCx5QkFBakQsRUFBMEQsbUJBQTFELEVBQWdFLHVCQUFoRSxFQUF3RSxtQkFBeEUsRUFBOEUsdUJBQTlFLEVBQXNGLG1CQUF0RixFQUE0Rjs7TUFFNUYsV0FBWTs7SUFDWixNQUFBLEdBQVcsQ0FBQyxJQUFELEVBQU8sUUFBUCxFQUFpQixRQUFqQixDQUEyQixDQUFBLE1BQUE7SUFFdEMsUUFBQSxHQUFXO0lBR1gsSUFBQSw2REFBNkM7SUFDN0MsTUFBQSxHQUFTO01BQUMsS0FBQSxFQUFPLENBQVI7TUFBVyxLQUFBLEVBQU8sQ0FBbEI7TUFBcUIsS0FBQSxFQUFPLENBQTVCO0tBQStCLENBQUEsSUFBQTtJQUV4QyxJQUFDLENBQUEsUUFBRCxHQUFZLElBQUksWUFBSixDQUNWO01BQUEsT0FBQSxFQUFTLE9BQU8sQ0FBQyxPQUFqQjtNQUNBLE1BQUEsRUFBUyxPQUFPLENBQUMsTUFEakI7TUFFQSxPQUFBLEVBQVMsT0FBTyxDQUFDLE9B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

},{"../geometry":143,"./base":151}],155:[function(require,module,exports){
var MemoScreen, Screen, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Screen = require('./screen');

Util = require('../../util');

MemoScreen = (function(superClass) {
  extend(MemoScreen, superClass);

  function MemoScreen(renderer, shaders, options) {
    var depth, height, i, inv, inv1, items, len, map, object, ref, stpq, width;
    this.memo = (items = options.items, width = options.width, height = options.height, depth = options.depth, stpq = options.stpq, options);
    inv = function(x) {
      return 1 / Math.max(1, x);
    };
    inv1 = function(x) {
      return 1 / Math.max(1, x - 1);
    };
    this.uniforms = {
      remapUVScale: {
        type: 'v2',
        value: new THREE.Vector2(items * width, height * depth)
      },
      remapModulus: {
        type: 'v2',
        value: new THREE.Vector2(items, height)
      },
      remapModulusInv: {
        type: 'v2',
        value: new THREE.Vector2(inv(items), inv(height))
      },
      remapSTPQScale: {
        type: 'v4',
        value: new THREE.Vector4(inv1(width), inv1(height), inv1(depth), inv1(items))
      }
    };
    map = shaders.shader();
    map.pipe('screen.map.xyzw', this.uniforms);
    if (options.map != null) {
      if (stpq) {
        map.pipe('screen.map.stpq', this.uniforms);
      }
      map.pipe(options.map);
    }
    MemoScreen.__super__.constructor.call(this, renderer, shaders, {
      map: map,
      linear: true
    });
    ref = this.renders;
    for (i = 0, len = ref.length; i < len; i++) {
      object = ref[i];
      object.transparent = false;
    }
    null;
  }

  MemoScreen.prototype.cover = function(width, height, depth, items) {
    var inv1, x, y;
    if (width == null) {
      width = this.memo.width;
    }
    if (height == null) {
      height = this.memo.height;
    }
    if (depth == null) {
      depth = this.memo.depth;
    }
    if (items == null) {
      items = this.memo.items;
    }
    inv1 = function(x) {
      return 1 / Math.max(1, x - 1);
    };
    this.uniforms.remapSTPQScale.value.set(inv1(width), inv1(height), inv1(depth), inv1(items));
    x = width / this.memo.width;
    y = depth / this.memo.depth;
    if (this.memo.depth === 1) {
      y = height / this.memo.height;
    }
    return this.geometry.cover(x, y);
  };

  return MemoScreen;

})(Screen);

module.exports = MemoScreen;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcbWVzaGVzXFxtZW1vc2NyZWVuLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxyZW5kZXJcXG1lc2hlc1xcbWVtb3NjcmVlbi5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSx3QkFBQTtFQUFBOzs7QUFBQSxNQUFBLEdBQWtCLE9BQUEsQ0FBUSxVQUFSOztBQUNsQixJQUFBLEdBQWtCLE9BQUEsQ0FBUSxZQUFSOztBQUVaOzs7RUFDUyxvQkFBQyxRQUFELEVBQVcsT0FBWCxFQUFvQixPQUFwQjtBQUNYLFFBQUE7SUFBQSxJQUFDLENBQUEsSUFBRCxHQUFRLENBQUMscUJBQUQsRUFBUSxxQkFBUixFQUFlLHVCQUFmLEVBQXVCLHFCQUF2QixFQUE4QixtQkFBOUIsRUFBc0MsT0FBdEM7SUFFUixHQUFBLEdBQU8sU0FBQyxDQUFEO2FBQU8sQ0FBQSxHQUFJLElBQUksQ0FBQyxHQUFMLENBQVMsQ0FBVCxFQUFZLENBQVo7SUFBWDtJQUNQLElBQUEsR0FBTyxTQUFDLENBQUQ7YUFBTyxDQUFBLEdBQUksSUFBSSxDQUFDLEdBQUwsQ0FBUyxDQUFULEVBQVksQ0FBQSxHQUFJLENBQWhCO0lBQVg7SUFFUCxJQUFDLENBQUEsUUFBRCxHQUNFO01BQUEsWUFBQSxFQUFjO1FBQ1osSUFBQSxFQUFNLElBRE07UUFFWixLQUFBLEVBQU8sSUFBSSxLQUFLLENBQUMsT0FBVixDQUFrQixLQUFBLEdBQVEsS0FBMUIsRUFBaUMsTUFBQSxHQUFTLEtBQTFDLENBRks7T0FBZDtNQUdBLFlBQUEsRUFBYztRQUNaLElBQUEsRUFBTSxJQURNO1FBRVosS0FBQSxFQUFPLElBQUksS0FBSyxDQUFDLE9BQVYsQ0FBa0IsS0FBbEIsRUFBeUIsTUFBekIsQ0FGSztPQUhkO01BTUEsZUFBQSxFQUFpQjtRQUNmLElBQUEsRUFBTSxJQURTO1FBRWYsS0FBQSxFQUFPLElBQUksS0FBSyxDQUFDLE9BQVYsQ0FBa0IsR0FBQSxDQUFJLEtBQUosQ0FBbEIsRUFBOEIsR0FBQSxDQUFJLE1BQUosQ0FBOUIsQ0FGUTtPQU5qQjtNQVNBLGNBQUEsRUFBZ0I7UUFDZCxJQUFBLEVBQU0sSUFEUTtRQUVkLEtBQUEsRUFBTyxJQUFJLEtBQUssQ0FBQyxPQUFWLENBQWtCLElBQUEsQ0FBSyxLQUFMLENBQWxCLEVBQStCLElBQUEsQ0FBSyxNQUFMLENBQS9CLEVBQTZDLElBQUEsQ0FBSyxLQUFMLENBQTdDLEVBQTBELElBQUEsQ0FBSyxLQUFMLENBQTFELENBRk87T0FUaEI7O0lBYUYsR0FBQSxHQUFNLE9BQU8sQ0FBQyxNQUFSLENBQUE7SUFDTixHQUFHLENBQUMsSUFBSixDQUFTLGlCQUFULEVBQTRCLElBQUMsQ0FBQSxRQUE3QjtJQUNBLElBQUcsbUJBQUg7TUFFRSxJQUF5QyxJQUF6QztRQUFBLEdBQUcsQ0FBQyxJQUFKLENBQVMsaUJBQVQsRUFBNEIsSUFBQyxDQUFBLFFBQTdCLEVBQUE7O01BQ0EsR0FBRyxDQUFDLElBQUosQ0FBUyxPQUFPLENBQUMsR0FBakIsRUFIRjs7SUFLQSw0Q0FBTSxRQUFOLEVBQWdCLE9BQWhCLEVBQXlCO01BQUMsS0FBQSxHQUFEO01BQU0sTUFBQSxFQUFRLElBQWQ7S0FBekI7QUFFQTtBQUFBLFNBQUEscUNBQUE7O01BQ0UsTUFBTSxDQUFDLFdBQVAsR0FBcUI7QUFEdkI7SUFHQTtFQWhDVzs7dUJBa0NiLEtBQUEsR0FBTyxTQUFDLEtBQUQsRUFBc0IsTUFBdEIsRUFBNkMsS0FBN0MsRUFBa0UsS0FBbEU7QUFDTCxRQUFBOztNQURNLFFBQVEsSUFBQyxDQUFBLElBQUksQ0FBQzs7O01BQU8sU0FBUyxJQUFDLENBQUEsSUFBSSxDQUFDOzs7TUFBUSxRQUFRLElBQUMsQ0FBQSxJQUFJLENBQUM7OztNQUFPLFFBQVEsSUFBQyxDQUFBLElBQUksQ0FBQzs7SUFDckYsSUFBQSxHQUFPLFNBQUMsQ0FBRDthQUFPLENBQUEsR0FBSSxJQUFJLENBQUMsR0FBTCxDQUFTLENBQVQsRUFBWSxDQUFBLEdBQUksQ0FBaEI7SUFBWDtJQUNQLElBQUMsQ0FBQSxRQUFRLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxHQUEvQixDQUFtQyxJQUFBLENBQUssS0FBTCxDQUFuQyxFQUFnRCxJQUFBLENBQUssTUFBTCxDQUFoRCxFQUE4RCxJQUFBLENBQUssS0FBTCxDQUE5RCxFQUEyRSxJQUFBLENBQUssS0FBTCxDQUEzRTtJQUVBLENBQUEsR0FBSSxLQUFBLEdBQVMsSUFBQyxDQUFBLElBQUksQ0FBQztJQUNuQixDQUFBLEdBQUksS0FBQSxHQUFTLElBQUMsQ0FBQSxJQUFJLENBQUM7SUFDbkIsSUFBNkIsSUFBQyxDQUFBLElBQUksQ0FBQyxLQUFOLEtBQWUsQ0FBNUM7TUFBQSxDQUFBLEdBQUksTUFBQSxHQUFTLElBQUMsQ0FBQSxJQUFJLENBQUMsT0FBbkI7O1dBRUEsSUFBQyxDQUFBLFFBQVEsQ0FBQyxLQUFWLENBQWdCLENBQWhCLEVBQW1CLENBQW5CO0VBUks7Ozs7R0FuQ2dCOztBQTZDekIsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"../../util":175,"./screen":157}],156:[function(require,module,exports){
var Base, Point, SpriteGeometry,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Base = require('./base');

SpriteGeometry = require('../geometry').SpriteGeometry;

Point = (function(superClass) {
  extend(Point, superClass);

  function Point(renderer, shaders, options) {
    var _scale, _shape, alpha, color, combine, defines, edgeFactory, f, factory, fill, fillFactory, hasStyle, linear, map, mask, material, optical, pass, passes, position, ref, ref1, ref2, ref3, scales, shape, shapes, size, stpq, uniforms, v;
    Point.__super__.constructor.call(this, renderer, shaders, options);
    uniforms = options.uniforms, material = options.material, position = options.position, color = options.color, size = options.size, mask = options.mask, map = options.map, combine = options.combine, linear = options.linear, shape = options.shape, optical = options.optical, fill = options.fill, stpq = options.stpq;
    if (uniforms == null) {
      uniforms = {};
    }
    shape = (ref = +shape) != null ? ref : 0;
    if (fill == null) {
      fill = true;
    }
    hasStyle = uniforms.styleColor != null;
    shapes = ['circle', 'square', 'diamond', 'up', 'down', 'left', 'right'];
    passes = ['circle', 'generic', 'generic', 'generic', 'generic', 'generic', 'generic'];
    scales = [1.2, 1, 1.414, 1.16, 1.16, 1.16, 1.16];
    pass = (ref1 = passes[shape]) != null ? ref1 : passes[0];
    _shape = (ref2 = shapes[shape]) != null ? ref2 : shapes[0];
    _scale = (ref3 = optical && scales[shape]) != null ? ref3 : 1;
    alpha = fill ? pass : pass + ".hollow";
    this.geometry = new SpriteGeometry({
      items: options.items,
      width: options.width,
      height: options.height,
      depth: options.depth
    });
    this._adopt(uniforms);
    this._adopt(this.geometry.uniforms);
    defines = {
      POINT_SHAPE_SCALE: +(_scale + .00001)
    };
    factory = shaders.material();
    v = factory.vertex;
    v.pipe(this._vertexColor(color, mask));
    if (size) {
      v.isolate();
      v.require(size);
      v.require('point.size.varying', this.uniforms);
      v.end();
    } else {
      v.require('point.size.uniform', this.uniforms);
    }
    v.require(this._vertexPosition(position, material, map, 2, stpq));
    v.pipe('point.position', this.uniforms, defines);
    v.pipe('project.position', this.uniforms);
    factory.fragment = f = this._fragmentColor(hasStyle, material, color, mask, map, 2, stpq, combine, linear);
    edgeFactory = shaders.material();
    edgeFactory.vertex.pipe(v);
    f = edgeFactory.fragment.pipe(factory.fragment);
    f.require("point.mask." + _shape, this.uniforms);
    f.require("point.alpha." + alpha, this.uniforms);
    f.pipe('point.edge', this.uniforms);
    fillFactory = shaders.material();
    fillFactory.vertex.pipe(v);
    f = fillFactory.fragment.pipe(factory.fragment);
    f.require("point.mask." + _shape, this.uniforms);
    f.require("point.alpha." + alpha, this.uniforms);
    f.pipe('point.fill', this.uniforms);
    this.fillMaterial = this._material(fillFactory.link({
      side: THREE.DoubleSide
    }));
    this.edgeMaterial = this._material(edgeFactory.link({
      side: THREE.DoubleSide
    }));
    this.fillObject = new THREE.Mesh(this.geometry, this.fillMaterial);
    this.edgeObject = new THREE.Mesh(this.geometry, this.edgeMaterial);
    this._raw(this.fillObject);
    this._raw(this.edgeObject);
    this.renders = [this.fillObject, this.edgeObject];
  }

  Point.prototype.show = function(transparent, blending, order, depth) {
    this._show(this.edgeObject, true, blending, order, depth);
    return this._show(this.fillObject, transparent, blending, order, depth);
  };

  Point.prototype.dispose = function() {
    this.geometry.dispose();
    this.edgeMaterial.dispose();
    this.fillMaterial.dispose();
    this.renders = this.edgeObject = this.fillObject = this.geometry = this.edgeMaterial = this.fillMaterial = null;
    return Point.__super__.dispose.apply(this, arguments);
  };

  return Point;

})(Base);

module.exports = Point;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcbWVzaGVzXFxwb2ludC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccmVuZGVyXFxtZXNoZXNcXHBvaW50LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLDJCQUFBO0VBQUE7OztBQUFBLElBQUEsR0FBaUIsT0FBQSxDQUFRLFFBQVI7O0FBQ2pCLGNBQUEsR0FBaUIsT0FBQSxDQUFRLGFBQVIsQ0FBc0IsQ0FBQzs7QUFFbEM7OztFQUNTLGVBQUMsUUFBRCxFQUFXLE9BQVgsRUFBb0IsT0FBcEI7QUFDWCxRQUFBO0lBQUEsdUNBQU0sUUFBTixFQUFnQixPQUFoQixFQUF5QixPQUF6QjtJQUVDLDJCQUFELEVBQVcsMkJBQVgsRUFBcUIsMkJBQXJCLEVBQStCLHFCQUEvQixFQUFzQyxtQkFBdEMsRUFBNEMsbUJBQTVDLEVBQWtELGlCQUFsRCxFQUF1RCx5QkFBdkQsRUFBZ0UsdUJBQWhFLEVBQXdFLHFCQUF4RSxFQUErRSx5QkFBL0UsRUFBd0YsbUJBQXhGLEVBQThGOztNQUU5RixXQUFZOztJQUNaLEtBQUEsa0NBQXFCOztNQUNyQixPQUFZOztJQUVaLFFBQUEsR0FBVztJQUVYLE1BQUEsR0FBVyxDQUFDLFFBQUQsRUFBVyxRQUFYLEVBQXFCLFNBQXJCLEVBQWdDLElBQWhDLEVBQXNDLE1BQXRDLEVBQThDLE1BQTlDLEVBQXNELE9BQXREO0lBQ1gsTUFBQSxHQUFXLENBQUMsUUFBRCxFQUFXLFNBQVgsRUFBc0IsU0FBdEIsRUFBaUMsU0FBakMsRUFBNEMsU0FBNUMsRUFBdUQsU0FBdkQsRUFBa0UsU0FBbEU7SUFDWCxNQUFBLEdBQVcsQ0FBQyxHQUFELEVBQVksQ0FBWixFQUF1QixLQUF2QixFQUFrQyxJQUFsQyxFQUF3QyxJQUF4QyxFQUFnRCxJQUFoRCxFQUF1RCxJQUF2RDtJQUNYLElBQUEsMkNBQTJCLE1BQU8sQ0FBQSxDQUFBO0lBQ2xDLE1BQUEsMkNBQTJCLE1BQU8sQ0FBQSxDQUFBO0lBQ2xDLE1BQUEsc0RBQXVDO0lBQ3ZDLEtBQUEsR0FBYyxJQUFILEdBQWEsSUFBYixHQUEwQixJQUFELEdBQU07SUFFMUMsSUFBQyxDQUFBLFFBQUQsR0FBWSxJQUFJLGNBQUosQ0FDVjtNQUFBLEtBQUEsRUFBUSxPQUFPLENBQUMsS0FBaEI7TUFDQSxLQUFBLEVBQVEsT0FBTyxDQUFDLEtBRGhCO01BRUEsTUFBQSxFQUFRLE9BQU8sQ0FBQyxNQUZoQjtNQUdBLEtBQUEsRUFBUSxPQUFPLENBQUMsS0FIaEI7S0FEVTtJQU1aLElBQUMsQ0FBQSxNQUFELENBQVEsUUFBUjtJQUNBLElBQUMsQ0FBQSxNQUFELENBQVEsSUFBQyxDQUFBLFFBQVEsQ0FBQyxRQUFsQjtJQUVBLE9BQUEsR0FBVTtNQUFBLGlCQUFBLEVBQW1CLENBQUMsQ0FBQyxNQUFBLEdBQVMsTUFBVixDQUFwQjs7SUFHVixPQUFBLEdBQVUsT0FBTyxDQUFDLFFBQVIsQ0FBQTtJQUNWLENBQUEsR0FBSSxPQUFPLENBQUM7SUFFWixDQUFDLENBQUMsSUFBRixDQUFPLElBQUMsQ0FBQSxZQUFELENBQWMsS0FBZCxFQUFxQixJQUFyQixDQUFQO0lBR0EsSUFBRyxJQUFIO01BQ0UsQ0FBQyxDQUFDLE9BQUYsQ0FBQTtNQUNBLENBQUcsQ0FBQyxPQUFKLENBQVksSUFBWjtNQUNBLENBQUcsQ0FBQyxPQUFKLENBQVksb0JBQVosRUFBa0MsSUFBQyxDQUFBLFFBQW5DO01BQ0EsQ0FBQyxDQUFDLEdBQUYsQ0FBQSxFQUpGO0tBQUEsTUFBQTtNQU1FLENBQUMsQ0FBQyxPQUFGLENBQVUsb0JBQVYsRUFBa0MsSUFBQyxDQUFBLFFBQW5DLEVBTkY7O0lBUUEsQ0FBQyxDQUFDLE9BQUYsQ0FBVSxJQUFDLENBQUEsZUFBRCxDQUFpQixRQUFqQixFQUEyQixRQUEzQixFQUFxQyxHQUFyQyxFQUEwQyxDQUExQyxFQUE2QyxJQUE3QyxDQUFWO0lBRUEsQ0FBQyxDQUFDLElBQUYsQ0FBTyxnQkFBUCxFQUFnQyxJQUFDLENBQUEsUUFBakMsRUFBMkMsT0FBM0M7SUFDQSxDQUFDLENBQUMsSUFBRixDQUFPLGtCQUFQLEVBQWdDLElBQUMsQ0FBQSxRQUFqQztJQUdBLE9BQU8sQ0FBQyxRQUFSLEdBQW1CLENBQUEsR0FDakIsSUFBQyxDQUFBLGNBQUQsQ0FBZ0IsUUFBaEIsRUFBMEIsUUFBMUIsRUFBb0MsS0FBcEMsRUFBMkMsSUFBM0MsRUFBaUQsR0FBakQsRUFBc0QsQ0FBdEQsRUFBeUQsSUFBekQsRUFBK0QsT0FBL0QsRUFBd0UsTUFBeEU7SUFHRixXQUFBLEdBQWMsT0FBTyxDQUFDLFFBQVIsQ0FBQTtJQUNkLFdBQVcsQ0FBQyxNQUFNLENBQUMsSUFBbkIsQ0FBd0IsQ0FBeEI7SUFDQSxDQUFBLEdBQUksV0FBVyxDQUFDLFFBQVEsQ0FBQyxJQUFyQixDQUEwQixPQUFPLENBQUMsUUFBbEM7SUFDSixDQUFDLENBQUMsT0FBRixDQUFVLGFBQUEsR0FBYyxNQUF4QixFQUFtQyxJQUFDLENBQUEsUUFBcEM7SUFDQSxDQUFDLENBQUMsT0FBRixDQUFVLGNBQUEsR0FBZSxLQUF6QixFQUFtQyxJQUFDLENBQUEsUUFBcEM7SUFDQSxDQUFDLENBQUMsSUFBRixDQUFPLFlBQVAsRUFBbUMsSUFBQyxDQUFBLFFBQXBDO0lBRUEsV0FBQSxHQUFjLE9BQU8sQ0FBQyxRQUFSLENBQUE7SUFDZCxXQUFXLENBQUMsTUFBTSxDQUFDLElBQW5CLENBQXdCLENBQXhCO0lBQ0EsQ0FBQSxHQUFJLFdBQVcsQ0FBQyxRQUFRLENBQUMsSUFBckIsQ0FBMEIsT0FBTyxDQUFDLFFBQWxDO0lBQ0osQ0FBQyxDQUFDLE9BQUYsQ0FBVSxhQUFBLEdBQWMsTUFBeEIsRUFBbUMsSUFBQyxDQUFBLFFBQXBDO0lBQ0EsQ0FBQyxDQUFDLE9BQUYsQ0FBVSxjQUFBLEdBQWUsS0FBekIsRUFBbUMsSUFBQyxDQUFBLFFBQXBDO0lBQ0EsQ0FBQyxDQUFDLElBQUYsQ0FBTyxZQUFQLEVBQW1DLElBQUMsQ0FBQSxRQUFwQztJQUVBLElBQUMsQ0FBQSxZQUFELEdBQWdCLElBQUMsQ0FBQSxTQUFELENBQVcsV0FBVyxDQUFDLElBQVosQ0FDekI7TUFBQSxJQUFBLEVBQU0sS0FBSyxDQUFDLFVBQVo7S0FEeUIsQ0FBWDtJQUdoQixJQUFDLENBQUEsWUFBRCxHQUFnQixJQUFDLENBQUEsU0FBRCxDQUFXLFdBQVcsQ0FBQyxJQUFaLENBQ3pCO01BQUEsSUFBQSxFQUFNLEtBQUssQ0FBQyxVQUFaO0tBRHlCLENBQVg7SUFHaEIsSUFBQyxDQUFBLFVBQUQsR0FBYyxJQUFJLEtBQUssQ0FBQyxJQUFWLENBQWUsSUFBQyxDQUFBLFFBQWhCLEVBQTBCLElBQUMsQ0FBQSxZQUEzQjtJQUNkLElBQUMsQ0FBQSxVQUFELEdBQWMsSUFBSSxLQUFLLENBQUMsSUFBVixDQUFlLElBQUMsQ0FBQSxRQUFoQixFQUEwQixJQUFDLENBQUEsWUFBM0I7SUFFZCxJQUFDLENBQUEsSUFBRCxDQUFNLElBQUMsQ0FBQSxVQUFQO0lBQ0EsSUFBQyxDQUFBLElBQUQsQ0FBTSxJQUFDLENBQUEsVUFBUDtJQUVBLElBQUMsQ0FBQSxPQUFELEdBQVcsQ0FBQyxJQUFDLENBQUEsVUFBRixFQUFjLElBQUMsQ0FBQSxVQUFmO0VBakZBOztrQkFtRmIsSUFBQSxHQUFNLFNBQUMsV0FBRCxFQUFjLFFBQWQsRUFBd0IsS0FBeEIsRUFBK0IsS0FBL0I7SUFDSixJQUFDLENBQUEsS0FBRCxDQUFPLElBQUMsQ0FBQSxVQUFSLEVBQW9CLElBQXBCLEVBQWlDLFFBQWpDLEVBQTJDLEtBQTNDLEVBQWtELEtBQWxEO1dBQ0EsSUFBQyxDQUFBLEtBQUQsQ0FBTyxJQUFDLENBQUEsVUFBUixFQUFvQixXQUFwQixFQUFpQyxRQUFqQyxFQUEyQyxLQUEzQyxFQUFrRCxLQUFsRDtFQUZJOztrQkFJTixPQUFBLEdBQVMsU0FBQTtJQUNQLElBQUMsQ0FBQSxRQUFRLENBQUMsT0FBVixDQUFBO0lBQ0EsSUFBQyxDQUFBLFlBQVksQ0FBQyxPQUFkLENBQUE7SUFDQSxJQUFDLENBQUEsWUFBWSxDQUFDLE9BQWQsQ0FBQTtJQUNBLElBQUMsQ0FBQSxPQUFELEdBQVcsSUFBQyxDQUFBLFVBQUQsR0FBYyxJQUFDLENBQUEsVUFBRCxHQUFjLElBQUMsQ0FBQSxRQUFELEdBQVksSUFBQyxDQUFBLFlBQUQsR0FBZ0IsSUFBQyxDQUFBLFlBQUQsR0FBZ0I7V0FDbkYsb0NBQUEsU0FBQTtFQUxPOzs7O0dBeEZTOztBQStGcEIsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"../geometry":143,"./base":151}],157:[function(require,module,exports){
var Base, Screen, ScreenGeometry, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Base = require('./base');

ScreenGeometry = require('../geometry').ScreenGeometry;

Util = require('../../util');

Screen = (function(superClass) {
  extend(Screen, superClass);

  function Screen(renderer, shaders, options) {
    var combine, f, factory, hasStyle, linear, map, object, stpq, uniforms, v;
    Screen.__super__.constructor.call(this, renderer, shaders, options);
    uniforms = options.uniforms, map = options.map, combine = options.combine, stpq = options.stpq, linear = options.linear;
    if (uniforms == null) {
      uniforms = {};
    }
    hasStyle = uniforms.styleColor != null;
    this.geometry = new ScreenGeometry({
      width: options.width,
      height: options.height
    });
    this._adopt(uniforms);
    this._adopt(this.geometry.uniforms);
    factory = shaders.material();
    v = factory.vertex;
    v.pipe('raw.position.scale', this.uniforms);
    v.fan();
    v.pipe('stpq.xyzw.2d', this.uniforms);
    v.next();
    v.pipe('screen.position', this.uniforms);
    v.join();
    factory.fragment = f = this._fragmentColor(hasStyle, false, null, null, map, 2, stpq, combine, linear);
    f.pipe('fragment.color', this.uniforms);
    this.material = this._material(factory.link({
      side: THREE.DoubleSide
    }));
    object = new THREE.Mesh(this.geometry, this.material);
    object.frustumCulled = false;
    this._raw(object);
    this.renders = [object];
  }

  Screen.prototype.dispose = function() {
    this.geometry.dispose();
    this.material.dispose();
    this.renders = this.geometry = this.material = null;
    return Screen.__super__.dispose.apply(this, arguments);
  };

  return Screen;

})(Base);

module.exports = Screen;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcbWVzaGVzXFxzY3JlZW4uY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcbWVzaGVzXFxzY3JlZW4uY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsa0NBQUE7RUFBQTs7O0FBQUEsSUFBQSxHQUFrQixPQUFBLENBQVEsUUFBUjs7QUFDbEIsY0FBQSxHQUFrQixPQUFBLENBQVEsYUFBUixDQUFzQixDQUFDOztBQUN6QyxJQUFBLEdBQWtCLE9BQUEsQ0FBUSxZQUFSOztBQUVaOzs7RUFDUyxnQkFBQyxRQUFELEVBQVcsT0FBWCxFQUFvQixPQUFwQjtBQUNYLFFBQUE7SUFBQSx3Q0FBTSxRQUFOLEVBQWdCLE9BQWhCLEVBQXlCLE9BQXpCO0lBRUMsMkJBQUQsRUFBVyxpQkFBWCxFQUFnQix5QkFBaEIsRUFBeUIsbUJBQXpCLEVBQStCOztNQUMvQixXQUFZOztJQUVaLFFBQUEsR0FBVztJQUVYLElBQUMsQ0FBQSxRQUFELEdBQVksSUFBSSxjQUFKLENBQ1Y7TUFBQSxLQUFBLEVBQVUsT0FBTyxDQUFDLEtBQWxCO01BQ0EsTUFBQSxFQUFVLE9BQU8sQ0FBQyxNQURsQjtLQURVO0lBSVosSUFBQyxDQUFBLE1BQUQsQ0FBUSxRQUFSO0lBQ0EsSUFBQyxDQUFBLE1BQUQsQ0FBUSxJQUFDLENBQUEsUUFBUSxDQUFDLFFBQWxCO0lBRUEsT0FBQSxHQUFVLE9BQU8sQ0FBQyxRQUFSLENBQUE7SUFFVixDQUFBLEdBQUksT0FBTyxDQUFDO0lBQ1osQ0FBQyxDQUFDLElBQUYsQ0FBVSxvQkFBVixFQUFnQyxJQUFDLENBQUEsUUFBakM7SUFDQSxDQUFDLENBQUMsR0FBRixDQUFBO0lBQ0EsQ0FBRyxDQUFDLElBQUosQ0FBVSxjQUFWLEVBQWdDLElBQUMsQ0FBQSxRQUFqQztJQUNBLENBQUMsQ0FBQyxJQUFGLENBQUE7SUFDQSxDQUFHLENBQUMsSUFBSixDQUFVLGlCQUFWLEVBQWdDLElBQUMsQ0FBQSxRQUFqQztJQUNBLENBQUMsQ0FBQyxJQUFGLENBQUE7SUFFQSxPQUFPLENBQUMsUUFBUixHQUFtQixDQUFBLEdBQ2pCLElBQUMsQ0FBQSxjQUFELENBQWdCLFFBQWhCLEVBQTBCLEtBQTFCLEVBQWlDLElBQWpDLEVBQXVDLElBQXZDLEVBQTZDLEdBQTdDLEVBQWtELENBQWxELEVBQXFELElBQXJELEVBQTJELE9BQTNELEVBQW9FLE1BQXBFO0lBRUYsQ0FBQyxDQUFDLElBQUYsQ0FBTyxnQkFBUCxFQUFnQyxJQUFDLENBQUEsUUFBakM7SUFFQSxJQUFDLENBQUEsUUFBRCxHQUFZLElBQUMsQ0FBQSxTQUFELENBQVcsT0FBTyxDQUFDLElBQVIsQ0FDckI7TUFBQSxJQUFBLEVBQU0sS0FBSyxDQUFDLFVBQVo7S0FEcUIsQ0FBWDtJQUdaLE1BQUEsR0FBUyxJQUFJLEtBQUssQ0FBQyxJQUFWLENBQWUsSUFBQyxDQUFBLFFBQWhCLEVBQTBCLElBQUMsQ0FBQSxRQUEzQjtJQUNULE1BQU0sQ0FBQyxhQUFQLEdBQXVCO0lBRXZCLElBQUMsQ0FBQSxJQUFELENBQU0sTUFBTjtJQUNBLElBQUMsQ0FBQSxPQUFELEdBQVcsQ0FBQyxNQUFEO0VBckNBOzttQkF1Q2IsT0FBQSxHQUFTLFNBQUE7SUFDUCxJQUFDLENBQUEsUUFBUSxDQUFDLE9BQVYsQ0FBQTtJQUNBLElBQUMsQ0FBQSxRQUFRLENBQUMsT0FBVixDQUFBO0lBQ0EsSUFBQyxDQUFBLE9BQUQsR0FBVyxJQUFDLENBQUEsUUFBRCxHQUFZLElBQUMsQ0FBQSxRQUFELEdBQVk7V0FDbkMscUNBQUEsU0FBQTtFQUpPOzs7O0dBeENVOztBQThDckIsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"../../util":175,"../geometry":143,"./base":151}],158:[function(require,module,exports){
var Base, Sprite, SpriteGeometry,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Base = require('./base');

SpriteGeometry = require('../geometry').SpriteGeometry;

Sprite = (function(superClass) {
  extend(Sprite, superClass);

  function Sprite(renderer, shaders, options) {
    var color, combine, edgeFactory, f, factory, fillFactory, hasStyle, linear, map, mask, material, position, sprite, stpq, uniforms, v;
    Sprite.__super__.constructor.call(this, renderer, shaders, options);
    uniforms = options.uniforms, material = options.material, position = options.position, sprite = options.sprite, map = options.map, combine = options.combine, linear = options.linear, color = options.color, mask = options.mask, stpq = options.stpq;
    if (uniforms == null) {
      uniforms = {};
    }
    hasStyle = uniforms.styleColor != null;
    this.geometry = new SpriteGeometry({
      items: options.items,
      width: options.width,
      height: options.height,
      depth: options.depth
    });
    this._adopt(uniforms);
    this._adopt(this.geometry.uniforms);
    factory = shaders.material();
    v = factory.vertex;
    v.pipe(this._vertexColor(color, mask));
    v.require(this._vertexPosition(position, material, map, 2, stpq));
    v.require(sprite);
    v.pipe('sprite.position', this.uniforms);
    v.pipe('project.position', this.uniforms);
    factory.fragment = f = this._fragmentColor(hasStyle, material, color, mask, map, 2, stpq, combine, linear);
    edgeFactory = shaders.material();
    edgeFactory.vertex.pipe(v);
    edgeFactory.fragment.pipe(f);
    edgeFactory.fragment.pipe('fragment.transparent', this.uniforms);
    fillFactory = shaders.material();
    fillFactory.vertex.pipe(v);
    fillFactory.fragment.pipe(f);
    fillFactory.fragment.pipe('fragment.solid', this.uniforms);
    this.fillMaterial = this._material(fillFactory.link({
      side: THREE.DoubleSide
    }));
    this.edgeMaterial = this._material(edgeFactory.link({
      side: THREE.DoubleSide
    }));
    this.fillObject = new THREE.Mesh(this.geometry, this.fillMaterial);
    this.edgeObject = new THREE.Mesh(this.geometry, this.edgeMaterial);
    this._raw(this.fillObject);
    this._raw(this.edgeObject);
    this.renders = [this.fillObject, this.edgeObject];
  }

  Sprite.prototype.show = function(transparent, blending, order, depth) {
    this._show(this.edgeObject, true, blending, order, depth);
    return this._show(this.fillObject, transparent, blending, order, depth);
  };

  Sprite.prototype.dispose = function() {
    this.geometry.dispose();
    this.edgeMaterial.dispose();
    this.fillMaterial.dispose();
    this.nreders = this.geometry = this.edgeMaterial = this.fillMaterial = this.edgeObject = this.fillObject = null;
    return Sprite.__super__.dispose.apply(this, arguments);
  };

  return Sprite;

})(Base);

module.exports = Sprite;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcbWVzaGVzXFxzcHJpdGUuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcbWVzaGVzXFxzcHJpdGUuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsNEJBQUE7RUFBQTs7O0FBQUEsSUFBQSxHQUFpQixPQUFBLENBQVEsUUFBUjs7QUFDakIsY0FBQSxHQUFpQixPQUFBLENBQVEsYUFBUixDQUFzQixDQUFDOztBQUVsQzs7O0VBQ1MsZ0JBQUMsUUFBRCxFQUFXLE9BQVgsRUFBb0IsT0FBcEI7QUFDWCxRQUFBO0lBQUEsd0NBQU0sUUFBTixFQUFnQixPQUFoQixFQUF5QixPQUF6QjtJQUVDLDJCQUFELEVBQVcsMkJBQVgsRUFBcUIsMkJBQXJCLEVBQStCLHVCQUEvQixFQUF1QyxpQkFBdkMsRUFBNEMseUJBQTVDLEVBQXFELHVCQUFyRCxFQUE2RCxxQkFBN0QsRUFBb0UsbUJBQXBFLEVBQTBFOztNQUMxRSxXQUFZOztJQUVaLFFBQUEsR0FBVztJQUVYLElBQUMsQ0FBQSxRQUFELEdBQVksSUFBSSxjQUFKLENBQ1Y7TUFBQSxLQUFBLEVBQVEsT0FBTyxDQUFDLEtBQWhCO01BQ0EsS0FBQSxFQUFRLE9BQU8sQ0FBQyxLQURoQjtNQUVBLE1BQUEsRUFBUSxPQUFPLENBQUMsTUFGaEI7TUFHQSxLQUFBLEVBQVEsT0FBTyxDQUFDLEtBSGhCO0tBRFU7SUFNWixJQUFDLENBQUEsTUFBRCxDQUFRLFFBQVI7SUFDQSxJQUFDLENBQUEsTUFBRCxDQUFRLElBQUMsQ0FBQSxRQUFRLENBQUMsUUFBbEI7SUFHQSxPQUFBLEdBQVUsT0FBTyxDQUFDLFFBQVIsQ0FBQTtJQUNWLENBQUEsR0FBSSxPQUFPLENBQUM7SUFFWixDQUFDLENBQUMsSUFBRixDQUFPLElB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

},{"../geometry":143,"./base":151}],159:[function(require,module,exports){
var Base, Strip, StripGeometry,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Base = require('./base');

StripGeometry = require('../geometry').StripGeometry;

Strip = (function(superClass) {
  extend(Strip, superClass);

  function Strip(renderer, shaders, options) {
    var color, combine, f, factory, hasStyle, linear, map, mask, material, object, position, stpq, uniforms, v;
    Strip.__super__.constructor.call(this, renderer, shaders, options);
    uniforms = options.uniforms, material = options.material, position = options.position, color = options.color, mask = options.mask, map = options.map, combine = options.combine, linear = options.linear, stpq = options.stpq;
    if (uniforms == null) {
      uniforms = {};
    }
    if (material == null) {
      material = true;
    }
    hasStyle = uniforms.styleColor != null;
    this.geometry = new StripGeometry({
      items: options.items,
      width: options.width,
      height: options.height,
      depth: options.depth
    });
    this._adopt(uniforms);
    this._adopt(this.geometry.uniforms);
    factory = shaders.material();
    v = factory.vertex;
    v.pipe(this._vertexColor(color, mask));
    v.require(this._vertexPosition(position, material, map, 2, stpq));
    if (!material) {
      v.pipe('mesh.position', this.uniforms);
    }
    if (material) {
      v.pipe('strip.position.normal', this.uniforms);
    }
    v.pipe('project.position', this.uniforms);
    factory.fragment = f = this._fragmentColor(hasStyle, material, color, mask, map, 2, stpq, combine, linear);
    f.pipe('fragment.color', this.uniforms);
    this.material = this._material(factory.link({
      side: THREE.DoubleSide
    }));
    object = new THREE.Mesh(this.geometry, this.material);
    this._raw(object);
    this.renders = [object];
  }

  Strip.prototype.dispose = function() {
    this.geometry.dispose();
    this.material.dispose();
    this.renders = this.geometry = this.material = null;
    return Strip.__super__.dispose.apply(this, arguments);
  };

  return Strip;

})(Base);

module.exports = Strip;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcbWVzaGVzXFxzdHJpcC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccmVuZGVyXFxtZXNoZXNcXHN0cmlwLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLDBCQUFBO0VBQUE7OztBQUFBLElBQUEsR0FBZSxPQUFBLENBQVEsUUFBUjs7QUFDZixhQUFBLEdBQWdCLE9BQUEsQ0FBUSxhQUFSLENBQXNCLENBQUM7O0FBRWpDOzs7RUFDUyxlQUFDLFFBQUQsRUFBVyxPQUFYLEVBQW9CLE9BQXBCO0FBQ1gsUUFBQTtJQUFBLHVDQUFNLFFBQU4sRUFBZ0IsT0FBaEIsRUFBeUIsT0FBekI7SUFFQywyQkFBRCxFQUFXLDJCQUFYLEVBQXFCLDJCQUFyQixFQUErQixxQkFBL0IsRUFBc0MsbUJBQXRDLEVBQTRDLGlCQUE1QyxFQUFpRCx5QkFBakQsRUFBMEQsdUJBQTFELEVBQWtFOztNQUVsRSxXQUFZOzs7TUFDWixXQUFZOztJQUVaLFFBQUEsR0FBVztJQUVYLElBQUMsQ0FBQSxRQUFELEdBQVksSUFBSSxhQUFKLENBQ1Y7TUFBQSxLQUFBLEVBQVEsT0FBTyxDQUFDLEtBQWhCO01BQ0EsS0FBQSxFQUFRLE9BQU8sQ0FBQyxLQURoQjtNQUVBLE1BQUEsRUFBUSxPQUFPLENBQUMsTUFGaEI7TUFHQSxLQUFBLEVBQVEsT0FBTyxDQUFDLEtBSGhCO0tBRFU7SUFNWixJQUFDLENBQUEsTUFBRCxDQUFRLFFBQVI7SUFDQSxJQUFDLENBQUEsTUFBRCxDQUFRLElBQUMsQ0FBQSxRQUFRLENBQUMsUUFBbEI7SUFFQSxPQUFBLEdBQVUsT0FBTyxDQUFDLFFBQVIsQ0FBQTtJQUVWLENBQUEsR0FBSSxPQUFPLENBQUM7SUFFWixDQUFDLENBQUMsSUFBRixDQUFPLElBQUMsQ0FBQSxZQUFELENBQWMsS0FBZCxFQUFxQixJQUFyQixDQUFQO0lBRUEsQ0FBQyxDQUFDLE9BQUYsQ0FBVSxJQUFDLENBQUEsZUFBRCxDQUFpQixRQUFqQixFQUEyQixRQUEzQixFQUFxQyxHQUFyQyxFQUEwQyxDQUExQyxFQUE2QyxJQUE3QyxDQUFWO0lBQ0EsSUFBNkMsQ0FBQyxRQUE5QztNQUFBLENBQUMsQ0FBQyxJQUFGLENBQU8sZUFBUCxFQUFnQyxJQUFDLENBQUEsUUFBakMsRUFBQTs7SUFDQSxJQUE4QyxRQUE5QztNQUFBLENBQUMsQ0FBQyxJQUFGLENBQU8sdUJBQVAsRUFBZ0MsSUFBQyxDQUFBLFFBQWpDLEVBQUE7O0lBQ0EsQ0FBQyxDQUFDLElBQUYsQ0FBTyxrQkFBUCxFQUFnQyxJQUFDLENBQUEsUUFBakM7SUFFQSxPQUFPLENBQUMsUUFBUixHQUFtQixDQUFBLEdBQ2pCLElBQUMsQ0FBQSxjQUFELENBQWdCLFFBQWhCLEVBQTBCLFFBQTFCLEVBQW9DLEtBQXBDLEVBQTJDLElBQTNDLEVBQWlELEdBQWpELEVBQXNELENBQXRELEVBQXlELElBQXpELEVBQStELE9BQS9ELEVBQXdFLE1BQXhFO0lBRUYsQ0FBQyxDQUFDLElBQUYsQ0FBTyxnQkFBUCxFQUFnQyxJQUFDLENBQUEsUUFBakM7SUFFQSxJQUFDLENBQUEsUUFBRCxHQUFZLElBQUMsQ0FBQSxTQUFELENBQVcsT0FBTyxDQUFDLElBQVIsQ0FDckI7TUFBQSxJQUFBLEVBQU0sS0FBSyxDQUFDLFVBQVo7S0FEcUIsQ0FBWDtJQUdaLE1BQUEsR0FBUyxJQUFJLEtBQUssQ0FBQyxJQUFWLENBQWUsSUFBQyxDQUFBLFFBQWhCLEVBQTBCLElBQUMsQ0FBQSxRQUEzQjtJQUVULElBQUMsQ0FBQSxJQUFELENBQU0sTUFBTjtJQUNBLElBQUMsQ0FBQSxPQUFELEdBQVcsQ0FBQyxNQUFEO0VBekNBOztrQkEyQ2IsT0FBQSxHQUFTLFNBQUE7SUFDUCxJQUFDLENBQUEsUUFBUSxDQUFDLE9BQVYsQ0FBQTtJQUNBLElBQUMsQ0FBQSxRQUFRLENBQUMsT0FBVixDQUFBO0lBQ0EsSUFBQyxDQUFBLE9BQUQsR0FBVyxJQUFDLENBQUEsUUFBRCxHQUFZLElBQUMsQ0FBQSxRQUFELEdBQVk7V0FDbkMsb0NBQUEsU0FBQTtFQUpPOzs7O0dBNUNTOztBQWtEcEIsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"../geometry":143,"./base":151}],160:[function(require,module,exports){
var Base, Surface, SurfaceGeometry, Util,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Base = require('./base');

SurfaceGeometry = require('../geometry').SurfaceGeometry;

Util = require('../../util');

Surface = (function(superClass) {
  extend(Surface, superClass);

  function Surface(renderer, shaders, options) {
    var color, combine, defs, f, factory, hasHollow, hasStyle, intUV, linear, map, mask, material, object, position, stpq, uniforms, v;
    Surface.__super__.constructor.call(this, renderer, shaders, options);
    uniforms = options.uniforms, material = options.material, position = options.position, color = options.color, mask = options.mask, map = options.map, combine = options.combine, linear = options.linear, stpq = options.stpq, intUV = options.intUV;
    if (uniforms == null) {
      uniforms = {};
    }
    if (material == null) {
      material = true;
    }
    hasStyle = uniforms.styleColor != null;
    hasHollow = uniforms.surfaceHollow != null;
    this.geometry = new SurfaceGeometry({
      width: options.width,
      height: options.height,
      surfaces: options.surfaces,
      layers: options.layers,
      closedX: options.closedX,
      closedY: options.closedY
    });
    this._adopt(uniforms);
    this._adopt(this.geometry.uniforms);
    factory = shaders.material();
    v = factory.vertex;
    if (intUV) {
      defs = {
        POSITION_UV_INT: ''
      };
    }
    v.pipe(this._vertexColor(color, mask));
    v.require(this._vertexPosition(position, material, map, 2, stpq));
    if (!material) {
      v.pipe('surface.position', this.uniforms, defs);
    }
    if (material) {
      v.pipe('surface.position.normal', this.uniforms, defs);
    }
    v.pipe('project.position', this.uniforms);
    factory.fragment = f = this._fragmentColor(hasStyle, material, color, mask, map, 2, stpq, combine, linear);
    f.pipe('fragment.color', this.uniforms);
    this.material = this._material(factory.link({
      side: THREE.DoubleSide
    }));
    object = new THREE.Mesh(this.geometry, this.material);
    this._raw(object);
    this.renders = [object];
  }

  Surface.prototype.dispose = function() {
    this.geometry.dispose();
    this.material.dispose();
    this.renders = this.geometry = this.material = null;
    return Surface.__super__.dispose.apply(this, arguments);
  };

  return Surface;

})(Base);

module.exports = Surface;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcbWVzaGVzXFxzdXJmYWNlLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxyZW5kZXJcXG1lc2hlc1xcc3VyZmFjZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxvQ0FBQTtFQUFBOzs7QUFBQSxJQUFBLEdBQWtCLE9BQUEsQ0FBUSxRQUFSOztBQUNsQixlQUFBLEdBQWtCLE9BQUEsQ0FBUSxhQUFSLENBQXNCLENBQUM7O0FBQ3pDLElBQUEsR0FBa0IsT0FBQSxDQUFRLFlBQVI7O0FBRVo7OztFQUNTLGlCQUFDLFFBQUQsRUFBVyxPQUFYLEVBQW9CLE9BQXBCO0FBQ1gsUUFBQTtJQUFBLHlDQUFNLFFBQU4sRUFBZ0IsT0FBaEIsRUFBeUIsT0FBekI7SUFFQywyQkFBRCxFQUFXLDJCQUFYLEVBQXFCLDJCQUFyQixFQUErQixxQkFBL0IsRUFBc0MsbUJBQXRDLEVBQTRDLGlCQUE1QyxFQUFpRCx5QkFBakQsRUFBMEQsdUJBQTFELEVBQWtFLG1CQUFsRSxFQUF3RTs7TUFFeEUsV0FBWTs7O01BQ1osV0FBWTs7SUFFWixRQUFBLEdBQVk7SUFDWixTQUFBLEdBQVk7SUFFWixJQUFDLENBQUEsUUFBRCxHQUFZLElBQUksZUFBSixDQUNWO01BQUEsS0FBQSxFQUFVLE9BQU8sQ0FBQyxLQUFsQjtNQUNBLE1BQUEsRUFBVSxPQUFPLENBQUMsTUFEbEI7TUFFQSxRQUFBLEVBQVUsT0FBTyxDQUFDLFFBRmxCO01BR0EsTUFBQSxFQUFVLE9BQU8sQ0FBQyxNQUhsQjtNQUlBLE9BQUEsRUFBVSxPQUFPLENBQUMsT0FKbEI7TUFLQSxPQUFBLEVBQVUsT0FBTyxDQUFDLE9BTGxCO0tBRFU7SUFRWixJQUFDLENBQUEsTUFBRCxDQUFRLFFBQVI7SUFDQSxJQUFDLENBQUEsTUFBRCxDQUFRLElBQUMsQ0FBQSxRQUFRLENBQUMsUUFBbEI7SUFFQSxPQUFBLEdBQVUsT0FBTyxDQUFDLFFBQVIsQ0FBQTtJQUVWLENBQUEsR0FBSSxPQUFPLENBQUM7SUFFWixJQUFHLEtBQUg7TUFDRSxJQUFBLEdBQ0U7UUFBQSxlQUFBLEVBQWlCLEVBQWpCO1FBRko7O0lBSUEsQ0FBQyxDQUFDLElBQUYsQ0FBTyxJQUFDLENBQUEsWUFBRCxDQUFjLEtBQWQsRUFBcUIsSUFBckIsQ0FBUDtJQUVBLENBQUMsQ0FBQyxPQUFGLENBQVUsSUFBQyxDQUFBLGVBQUQsQ0FBaUIsUUFBakIsRUFBMkIsUUFBM0IsRUFBcUMsR0FBckMsRUFBMEMsQ0FBMUMsRUFBNkMsSUFBN0MsQ0FBVjtJQUNBLElBQXFELENBQUMsUUFBdEQ7TUFBQSxDQUFDLENBQUMsSUFBRixDQUFPLGtCQUFQLEVBQWtDLElBQUMsQ0FBQSxRQUFuQyxFQUE2QyxJQUE3QyxFQUFBOztJQUNBLElBQXNELFFBQXREO01BQUEsQ0FBQyxDQUFDLElBQUYsQ0FBTyx5QkFBUCxFQUFrQyxJQUFDLENBQUEsUUFBbkMsRUFBNkMsSUFBN0MsRUFBQTs7SUFDQSxDQUFDLENBQUMsSUFBRixDQUFPLGtCQUFQLEVBQWtDLElBQUMsQ0FBQSxRQUFuQztJQUVBLE9BQU8sQ0FBQyxRQUFSLEdBQW1CLENBQUEsR0FDakIsSUFBQyxDQUFBLGNBQUQsQ0FBZ0IsUUFBaEIsRUFBMEIsUUFBMUIsRUFBb0MsS0FBcEMsRUFBMkMsSUFBM0MsRUFBaUQsR0FBakQsRUFBc0QsQ0FBdEQsRUFBeUQsSUFBekQsRUFBK0QsT0FBL0QsRUFBd0UsTUFBeEU7SUFFRixDQUFDLENBQUMsSUFBRixDQUFPLGdCQUFQLEVBQWtDLElBQUMsQ0FBQSxRQUFuQztJQUVBLElBQUMsQ0FBQSxRQUFELEdBQVksSUFBQyxDQUFBLFNBQUQsQ0FBVyxPQUFPLENBQUMsSUFBUixDQUNyQjtNQUFBLElBQUEsRUFBTSxLQUFLLENBQUMsVUFBWjtLQURxQixDQUFYO0lBR1osTUFBQSxHQUFTLElBQUksS0FBSyxDQUFDLElBQVYsQ0FBZSxJQUFDLENBQUEsUUFBaEIsRUFBMEIsSUFBQyxDQUFBLFFBQTNCO0lBRVQsSUFBQyxDQUFBLElBQUQsQ0FBTSxNQUFOO0lBQ0EsSUFBQyxDQUFBLE9BQUQsR0FBVyxDQUFDLE1BQUQ7RUFoREE7O29CQWtEYixPQUFBLEdBQVMsU0FBQTtJQUNQLElBQUMsQ0FBQSxRQUFRLENBQUMsT0FBVixDQUFBO0lBQ0EsSUFBQyxDQUFBLFFBQVEsQ0FBQyxPQUFWLENBQUE7SUFDQSxJQUFDLENBQUEsT0FBRCxHQUFXLElBQUMsQ0FBQSxRQUFELEdBQVksSUFBQyxDQUFBLFFBQUQsR0FBWTtXQUNuQyxzQ0FBQSxTQUFBO0VBSk87Ozs7R0FuRFc7O0FBeUR0QixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"../../util":175,"../geometry":143,"./base":151}],161:[function(require,module,exports){
var Renderable;

Renderable = (function() {
  function Renderable(renderer, shaders) {
    this.renderer = renderer;
    this.shaders = shaders;
    this.gl = this.renderer.context;
    if (this.uniforms == null) {
      this.uniforms = {};
    }
  }

  Renderable.prototype.dispose = function() {
    return this.uniforms = null;
  };

  Renderable.prototype._adopt = function(uniforms) {
    var key, value;
    for (key in uniforms) {
      value = uniforms[key];
      this.uniforms[key] = value;
    }
  };

  Renderable.prototype._set = function(uniforms) {
    var key, value;
    for (key in uniforms) {
      value = uniforms[key];
      if (this.uniforms[key] != null) {
        this.uniforms[key].value = value;
      }
    }
  };

  return Renderable;

})();

module.exports = Renderable;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxccmVuZGVyYWJsZS5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xccmVuZGVyXFxyZW5kZXJhYmxlLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBOztBQUFNO0VBQ1Msb0JBQUMsUUFBRCxFQUFZLE9BQVo7SUFBQyxJQUFDLENBQUEsV0FBRDtJQUFXLElBQUMsQ0FBQSxVQUFEO0lBQ3ZCLElBQUMsQ0FBQSxFQUFELEdBQU0sSUFBQyxDQUFBLFFBQVEsQ0FBQzs7TUFDaEIsSUFBQyxDQUFBLFdBQVk7O0VBRkY7O3VCQUliLE9BQUEsR0FBUyxTQUFBO1dBQ1AsSUFBQyxDQUFBLFFBQUQsR0FBWTtFQURMOzt1QkFHVCxNQUFBLEdBQVEsU0FBQyxRQUFEO0FBQ04sUUFBQTtBQUFBLFNBQUEsZUFBQTs7TUFBQSxJQUFDLENBQUEsUUFBUyxDQUFBLEdBQUEsQ0FBVixHQUFpQjtBQUFqQjtFQURNOzt1QkFJUixJQUFBLEdBQU0sU0FBQyxRQUFEO0FBQ0osUUFBQTtBQUFBLFNBQUEsZUFBQTs7VUFBNkQ7UUFBN0QsSUFBQyxDQUFBLFFBQVMsQ0FBQSxHQUFBLENBQUksQ0FBQyxLQUFmLEdBQXVCOztBQUF2QjtFQURJOzs7Ozs7QUFJUixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{}],162:[function(require,module,exports){
var MathBox, Renderable, Scene,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

Renderable = require('./renderable');


/*
 All MathBox renderables sit inside this root, to keep things tidy.
 */

MathBox = (function(superClass) {
  extend(MathBox, superClass);

  function MathBox() {
    MathBox.__super__.constructor.apply(this, arguments);
    this.rotationAutoUpdate = false;
    this.frustumCulled = false;
    this.matrixAutoUpdate = false;
  }

  return MathBox;

})(THREE.Object3D);


/*
 Holds the root and binds to a THREE.Scene

 Will hold objects and inject them a few at a time
 to avoid long UI blocks.

 Will render injected objects to a 1x1 scratch buffer to ensure availability
 */

Scene = (function(superClass) {
  extend(Scene, superClass);

  function Scene(renderer, shaders, options) {
    Scene.__super__.constructor.call(this, renderer, shaders, options);
    this.root = new MathBox;
    if ((options != null ? options.scene : void 0) != null) {
      this.scene = options.scene;
    }
    if (this.scene == null) {
      this.scene = new THREE.Scene;
    }
    this.pending = [];
    this.async = 0;
    this.scratch = new THREE.WebGLRenderTarget(1, 1);
    this.camera = new THREE.PerspectiveCamera;
  }

  Scene.prototype.inject = function(scene) {
    if (scene != null) {
      this.scene = scene;
    }
    return this.scene.add(this.root);
  };

  Scene.prototype.unject = function() {
    var ref;
    return (ref = this.scene) != null ? ref.remove(this.root) : void 0;
  };

  Scene.prototype.add = function(object) {
    if (this.async) {
      return this.pending.push(object);
    } else {
      return this._add(object);
    }
  };

  Scene.prototype.remove = function(object) {
    this.pending = this.pending.filter(function(o) {
      return o !== object;
    });
    if (object.parent != null) {
      return this._remove(object);
    }
  };

  Scene.prototype._add = function(object) {
    return this.root.add(object);
  };

  Scene.prototype._remove = function(object) {
    return this.root.remove(object);
  };

  Scene.prototype.dispose = function() {
    if (this.root.parent != null) {
      return this.unject();
    }
  };

  Scene.prototype.warmup = function(n) {
    return this.async = +n || 0;
  };

  Scene.prototype.render = function() {
    var added, children, i, j, pending, ref, visible;
    if (!this.pending.length) {
      return;
    }
    children = this.root.children;
    added = [];
    for (i = j = 0, ref = this.async; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      pending = this.pending.shift();
      if (!pending) {
        break;
      }
      this._add(pending);
      added.push(added);
    }
    visible = children.map(function(o) {
      var v;
      return v = o.visible;
    });
    children.map(function(o) {
      return o.visible = indexOf.call(added, o) < 0;
    });
    this.renderer.render(this.scene, this.camera, this.scratch);
    return children.map(function(o, i) {
      return o.visible = visible[i];
    });
  };

  Scene.prototype.toJSON = function() {
    return this.root.toJSON();
  };

  return Scene;

})(Renderable);

module.exports = Scene;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcc2NlbmUuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHJlbmRlclxcc2NlbmUuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsMEJBQUE7RUFBQTs7OztBQUFBLFVBQUEsR0FBYSxPQUFBLENBQVEsY0FBUjs7O0FBRWI7Ozs7QUFHTTs7O0VBQ1MsaUJBQUE7SUFDWCwwQ0FBQSxTQUFBO0lBQ0EsSUFBQyxDQUFBLGtCQUFELEdBQXNCO0lBQ3RCLElBQUMsQ0FBQSxhQUFELEdBQXNCO0lBQ3RCLElBQUMsQ0FBQSxnQkFBRCxHQUFzQjtFQUpYOzs7O0dBRE8sS0FBSyxDQUFDOzs7QUFPNUI7Ozs7Ozs7OztBQVFNOzs7RUFDUyxlQUFDLFFBQUQsRUFBVyxPQUFYLEVBQW9CLE9BQXBCO0lBQ1gsdUNBQU0sUUFBTixFQUFnQixPQUFoQixFQUF5QixPQUF6QjtJQUNBLElBQUMsQ0FBQSxJQUFELEdBQVEsSUFBSTtJQUVaLElBQTBCLGtEQUExQjtNQUFBLElBQUMsQ0FBQSxLQUFELEdBQVMsT0FBTyxDQUFDLE1BQWpCOzs7TUFDQSxJQUFDLENBQUEsUUFBUyxJQUFJLEtBQUssQ0FBQzs7SUFFcEIsSUFBQyxDQUFBLE9BQUQsR0FBVztJQUNYLElBQUMsQ0FBQSxLQUFELEdBQVc7SUFFWCxJQUFDLENBQUEsT0FBRCxHQUFXLElBQUksS0FBSyxDQUFDLGlCQUFWLENBQTRCLENBQTVCLEVBQStCLENBQS9CO0lBQ1gsSUFBQyxDQUFBLE1BQUQsR0FBVyxJQUFJLEtBQUssQ0FBQztFQVhWOztrQkFhYixNQUFBLEdBQVEsU0FBQyxLQUFEO0lBQ04sSUFBa0IsYUFBbEI7TUFBQSxJQUFDLENBQUEsS0FBRCxHQUFTLE1BQVQ7O1dBQ0EsSUFBQyxDQUFBLEtBQUssQ0FBQyxHQUFQLENBQVcsSUFBQyxDQUFBLElBQVo7RUFGTTs7a0JBSVIsTUFBQSxHQUFRLFNBQUE7QUFDTixRQUFBOzJDQUFNLENBQUUsTUFBUixDQUFlLElBQUMsQ0FBQSxJQUFoQjtFQURNOztrQkFHUixHQUFBLEdBQUssU0FBQyxNQUFEO0lBQ0gsSUFBRyxJQUFDLENBQUEsS0FBSjthQUFlLElBQUMsQ0FBQSxPQUFPLENBQUMsSUFBVCxDQUFjLE1BQWQsRUFBZjtLQUFBLE1BQUE7YUFBeUMsSUFBQyxDQUFBLElBQUQsQ0FBTSxNQUFOLEVBQXpDOztFQURHOztrQkFHTCxNQUFBLEdBQVEsU0FBQyxNQUFEO0lBQ04sSUFBQyxDQUFBLE9BQUQsR0FBVyxJQUFDLENBQUEsT0FBTyxDQUFDLE1BQVQsQ0FBZ0IsU0FBQyxDQUFEO2FBQU8sQ0FBQSxLQUFLO0lBQVosQ0FBaEI7SUFDWCxJQUFtQixxQkFBbkI7YUFBQSxJQUFDLENBQUEsT0FBRCxDQUFTLE1BQVQsRUFBQTs7RUFGTTs7a0JBSVIsSUFBQSxHQUFNLFNBQUMsTUFBRDtXQUNKLElBQUMsQ0FBQSxJQUFJLENBQUMsR0FBTixDQUFVLE1BQVY7RUFESTs7a0JBR04sT0FBQSxHQUFTLFNBQUMsTUFBRDtXQUNQLElBQUMsQ0FBQSxJQUFJLENBQUMsTUFBTixDQUFhLE1BQWI7RUFETzs7a0JBR1QsT0FBQSxHQUFTLFNBQUE7SUFDUCxJQUFhLHdCQUFiO2FBQUEsSUFBQyxDQUFBLE1BQUQsQ0FBQSxFQUFBOztFQURPOztrQkFHVCxNQUFBLEdBQVEsU0FBQyxDQUFEO1dBQU8sSUFBQyxDQUFBLEtBQUQsR0FBUyxDQUFDLENBQUQsSUFBTTtFQUF0Qjs7a0JBRVIsTUFBQSxHQUFRLFNBQUE7QUFDTixRQUFBO0lBQUEsSUFBQSxDQUFjLElBQUMsQ0FBQSxPQUFPLENBQUMsTUFBdkI7QUFBQSxhQUFBOztJQUNDLFdBQVksSUFBQyxDQUFBO0lBR2QsS0FBQSxHQUFRO0FBQ1IsU0FBUyxtRkFBVDtNQUNFLE9BQUEsR0FBVSxJQUFDLENBQUEsT0FBTyxDQUFDLEtBQVQsQ0FBQTtNQUNWLElBQUEsQ0FBYSxPQUFiO0FBQUEsY0FBQTs7TUFHQSxJQUFDLENBQUEsSUFBRCxDQUFNLE9BQU47TUFDQSxLQUFLLENBQUMsSUFBTixDQUFXLEtBQVg7QUFORjtJQVNBLE9BQUEsR0FBVSxRQUFRLENBQUMsR0FBVCxDQUFhLFNBQUMsQ0FBRDtBQUFPLFVBQUE7YUFBQSxDQUFBLEdBQUksQ0FBQyxDQUFDO0lBQWIsQ0FBYjtJQUdWLFFBQVEsQ0FBQyxHQUFULENBQWEsU0FBQyxDQUFEO2FBQU8sQ0FBQyxDQUFDLE9BQUYsR0FBWSxhQUFNLEtBQU4sRUFBQSxDQUFBO0lBQW5CLENBQWI7SUFHQSxJQUFDLENBQUEsUUFBUSxDQUFDLE1BQVYsQ0FBaUIsSUFBQyxDQUFBLEtBQWxCLEVBQXlCLElBQUMsQ0FBQSxNQUExQixFQUFrQyxJQUFDLENBQUEsT0FBbkM7V0FHQSxRQUFRLENBQUMsR0FBVCxDQUFhLFNBQUMsQ0FBRCxFQUFJLENBQUo7YUFBVSxDQUFDLENBQUMsT0FBRixHQUFZLE9BQVEsQ0FBQSxDQUFBO0lBQTlCLENBQWI7RUF4Qk07O2tCQTBCUixNQUFBLEdBQVEsU0FBQTtXQUFNLElBQUMsQ0FBQSxJQUFJLENBQUMsTUFBTixDQUFBO0VBQU47Ozs7R0FqRVU7O0FBbUVwQixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"./renderable":161}],163:[function(require,module,exports){
var Factory, ShaderGraph;

ShaderGraph = require('../../vendor/shadergraph/src');

Factory = function(snippets) {
  var fetch;
  fetch = function(name) {
    var element, ref, ref1, s, sel;
    s = snippets[name];
    if (s != null) {
      return s;
    }
    ref = (ref1 = name[0]) === '#' || ref1 === '.' || ref1 === ':' || ref1 === '[';
    sel = ref ? name : "#" + name;
    element = document.querySelector(sel);
    if ((element != null) && element.tagName === 'SCRIPT') {
      return element.textContent || element.innerText;
    }
    throw new Error("Unknown shader `" + name + "`");
  };
  return new ShaderGraph(fetch, {
    autoInspect: true
  });
};

module.exports = Factory;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHNoYWRlcnNcXGZhY3RvcnkuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHNoYWRlcnNcXGZhY3RvcnkuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUE7O0FBQUEsV0FBQSxHQUFjLE9BQUEsQ0FBUSw4QkFBUjs7QUFFZCxPQUFBLEdBQVUsU0FBQyxRQUFEO0FBQ1IsTUFBQTtFQUFBLEtBQUEsR0FBUSxTQUFDLElBQUQ7QUFFTixRQUFBO0lBQUEsQ0FBQSxHQUFJLFFBQVMsQ0FBQSxJQUFBO0lBQ2IsSUFBWSxTQUFaO0FBQUEsYUFBTyxFQUFQOztJQUdBLEdBQUEsV0FBTSxJQUFLLENBQUEsQ0FBQSxFQUFMLEtBQVksR0FBWixJQUFBLElBQUEsS0FBaUIsR0FBakIsSUFBQSxJQUFBLEtBQXNCLEdBQXRCLElBQUEsSUFBQSxLQUEyQjtJQUNqQyxHQUFBLEdBQVMsR0FBSCxHQUFZLElBQVosR0FBc0IsR0FBQSxHQUFJO0lBQ2hDLE9BQUEsR0FBVSxRQUFRLENBQUMsYUFBVCxDQUF1QixHQUF2QjtJQUNWLElBQUcsaUJBQUEsSUFBYSxPQUFPLENBQUMsT0FBUixLQUFtQixRQUFuQztBQUNFLGFBQVEsT0FBTyxDQUFDLFdBQVIsSUFBdUIsT0FBTyxDQUFDLFVBRHpDOztBQUdBLFVBQU0sSUFBSSxLQUFKLENBQVUsa0JBQUEsR0FBbUIsSUFBbkIsR0FBd0IsR0FBbEM7RUFaQTtTQWNSLElBQUksV0FBSixDQUFnQixLQUFoQixFQUNFO0lBQUEsV0FBQSxFQUFhLElBQWI7R0FERjtBQWZROztBQWtCVixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"../../vendor/shadergraph/src":208}],164:[function(require,module,exports){
exports.Factory = require('./factory');

exports.Snippets = require('../../build/shaders');

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHNoYWRlcnNcXGluZGV4LmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxzaGFkZXJzXFxpbmRleC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxDQUFDLE9BQVIsR0FBbUIsT0FBQSxDQUFRLFdBQVI7O0FBQ25CLE9BQU8sQ0FBQyxRQUFSLEdBQW1CLE9BQUEsQ0FBUSxxQkFBUiJ9

},{"../../build/shaders":1,"./factory":163}],165:[function(require,module,exports){
THREE.Bootstrap.registerPlugin('splash', {
  defaults: {
    color: 'mono',
    fancy: true
  },
  listen: ['ready', 'mathbox/init:init', 'mathbox/progress:progress', 'mathbox/destroy:destroy'],
  uninstall: function() {
    return this.destroy();
  },
  ready: function(event, three) {
    if (three.MathBox && !this.div) {
      return init(event, three);
    }
  },
  init: function(event, three) {
    var color, div, html, l, x, y, z;
    this.destroy();
    color = this.options.color;
    html = "<div class=\"mathbox-loader mathbox-splash-" + color + "\">\n  <div class=\"mathbox-logo\">\n    <div> <div></div><div></div><div></div> </div>\n    <div> <div></div><div></div><div></div> </div>\n  </div>\n  <div class=\"mathbox-progress\"><div></div></div>\n</div>";
    this.div = div = document.createElement('div');
    div.innerHTML = html;
    three.element.appendChild(div);
    x = Math.random() * 2 - 1;
    y = Math.random() * 2 - 1;
    z = Math.random() * 2 - 1;
    l = 1 / Math.sqrt(x * x + y * y + z * z);
    this.loader = div.querySelector('.mathbox-loader');
    this.bar = div.querySelector('.mathbox-progress > div');
    this.gyro = div.querySelectorAll('.mathbox-logo > div');
    this.transforms = ["rotateZ(22deg) rotateX(24deg) rotateY(30deg)", "rotateZ(11deg) rotateX(12deg) rotateY(15deg) scale3d(.6, .6, .6)"];
    this.random = [x * l, y * l, z * l];
    this.start = three.Time.now;
    return this.timer = null;
  },
  progress: function(event, three) {
    var current, el, f, i, increment, k, len, ref, results, t, total, visible, weights, width;
    if (!this.div) {
      return;
    }
    current = event.current, total = event.total;
    visible = current < total;
    clearTimeout(this.timer);
    if (visible) {
      this.loader.classList.remove('mathbox-exit');
      this.loader.style.display = 'block';
    } else {
      this.loader.classList.add('mathbox-exit');
      this.timer = setTimeout(((function(_this) {
        return function() {
          return _this.loader.style.display = 'none';
        };
      })(this)), 150);
    }
    width = current < total ? (Math.round(1000 * current / total) * .1) + '%' : '100%';
    this.bar.style.width = width;
    if (this.options.fancy) {
      weights = this.random;
      f = Math.max(0, Math.min(1, three.Time.now - this.start));
      increment = function(transform, j) {
        if (j == null) {
          j = 0;
        }
        return transform.replace(/(-?[0-9.e]+)deg/g, function(_, n) {
          return (+n + weights[j++] * f * three.Time.step * 60) + 'deg';
        });
      };
      ref = this.gyro;
      results = [];
      for (i = k = 0, len = ref.length; k < len; i = ++k) {
        el = ref[i];
        this.transforms[i] = t = increment(this.transforms[i]);
        results.push(el.style.transform = el.style.WebkitTransform = t);
      }
      return results;
    }
  },
  destroy: function() {
    var ref;
    if ((ref = this.div) != null) {
      ref.remove();
    }
    return this.div = null;
  }
});

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHNwbGFzaC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xcc3BsYXNoLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxLQUFLLENBQUMsU0FBUyxDQUFDLGNBQWhCLENBQStCLFFBQS9CLEVBQ0U7RUFBQSxRQUFBLEVBQ0U7SUFBQSxLQUFBLEVBQU8sTUFBUDtJQUNBLEtBQUEsRUFBTyxJQURQO0dBREY7RUFJQSxNQUFBLEVBQVEsQ0FBQyxPQUFELEVBQVUsbUJBQVYsRUFBK0IsMkJBQS9CLEVBQTRELHlCQUE1RCxDQUpSO0VBTUEsU0FBQSxFQUFXLFNBQUE7V0FBTSxJQUFDLENBQUEsT0FBRCxDQUFBO0VBQU4sQ0FOWDtFQVFBLEtBQUEsRUFBTyxTQUFDLEtBQUQsRUFBUSxLQUFSO0lBQ0wsSUFBcUIsS0FBSyxDQUFDLE9BQU4sSUFBaUIsQ0FBQyxJQUFDLENBQUEsR0FBeEM7YUFBQSxJQUFBLENBQUssS0FBTCxFQUFZLEtBQVosRUFBQTs7RUFESyxDQVJQO0VBV0EsSUFBQSxFQUFNLFNBQUMsS0FBRCxFQUFRLEtBQVI7QUFDSixRQUFBO0lBQUEsSUFBQyxDQUFBLE9BQUQsQ0FBQTtJQUVDLFFBQVMsSUFBQyxDQUFBO0lBQ1gsSUFBQSxHQUFPLDZDQUFBLEdBQ3FDLEtBRHJDLEdBQzJDO0lBU2xELElBQUMsQ0FBQSxHQUFELEdBQU8sR0FBQSxHQUFNLFFBQVEsQ0FBQyxhQUFULENBQXVCLEtBQXZCO0lBQ2IsR0FBRyxDQUFDLFNBQUosR0FBZ0I7SUFDaEIsS0FBSyxDQUFDLE9BQU8sQ0FBQyxXQUFkLENBQTBCLEdBQTFCO0lBRUEsQ0FBQSxHQUFJLElBQUksQ0FBQyxNQUFMLENBQUEsQ0FBQSxHQUFjLENBQWQsR0FBZ0I7SUFDcEIsQ0FBQSxHQUFJLElBQUksQ0FBQyxNQUFM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

},{}],166:[function(require,module,exports){
var Animation, Animator, Ease;

Ease = require('../util').Ease;

Animator = (function() {
  function Animator(context) {
    this.context = context;
    this.anims = [];
  }

  Animator.prototype.make = function(type, options) {
    var anim;
    anim = new Animation(this, this.context.time, type, options);
    this.anims.push(anim);
    return anim;
  };

  Animator.prototype.unmake = function(anim) {
    var a;
    return this.anims = (function() {
      var i, len, ref, results;
      ref = this.anims;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        a = ref[i];
        if (a !== anim) {
          results.push(a);
        }
      }
      return results;
    }).call(this);
  };

  Animator.prototype.update = function() {
    var anim, time;
    time = this.context.time;
    return this.anims = (function() {
      var i, len, ref, results;
      ref = this.anims;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        anim = ref[i];
        if (anim.update(time) !== false) {
          results.push(anim);
        }
      }
      return results;
    }).call(this);
  };

  Animator.prototype.lerp = function(type, from, to, f, value) {
    var emitter, fromE, lerp, toE;
    if (value == null) {
      value = type.make();
    }
    if (type.lerp) {
      value = type.lerp(from, to, value, f);
    } else if (type.emitter) {
      fromE = from.emitterFrom;
      toE = to.emitterTo;
      if ((fromE != null) && (toE != null) && fromE === toE) {
        fromE.lerp(f);
        return fromE;
      } else {
        emitter = type.emitter(from, to);
        from.emitterFrom = emitter;
        to.emitterTo = emitter;
        emitter.lerp(f);
        return emitter;
      }
    } else if (type.op) {
      lerp = function(a, b) {
        if (a === +a && b === +b) {
          return a + (b - a) * f;
        } else {
          if (f > .5) {
            return b;
          } else {
            return a;
          }
        }
      };
      value = type.op(from, to, value, lerp);
    } else {
      value = f > .5 ? to : from;
    }
    return value;
  };

  return Animator;

})();

Animation = (function() {
  function Animation(animator, time1, type1, options1) {
    this.animator = animator;
    this.time = time1;
    this.type = type1;
    this.options = options1;
    this.value = this.type.make();
    this.target = this.type.make();
    this.queue = [];
  }

  Animation.prototype.dispose = function() {
    return this.animator.unmake(this);
  };

  Animation.prototype.set = function() {
    var invalid, target, value;
    target = this.target;
    value = arguments.length > 1 ? [].slice.call(arguments) : arguments[0];
    invalid = false;
    value = this.type.validate(value, target, function() {
      return invalid = true;
    });
    if (!invalid) {
      target = value;
    }
    this.cancel();
    this.target = this.value;
    this.value = target;
    return this.notify();
  };

  Animation.prototype.getTime = function() {
    var clock, time;
    clock = this.options.clock;
    time = clock ? clock.getTime() : this.time;
    if (this.options.realtime) {
      return time.time;
    } else {
      return time.clock;
    }
  };

  Animation.prototype.cancel = function(from) {
    var base, cancelled, i, len, queue, stage;
    if (from == null) {
      from = this.getTime();
    }
    queue = this.queue;
    cancelled = (function() {
      var i, len, results;
      results = [];
      for (i = 0, len = queue.length; i < len; i++) {
        stage = queue[i];
        if (stage.end >= from) {
          results.push(stage);
        }
      }
      return results;
    })();
    this.queue = (function() {
      var i, len, results;
      results = [];
      for (i = 0, len = queue.length; i < len; i++) {
        stage = queue[i];
        if (stage.end < from) {
          results.push(stage);
        }
      }
      return results;
    })();
    for (i = 0, len = cancelled.length; i < len; i++) {
      stage = cancelled[i];
      if (typeof stage.complete === "function") {
        stage.complete(false);
      }
    }
    if (typeof (base = this.options).complete === "function") {
      base.complete(false);
    }
  };

  Animation.prototype.notify = function() {
    var base;
    return typeof (base = this.options).step === "function" ? base.step(this.value) : void 0;
  };

  Animation.prototype.immediate = function(value, options) {
    var complete, delay, duration, ease, end, invalid, start, step, target, time;
    duration = options.duration, delay = options.delay, ease = options.ease, step = options.step, complete = options.complete;
    time = this.getTime();
    start = time + delay;
    end = start + duration;
    invalid = false;
    target = this.type.make();
    value = this.type.validate(value, target, function() {
      invalid = true;
      return null;
    });
    if (value !== void 0) {
      target = value;
    }
    this.cancel(start);
    return this.queue.push({
      from: null,
      to: target,
      start: start,
      end: end,
      ease: ease,
      step: step,
      complete: complete
    });
  };

  Animation.prototype.update = function(time1) {
    var active, base, clock, complete, ease, end, f, from, method, queue, ref, ref1, stage, start, step, to, value;
    this.time = time1;
    if (this.queue.length === 0) {
      return true;
    }
    clock = this.getTime();
    ref = this, value = ref.value, queue = ref.queue;
    active = false;
    while (!active) {
      ref1 = stage = queue[0], from = ref1.from, to = ref1.to, start = ref1.start, end = ref1.end, step = ref1.step, complete = ref1.complete, ease = ref1.ease;
      if (from == null) {
        from = stage.from = this.type.clone(this.value);
      }
      f = Ease.clamp(((clock - start) / Math.max(0.00001, end - start)) || 0, 0, 1);
      if (f === 0) {
        return;
      }
      method = (function() {
        switch (ease) {
          case 'linear':
          case 0:
            return null;
          case 'cosine':
          case 1:
            return Ease.cosine;
          case 'binary':
          case 2:
            return Ease.binary;
          case 'hold':
          case 3:
            return Ease.hold;
          default:
            return Ease.cosine;
        }
      })();
      if (method != null) {
        f = method(f);
      }
      active = f < 1;
      value = active ? this.animator.lerp(this.type, from, to, f, value) : to;
      if (typeof step === "function") {
        step(value);
      }
      if (!active) {
        if (typeof complete === "function") {
          complete(true);
        }
        if (typeof (base = this.options).complete === "function") {
          base.complete(true);
        }
        queue.shift();
        if (queue.length === 0) {
          break;
        }
      }
    }
    this.value = value;
    return this.notify();
  };

  return Animation;

})();

module.exports = Animator;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHN0YWdlXFxhbmltYXRvci5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xcc3RhZ2VcXGFuaW1hdG9yLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBOztBQUFDLE9BQVEsT0FBQSxDQUFRLFNBQVI7O0FBRUg7RUFDUyxrQkFBQyxPQUFEO0lBQUMsSUFBQyxDQUFBLFVBQUQ7SUFDWixJQUFDLENBQUEsS0FBRCxHQUFTO0VBREU7O3FCQUdiLElBQUEsR0FBTSxTQUFDLElBQUQsRUFBTyxPQUFQO0FBQ0osUUFBQTtJQUFBLElBQUEsR0FBTyxJQUFJLFNBQUosQ0FBYyxJQUFkLEVBQWlCLElBQUMsQ0FBQSxPQUFPLENBQUMsSUFBMUIsRUFBZ0MsSUFBaEMsRUFBc0MsT0FBdEM7SUFDUCxJQUFDLENBQUEsS0FBSyxDQUFDLElBQVAsQ0FBWSxJQUFaO1dBQ0E7RUFISTs7cUJBS04sTUFBQSxHQUFRLFNBQUMsSUFBRDtBQUNOLFFBQUE7V0FBQSxJQUFDLENBQUEsS0FBRDs7QUFBVTtBQUFBO1dBQUEscUNBQUE7O1lBQXVCLENBQUEsS0FBSzt1QkFBNUI7O0FBQUE7OztFQURKOztxQkFHUixNQUFBLEdBQVEsU0FBQTtBQUNOLFFBQUE7SUFBQyxPQUFRLElBQUMsQ0FBQTtXQUNWLElBQUMsQ0FBQSxLQUFEOztBQUFVO0FBQUE7V0FBQSxxQ0FBQTs7WUFBNkIsSUFBSSxDQUFDLE1BQUwsQ0FBWSxJQUFaLENBQUEsS0FBcUI7dUJBQWxEOztBQUFBOzs7RUFGSjs7cUJBSVIsSUFBQSxHQUFNLFNBQUMsSUFBRCxFQUFPLElBQVAsRUFBYSxFQUFiLEVBQWlCLENBQWpCLEVBQW9CLEtBQXBCO0FBQ0osUUFBQTs7TUFBQSxRQUFTLElBQUksQ0FBQyxJQUFMLENBQUE7O0lBS1QsSUFBRyxJ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

},{"../util":175}],167:[function(require,module,exports){
var API, Util;

Util = require('../util');

API = (function() {
  API.prototype.v2 = function() {
    return this;
  };

  function API(_context, _up, _targets) {
    var i, j, l, len, len1, ref, ref1, root, t, type;
    this._context = _context;
    this._up = _up;
    this._targets = _targets;
    root = this._context.controller.getRoot();
    if (this._targets == null) {
      this._targets = [root];
    }
    this.isRoot = this._targets.length === 1 && this._targets[0] === root;
    this.isLeaf = this._targets.length === 1 && (this._targets[0].children == null);
    ref = this._targets;
    for (i = j = 0, len = ref.length; j < len; i = ++j) {
      t = ref[i];
      this[i] = t;
    }
    this.length = this._targets.length;
    ref1 = this._context.controller.getTypes();
    for (l = 0, len1 = ref1.length; l < len1; l++) {
      type = ref1[l];
      if (type !== 'root') {
        (function(_this) {
          return (function(type) {
            return _this[type] = function(options, binds) {
              return _this.add(type, options, binds);
            };
          });
        })(this)(type);
      }
    }
  }

  API.prototype.select = function(selector) {
    var targets;
    targets = this._context.model.select(selector, !this.isRoot ? this._targets : null);
    return this._push(targets);
  };

  API.prototype.eq = function(index) {
    if (this._targets.length > index) {
      return this._push([this._targets[index]]);
    }
    return this._push([]);
  };

  API.prototype.filter = function(callback) {
    var matcher;
    if (typeof callback === 'string') {
      matcher = this._context.model._matcher(callback);
      callback = function(x) {
        return matcher(x);
      };
    }
    return this._push(this._targets.filter(callback));
  };

  API.prototype.map = function(callback) {
    var i, j, ref, results;
    results = [];
    for (i = j = 0, ref = this.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      results.push(callback(this[i], i, this));
    }
    return results;
  };

  API.prototype.each = function(callback) {
    var i, j, ref;
    for (i = j = 0, ref = this.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      callback(this[i], i, this);
    }
    return this;
  };

  API.prototype.add = function(type, options, binds) {
    var controller, j, len, node, nodes, ref, target;
    controller = this._context.controller;
    if (this.isLeaf) {
      return this._pop().add(type, options, binds);
    }
    nodes = [];
    ref = this._targets;
    for (j = 0, len = ref.length; j < len; j++) {
      target = ref[j];
      node = controller.make(type, options, binds);
      controller.add(node, target);
      nodes.push(node);
    }
    return this._push(nodes);
  };

  API.prototype.remove = function(selector) {
    var j, len, ref, target;
    if (selector) {
      return this.select(selector).remove();
    }
    ref = this._targets.slice().reverse();
    for (j = 0, len = ref.length; j < len; j++) {
      target = ref[j];
      this._context.controller.remove(target);
    }
    return this._pop();
  };

  API.prototype.set = function(key, value) {
    var j, len, ref, target;
    ref = this._targets;
    for (j = 0, len = ref.length; j < len; j++) {
      target = ref[j];
      this._context.controller.set(target, key, value);
    }
    return this;
  };

  API.prototype.getAll = function(key) {
    var j, len, ref, results, target;
    ref = this._targets;
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      target = ref[j];
      results.push(this._context.controller.get(target, key));
    }
    return results;
  };

  API.prototype.get = function(key) {
    var ref;
    return (ref = this._targets[0]) != null ? ref.get(key) : void 0;
  };

  API.prototype.evaluate = function(key, time) {
    var ref;
    return (ref = this._targets[0]) != null ? ref.evaluate(key, time) : void 0;
  };

  API.prototype.bind = function(key, value) {
    var j, len, ref, target;
    ref = this._targets;
    for (j = 0, len = ref.length; j < len; j++) {
      target = ref[j];
      this._context.controller.bind(target, key, value);
    }
    return this;
  };

  API.prototype.unbind = function(key) {
    var j, len, ref, target;
    ref = this._targets;
    for (j = 0, len = ref.length; j < len; j++) {
      target = ref[j];
      this._context.controller.unbind(target, key);
    }
    return this;
  };

  API.prototype.end = function() {
    return (this.isLeaf ? this._pop() : this)._pop();
  };

  API.prototype._push = function(targets) {
    return new API(this._context, this, targets);
  };

  API.prototype._pop = function() {
    var ref;
    return (ref = this._up) != null ? ref : this;
  };

  API.prototype._reset = function() {
    var ref, ref1;
    return (ref = (ref1 = this._up) != null ? ref1.reset() : void 0) != null ? ref : this;
  };

  API.prototype.map = function(callback) {
    return this._targets.map(callback);
  };

  API.prototype["on"] = function() {
    var args;
    args = arguments;
    this._targets.map(function(x) {
      return x.on.apply(x, args);
    });
    return this;
  };

  API.prototype["off"] = function() {
    var args;
    args = arguments;
    this._targets.map(function(x) {
      return x.off.apply(x, args);
    });
    return this;
  };

  API.prototype.toString = function() {
    var tags;
    tags = this._targets.map(function(x) {
      return x.toString();
    });
    if (this._targets.length > 1) {
      return "[" + (tags.join(", ")) + "]";
    } else {
      return tags[0];
    }
  };

  API.prototype.toMarkup = function() {
    var tags;
    tags = this._targets.map(function(x) {
      return x.toMarkup();
    });
    return tags.join("\n\n");
  };

  API.prototype.print = function() {
    Util.Pretty.print(this._targets.map(function(x) {
      return x.toMarkup();
    }).join("\n\n"));
    return this;
  };

  API.prototype.debug = function() {
    var getName, info, j, len, name, ref, shader, shaders;
    info = this.inspect();
    console.log('Renderables: ', info.renderables);
    console.log('Renders: ', info.renders);
    console.log('Shaders: ', info.shaders);
    getName = function(owner) {
      return owner.constructor.toString().match('function +([^(]*)')[1];
    };
    shaders = [];
    ref = info.shaders;
    for (j = 0, len = ref.length; j < len; j++) {
      shader = ref[j];
      name = getName(shader.owner);
      shaders.push(name + " - Vertex");
      shaders.push(shader.vertex);
      shaders.push(name + " - Fragment");
      shaders.push(shader.fragment);
    }
    return ShaderGraph.inspect(shaders);
  };

  API.prototype.inspect = function(selector, trait, print) {
    var _info, flatten, info, j, k, len, make, map, recurse, ref, renderables, self, target;
    if (typeof trait === 'boolean') {
      print = trait;
      trait = null;
    }
    if (print == null) {
      print = true;
    }
    map = function(node) {
      var ref, ref1;
      return (ref = (ref1 = node.controller) != null ? ref1.objects : void 0) != null ? ref : [];
    };
    recurse = self = function(node, list) {
      var child, j, len, ref;
      if (list == null) {
        list = [];
      }
      if (!trait || node.traits.hash[trait]) {
        list.push(map(node));
      }
      if (node.children != null) {
        ref = node.children;
        for (j = 0, len = ref.length; j < len; j++) {
          child = ref[j];
          self(child, list);
        }
      }
      return list;
    };
    flatten = function(list) {
      list = list.reduce((function(a, b) {
        return a.concat(b);
      }), []);
      return list = list.filter(function(x, i) {
        return (x != null) && list.indexOf(x) === i;
      });
    };
    make = function(renderable, render) {
      var d;
      d = {};
      d.owner = renderable;
      d.geometry = render.geometry;
      d.material = render.material;
      d.vertex = render.material.vertexGraph;
      d.fragment = render.material.fragmentGraph;
      return d;
    };
    info = {
      nodes: this._targets.slice(),
      renderables: [],
      renders: [],
      shaders: []
    };
    ref = this._targets;
    for (j = 0, len = ref.length; j < len; j++) {
      target = ref[j];
      if (print) {
        target.print(selector, 'info');
      }
      _info = {
        renderables: renderables = flatten(recurse(target)),
        renders: flatten(renderables.map(function(x) {
          return x.renders;
        })),
        shaders: flatten(renderables.map(function(x) {
          var ref1;
          return (ref1 = x.renders) != null ? ref1.map(function(r) {
            return make(x, r);
          }) : void 0;
        }))
      };
      for (k in _info) {
        info[k] = info[k].concat(_info[k]);
      }
    }
    return info;
  };

  return API;

})();

module.exports = API;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,

},{"../util":175}],168:[function(require,module,exports){
var Controller, Util;

Util = require('../util');

Controller = (function() {
  function Controller(model, primitives) {
    this.model = model;
    this.primitives = primitives;
  }

  Controller.prototype.getRoot = function() {
    return this.model.getRoot();
  };

  Controller.prototype.getTypes = function() {
    return this.primitives.getTypes();
  };

  Controller.prototype.make = function(type, options, binds) {
    return this.primitives.make(type, options, binds);
  };

  Controller.prototype.get = function(node, key) {
    return node.get(key);
  };

  Controller.prototype.set = function(node, key, value) {
    var e;
    try {
      return node.set(key, value);
    } catch (error) {
      e = error;
      node.print(null, 'warn');
      return console.error(e);
    }
  };

  Controller.prototype.bind = function(node, key, expr) {
    var e;
    try {
      return node.bind(key, expr);
    } catch (error) {
      e = error;
      node.print(null, 'warn');
      return console.error(e);
    }
  };

  Controller.prototype.unbind = function(node, key) {
    var e;
    try {
      return node.unbind(key);
    } catch (error) {
      e = error;
      node.print(null, 'warn');
      return console.error(e);
    }
  };

  Controller.prototype.add = function(node, target) {
    if (target == null) {
      target = this.model.getRoot();
    }
    return target.add(node);
  };

  Controller.prototype.remove = function(node) {
    var target;
    target = node.parent;
    if (target) {
      return target.remove(node);
    }
  };

  return Controller;

})();

module.exports = Controller;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHN0YWdlXFxjb250cm9sbGVyLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFxzdGFnZVxcY29udHJvbGxlci5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQTs7QUFBQSxJQUFBLEdBQU8sT0FBQSxDQUFRLFNBQVI7O0FBRUQ7RUFDUyxvQkFBQyxLQUFELEVBQVMsVUFBVDtJQUFDLElBQUMsQ0FBQSxRQUFEO0lBQVEsSUFBQyxDQUFBLGFBQUQ7RUFBVDs7dUJBRWIsT0FBQSxHQUFTLFNBQUE7V0FDUCxJQUFDLENBQUEsS0FBSyxDQUFDLE9BQVAsQ0FBQTtFQURPOzt1QkFHVCxRQUFBLEdBQVUsU0FBQTtXQUNSLElBQUMsQ0FBQSxVQUFVLENBQUMsUUFBWixDQUFBO0VBRFE7O3VCQUdWLElBQUEsR0FBTSxTQUFDLElBQUQsRUFBTyxPQUFQLEVBQWdCLEtBQWhCO1dBQ0osSUFBQyxDQUFBLFVBQVUsQ0FBQyxJQUFaLENBQWlCLElBQWpCLEVBQXVCLE9BQXZCLEVBQWdDLEtBQWhDO0VBREk7O3VCQUdOLEdBQUEsR0FBSyxTQUFDLElBQUQsRUFBTyxHQUFQO1dBQ0gsSUFBSSxDQUFDLEdBQUwsQ0FBUyxHQUFUO0VBREc7O3VCQUdMLEdBQUEsR0FBSyxTQUFDLElBQUQsRUFBTyxHQUFQLEVBQVksS0FBWjtBQUNILFFBQUE7QUFBQTthQUNFLElBQUksQ0FBQyxHQUFMLENBQVMsR0FBVCxFQUFjLEtBQWQsRUFERjtLQUFBLGFBQUE7TUFFTTtNQUNKLElBQUksQ0FBQyxLQUFMLENBQVcsSUFBWCxFQUFpQixNQUFqQjthQUNBLE9BQU8sQ0FBQyxLQUFSLENBQWMsQ0FBZCxFQUpGOztFQURHOzt1QkFPTCxJQUFBLEdBQU0sU0FBQyxJQUFELEVBQU8sR0FBUCxFQUFZLElBQVo7QUFDSixRQUFBO0FBQUE7YUFDRSxJQUFJLENBQUMsSUFBTCxDQUFVLEdBQVYsRUFBZSxJQUFmLEVBREY7S0FBQSxhQUFBO01BRU07TUFDSixJQUFJLENBQUMsS0FBTCxDQUFXLElBQVgsRUFBaUIsTUFBakI7YUFDQSxPQUFPLENBQUMsS0FBUixDQUFjLENBQWQsRUFKRjs7RUFESTs7dUJBT04sTUFBQSxHQUFRLFNBQUMsSUFBRCxFQUFPLEdBQVA7QUFDTixRQUFBO0FBQUE7YUFDRSxJQUFJLENBQUMsTUFBTCxDQUFZLEdBQVosRUFERjtLQUFBLGFBQUE7TUFFTTtNQUNKLElBQUksQ0FBQyxLQUFMLENBQVcsSUFBWCxFQUFpQixNQUFqQjthQUNBLE9BQU8sQ0FBQyxLQUFSLENBQWMsQ0FBZCxFQUpGOztFQURNOzt1QkFPUixHQUFBLEdBQUssU0FBQyxJQUFELEVBQU8sTUFBUDs7TUFBTyxTQUFTLElBQUMsQ0FBQSxLQUFLLENBQUMsT0FBUCxDQUFBOztXQUNuQixNQUFNLENBQUMsR0FBUCxDQUFXLElBQVg7RUFERzs7dUJBR0wsTUFBQSxHQUFRLFNBQUMsSUFBRDtBQUNOLFFBQUE7SUFBQSxNQUFBLEdBQVMsSUFBSSxDQUFDO0lBQ2QsSUFBc0IsTUFBdEI7YUFBQSxNQUFNLENBQUMsTUFBUCxDQUFjLElBQWQsRUFBQTs7RUFGTTs7Ozs7O0FBSVYsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"../util":175}],169:[function(require,module,exports){
exports.Animator = require('./animator');

exports.API = require('./api');

exports.Controller = require('./controller');

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHN0YWdlXFxpbmRleC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHNyY1xcc3RhZ2VcXGluZGV4LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLENBQUMsUUFBUixHQUFxQixPQUFBLENBQVEsWUFBUjs7QUFDckIsT0FBTyxDQUFDLEdBQVIsR0FBcUIsT0FBQSxDQUFRLE9BQVI7O0FBQ3JCLE9BQU8sQ0FBQyxVQUFSLEdBQXFCLE9BQUEsQ0FBUSxjQUFSIn0=

},{"./animator":166,"./api":167,"./controller":168}],170:[function(require,module,exports){
var indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

exports.setOrigin = function(vec, dimensions, origin) {
  var w, x, y, z;
  if (+dimensions === dimensions) {
    dimensions = [dimensions];
  }
  x = indexOf.call(dimensions, 1) >= 0 ? 0 : origin.x;
  y = indexOf.call(dimensions, 2) >= 0 ? 0 : origin.y;
  z = indexOf.call(dimensions, 3) >= 0 ? 0 : origin.z;
  w = indexOf.call(dimensions, 4) >= 0 ? 0 : origin.w;
  return vec.set(x, y, z, w);
};

exports.addOrigin = (function() {
  var v;
  v = new THREE.Vector4;
  return function(vec, dimension, origin) {
    exports.setOrigin(v, dimension, origin);
    return vec.add(v);
  };
})();

exports.setDimension = function(vec, dimension) {
  var w, x, y, z;
  x = dimension === 1 ? 1 : 0;
  y = dimension === 2 ? 1 : 0;
  z = dimension === 3 ? 1 : 0;
  w = dimension === 4 ? 1 : 0;
  return vec.set(x, y, z, w);
};

exports.setDimensionNormal = function(vec, dimension) {
  var w, x, y, z;
  x = dimension === 1 ? 1 : 0;
  y = dimension === 2 ? 1 : 0;
  z = dimension === 3 ? 1 : 0;
  w = dimension === 4 ? 1 : 0;
  return vec.set(y, z + x, w, 0);
};

exports.recenterAxis = (function() {
  var axis;
  axis = [0, 0];
  return function(x, dx, bend, f) {
    var abs, fabs, max, min, x1, x2;
    if (f == null) {
      f = 0;
    }
    if (bend > 0) {
      x1 = x;
      x2 = x + dx;
      abs = Math.max(Math.abs(x1), Math.abs(x2));
      fabs = abs * f;
      min = Math.min(x1, x2);
      max = Math.max(x1, x2);
      x = min + (-abs + fabs - min) * bend;
      dx = max + (abs + fabs - max) * bend - x;
    }
    axis[0] = x;
    axis[1] = dx;
    return axis;
  };
})();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHV0aWxcXGF4aXMuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHV0aWxcXGF4aXMuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUE7O0FBQUEsT0FBTyxDQUFDLFNBQVIsR0FBb0IsU0FBQyxHQUFELEVBQU0sVUFBTixFQUFrQixNQUFsQjtBQUNsQixNQUFBO0VBQUEsSUFBNkIsQ0FBQyxVQUFELEtBQWUsVUFBNUM7SUFBQSxVQUFBLEdBQWEsQ0FBQyxVQUFELEVBQWI7O0VBQ0EsQ0FBQSxHQUFPLGFBQUssVUFBTCxFQUFBLENBQUEsTUFBSCxHQUF3QixDQUF4QixHQUErQixNQUFNLENBQUM7RUFDMUMsQ0FBQSxHQUFPLGFBQUssVUFBTCxFQUFBLENBQUEsTUFBSCxHQUF3QixDQUF4QixHQUErQixNQUFNLENBQUM7RUFDMUMsQ0FBQSxHQUFPLGFBQUssVUFBTCxFQUFBLENBQUEsTUFBSCxHQUF3QixDQUF4QixHQUErQixNQUFNLENBQUM7RUFDMUMsQ0FBQSxHQUFPLGFBQUssVUFBTCxFQUFBLENBQUEsTUFBSCxHQUF3QixDQUF4QixHQUErQixNQUFNLENBQUM7U0FDMUMsR0FBRyxDQUFDLEdBQUosQ0FBUSxDQUFSLEVBQVcsQ0FBWCxFQUFjLENBQWQsRUFBaUIsQ0FBakI7QUFOa0I7O0FBUXBCLE9BQU8sQ0FBQyxTQUFSLEdBQXVCLENBQUEsU0FBQTtBQUNyQixNQUFBO0VBQUEsQ0FBQSxHQUFJLElBQUksS0FBSyxDQUFDO1NBQ2QsU0FBQyxHQUFELEVBQU0sU0FBTixFQUFpQixNQUFqQjtJQUNFLE9BQU8sQ0FBQyxTQUFSLENBQWtCLENBQWxCLEVBQXFCLFNBQXJCLEVBQWdDLE1BQWhDO1dBQ0EsR0FBRyxDQUFDLEdBQUosQ0FBUSxDQUFSO0VBRkY7QUFGcUIsQ0FBQSxDQUFILENBQUE7O0FBTXBCLE9BQU8sQ0FBQyxZQUFSLEdBQXVCLFNBQUMsR0FBRCxFQUFNLFNBQU47QUFDckIsTUFBQTtFQUFBLENBQUEsR0FBTyxTQUFBLEtBQWEsQ0FBaEIsR0FBdUIsQ0FBdkIsR0FBOEI7RUFDbEMsQ0FBQSxHQUFPLFNBQUEsS0FBYSxDQUFoQixHQUF1QixDQUF2QixHQUE4QjtFQUNsQyxDQUFBLEdBQU8sU0FBQSxLQUFhLENBQWhCLEdBQXVCLENBQXZCLEdBQThCO0VBQ2xDLENBQUEsR0FBTyxTQUFBLEtBQWEsQ0FBaEIsR0FBdUIsQ0FBdkIsR0FBOEI7U0FDbEMsR0FBRyxDQUFDLEdBQUosQ0FBUSxDQUFSLEVBQVcsQ0FBWCxFQUFjLENBQWQsRUFBaUIsQ0FBakI7QUFMcUI7O0FBT3ZCLE9BQU8sQ0FBQyxrQkFBUixHQUE2QixTQUFDLEdBQUQsRUFBTSxTQUFOO0FBRTNCLE1BQUE7RUFBQSxDQUFBLEdBQU8sU0FBQSxLQUFhLENBQWhCLEdBQXVCLENBQXZCLEdBQThCO0VBQ2xDLENBQUEsR0FBTyxTQUFBLEtBQWEsQ0FBaEIsR0FBdUIsQ0FBdkIsR0FBOEI7RUFDbEMsQ0FBQSxHQUFPLFNBQUEsS0FBYSxDQUFoQixHQUF1QixDQUF2QixHQUE4QjtFQUNsQyxDQUFBLEdBQU8sU0FBQSxLQUFhLENBQWhCLEdBQXVCLENBQXZCLEdBQThCO1NBQ2xDLEdBQUcsQ0FBQyxHQUFKLENBQVEsQ0FBUixFQUFXLENBQUEsR0FBSSxDQUFmLEVBQWtCLENBQWxCLEVBQXFCLENBQXJCO0FBTjJCOztBQVE3QixPQUFPLENBQUMsWUFBUixHQUEwQixDQUFBLFNBQUE7QUFDeEIsTUFBQTtFQUFBLElBQUEsR0FBTyxDQUFDLENBQUQsRUFBSSxDQUFKO1NBRVAsU0FBQyxDQUFELEVBQUksRUFBSixFQUFRLElBQVIsRUFBYyxDQUFkO0FBQ0UsUUFBQTs7TUFEWSxJQUFJOztJQUNoQixJQUFHLElBQUEsR0FBTyxDQUFWO01BQ0UsRUFBQSxHQUFLO01BQ0wsRUFBQSxHQUFLLENBQUEsR0FBSTtNQUVULEdBQUEsR0FBTSxJQUFJLENBQUMsR0FBTCxDQUFTLElBQUksQ0FBQyxHQUFMLENBQVMsRUFBVCxDQUFULEVBQXVCLElBQUksQ0FBQyxHQUFMLENBQVMsRUFBVCxDQUF2QjtNQUNOLElBQUEsR0FBTyxHQUFBLEdBQU07TUFFYixHQUFBLEdBQU0sSUFBSSxDQUFDLEdBQUwsQ0FBUyxFQUFULEVBQWEsRUFBYjtNQUNOLEdBQUEsR0FBTSxJQUFJLENBQUMsR0FBTCxDQUFTLEVBQVQsRUFBYSxFQUFiO01BRU4sQ0FBQSxHQUFLLEdBQUEsR0FBTSxDQUFDLENBQUMsR0FBRCxHQUFPLElBQVAsR0FBYyxHQUFmLENBQUEsR0FBc0I7TUFDakMsRUFBQSxHQUFLLEdBQUEsR0FBTSxDQUFDLEdBQUEsR0FBTSxJQUFOLEdBQWEsR0FBZCxDQUFBLEdBQXFCLElBQTNCLEdBQWtDLEVBWHpDOztJQWFBLElBQUssQ0FBQSxDQUFBLENBQUwsR0FBVTtJQUNWLElBQUssQ0FBQSxDQUFBLENBQUwsR0FBVTtXQUNWO0VBaEJGO0FBSHdCLENBQUEsQ0FBSCxDQUFBIn0=

},{}],171:[function(require,module,exports){
// Recycled from threestrap

module.exports = self = {
  bind: function (context, globals) {
    return function (key, object) {

      // Prepare object
      if (!object.__binds) {
        object.__binds = [];
      }

      // Set base target
      var fallback = context;
      if (_.isArray(key)) {
        fallback = key[0];
        key = key[1];
      }

      // Match key
      var match = /^([^.:]*(?:\.[^.:]+)*)?(?:\:(.*))?$/.exec(key);
      var path = match[1].split(/\./g);

      var name = path.pop();
      var dest = match[2] || name;

      // Whitelisted objects
      var selector = path.shift();
      var target = {
        'this': object,
      }[selector] || globals[selector] || context[selector] || fallback;

      // Look up keys
      while (target && (key = path.shift())) { target = target[key] };

      // Attach event handler at last level
      if (target && (target.on || target.addEventListener)) {
        var callback = function (event) {
          object[dest] && object[dest](event, context);
        };

        // Polyfill for both styles of event listener adders
        self._polyfill(target, [ 'addEventListener', 'on' ], function (method) {
          target[method](name, callback);
        });

        // Store bind for removal later
        var bind = { target: target, name: name, callback: callback };
        object.__binds.push(bind);

        // Return callback
        return callback;
      }
      else {
        throw "Cannot bind '" + key + "' in " + this.__name;
      }
    };
  },

  unbind: function () {
    return function (object) {
      // Remove all binds belonging to object
      if (object.__binds) {

        object.__binds.forEach(function (bind) {

          // Polyfill for both styles of event listener removers
          self._polyfill(bind.target, [ 'removeEventListener', 'off' ], function (method) {
            bind.target[method](bind.name, bind.callback);
          });
        }.bind(this));

        object.__binds = [];
      }
    }
  },

  apply: function ( object ) {

    Object.assign( object, THREE.EventDispatcher.prototype );

    object.trigger     = self._trigger;
    object.triggerOnce = self._triggerOnce;

    object.on = object.addEventListener;
    object.off = object.removeEventListener;
    object.dispatchEvent = object.trigger;

  },

  ////

  _triggerOnce: function (event) {
    this.trigger(event);
    if (this._listeners) {
      delete this._listeners[event.type]
    }
  },

  _trigger: function (event) {

    if (this._listeners === undefined) return;

    var type = event.type;
    var listeners = this._listeners[type];
    if (listeners !== undefined) {

      listeners = listeners.slice()
      var length = listeners.length;

      event.target = this;
      for (var i = 0; i < length; i++) {
        // add original target as parameter for convenience
        listeners[i].call(this, event, this);
      }
    }
  },

  _polyfill: function (object, methods, callback) {
    methods.map(function (method) { return object.method });
    if (methods.length) callback(methods[0]);
  },

};

},{}],172:[function(require,module,exports){
var getSizes;

exports.getSizes = getSizes = function(data) {
  var array, sizes;
  sizes = [];
  array = data;
  while (typeof array !== 'string' && ((array != null ? array.length : void 0) != null)) {
    sizes.push(array.length);
    array = array[0];
  }
  return sizes;
};

exports.getDimensions = function(data, spec) {
  var channels, depth, dims, height, items, levels, n, nesting, ref, ref1, ref2, ref3, ref4, sizes, width;
  if (spec == null) {
    spec = {};
  }
  items = spec.items, channels = spec.channels, width = spec.width, height = spec.height, depth = spec.depth;
  dims = {};
  if (!data || !data.length) {
    return {
      items: items,
      channels: channels,
      width: width != null ? width : 0,
      height: height != null ? height : 0,
      depth: depth != null ? depth : 0
    };
  }
  sizes = getSizes(data);
  nesting = sizes.length;
  dims.channels = channels !== 1 && sizes.length > 1 ? sizes.pop() : channels;
  dims.items = items !== 1 && sizes.length > 1 ? sizes.pop() : items;
  dims.width = width !== 1 && sizes.length > 1 ? sizes.pop() : width;
  dims.height = height !== 1 && sizes.length > 1 ? sizes.pop() : height;
  dims.depth = depth !== 1 && sizes.length > 1 ? sizes.pop() : depth;
  levels = nesting;
  if (channels === 1) {
    levels++;
  }
  if (items === 1 && levels > 1) {
    levels++;
  }
  if (width === 1 && levels > 2) {
    levels++;
  }
  if (height === 1 && levels > 3) {
    levels++;
  }
  n = (ref = sizes.pop()) != null ? ref : 1;
  if (levels <= 1) {
    n /= (ref1 = dims.channels) != null ? ref1 : 1;
  }
  if (levels <= 2) {
    n /= (ref2 = dims.items) != null ? ref2 : 1;
  }
  if (levels <= 3) {
    n /= (ref3 = dims.width) != null ? ref3 : 1;
  }
  if (levels <= 4) {
    n /= (ref4 = dims.height) != null ? ref4 : 1;
  }
  n = Math.floor(n);
  if (dims.width == null) {
    dims.width = n;
    n = 1;
  }
  if (dims.height == null) {
    dims.height = n;
    n = 1;
  }
  if (dims.depth == null) {
    dims.depth = n;
    n = 1;
  }
  return dims;
};

exports.repeatCall = function(call, times) {
  switch (times) {
    case 0:
      return function() {
        return true;
      };
    case 1:
      return function() {
        return call();
      };
    case 2:
      return function() {
        call();
        return call();
      };
    case 3:
      return function() {
        call();
        call();
        call();
        return call();
      };
    case 4:
      return function() {
        call();
        call();
        call();
        return call();
      };
    case 6:
      return function() {
        call();
        call();
        call();
        call();
        call();
        return call();
      };
    case 8:
      return function() {
        call();
        call();
        call();
        call();
        call();
        return call();
      };
  }
};

exports.makeEmitter = function(thunk, items, channels) {
  var inner, n, next, outer;
  inner = (function() {
    switch (channels) {
      case 0:
        return function() {
          return true;
        };
      case 1:
        return function(emit) {
          return emit(thunk());
        };
      case 2:
        return function(emit) {
          return emit(thunk(), thunk());
        };
      case 3:
        return function(emit) {
          return emit(thunk(), thunk(), thunk());
        };
      case 4:
        return function(emit) {
          return emit(thunk(), thunk(), thunk(), thunk());
        };
      case 6:
        return function(emit) {
          return emit(thunk(), thunk(), thunk(), thunk(), thunk(), thunk());
        };
      case 8:
        return function(emit) {
          return emit(thunk(), thunk(), thunk(), thunk(), thunk(), thunk(), thunk(), thunk());
        };
    }
  })();
  next = null;
  while (items > 0) {
    n = Math.min(items, 8);
    outer = (function() {
      switch (n) {
        case 1:
          return function(emit) {
            return inner(emit);
          };
        case 2:
          return function(emit) {
            inner(emit);
            return inner(emit);
          };
        case 3:
          return function(emit) {
            inner(emit);
            inner(emit);
            return inner(emit);
          };
        case 4:
          return function(emit) {
            inner(emit);
            inner(emit);
            inner(emit);
            return inner(emit);
          };
        case 5:
          return function(emit) {
            inner(emit);
            inner(emit);
            inner(emit);
            inner(emit);
            return inner(emit);
          };
        case 6:
          return function(emit) {
            inner(emit);
            inner(emit);
            inner(emit);
            inner(emit);
            inner(emit);
            return inner(emit);
          };
        case 7:
          return function(emit) {
            inner(emit);
            inner(emit);
            inner(emit);
            inner(emit);
            inner(emit);
            inner(emit);
            return inner(emit);
          };
        case 8:
          return function(emit) {
            inner(emit);
            inner(emit);
            inner(emit);
            inner(emit);
            inner(emit);
            inner(emit);
            inner(emit);
            return inner(emit);
          };
      }
    })();
    if (next != null) {
      next = (function(outer, next) {
        return function(emit) {
          outer(emit);
          return next(emit);
        };
      })(outer, next);
    } else {
      next = outer;
    }
    items -= n;
  }
  outer = next != null ? next : function() {
    return true;
  };
  outer.reset = thunk.reset;
  outer.rebind = thunk.rebind;
  return outer;
};

exports.getThunk = function(data) {
  var a, b, c, d, done, first, fourth, i, j, k, l, m, nesting, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, second, sizes, third, thunk;
  sizes = getSizes(data);
  nesting = sizes.length;
  a = sizes.pop();
  b = sizes.pop();
  c = sizes.pop();
  d = sizes.pop();
  done = false;
  switch (nesting) {
    case 0:
      thunk = function() {
        return 0;
      };
      thunk.reset = function() {};
      break;
    case 1:
      i = 0;
      thunk = function() {
        return data[i++];
      };
      thunk.reset = function() {
        return i = 0;
      };
      break;
    case 2:
      i = j = 0;
      first = (ref = data[j]) != null ? ref : [];
      thunk = function() {
        var ref1, x;
        x = first[i++];
        if (i === a) {
          i = 0;
          j++;
          first = (ref1 = data[j]) != null ? ref1 : [];
        }
        return x;
      };
      thunk.reset = function() {
        var ref1;
        i = j = 0;
        first = (ref1 = data[j]) != null ? ref1 : [];
      };
      break;
    case 3:
      i = j = k = 0;
      second = (ref1 = data[k]) != null ? ref1 : [];
      first = (ref2 = second[j]) != null ? ref2 : [];
      thunk = function() {
        var ref3, ref4, x;
        x = first[i++];
        if (i === a) {
          i = 0;
          j++;
          if (j === b) {
            j = 0;
            k++;
            second = (ref3 = data[k]) != null ? ref3 : [];
          }
          first = (ref4 = second[j]) != null ? ref4 : [];
        }
        return x;
      };
      thunk.reset = function() {
        var ref3, ref4;
        i = j = k = 0;
        second = (ref3 = data[k]) != null ? ref3 : [];
        first = (ref4 = second[j]) != null ? ref4 : [];
      };
      break;
    case 4:
      i = j = k = l = 0;
      third = (ref3 = data[l]) != null ? ref3 : [];
      second = (ref4 = third[k]) != null ? ref4 : [];
      first = (ref5 = second[j]) != null ? ref5 : [];
      thunk = function() {
        var ref6, ref7, ref8, x;
        x = first[i++];
        if (i === a) {
          i = 0;
          j++;
          if (j === b) {
            j = 0;
            k++;
            if (k === c) {
              k = 0;
              l++;
              third = (ref6 = data[l]) != null ? ref6 : [];
            }
            second = (ref7 = third[k]) != null ? ref7 : [];
          }
          first = (ref8 = second[j]) != null ? ref8 : [];
        }
        return x;
      };
      thunk.reset = function() {
        var ref6, ref7, ref8;
        i = j = k = l = 0;
        third = (ref6 = data[l]) != null ? ref6 : [];
        second = (ref7 = third[k]) != null ? ref7 : [];
        first = (ref8 = second[j]) != null ? ref8 : [];
      };
      break;
    case 5:
      i = j = k = l = m = 0;
      fourth = (ref6 = data[m]) != null ? ref6 : [];
      third = (ref7 = fourth[l]) != null ? ref7 : [];
      second = (ref8 = third[k]) != null ? ref8 : [];
      first = (ref9 = second[j]) != null ? ref9 : [];
      thunk = function() {
        var ref10, ref11, ref12, ref13, x;
        x = first[i++];
        if (i === a) {
          i = 0;
          j++;
          if (j === b) {
            j = 0;
            k++;
            if (k === c) {
              k = 0;
              l++;
              if (l === d) {
                l = 0;
                m++;
                fourth = (ref10 = data[m]) != null ? ref10 : [];
              }
              third = (ref11 = fourth[l]) != null ? ref11 : [];
            }
            second = (ref12 = third[k]) != null ? ref12 : [];
          }
          first = (ref13 = second[j]) != null ? ref13 : [];
        }
        return x;
      };
      thunk.reset = function() {
        var ref10, ref11, ref12, ref13;
        i = j = k = l = m = 0;
        fourth = (ref10 = data[m]) != null ? ref10 : [];
        third = (ref11 = fourth[l]) != null ? ref11 : [];
        second = (ref12 = third[k]) != null ? ref12 : [];
        first = (ref13 = second[j]) != null ? ref13 : [];
      };
  }
  thunk.rebind = function(d) {
    data = d;
    sizes = getSizes(data);
    if (sizes.length) {
      a = sizes.pop();
    }
    if (sizes.length) {
      b = sizes.pop();
    }
    if (sizes.length) {
      c = sizes.pop();
    }
    if (sizes.length) {
      return d = sizes.pop();
    }
  };
  return thunk;
};

exports.getStreamer = function(array, samples, channels, items) {
  var consume, count, done, emit, i, j, limit, reset, skip;
  limit = i = j = 0;
  reset = function() {
    limit = samples * channels * items;
    return i = j = 0;
  };
  count = function() {
    return j;
  };
  done = function() {
    return limit - i <= 0;
  };
  skip = (function() {
    switch (channels) {
      case 1:
        return function(n) {
          i += n;
          j += n;
        };
      case 2:
        return function(n) {
          i += n * 2;
          j += n;
        };
      case 3:
        return function(n) {
          i += n * 3;
          j += n;
        };
      case 4:
        return function(n) {
          i += n * 4;
          j += n;
        };
    }
  })();
  consume = (function() {
    switch (channels) {
      case 1:
        return function(emit) {
          emit(array[i++]);
          ++j;
        };
      case 2:
        return function(emit) {
          emit(array[i++], array[i++]);
          ++j;
        };
      case 3:
        return function(emit) {
          emit(array[i++], array[i++], array[i++]);
          ++j;
        };
      case 4:
        return function(emit) {
          emit(array[i++], array[i++], array[i++], array[i++]);
          ++j;
        };
    }
  })();
  emit = (function() {
    switch (channels) {
      case 1:
        return function(x) {
          array[i++] = x;
          ++j;
        };
      case 2:
        return function(x, y) {
          array[i++] = x;
          array[i++] = y;
          ++j;
        };
      case 3:
        return function(x, y, z) {
          array[i++] = x;
          array[i++] = y;
          array[i++] = z;
          ++j;
        };
      case 4:
        return function(x, y, z, w) {
          array[i++] = x;
          array[i++] = y;
          array[i++] = z;
          array[i++] = w;
          ++j;
        };
    }
  })();
  consume.reset = reset;
  emit.reset = reset;
  reset();
  return {
    emit: emit,
    consume: consume,
    skip: skip,
    count: count,
    done: done,
    reset: reset
  };
};

exports.getLerpEmitter = function(expr1, expr2) {
  var args, emit1, emit2, emitter, lerp1, lerp2, p, q, r, s, scratch;
  scratch = new Float32Array(4096);
  lerp1 = lerp2 = 0.5;
  p = q = r = s = 0;
  emit1 = function(x, y, z, w) {
    r++;
    scratch[p++] = x * lerp1;
    scratch[p++] = y * lerp1;
    scratch[p++] = z * lerp1;
    return scratch[p++] = w * lerp1;
  };
  emit2 = function(x, y, z, w) {
    s++;
    scratch[q++] += x * lerp2;
    scratch[q++] += y * lerp2;
    scratch[q++] += z * lerp2;
    return scratch[q++] += w * lerp2;
  };
  args = Math.max(expr1.length, expr2.length);
  if (args <= 3) {
    emitter = function(emit, x, i) {
      var k, l, n, o, ref, results;
      p = q = r = s = 0;
      expr1(emit1, x, i);
      expr2(emit2, x, i);
      n = Math.min(r, s);
      l = 0;
      results = [];
      for (k = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; k = 0 <= ref ? ++o : --o) {
        results.push(emit(scratch[l++], scratch[l++], scratch[l++], scratch[l++]));
      }
      return results;
    };
  } else if (args <= 5) {
    emitter = function(emit, x, y, i, j) {
      var k, l, n, o, ref, results;
      p = q = r = s = 0;
      expr1(emit1, x, y, i, j);
      expr2(emit2, x, y, i, j);
      n = Math.min(r, s);
      l = 0;
      results = [];
      for (k = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; k = 0 <= ref ? ++o : --o) {
        results.push(emit(scratch[l++], scratch[l++], scratch[l++], scratch[l++]));
      }
      return results;
    };
  } else if (args <= 7) {
    emitter = function(emit, x, y, z, i, j, k) {
      var l, n, o, ref, results;
      p = q = r = s = 0;
      expr1(emit1, x, y, z, i, j, k);
      expr2(emit2, x, y, z, i, j, k);
      n = Math.min(r, s);
      l = 0;
      results = [];
      for (k = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; k = 0 <= ref ? ++o : --o) {
        results.push(emit(scratch[l++], scratch[l++], scratch[l++], scratch[l++]));
      }
      return results;
    };
  } else if (args <= 9) {
    emitter = function(emit, x, y, z, w, i, j, k, l) {
      var n, o, ref, results;
      p = q = r = s = 0;
      expr1(emit1, x, y, z, w, i, j, k, l);
      expr2(emit2, x, y, z, w, i, j, k, l);
      n = Math.min(r, s);
      l = 0;
      results = [];
      for (k = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; k = 0 <= ref ? ++o : --o) {
        results.push(emit(scratch[l++], scratch[l++], scratch[l++], scratch[l++]));
      }
      return results;
    };
  } else {
    emitter = function(emit, x, y, z, w, i, j, k, l, d, t) {
      var n, o, ref, results;
      p = q = 0;
      expr1(emit1, x, y, z, w, i, j, k, l, d, t);
      expr2(emit2, x, y, z, w, i, j, k, l, d, t);
      n = Math.min(r, s);
      l = 0;
      results = [];
      for (k = o = 0, ref = n; 0 <= ref ? o < ref : o > ref; k = 0 <= ref ? ++o : --o) {
        results.push(emit(scratch[l++], scratch[l++], scratch[l++], scratch[l++]));
      }
      return results;
    };
  }
  emitter.lerp = function(f) {
    var ref;
    return ref = [1 - f, f], lerp1 = ref[0], lerp2 = ref[1], ref;
  };
  return emitter;
};

exports.getLerpThunk = function(data1, data2) {
  var n, n1, n2, scratch, thunk1, thunk2;
  n1 = exports.getSizes(data1).reduce(function(a, b) {
    return a * b;
  });
  n2 = exports.getSizes(data2).reduce(function(a, b) {
    return a * b;
  });
  n = Math.min(n1, n2);
  thunk1 = exports.getThunk(data1);
  thunk2 = exports.getThunk(data2);
  scratch = new Float32Array(n);
  scratch.lerp = function(f) {
    var a, b, i, results;
    thunk1.reset();
    thunk2.reset();
    i = 0;
    results = [];
    while (i < n) {
      a = thunk1();
      b = thunk2();
      results.push(scratch[i++] = a + (b - a) * f);
    }
    return results;
  };
  return scratch;
};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,

},{}],173:[function(require,module,exports){
var ease, π;

π = Math.PI;

ease = {
  clamp: function(x, a, b) {
    return Math.max(a, Math.min(b, x));
  },
  cosine: function(x) {
    return .5 - .5 * Math.cos(ease.clamp(x, 0, 1) * π);
  },
  binary: function(x) {
    return +(x >= .5);
  },
  hold: function(x) {
    return +(x >= 1);
  }
};

module.exports = ease;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHV0aWxcXGVhc2UuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHV0aWxcXGVhc2UuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUE7O0FBQUEsQ0FBQSxHQUFJLElBQUksQ0FBQzs7QUFFVCxJQUFBLEdBRUU7RUFBQSxLQUFBLEVBQVEsU0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVA7V0FBYSxJQUFJLENBQUMsR0FBTCxDQUFTLENBQVQsRUFBWSxJQUFJLENBQUMsR0FBTCxDQUFTLENBQVQsRUFBWSxDQUFaLENBQVo7RUFBYixDQUFSO0VBQ0EsTUFBQSxFQUFRLFNBQUMsQ0FBRDtXQUFPLEVBQUEsR0FBSyxFQUFBLEdBQUssSUFBSSxDQUFDLEdBQUwsQ0FBUyxJQUFJLENBQUMsS0FBTCxDQUFXLENBQVgsRUFBYyxDQUFkLEVBQWlCLENBQWpCLENBQUEsR0FBc0IsQ0FBL0I7RUFBakIsQ0FEUjtFQUVBLE1BQUEsRUFBUSxTQUFDLENBQUQ7V0FBTyxDQUFDLENBQUMsQ0FBQSxJQUFLLEVBQU47RUFBUixDQUZSO0VBR0EsSUFBQSxFQUFRLFNBQUMsQ0FBRDtXQUFPLENBQUMsQ0FBQyxDQUFBLElBQUssQ0FBTjtFQUFSLENBSFI7OztBQUtGLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{}],174:[function(require,module,exports){
var index, letters, parseOrder, toFloatString, toType,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

letters = 'xyzw'.split('');

index = {
  0: -1,
  x: 0,
  y: 1,
  z: 2,
  w: 3
};

parseOrder = function(order) {
  if (order === "" + order) {
    order = order.split('');
  }
  if (order === +order) {
    order = [order];
  }
  return order;
};

toType = function(type) {
  if (type === +type) {
    type = 'vec' + type;
  }
  if (type === 'vec1') {
    type = 'float';
  }
  return type;
};

toFloatString = function(value) {
  value = "" + value;
  if (value.indexOf('.') < 0) {
    return value += '.0';
  }
};

exports.mapByte2FloatOffset = function(stretch) {
  var factor;
  if (stretch == null) {
    stretch = 4;
  }
  factor = toFloatString(stretch);
  return "vec4 float2ByteIndex(vec4 xyzw, out float channelIndex) {\n  float relative = xyzw.w / " + factor + ";\n  float w = floor(relative);\n  channelIndex = (relative - w) * " + factor + ";\n  return vec4(xyzw.xyz, w);\n}";
};

exports.sample2DArray = function(textures) {
  var body, divide;
  divide = function(a, b) {
    var mid, out;
    if (a === b) {
      out = "return texture2D(dataTextures[" + a + "], uv);";
    } else {
      mid = Math.ceil(a + (b - a) / 2);
      out = "if (z < " + (mid - .5) + ") {\n  " + (divide(a, mid - 1)) + "\n}\nelse {\n  " + (divide(mid, b)) + "\n}";
    }
    return out = out.replace(/\n/g, "\n  ");
  };
  body = divide(0, textures - 1);
  return "uniform sampler2D dataTextures[" + textures + "];\n\nvec4 sample2DArray(vec2 uv, float z) {\n  " + body + "\n}";
};

exports.binaryOperator = function(type, op, curry) {
  type = toType(type);
  if (curry != null) {
    return type + " binaryOperator(" + type + " a) {\n  return a " + op + " " + curry + ";\n}";
  } else {
    return type + " binaryOperator(" + type + " a, " + type + " b) {\n  return a " + op + " b;\n}";
  }
};

exports.extendVec = function(from, to, value) {
  var ctor, diff, k, parts, results;
  if (value == null) {
    value = 0;
  }
  if (from > to) {
    return exports.truncateVec(from, to);
  }
  diff = to - from;
  from = toType(from);
  to = toType(to);
  value = toFloatString(value);
  parts = (function() {
    results = [];
    for (var k = 0; 0 <= diff ? k <= diff : k >= diff; 0 <= diff ? k++ : k--){ results.push(k); }
    return results;
  }).apply(this).map(function(x) {
    if (x) {
      return value;
    } else {
      return 'v';
    }
  });
  ctor = parts.join(',');
  return to + " extendVec(" + from + " v) { return " + to + "(" + ctor + "); }";
};

exports.truncateVec = function(from, to) {
  var swizzle;
  if (from < to) {
    return exports.extendVec(from, to);
  }
  swizzle = '.' + ('xyzw'.substr(0, to));
  from = toType(from);
  to = toType(to);
  return to + " truncateVec(" + from + " v) { return v" + swizzle + "; }";
};

exports.injectVec4 = function(order) {
  var args, channel, i, k, len, mask, swizzler;
  swizzler = ['0.0', '0.0', '0.0', '0.0'];
  order = parseOrder(order);
  order = order.map(function(v) {
    if (v === "" + v) {
      return index[v];
    } else {
      return v;
    }
  });
  for (i = k = 0, len = order.length; k < len; i = ++k) {
    channel = order[i];
    swizzler[channel] = ['a', 'b', 'c', 'd'][i];
  }
  mask = swizzler.slice(0, 4).join(', ');
  args = ['float a', 'float b', 'float c', 'float d'].slice(0, order.length);
  return "vec4 inject(" + args + ") {\n  return vec4(" + mask + ");\n}";
};

exports.swizzleVec4 = function(order, size) {
  var lookup, mask;
  if (size == null) {
    size = null;
  }
  lookup = ['0.0', 'xyzw.x', 'xyzw.y', 'xyzw.z', 'xyzw.w'];
  if (size == null) {
    size = order.length;
  }
  order = parseOrder(order);
  order = order.map(function(v) {
    var ref;
    if (ref = +v, indexOf.call([0, 1, 2, 3, 4], ref) >= 0) {
      v = +v;
    }
    if (v === "" + v) {
      v = index[v] + 1;
    }
    return lookup[v];
  });
  while (order.length < size) {
    order.push('0.0');
  }
  mask = order.join(', ');
  return ("vec" + size + " swizzle(vec4 xyzw) {\n  return vec" + size + "(" + mask + ");\n}").replace(/vec1/g, 'float');
};

exports.invertSwizzleVec4 = function(order) {
  var i, j, k, len, letter, mask, src, swizzler;
  swizzler = ['0.0', '0.0', '0.0', '0.0'];
  order = parseOrder(order);
  order = order.map(function(v) {
    if (v === +v) {
      return letters[v - 1];
    } else {
      return v;
    }
  });
  for (i = k = 0, len = order.length; k < len; i = ++k) {
    letter = order[i];
    src = letters[i];
    j = index[letter];
    swizzler[j] = "xyzw." + src;
  }
  mask = swizzler.join(', ');
  return "vec4 invertSwizzle(vec4 xyzw) {\n  return vec4(" + mask + ");\n}";
};

exports.identity = function(type) {
  var args;
  args = [].slice.call(arguments);
  if (args.length > 1) {
    args = args.map(function(t, i) {
      return ['inout', t, String.fromCharCode(97 + i)].join(' ');
    });
    args = args.join(', ');
    return "void identity(" + args + ") { }";
  } else {
    return type + " identity(" + type + " x) {\n  return x;\n}";
  }
};

exports.constant = function(type, value) {
  return type + " constant() {\n  return " + value + ";\n}";
};

exports.toType = toType;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHV0aWxcXGdsc2wuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHV0aWxcXGdsc2wuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsaURBQUE7RUFBQTs7QUFBQSxPQUFBLEdBQVUsTUFBTSxDQUFDLEtBQVAsQ0FBYSxFQUFiOztBQUVWLEtBQUEsR0FDRTtFQUFBLENBQUEsRUFBRyxDQUFDLENBQUo7RUFDQSxDQUFBLEVBQUcsQ0FESDtFQUVBLENBQUEsRUFBRyxDQUZIO0VBR0EsQ0FBQSxFQUFHLENBSEg7RUFJQSxDQUFBLEVBQUcsQ0FKSDs7O0FBTUYsVUFBQSxHQUFhLFNBQUMsS0FBRDtFQUNYLElBQTBCLEtBQUEsS0FBUyxFQUFBLEdBQUssS0FBeEM7SUFBQSxLQUFBLEdBQVEsS0FBSyxDQUFDLEtBQU4sQ0FBWSxFQUFaLEVBQVI7O0VBQ0EsSUFBMEIsS0FBQSxLQUFTLENBQUMsS0FBcEM7SUFBQSxLQUFBLEdBQVEsQ0FBQyxLQUFELEVBQVI7O1NBQ0E7QUFIVzs7QUFLYixNQUFBLEdBQVMsU0FBQyxJQUFEO0VBQ1AsSUFBdUIsSUFBQSxLQUFRLENBQUMsSUFBaEM7SUFBQSxJQUFBLEdBQU8sS0FBQSxHQUFRLEtBQWY7O0VBQ0EsSUFBa0IsSUFBQSxLQUFRLE1BQTFCO0lBQUEsSUFBQSxHQUFPLFFBQVA7O1NBQ0E7QUFITzs7QUFLVCxhQUFBLEdBQWdCLFNBQUMsS0FBRDtFQUNkLEtBQUEsR0FBUSxFQUFBLEdBQUs7RUFDYixJQUFpQixLQUFLLENBQUMsT0FBTixDQUFjLEdBQWQsQ0FBQSxHQUFxQixDQUF0QztXQUFBLEtBQUEsSUFBUyxLQUFUOztBQUZjOztBQUtoQixPQUFPLENBQUMsbUJBQVIsR0FBOEIsU0FBQyxPQUFEO0FBQzVCLE1BQUE7O0lBRDZCLFVBQVU7O0VBQ3ZDLE1BQUEsR0FBUyxhQUFBLENBQWMsT0FBZDtTQUNULHlGQUFBLEdBRThCLE1BRjlCLEdBRXFDLHFFQUZyQyxHQUlvQyxNQUpwQyxHQUkyQztBQU5mOztBQVk5QixPQUFPLENBQUMsYUFBUixHQUF3QixTQUFDLFFBQUQ7QUFFdEIsTUFBQTtFQUFBLE1BQUEsR0FBUyxTQUFDLENBQUQsRUFBSSxDQUFKO0FBQ1AsUUFBQTtJQUFBLElBQUcsQ0FBQSxLQUFLLENBQVI7TUFDRSxHQUFBLEdBQU0sZ0NBQUEsR0FDMEIsQ0FEMUIsR0FDNEIsVUFGcEM7S0FBQSxNQUFBO01BS0UsR0FBQSxHQUFNLElBQUksQ0FBQyxJQUFMLENBQVUsQ0FBQSxHQUFJLENBQUMsQ0FBQSxHQUFJLENBQUwsQ0FBQSxHQUFVLENBQXhCO01BQ04sR0FBQSxHQUFNLFVBQUEsR0FDRyxDQUFDLEdBQUEsR0FBTSxFQUFQLENBREgsR0FDYSxTQURiLEdBRUgsQ0FBQyxNQUFBLENBQU8sQ0FBUCxFQUFVLEdBQUEsR0FBTSxDQUFoQixDQUFELENBRkcsR0FFaUIsaUJBRmpCLEdBS0gsQ0FBQyxNQUFBLENBQU8sR0FBUCxFQUFZLENBQVosQ0FBRCxDQUxHLEdBS2EsTUFYckI7O1dBY0EsR0FBQSxHQUFNLEdBQUcsQ0FBQyxPQUFKLENBQVksS0FBWixFQUFtQixNQUFuQjtFQWZDO0VBaUJULElBQUEsR0FBTyxNQUFBLENBQU8sQ0FBUCxFQUFVLFFBQUEsR0FBVyxDQUFyQjtTQUVQLGlDQUFBLEdBQ2lDLFFBRGpDLEdBQzBDLGtEQUQxQyxHQUlJLElBSkosR0FJUztBQXpCYTs7QUE4QnhCLE9BQU8sQ0FBQyxjQUFSLEdBQXlCLFNBQUMsSUFBRCxFQUFPLEVBQVAsRUFBVyxLQUFYO0VBQ3ZCLElBQUEsR0FBTyxNQUFBLENBQU8sSUFBUDtFQUNQLElBQUcsYUFBSDtXQUVJLElBQUQsR0FBTSxrQkFBTixHQUF3QixJQUF4QixHQUE2QixvQkFBN0IsR0FDWSxFQURaLEdBQ2UsR0FEZixHQUNrQixLQURsQixHQUN3QixPQUgzQjtHQUFBLE1BQUE7V0FRSSxJQUFELEdBQU0sa0JBQU4sR0FBd0IsSUFBeEIsR0FBNkIsTUFBN0IsR0FBbUMsSUFBbkMsR0FBd0Msb0JBQXhDLEdBQ1ksRUFEWixHQUNlLFNBVGxCOztBQUZ1Qjs7QUFnQnpCLE9BQU8sQ0FBQyxTQUFSLEdBQW9CLFNBQUMsSUFBRCxFQUFPLEVBQVAsRUFBVyxLQUFYO0FBQ2xCLE1BQUE7O0lBRDZCLFFBQVE7O0VBQ3JDLElBQXVDLElBQUEsR0FBTyxFQUE5QztBQUFBLFdBQU8sT0FBTyxDQUFDLFdBQVIsQ0FBb0IsSUFBcEIsRUFBMEIsRUFBMUIsRUFBUDs7RUFFQSxJQUFBLEdBQU8sRUFBQSxHQUFLO0VBRVosSUFBQSxHQUFPLE1BQUEsQ0FBTyxJQUFQO0VBQ1AsRUFBQSxHQUFPLE1BQUEsQ0FBTyxFQUFQO0VBRVAsS0FBQSxHQUFRLGFBQUEsQ0FBYyxLQUFkO0VBRVIsS0FBQSxHQUFROzs7O2dCQUFTLENBQUMsR0FBVixDQUFjLFNBQUMsQ0FBRDtJQUFPLElBQUcsQ0FBSDthQUFVLE1BQVY7S0FBQSxNQUFBO2FBQXFCLElBQXJCOztFQUFQLENBQWQ7RUFDUixJQUFBLEdBQVEsS0FBSyxDQUFDLElBQU4sQ0FBVyxHQUFYO1NBR04sRUFBRCxHQUFJLGFBQUosR0FBaUIsSUFBakIsR0FBc0IsZUFBdEIsR0FBcUMsRUFBckMsR0FBd0MsR0FBeEMsR0FBMkMsSUFBM0MsR0FBZ0Q7QUFkL0I7O0FBa0JwQixPQUFPLENBQUMsV0FBUixHQUFzQixTQUFDLElBQUQsRUFBTyxFQUFQO0FBQ3BCLE1BQUE7RUFBQSxJQUFxQyxJQUFBLEdBQU8sRUFBNUM7QUFBQSxXQUFPLE9BQU8sQ0FBQyxTQUFSLENBQWtCLElBQWxCLEVBQXdCLEVBQXhCLEVBQVA7O0VBRUEsT0FBQSxHQUFVLEdBQUEsR0FBTSxDQUFDLE1BQU0sQ0FBQyxNQUFQLENBQWMsQ0FBZCxFQUFpQixFQUFqQixDQUFEO0VBRWhCLElBQUEsR0FBTyxNQUFBLENBQU8sSUFBUDtFQUNQLEVBQUEsR0FBTyxNQUFBLENBQU8sRUFBUDtTQUdMLEVBQUQsR0FBSSxlQUFKLEdBQW1CLElBQW5CLEdBQXdCLGdCQUF4QixHQUF3QyxPQUF4QyxHQUFnRDtBQVQ3Qjs7QUFhdEIsT0FBTyxDQUFDLFVBQVIsR0FBcUIsU0FBQyxLQUFEO0FBQ25CLE1BQUE7RUFBQSxRQUFBLEdBQVcsQ0FBQyxLQUFELEVBQVEsS0FBUixFQUFlLEtBQWYsRUFBc0IsS0FBdEI7RUFFWCxLQUFBLEdBQVEsVUFBQSxDQUFXLEtBQVg7RUFDUixLQUFBLEdBQVEsS0FBSyxDQUFDLEdBQU4sQ0FBVSxTQUFDLENBQUQ7SUFBTyxJQUFHLENBQUEsS0FBSyxFQUFBLEdBQUssQ0FBYjthQUFvQixLQUFNLENBQUEsQ0FBQSxFQUExQjtLQUFBLE1BQUE7YUFBa0MsRUFBbEM7O0VBQVAsQ0FBVjtBQUVSLE9BQUEsK0NBQUE7O0lBQ0UsUUFBUyxDQUFBLE9BQUEsQ0FBVCxHQUFvQixDQUFDLEdBQUQsRUFBSyxHQUFMLEVBQVMsR0FBVCxFQUFhLEdBQWIsQ0FBa0IsQ0FBQSxDQUFBO0FBRHhDO0VBR0EsSUFBQSxHQUFPLFFBQVEsQ0FBQyxLQUFULENBQWUsQ0FBZixFQUFrQixDQUFsQixDQUFvQixDQUFDLElBQXJCLENBQTBCLElBQTFCO0VBRVAsSUFBQSxHQUFPLENBQUMsU0FBRCxFQUFZLFNBQVosRUFBdUIsU0FBdkIsRUFBa0MsU0FBbEMsQ0FBNEMsQ0FBQyxLQUE3QyxDQUFtRCxDQUFuRCxFQUFzRCxLQUFLLENBQUMsTUFBNUQ7U0FFUCxjQUFBLEdBQ2MsSUFEZCxHQUNtQixxQkFEbkIsR0FFZ0IsSUFGaEIsR0FFcUI7QUFmRjs7QUFvQnJCLE9BQU8sQ0FBQyxXQUFSLEdBQXNCLFNBQUMsS0FBRCxFQUFRLElBQVI7QUFDcEIsTUFBQTs7SUFENEIsT0FBTzs7RUFDbkMsTUFBQSxHQUFTLENBQUMsS0FBRCxFQUFRLFFBQVIsRUFBa0IsUUFBbEIsRUFBNEIsUUFBNUIsRUFBc0MsUUFBdEM7RUFFVCxJQUF3QixZQUF4QjtJQUFBLElBQUEsR0FBTyxLQUFLLENBQUMsT0FBYjs7RUFFQSxLQUFBLEdBQVEsVUFBQSxDQUFXLEtBQVg7RUFDUixLQUFBLEdBQVEsS0FBSyxDQUFDLEdBQU4sQ0FBVSxTQUFDLENBQUQ7QUFDaEIsUUFBQTtJQUFBLFVBQW9CLENBQUMsQ0FBRCxFQUFBLGFBQU0sZUFBTixFQUFBLEdBQUEsTUFBcEI7TUFBQSxDQUFBLEdBQUksQ0FBQyxFQUFMOztJQUNBLElBQW9CLENBQUEsS0FBSyxFQUFBLEdBQUssQ0FBOUI7TUFBQSxDQUFBLEdBQUksS0FBTSxDQUFBLENBQUEsQ0FBTixHQUFXLEVBQWY7O1dBQ0EsTUFBTyxDQUFBLENBQUE7RUFIUyxDQUFWO0FBS1MsU0FBTSxLQUFLLENBQUMsTUFBTixHQUFlLElBQXJCO0lBQWpCLEtBQUssQ0FBQyxJQUFOLENBQVcsS0FBWDtFQUFpQjtFQUNqQixJQUFBLEdBQU8sS0FBSyxDQUFDLElBQU4sQ0FBVyxJQUFYO1NBRVAsQ0FBQSxLQUFBLEdBQ0ssSUFETCxHQUNVLHFDQURWLEdBRWMsSUFGZCxHQUVtQixHQUZuQixHQUVzQixJQUZ0QixHQUUyQixPQUYzQixDQUlHLENBQUMsT0FKSixDQUlZLE9BSlosRUFJcUIsT0FKckI7QUFkb0I7O0FBcUJ0QixPQUFPLENBQUMsaUJBQVIsR0FBNEIsU0FBQyxLQUFEO0FBQzFCLE1BQUE7RUFBQSxRQUFBLEdBQVcsQ0FBQyxLQUFELEVBQVEsS0FBUixFQUFlLEtBQWYsRUFBc0IsS0FBdEI7RUFFWCxLQUFBLEdBQVEsVUFBQSxDQUFXLEtBQVg7RUFDUixLQUFBLEdBQVEsS0FBSyxDQUFDLEdBQU4sQ0FBVSxTQUFDLENBQUQ7SUFBTyxJQUFHLENBQUEsS0FBSyxDQUFDLENBQVQ7YUFBZ0IsT0FBUSxDQUFBLENBQUEsR0FBSSxDQUFKLEVBQXhCO0tBQUEsTUFBQTthQUFvQyxFQUFwQzs7RUFBUCxDQUFWO0FBRVIsT0FBQSwrQ0FBQTs7SUFDRSxHQUFBLEdBQU0sT0FBUSxDQUFBLENBQUE7SUFDZCxDQUFBLEdBQU0sS0FBTSxDQUFBLE1BQUE7SUFFWixRQUFTLENBQUEsQ0FBQSxDQUFULEdBQWMsT0FBQSxHQUFRO0FBSnhCO0VBTUEsSUFBQSxHQUFPLFFBQVEsQ0FBQyxJQUFULENBQWMsSUFBZDtTQUVQLGlEQUFBLEdBRWdCLElBRmhCLEdBRXFCO0FBaEJLOztBQW9CNUIsT0FBTyxDQUFDLFFBQVIsR0FBbUIsU0FBQyxJQUFEO0FBQ2pCLE1BQUE7RUFBQSxJQUFBLEdBQU8sRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFULENBQWMsU0FBZDtFQUNQLElBQUcsSUFBSSxDQUFDLE1BQUwsR0FBYyxDQUFqQjtJQUNFLElBQUEsR0FBTyxJQUFJLENBQUMsR0FBTCxDQUFTLFNBQUMsQ0FBRCxFQUFJLENBQUo7YUFBVSxDQUFDLE9BQUQsRUFBVSxDQUFWLEVBQWEsTUFBTSxDQUFDLFlBQVAsQ0FBb0IsRUFBQSxHQUFLLENBQXpCLENBQWIsQ0FBd0MsQ0FBQyxJQUF6QyxDQUE4QyxHQUE5QztJQUFWLENBQVQ7SUFDUCxJQUFBLEdBQU8sSUFBSSxDQUFDLElBQUwsQ0FBVSxJQUFWO1dBQ1AsZ0JBQUEsR0FDZ0IsSUFEaEIsR0FDcUIsUUFKdkI7R0FBQSxNQUFBO1dBUUksSUFBRCxHQUFNLFlBQU4sR0FBa0IsSUFBbEIsR0FBdUIsd0JBUjFCOztBQUZpQjs7QUFlbkIsT0FBTyxDQUFDLFFBQVIsR0FBbUIsU0FBQyxJQUFELEVBQU8sS0FBUDtTQUVmLElBQUQsR0FBTSwwQkFBTixHQUNVLEtBRFYsR0FDZ0I7QUFIQTs7QUFPbkIsT0FBTyxDQUFDLE1BQVIsR0FBaUIifQ==

},{}],175:[function(require,module,exports){
exports.Axis = require('./axis');

exports.Data = require('./data');

exports.Ease = require('./ease');

exports.GLSL = require('./glsl');

exports.JS = require('./js');

exports.Pretty = require('./pretty');

exports.Three = require('./three');

exports.Ticks = require('./ticks');

exports.VDOM = require('./vdom');

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHV0aWxcXGluZGV4LmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFx1dGlsXFxpbmRleC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxDQUFDLElBQVIsR0FBaUIsT0FBQSxDQUFRLFFBQVI7O0FBQ2pCLE9BQU8sQ0FBQyxJQUFSLEdBQWlCLE9BQUEsQ0FBUSxRQUFSOztBQUNqQixPQUFPLENBQUMsSUFBUixHQUFpQixPQUFBLENBQVEsUUFBUjs7QUFDakIsT0FBTyxDQUFDLElBQVIsR0FBaUIsT0FBQSxDQUFRLFFBQVI7O0FBQ2pCLE9BQU8sQ0FBQyxFQUFSLEdBQWlCLE9BQUEsQ0FBUSxNQUFSOztBQUNqQixPQUFPLENBQUMsTUFBUixHQUFpQixPQUFBLENBQVEsVUFBUjs7QUFDakIsT0FBTyxDQUFDLEtBQVIsR0FBaUIsT0FBQSxDQUFRLFNBQVI7O0FBQ2pCLE9BQU8sQ0FBQyxLQUFSLEdBQWlCLE9BQUEsQ0FBUSxTQUFSOztBQUNqQixPQUFPLENBQUMsSUFBUixHQUFpQixPQUFBLENBQVEsUUFBUiJ9

},{"./axis":170,"./data":172,"./ease":173,"./glsl":174,"./js":176,"./pretty":177,"./three":178,"./ticks":179,"./vdom":180}],176:[function(require,module,exports){
exports.merge = function() {
  var i, k, len, obj, v, x;
  x = {};
  for (i = 0, len = arguments.length; i < len; i++) {
    obj = arguments[i];
    for (k in obj) {
      v = obj[k];
      x[k] = v;
    }
  }
  return x;
};

exports.clone = function(o) {
  return JSON.parse(JSON.serialize(o));
};

exports.parseQuoted = function(str) {
  var accum, char, chunk, i, len, list, munch, quote, token, unescape;
  accum = "";
  unescape = function(str) {
    return str = str.replace(/\\/g, '');
  };
  munch = function(next) {
    if (accum.length) {
      list.push(unescape(accum));
    }
    return accum = next != null ? next : "";
  };
  str = str.split(/(?=(?:\\.|["' ,]))/g);
  quote = false;
  list = [];
  for (i = 0, len = str.length; i < len; i++) {
    chunk = str[i];
    char = chunk[0];
    token = chunk.slice(1);
    switch (char) {
      case '"':
      case "'":
        if (quote) {
          if (quote === char) {
            quote = false;
            munch(token);
          } else {
            accum += chunk;
          }
        } else {
          if (accum !== '') {
            throw new Error("ParseError: String `" + str + "` does not contain comma-separated quoted tokens.");
          }
          quote = char;
          accum += token;
        }
        break;
      case ' ':
      case ',':
        if (!quote) {
          munch(token);
        } else {
          accum += chunk;
        }
        break;
      default:
        accum += chunk;
    }
  }
  munch();
  return list;
};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHV0aWxcXGpzLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFx1dGlsXFxqcy5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxDQUFDLEtBQVIsR0FBZ0IsU0FBQTtBQUNkLE1BQUE7RUFBQSxDQUFBLEdBQUk7QUFDSixPQUFBLDJDQUFBOztBQUFDLFNBQUEsUUFBQTs7TUFBQSxDQUFFLENBQUEsQ0FBQSxDQUFGLEdBQU87QUFBUDtBQUFEO1NBQ0E7QUFIYzs7QUFLaEIsT0FBTyxDQUFDLEtBQVIsR0FBZ0IsU0FBQyxDQUFEO1NBQU8sSUFBSSxDQUFDLEtBQUwsQ0FBVyxJQUFJLENBQUMsU0FBTCxDQUFlLENBQWYsQ0FBWDtBQUFQOztBQUVoQixPQUFPLENBQUMsV0FBUixHQUFzQixTQUFDLEdBQUQ7QUFFcEIsTUFBQTtFQUFBLEtBQUEsR0FBUTtFQUVSLFFBQUEsR0FBVyxTQUFDLEdBQUQ7V0FBUyxHQUFBLEdBQU0sR0FBRyxDQUFDLE9BQUosQ0FBWSxLQUFaLEVBQXFCLEVBQXJCO0VBQWY7RUFDWCxLQUFBLEdBQVEsU0FBQyxJQUFEO0lBQ04sSUFBNEIsS0FBSyxDQUFDLE1BQWxDO01BQUEsSUFBSSxDQUFDLElBQUwsQ0FBVSxRQUFBLENBQVMsS0FBVCxDQUFWLEVBQUE7O1dBQ0EsS0FBQSxrQkFBUSxPQUFPO0VBRlQ7RUFJUixHQUFBLEdBQU0sR0FBRyxDQUFDLEtBQUosQ0FBVSxxQkFBVjtFQUNOLEtBQUEsR0FBUTtFQUNSLElBQUEsR0FBTztBQUVQLE9BQUEscUNBQUE7O0lBQ0UsSUFBQSxHQUFRLEtBQU0sQ0FBQSxDQUFBO0lBQ2QsS0FBQSxHQUFRLEtBQUssQ0FBQyxLQUFOLENBQVksQ0FBWjtBQUNSLFlBQU8sSUFBUDtBQUFBLFdBQ08sR0FEUDtBQUFBLFdBQ1ksR0FEWjtRQUVJLElBQUcsS0FBSDtVQUNFLElBQUcsS0FBQSxLQUFTLElBQVo7WUFDRSxLQUFBLEdBQVE7WUFDUixLQUFBLENBQU0sS0FBTixFQUZGO1dBQUEsTUFBQTtZQUlFLEtBQUEsSUFBUyxNQUpYO1dBREY7U0FBQSxNQUFBO1VBT0UsSUFBRyxLQUFBLEtBQVMsRUFBWjtBQUNFLGtCQUFNLElBQUksS0FBSixDQUFVLHNCQUFBLEdBQXVCLEdBQXZCLEdBQTJCLG1EQUFyQyxFQURSOztVQUdBLEtBQUEsR0FBUTtVQUNSLEtBQUEsSUFBUyxNQVhYOztBQURRO0FBRFosV0FjTyxHQWRQO0FBQUEsV0FjWSxHQWRaO1FBZUksSUFBRyxDQUFDLEtBQUo7VUFDRSxLQUFBLENBQU0sS0FBTixFQURGO1NBQUEsTUFBQTtVQUdFLEtBQUEsSUFBUyxNQUhYOztBQURRO0FBZFo7UUFvQkksS0FBQSxJQUFTO0FBcEJiO0FBSEY7RUF3QkEsS0FBQSxDQUFBO1NBQ0E7QUF0Q29CIn0=

},{}],177:[function(require,module,exports){
var NUMBER_PRECISION, NUMBER_THRESHOLD, checkFactor, checkUnit, escapeHTML, formatFactors, formatFraction, formatMultiple, formatPrimes, prettyFormat, prettyJSXBind, prettyJSXPair, prettyJSXProp, prettyMarkup, prettyNumber, prettyPrint;

NUMBER_PRECISION = 5;

NUMBER_THRESHOLD = 0.0001;

checkFactor = function(v, f) {
  return Math.abs(v / f - Math.round(v / f)) < NUMBER_THRESHOLD;
};

checkUnit = function(v) {
  return checkFactor(v, 1);
};

formatMultiple = function(v, f, k, compact) {
  var d;
  d = Math.round(v / f);
  if (d === 1) {
    return "" + k;
  }
  if (d === -1) {
    return "-" + k;
  }
  if (k === '1') {
    return "" + d;
  }
  if (compact) {
    return "" + d + k;
  } else {
    return d + "*" + k;
  }
};

formatFraction = function(v, f, k, compact) {
  var d;
  d = Math.round(v * f);
  if (Math.abs(d) === 1) {
    d = d < 0 ? "-" : "";
    d += k;
  } else if (k !== '1') {
    d += compact ? "" + k : "*" + k;
  }
  return d + "/" + f;
};

formatFactors = [
  {
    1: 1
  }, {
    1: 1,
    τ: Math.PI * 2
  }, {
    1: 1,
    π: Math.PI
  }, {
    1: 1,
    τ: Math.PI * 2,
    π: Math.PI
  }, {
    1: 1,
    e: Math.E
  }, {
    1: 1,
    τ: Math.PI * 2,
    e: Math.E
  }, {
    1: 1,
    π: Math.PI,
    e: Math.E
  }, {
    1: 1,
    τ: Math.PI * 2,
    π: Math.PI,
    e: Math.E
  }
];

formatPrimes = [[2 * 2 * 3 * 5 * 7, [2, 3, 5, 7]], [2 * 2 * 2 * 3 * 3 * 5 * 5 * 7 * 7, [2, 3, 5, 7]], [2 * 2 * 3 * 5 * 7 * 11 * 13, [2, 3, 5, 7, 11, 13]], [2 * 2 * 17 * 19 * 23 * 29, [2, 17, 19, 23, 29]], [256 * 256, [2]], [1000000, [2, 5]]];

prettyNumber = function(options) {
  var cache, cacheIndex, compact, e, formatIndex, numberCache, pi, precision, tau, threshold;
  if (options) {
    cache = options.cache, compact = options.compact, tau = options.tau, pi = options.pi, e = options.e, threshold = options.threshold, precision = options.precision;
  }
  compact = +(!!(compact != null ? compact : true));
  tau = +(!!(tau != null ? tau : true));
  pi = +(!!(pi != null ? pi : true));
  e = +(!!(e != null ? e : true));
  cache = +(!!(cache != null ? cache : true));
  threshold = +(threshold != null ? threshold : NUMBER_THRESHOLD);
  precision = +(precision != null ? precision : NUMBER_PRECISION);
  formatIndex = tau + pi * 2 + e * 4;
  cacheIndex = formatIndex + threshold + precision;
  numberCache = cache ? {} : null;
  return function(v) {
    var best, cached, d, denom, f, i, j, k, len, len1, list, match, n, numer, out, p, ref, ref1;
    if (numberCache != null) {
      if ((cached = numberCache[v]) != null) {
        return cached;
      }
      if (v === Math.round(v)) {
        return numberCache[v] = "" + v;
      }
    }
    out = "" + v;
    best = out.length + out.indexOf('.') + 2;
    match = function(x) {
      var d;
      d = x.length;
      if (d <= best) {
        out = "" + x;
        return best = d;
      }
    };
    ref = formatFactors[formatIndex];
    for (k in ref) {
      f = ref[k];
      if (checkUnit(v / f)) {
        match("" + (formatMultiple(v / f, 1, k, compact)));
      } else {
        for (i = 0, len = formatPrimes.length; i < len; i++) {
          ref1 = formatPrimes[i], denom = ref1[0], list = ref1[1];
          numer = v / f * denom;
          if (checkUnit(numer)) {
            for (j = 0, len1 = list.length; j < len1; j++) {
              p = list[j];
              while (checkUnit(n = numer / p) && checkUnit(d = denom / p)) {
                numer = n;
                denom = d;
              }
            }
            match("" + (formatFraction(v / f, denom, k, compact)));
            break;
          }
        }
      }
    }
    if (("" + v).length > NUMBER_PRECISION) {
      match("" + (v.toPrecision(NUMBER_PRECISION)));
    }
    if (numberCache != null) {
      numberCache[v] = out;
    }
    return out;
  };
};

prettyPrint = function(markup, level) {
  if (level == null) {
    level = 'info';
  }
  markup = prettyMarkup(markup);
  return console[level].apply(console, markup);
};

prettyMarkup = function(markup) {
  var args, attr, nested, obj, quoted, str, tag, txt;
  tag = 'color:rgb(128,0,128)';
  attr = 'color:rgb(144,64,0)';
  str = 'color:rgb(0,0,192)';
  obj = 'color:rgb(0,70,156)';
  txt = 'color:inherit';
  quoted = false;
  nested = 0;
  args = [];
  markup = markup.replace(/(\\[<={}> "'])|(=>|[<={}> "'])/g, function(_, escape, char) {
    var res;
    if (escape != null ? escape.length : void 0) {
      return escape;
    }
    if (quoted && (char !== '"' && char !== "'")) {
      return char;
    }
    if (nested && (char !== '"' && char !== "'" && char !== '{' && char !== "}")) {
      return char;
    }
    return res = (function() {
      switch (char) {
        case '<':
          args.push(tag);
          return "%c<";
        case '>':
          args.push(tag);
          args.push(txt);
          return "%c>%c";
        case ' ':
          args.push(attr);
          return " %c";
        case '=':
        case '=>':
          args.push(tag);
          return "%c" + char;
        case '"':
        case "'":
          quoted = !quoted;
          if (quoted) {
            args.push(nested ? attr : str);
            return char + "%c";
          } else {
            args.push(nested ? obj : tag);
            return "%c" + char;
          }
          break;
        case '{':
          if (nested++ === 0) {
            args.push(obj);
            return "%c" + char;
          } else {
            return char;
          }
          break;
        case '}':
          if (--nested === 0) {
            args.push(tag);
            return char + "%c";
          } else {
            return char;
          }
          break;
        default:
          return char;
      }
    })();
  });
  return [markup].concat(args);
};

prettyJSXProp = function(k, v) {
  return prettyJSXPair(k, v, '=');
};

prettyJSXBind = function(k, v) {
  return prettyJSXPair(k, v, '=>');
};

prettyJSXPair = (function() {
  var formatNumber;
  formatNumber = prettyNumber({
    compact: false
  });
  return function(k, v, op) {
    var key, value, wrap;
    key = function(k) {
      if ((k === "" + +k) || k.match(/^[A-Za-z_][A-Za-z0-9]*$/)) {
        return k;
      } else {
        return JSON.stringify(k);
      }
    };
    wrap = function(v) {
      if (v.match('\n*"')) {
        return v;
      } else {
        return "{" + v + "}";
      }
    };
    value = function(v) {
      var kk, vv;
      if (v instanceof Array) {
        return "[" + (v.map(value).join(', ')) + "]";
      }
      switch (typeof v) {
        case 'string':
          if (v.match("\n")) {
            return "\"\n" + v + "\"\n";
          } else {
            return "\"" + v + "\"";
          }
          break;
        case 'function':
          v = "" + v;
          if (v.match("\n")) {
            "\n" + v + "\n";
          } else {
            "" + v;
          }
          v = v.replace(/^function (\([^)]+\))/, "$1 =>");
          return v = v.replace(/^(\([^)]+\)) =>\s*{\s*return\s*([^}]+)\s*;\s*}/, "$1 => $2");
        case 'number':
          return formatNumber(v);
        default:
          if ((v != null) && v !== !!v) {
            if (v._up != null) {
              return value(v.map(function(v) {
                return v;
              }));
            }
            if (v.toMarkup) {
              return v.toString();
            } else {
              return "{" + ((function() {
                var results;
                results = [];
                for (kk in v) {
                  vv = v[kk];
                  if (v.hasOwnProperty(kk)) {
                    results.push((key(kk)) + ": " + (value(vv)));
                  }
                }
                return results;
              })()).join(", ") + "}";
            }
          } else {
            return "" + (JSON.stringify(v));
          }
      }
    };
    return [k, op, wrap(value(v))].join('');
  };
})();

escapeHTML = function(str) {
  str = str.replace(/&/g, '&amp;');
  str = str.replace(/</g, '&lt;');
  return str = str.replace(/"/g, '&quot;');
};

prettyFormat = function(str) {
  var arg, args, i, len, out;
  args = [].slice.call(arguments);
  args.shift();
  out = "<span>";
  str = escapeHTML(str);
  for (i = 0, len = args.length; i < len; i++) {
    arg = args[i];
    str = str.replace(/%([a-z])/, function(_, f) {
      var v;
      v = args.shift();
      switch (f) {
        case 'c':
          return "</span><span style=\"" + (escapeHTML(v)) + "\">";
        default:
          return escapeHTML(v);
      }
    });
  }
  out += str;
  return out += "</span>";
};

module.exports = {
  markup: prettyMarkup,
  number: prettyNumber,
  print: prettyPrint,
  format: prettyFormat,
  JSX: {
    prop: prettyJSXProp,
    bind: prettyJSXBind
  }
};


/*
for x in [1, 2, 1/2, 3, 1/3, Math.PI, Math.PI / 2, Math.PI * 2, Math.PI * 3, Math.PI * 4, Math.PI * 3 / 4, Math.E * 100, Math.E / 100]
  console.log prettyNumber({})(x)
 */

//# sourceMappingURL=data:application/json;charset=utf-8;base64,

},{}],178:[function(require,module,exports){
exports.paramToGL = function(gl, p) {
  if (p === THREE.RepeatWrapping) {
    return gl.REPEAT;
  }
  if (p === THREE.ClampToEdgeWrapping) {
    return gl.CLAMP_TO_EDGE;
  }
  if (p === THREE.MirroredRepeatWrapping) {
    return gl.MIRRORED_REPEAT;
  }
  if (p === THREE.NearestFilter) {
    return gl.NEAREST;
  }
  if (p === THREE.NearestMipMapNearestFilter) {
    return gl.NEAREST_MIPMAP_NEAREST;
  }
  if (p === THREE.NearestMipMapLinearFilter) {
    return gl.NEAREST_MIPMAP_LINEAR;
  }
  if (p === THREE.LinearFilter) {
    return gl.LINEAR;
  }
  if (p === THREE.LinearMipMapNearestFilter) {
    return gl.LINEAR_MIPMAP_NEAREST;
  }
  if (p === THREE.LinearMipMapLinearFilter) {
    return gl.LINEAR_MIPMAP_LINEAR;
  }
  if (p === THREE.UnsignedByteType) {
    return gl.UNSIGNED_BYTE;
  }
  if (p === THREE.UnsignedShort4444Type) {
    return gl.UNSIGNED_SHORT_4_4_4_4;
  }
  if (p === THREE.UnsignedShort5551Type) {
    return gl.UNSIGNED_SHORT_5_5_5_1;
  }
  if (p === THREE.UnsignedShort565Type) {
    return gl.UNSIGNED_SHORT_5_6_5;
  }
  if (p === THREE.ByteType) {
    return gl.BYTE;
  }
  if (p === THREE.ShortType) {
    return gl.SHORT;
  }
  if (p === THREE.UnsignedShortType) {
    return gl.UNSIGNED_SHORT;
  }
  if (p === THREE.IntType) {
    return gl.INT;
  }
  if (p === THREE.UnsignedIntType) {
    return gl.UNSIGNED_INT;
  }
  if (p === THREE.FloatType) {
    return gl.FLOAT;
  }
  if (p === THREE.AlphaFormat) {
    return gl.ALPHA;
  }
  if (p === THREE.RGBFormat) {
    return gl.RGB;
  }
  if (p === THREE.RGBAFormat) {
    return gl.RGBA;
  }
  if (p === THREE.LuminanceFormat) {
    return gl.LUMINANCE;
  }
  if (p === THREE.LuminanceAlphaFormat) {
    return gl.LUMINANCE_ALPHA;
  }
  if (p === THREE.AddEquation) {
    return gl.FUNC_ADD;
  }
  if (p === THREE.SubtractEquation) {
    return gl.FUNC_SUBTRACT;
  }
  if (p === THREE.ReverseSubtractEquation) {
    return gl.FUNC_REVERSE_SUBTRACT;
  }
  if (p === THREE.ZeroFactor) {
    return gl.ZERO;
  }
  if (p === THREE.OneFactor) {
    return gl.ONE;
  }
  if (p === THREE.SrcColorFactor) {
    return gl.SRC_COLOR;
  }
  if (p === THREE.OneMinusSrcColorFactor) {
    return gl.ONE_MINUS_SRC_COLOR;
  }
  if (p === THREE.SrcAlphaFactor) {
    return gl.SRC_ALPHA;
  }
  if (p === THREE.OneMinusSrcAlphaFactor) {
    return gl.ONE_MINUS_SRC_ALPHA;
  }
  if (p === THREE.DstAlphaFactor) {
    return gl.DST_ALPHA;
  }
  if (p === THREE.OneMinusDstAlphaFactor) {
    return gl.ONE_MINUS_DST_ALPHA;
  }
  if (p === THREE.DstColorFactor) {
    return gl.DST_COLOR;
  }
  if (p === THREE.OneMinusDstColorFactor) {
    return gl.ONE_MINUS_DST_COLOR;
  }
  if (p === THREE.SrcAlphaSaturateFactor) {
    return gl.SRC_ALPHA_SATURATE;
  }
  return 0;
};

exports.paramToArrayStorage = function(type) {
  switch (type) {
    case THREE.UnsignedByteType:
      return Uint8Array;
    case THREE.ByteType:
      return Int8Array;
    case THREE.ShortType:
      return Int16Array;
    case THREE.UnsignedShortType:
      return Uint16Array;
    case THREE.IntType:
      return Int32Array;
    case THREE.UnsignedIntType:
      return Uint32Array;
    case THREE.FloatType:
      return Float32Array;
  }
};

exports.swizzleToEulerOrder = function(swizzle) {
  return swizzle.map(function(i) {
    return ['', 'X', 'Y', 'Z'][i];
  }).join('');
};

exports.transformComposer = function() {
  var euler, pos, quat, scl, transform;
  euler = new THREE.Euler;
  quat = new THREE.Quaternion;
  pos = new THREE.Vector3;
  scl = new THREE.Vector3;
  transform = new THREE.Matrix4;
  return function(position, rotation, quaternion, scale, matrix, eulerOrder) {
    if (eulerOrder == null) {
      eulerOrder = 'XYZ';
    }
    if (rotation != null) {
      if (eulerOrder instanceof Array) {
        eulerOrder = exports.swizzleToEulerOrder(eulerOrder);
      }
      euler.setFromVector3(rotation, eulerOrder);
      quat.setFromEuler(euler);
    } else {
      quat.set(0, 0, 0, 1);
    }
    if (quaternion != null) {
      quat.multiply(quaternion);
    }
    if (position != null) {
      pos.copy(position);
    } else {
      pos.set(0, 0, 0);
    }
    if (scale != null) {
      scl.copy(scale);
    } else {
      scl.set(1, 1, 1);
    }
    transform.compose(pos, quat, scl);
    if (matrix != null) {
      transform.multiplyMatrices(transform, matrix);
    }
    return transform;
  };
};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHV0aWxcXHRocmVlLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFx1dGlsXFx0aHJlZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxDQUFDLFNBQVIsR0FBb0IsU0FBQyxFQUFELEVBQUssQ0FBTDtFQUVsQixJQUFLLENBQUEsS0FBSyxLQUFLLENBQUMsY0FBaEI7QUFBc0MsV0FBTyxFQUFFLENBQUMsT0FBaEQ7O0VBQ0EsSUFBSyxDQUFBLEtBQUssS0FBSyxDQUFDLG1CQUFoQjtBQUEyQyxXQUFPLEVBQUUsQ0FBQyxjQUFyRDs7RUFDQSxJQUFLLENBQUEsS0FBSyxLQUFLLENBQUMsc0JBQWhCO0FBQThDLFdBQU8sRUFBRSxDQUFDLGdCQUF4RDs7RUFFQSxJQUFLLENBQUEsS0FBSyxLQUFLLENBQUMsYUFBaEI7QUFBcUMsV0FBTyxFQUFFLENBQUMsUUFBL0M7O0VBQ0EsSUFBSyxDQUFBLEtBQUssS0FBSyxDQUFDLDBCQUFoQjtBQUFrRCxXQUFPLEVBQUUsQ0FBQyx1QkFBNUQ7O0VBQ0EsSUFBSyxDQUFBLEtBQUssS0FBSyxDQUFDLHlCQUFoQjtBQUFpRCxXQUFPLEVBQUUsQ0FBQyxzQkFBM0Q7O0VBRUEsSUFBSyxDQUFBLEtBQUssS0FBSyxDQUFDLFlBQWhCO0FBQW9DLFdBQU8sRUFBRSxDQUFDLE9BQTlDOztFQUNBLElBQUssQ0FBQSxLQUFLLEtBQUssQ0FBQyx5QkFBaEI7QUFBaUQsV0FBTyxFQUFFLENBQUMsc0JBQTNEOztFQUNBLElBQUssQ0FBQSxLQUFLLEtBQUssQ0FBQyx3QkFBaEI7QUFBZ0QsV0FBTyxFQUFFLENBQUMscUJBQTFEOztFQUVBLElBQUssQ0FBQSxLQUFLLEtBQUssQ0FBQyxnQkFBaEI7QUFBd0MsV0FBTyxFQUFFLENBQUMsY0FBbEQ7O0VB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

},{}],179:[function(require,module,exports){

/*
 Generate equally spaced ticks in a range at sensible positions.
 
 @param min/max - Minimum and maximum of range
 @param n - Desired number of ticks in range
 @param unit - Base unit of scale (e.g. 1 or π).
 @param scale - Division scale (e.g. 2 = binary division, or 10 = decimal division).
 @param bias - Integer to bias divisions one or more levels up or down (to create nested scales)
 @param start - Whether to include a tick at the start
 @param end - Whether to include a tick at the end
 @param zero - Whether to include zero as a tick
 @param nice - Whether to round to a more reasonable interval
 */
var LINEAR, LOG, linear, log, make;

linear = function(min, max, n, unit, base, factor, start, end, zero, nice) {
  var distance, f, factors, i, ideal, ref, span, step, steps, ticks;
  if (nice == null) {
    nice = true;
  }
  n || (n = 10);
  unit || (unit = 1);
  base || (base = 10);
  factor || (factor = 1);
  span = max - min;
  ideal = span / n;
  if (!nice) {
    ticks = (function() {
      var j, ref1, results;
      results = [];
      for (i = j = 0, ref1 = n; 0 <= ref1 ? j <= ref1 : j >= ref1; i = 0 <= ref1 ? ++j : --j) {
        results.push(min + i * ideal);
      }
      return results;
    })();
    if (!start) {
      ticks.shift();
    }
    if (!end) {
      ticks.pop();
    }
    if (!zero) {
      ticks = ticks.filter(function(x) {
        return x !== 0;
      });
    }
    return ticks;
  }
  unit || (unit = 1);
  base || (base = 10);
  ref = unit * (Math.pow(base, Math.floor(Math.log(ideal / unit) / Math.log(base))));
  factors = base % 2 === 0 ? [base / 2, 1, 1 / 2] : base % 3 === 0 ? [base / 3, 1, 1 / 3] : [1];
  steps = (function() {
    var j, len, results;
    results = [];
    for (j = 0, len = factors.length; j < len; j++) {
      f = factors[j];
      results.push(ref * f);
    }
    return results;
  })();
  distance = 2e308;
  step = steps.reduce(function(ref, step) {
    var d;
    f = step / ideal;
    d = Math.max(f, 1 / f);
    if (d < distance) {
      distance = d;
      return step;
    } else {
      return ref;
    }
  }, ref);
  step *= factor;
  min = (Math.ceil((min / step) + +(!start))) * step;
  max = (Math.floor(max / step) - +(!end)) * step;
  n = Math.ceil((max - min) / step);
  ticks = (function() {
    var j, ref1, results;
    results = [];
    for (i = j = 0, ref1 = n; 0 <= ref1 ? j <= ref1 : j >= ref1; i = 0 <= ref1 ? ++j : --j) {
      results.push(min + i * step);
    }
    return results;
  })();
  if (!zero) {
    ticks = ticks.filter(function(x) {
      return x !== 0;
    });
  }
  return ticks;
};


/*
 Generate logarithmically spaced ticks in a range at sensible positions.
 */

log = function(min, max, n, unit, base, bias, start, end, zero, nice) {
  throw new Error("Log ticks not yet implemented.");
};

LINEAR = 0;

LOG = 1;

make = function(type, min, max, n, unit, base, bias, start, end, zero, nice) {
  switch (type) {
    case LINEAR:
      return linear(min, max, n, unit, base, bias, start, end, zero, nice);
    case LOG:
      return log(min, max, n, unit, base, bias, start, end, zero, nice);
  }
};

exports.make = make;

exports.linear = linear;

exports.log = log;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFxzcmNcXHV0aWxcXHRpY2tzLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcc3JjXFx1dGlsXFx0aWNrcy5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQTs7QUFjQSxNQUFBLEdBQVMsU0FBQyxHQUFELEVBQU0sR0FBTixFQUFXLENBQVgsRUFBYyxJQUFkLEVBQW9CLElBQXBCLEVBQTBCLE1BQTFCLEVBQWtDLEtBQWxDLEVBQXlDLEdBQXpDLEVBQThDLElBQTlDLEVBQW9ELElBQXBEO0FBRVAsTUFBQTs7SUFGMkQsT0FBTzs7RUFFbEUsTUFBQSxJQUFXO0VBQ1gsU0FBQSxPQUFXO0VBQ1gsU0FBQSxPQUFXO0VBQ1gsV0FBQSxTQUFXO0VBR1gsSUFBQSxHQUFPLEdBQUEsR0FBTTtFQUNiLEtBQUEsR0FBUSxJQUFBLEdBQU87RUFHZixJQUFHLENBQUMsSUFBSjtJQUNFLEtBQUE7O0FBQVM7V0FBeUIsaUZBQXpCO3FCQUFBLEdBQUEsR0FBTSxDQUFBLEdBQUk7QUFBVjs7O0lBQ1QsSUFBaUIsQ0FBQyxLQUFsQjtNQUFBLEtBQUssQ0FBQyxLQUFOLENBQUEsRUFBQTs7SUFDQSxJQUFpQixDQUFDLEdBQWxCO01BQUEsS0FBSyxDQUFDLEdBQU4sQ0FBQSxFQUFBOztJQUNBLElBQXVDLENBQUMsSUFBeEM7TUFBQSxLQUFBLEdBQVEsS0FBSyxDQUFDLE1BQU4sQ0FBYSxTQUFDLENBQUQ7ZUFBTyxDQUFBLEtBQUs7TUFBWixDQUFiLEVBQVI7O0FBQ0EsV0FBTyxNQUxUOztFQVFBLFNBQUEsT0FBUztFQUNULFNBQUEsT0FBUztFQUNULEdBQUEsR0FBTSxJQUFBLEdBQU8sQ0FBQyxJQUFJLENBQUMsR0FBTCxDQUFTLElBQVQsRUFBZSxJQUFJLENBQUMsS0FBTCxDQUFX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

},{}],180:[function(require,module,exports){
var HEAP, Types, apply, createClass, descriptor, element, hint, id, j, key, len, map, mount, prop, recycle, ref1, set, unmount, unset;

HEAP = [];

id = 0;

Types = {

  /*
   * el('example', props, children);
  example: MathBox.DOM.createClass({
    render: (el, props, children) ->
       * VDOM node
      return el('span', { className: "foo" }, "Hello World")
  })
   */
};

descriptor = function() {
  return {
    id: id++,
    type: null,
    props: null,
    children: null,
    rendered: null,
    instance: null
  };
};

hint = function(n) {
  var i, j, ref1, results;
  n *= 2;
  n = Math.max(0, HEAP.length - n);
  results = [];
  for (i = j = 0, ref1 = n; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {
    results.push(HEAP.push(descriptor()));
  }
  return results;
};

element = function(type, props, children) {
  var el;
  el = HEAP.length ? HEAP.pop() : descriptor();
  el.type = type != null ? type : 'div';
  el.props = props != null ? props : null;
  el.children = children != null ? children : null;
  return el;
};

recycle = function(el) {
  var child, children, j, len;
  if (!el.type) {
    return;
  }
  children = el.children;
  el.type = el.props = el.children = el.instance = null;
  HEAP.push(el);
  if (children != null) {
    for (j = 0, len = children.length; j < len; j++) {
      child = children[j];
      recycle(child);
    }
  }
};

apply = function(el, last, node, parent, index) {
  var base, child, childNodes, children, comp, dirty, i, j, k, key, l, len, len1, nextChildren, nextProps, nextState, prevProps, prevState, props, ref, ref1, ref2, ref3, ref4, ref5, same, should, type, v, value;
  if (el != null) {
    if (last == null) {
      return mount(el, parent, index);
    } else {
      if (el instanceof Node) {
        same = el === last;
        if (same) {
          return;
        }
      } else {
        same = typeof el === typeof last && last !== null && el !== null && el.type === last.type;
      }
      if (!same) {
        unmount(last.instance, node);
        node.remove();
        return mount(el, parent, index);
      } else {
        el.instance = last.instance;
        type = ((ref1 = el.type) != null ? ref1.isComponentClass : void 0) ? el.type : Types[el.type];
        props = last != null ? last.props : void 0;
        nextProps = el.props;
        children = (ref2 = last != null ? last.children : void 0) != null ? ref2 : null;
        nextChildren = el.children;
        if (nextProps != null) {
          nextProps.children = nextChildren;
        }
        if (type != null) {
          dirty = node._COMPONENT_DIRTY;
          if ((props != null) !== (nextProps != null)) {
            dirty = true;
          }
          if (children !== nextChildren) {
            dirty = true;
          }
          if ((props != null) && (nextProps != null)) {
            if (!dirty) {
              for (key in props) {
                if (!nextProps.hasOwnProperty(key)) {
                  dirty = true;
                }
              }
            }
            if (!dirty) {
              for (key in nextProps) {
                value = nextProps[key];
                if ((ref = props[key]) !== value) {
                  dirty = true;
                }
              }
            }
          }
          if (dirty) {
            comp = last.instance;
            if (el.props == null) {
              el.props = {};
            }
            ref3 = comp.defaultProps;
            for (k in ref3) {
              v = ref3[k];
              if ((base = el.props)[k] == null) {
                base[k] = v;
              }
            }
            el.props.children = el.children;
            if (typeof comp.willReceiveProps === "function") {
              comp.willReceiveProps(el.props);
            }
            should = node._COMPONENT_FORCE || ((ref4 = typeof comp.shouldUpdate === "function" ? comp.shouldUpdate(el.props) : void 0) != null ? ref4 : true);
            if (should) {
              nextState = comp.getNextState();
              if (typeof comp.willUpdate === "function") {
                comp.willUpdate(el.props, nextState);
              }
            }
            prevProps = comp.props;
            prevState = comp.applyNextState();
            comp.props = el.props;
            comp.children = el.children;
            if (should) {
              el = el.rendered = typeof comp.render === "function" ? comp.render(element, el.props, el.children) : void 0;
              apply(el, last.rendered, node, parent, index);
              if (typeof comp.didUpdate === "function") {
                comp.didUpdate(prevProps, prevState);
              }
            }
          }
          return;
        } else {
          if (props != null) {
            for (key in props) {
              if (!nextProps.hasOwnProperty(key)) {
                unset(node, key, props[key]);
              }
            }
          }
          if (nextProps != null) {
            for (key in nextProps) {
              value = nextProps[key];
              if ((ref = props[key]) !== value && key !== 'children') {
                set(node, key, value, ref);
              }
            }
          }
          if (nextChildren != null) {
            if ((ref5 = typeof nextChildren) === 'string' || ref5 === 'number') {
              if (nextChildren !== children) {
                node.textContent = nextChildren;
              }
            } else {
              if (nextChildren.type != null) {
                apply(nextChildren, children, node.childNodes[0], node, 0);
              } else {
                childNodes = node.childNodes;
                if (children != null) {
                  for (i = j = 0, len = nextChildren.length; j < len; i = ++j) {
                    child = nextChildren[i];
                    apply(child, children[i], childNodes[i], node, i);
                  }
                } else {
                  for (i = l = 0, len1 = nextChildren.length; l < len1; i = ++l) {
                    child = nextChildren[i];
                    apply(child, null, childNodes[i], node, i);
                  }
                }
              }
            }
          } else if (children != null) {
            unmount(null, node);
            node.innerHTML = '';
          }
        }
        return;
      }
    }
  }
  if (last != null) {
    unmount(last.instance, node);
    return last.node.remove();
  }
};

mount = function(el, parent, index) {
  var base, child, children, comp, ctor, i, j, k, key, len, node, ref1, ref2, ref3, ref4, ref5, ref6, type, v, value;
  if (index == null) {
    index = 0;
  }
  type = ((ref1 = el.type) != null ? ref1.isComponentClass : void 0) ? el.type : Types[el.type];
  if (el instanceof Node) {
    node = el;
  } else {
    if (type != null) {
      ctor = ((ref2 = el.type) != null ? ref2.isComponentClass : void 0) ? el.type : Types[el.type];
      if (!ctor) {
        el = el.rendered = element('noscript');
        node = mount(el, parent, index);
        return node;
      }
      el.instance = comp = new ctor(parent);
      if (el.props == null) {
        el.props = {};
      }
      ref3 = comp.defaultProps;
      for (k in ref3) {
        v = ref3[k];
        if ((base = el.props)[k] == null) {
          base[k] = v;
        }
      }
      el.props.children = el.children;
      comp.props = el.props;
      comp.children = el.children;
      comp.setState(typeof comp.getInitialState === "function" ? comp.getInitialState() : void 0);
      if (typeof comp.willMount === "function") {
        comp.willMount();
      }
      el = el.rendered = typeof comp.render === "function" ? comp.render(element, el.props, el.children) : void 0;
      node = mount(el, parent, index);
      if (typeof comp.didMount === "function") {
        comp.didMount(el);
      }
      node._COMPONENT = comp;
      return node;
    } else if ((ref4 = typeof el) === 'string' || ref4 === 'number') {
      node = document.createTextNode(el);
    } else {
      node = document.createElement(el.type);
      ref5 = el.props;
      for (key in ref5) {
        value = ref5[key];
        set(node, key, value);
      }
    }
    children = el.children;
    if (children != null) {
      if ((ref6 = typeof children) === 'string' || ref6 === 'number') {
        node.textContent = children;
      } else {
        if (children.type != null) {
          mount(children, node, 0);
        } else {
          for (i = j = 0, len = children.length; j < len; i = ++j) {
            child = children[i];
            mount(child, node, i);
          }
        }
      }
    }
  }
  parent.insertBefore(node, parent.childNodes[index]);
  return node;
};

unmount = function(comp, node) {
  var child, j, k, len, ref1, results;
  if (comp) {
    if (typeof comp.willUnmount === "function") {
      comp.willUnmount();
    }
    for (k in comp) {
      delete comp[k];
    }
  }
  ref1 = node.childNodes;
  results = [];
  for (j = 0, len = ref1.length; j < len; j++) {
    child = ref1[j];
    unmount(child._COMPONENT, child);
    results.push(delete child._COMPONENT);
  }
  return results;
};

prop = function(key) {
  var j, len, prefix, prefixes;
  if (typeof document === 'undefined') {
    return true;
  }
  if (document.documentElement.style[key] != null) {
    return key;
  }
  key = key[0].toUpperCase() + key.slice(1);
  prefixes = ['webkit', 'moz', 'ms', 'o'];
  for (j = 0, len = prefixes.length; j < len; j++) {
    prefix = prefixes[j];
    if (document.documentElement.style[prefix + key] != null) {
      return prefix + key;
    }
  }
};

map = {};

ref1 = ['transform'];
for (j = 0, len = ref1.length; j < len; j++) {
  key = ref1[j];
  map[key] = prop(key);
}

set = function(node, key, value, orig) {
  var k, ref2, v;
  if (key === 'style') {
    for (k in value) {
      v = value[k];
      if ((orig != null ? orig[k] : void 0) !== v) {
        node.style[(ref2 = map[k]) != null ? ref2 : k] = v;
      }
    }
    return;
  }
  if (node[key] != null) {
    node[key] = value;
    return;
  }
  if (node instanceof Node) {
    node.setAttribute(key, value);
  }
};

unset = function(node, key, orig) {
  var k, ref2, v;
  if (key === 'style') {
    for (k in orig) {
      v = orig[k];
      node.style[(ref2 = map[k]) != null ? ref2 : k] = '';
    }
    return;
  }
  if (node[key] != null) {
    node[key] = void 0;
  }
  if (node instanceof Node) {
    node.removeAttribute(key);
  }
};

createClass = function(prototype) {
  var Component, a, aliases, b, ref2;
  aliases = {
    willMount: 'componentWillMount',
    didMount: 'componentDidMount',
    willReceiveProps: 'componentWillReceiveProps',
    shouldUpdate: 'shouldComponentUpdate',
    willUpdate: 'componentWillUpdate',
    didUpdate: 'componentDidUpdate',
    willUnmount: 'componentWillUnmount'
  };
  for (a in aliases) {
    b = aliases[a];
    if (prototype[a] == null) {
      prototype[a] = prototype[b];
    }
  }
  Component = (function() {
    function Component(node, props1, state1, children1) {
      var bind, k, nextState, v;
      this.props = props1 != null ? props1 : {};
      this.state = state1 != null ? state1 : null;
      this.children = children1 != null ? children1 : null;
      bind = function(f, self) {
        if (typeof f === 'function') {
          return f.bind(self);
        } else {
          return f;
        }
      };
      for (k in prototype) {
        v = prototype[k];
        this[k] = bind(v, this);
      }
      nextState = null;
      this.setState = function(state) {
        if (nextState == null) {
          nextState = state ? nextState != null ? nextState : {} : null;
        }
        for (k in state) {
          v = state[k];
          nextState[k] = v;
        }
        node._COMPONENT_DIRTY = true;
      };
      this.forceUpdate = function() {
        var el, results;
        node._COMPONENT_FORCE = node._COMPONENT_DIRTY = true;
        el = node;
        results = [];
        while (el = el.parentNode) {
          if (el._COMPONENT) {
            results.push(el._COMPONENT_FORCE = true);
          } else {
            results.push(void 0);
          }
        }
        return results;
      };
      this.getNextState = function() {
        return nextState;
      };
      this.applyNextState = function() {
        var prevState, ref2;
        node._COMPONENT_FORCE = node._COMPONENT_DIRTY = false;
        prevState = this.state;
        ref2 = [null, nextState], nextState = ref2[0], this.state = ref2[1];
        return prevState;
      };
      return;
    }

    return Component;

  })();
  Component.isComponentClass = true;
  Component.prototype.defaultProps = (ref2 = typeof prototype.getDefaultProps === "function" ? prototype.getDefaultProps() : void 0) != null ? ref2 : {};
  return Component;
};

module.exports = {
  element: element,
  recycle: recycle,
  apply: apply,
  hint: hint,
  Types: Types,
  createClass: createClass
};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,

},{}],181:[function(require,module,exports){

/*
  Graph of nodes with outlets
 */
var Graph;

Graph = (function() {
  Graph.index = 0;

  Graph.id = function(name) {
    return ++Graph.index;
  };

  Graph.IN = 0;

  Graph.OUT = 1;

  function Graph(nodes, parent) {
    this.parent = parent != null ? parent : null;
    this.id = Graph.id();
    this.nodes = [];
    nodes && this.add(nodes);
  }

  Graph.prototype.inputs = function() {
    var i, inputs, j, len, len1, node, outlet, ref, ref1;
    inputs = [];
    ref = this.nodes;
    for (i = 0, len = ref.length; i < len; i++) {
      node = ref[i];
      ref1 = node.inputs;
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        outlet = ref1[j];
        if (outlet.input === null) {
          inputs.push(outlet);
        }
      }
    }
    return inputs;
  };

  Graph.prototype.outputs = function() {
    var i, j, len, len1, node, outlet, outputs, ref, ref1;
    outputs = [];
    ref = this.nodes;
    for (i = 0, len = ref.length; i < len; i++) {
      node = ref[i];
      ref1 = node.outputs;
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        outlet = ref1[j];
        if (outlet.output.length === 0) {
          outputs.push(outlet);
        }
      }
    }
    return outputs;
  };

  Graph.prototype.getIn = function(name) {
    var outlet;
    return ((function() {
      var i, len, ref, results;
      ref = this.inputs();
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        outlet = ref[i];
        if (outlet.name === name) {
          results.push(outlet);
        }
      }
      return results;
    }).call(this))[0];
  };

  Graph.prototype.getOut = function(name) {
    var outlet;
    return ((function() {
      var i, len, ref, results;
      ref = this.outputs();
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        outlet = ref[i];
        if (outlet.name === name) {
          results.push(outlet);
        }
      }
      return results;
    }).call(this))[0];
  };

  Graph.prototype.add = function(node, ignore) {
    var _node, i, len;
    if (node.length) {
      for (i = 0, len = node.length; i < len; i++) {
        _node = node[i];
        this.add(_node);
      }
      return;
    }
    if (node.graph && !ignore) {
      throw new Error("Adding node to two graphs at once");
    }
    node.graph = this;
    return this.nodes.push(node);
  };

  Graph.prototype.remove = function(node, ignore) {
    var _node, i, len;
    if (node.length) {
      for (i = 0, len = node.length; i < len; i++) {
        _node = node[i];
        this.remove(_node);
      }
      return;
    }
    if (node.graph !== this) {
      throw new Error("Removing node from wrong graph.");
    }
    ignore || node.disconnect();
    this.nodes.splice(this.nodes.indexOf(node), 1);
    return node.graph = null;
  };

  Graph.prototype.adopt = function(node) {
    var _node, i, len;
    if (node.length) {
      for (i = 0, len = node.length; i < len; i++) {
        _node = node[i];
        this.adopt(_node);
      }
      return;
    }
    node.graph.remove(node, true);
    return this.add(node, true);
  };

  return Graph;

})();

module.exports = Graph;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXEdyYXBoXFxncmFwaC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHZlbmRvclxcc2hhZGVyZ3JhcGhcXHNyY1xcR3JhcGhcXGdyYXBoLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7OztBQUFBLElBQUE7O0FBR007RUFDSixLQUFDLENBQUEsS0FBRCxHQUFROztFQUNSLEtBQUMsQ0FBQSxFQUFELEdBQUssU0FBQyxJQUFEO1dBQVUsRUFBRSxLQUFLLENBQUM7RUFBbEI7O0VBRUwsS0FBQyxDQUFBLEVBQUQsR0FBSzs7RUFDTCxLQUFDLENBQUEsR0FBRCxHQUFNOztFQUVPLGVBQUMsS0FBRCxFQUFRLE1BQVI7SUFBUSxJQUFDLENBQUEsMEJBQUQsU0FBVTtJQUM3QixJQUFDLENBQUEsRUFBRCxHQUFTLEtBQUssQ0FBQyxFQUFOLENBQUE7SUFDVCxJQUFDLENBQUEsS0FBRCxHQUFTO0lBQ1QsS0FBQSxJQUFTLElBQUMsQ0FBQSxHQUFELENBQUssS0FBTDtFQUhFOztrQkFLYixNQUFBLEdBQVEsU0FBQTtBQUNOLFFBQUE7SUFBQSxNQUFBLEdBQVM7QUFDVDtBQUFBLFNBQUEscUNBQUE7O0FBQ0U7QUFBQSxXQUFBLHdDQUFBOztZQUFtRCxNQUFNLENBQUMsS0FBUCxLQUFnQjtVQUFuRSxNQUFNLENBQUMsSUFBUCxDQUFZLE1BQVo7O0FBQUE7QUFERjtBQUVBLFdBQU87RUFKRDs7a0JBTVIsT0FBQSxHQUFTLFNBQUE7QUFDUCxRQUFBO0lBQUEsT0FBQSxHQUFVO0FBQ1Y7QUFBQSxTQUFBLHFDQUFBOztBQUNFO0FBQUEsV0FBQSx3Q0FBQTs7WUFBcUQsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFkLEtBQXdCO1VBQTdFLE9BQU8sQ0FBQyxJQUFSLENBQWEsTUFBYjs7QUFBQTtBQURGO0FBRUEsV0FBTztFQUpBOztrQkFNVCxLQUFBLEdBQVEsU0FBQyxJQUFEO0FBQVUsUUFBQTtXQUFBOztBQUFDO0FBQUE7V0FBQSxxQ0FBQTs7WUFBcUMsTUFBTSxDQUFDLElBQVAsS0FBZTt1QkFBcEQ7O0FBQUE7O2lCQUFELENBQTJELENBQUEsQ0FBQTtFQUFyRTs7a0JBQ1IsTUFBQSxHQUFRLFNBQUMsSUFBRDtBQUFVLFFBQUE7V0FBQTs7QUFBQztBQUFBO1dBQUEscUNBQUE7O1lBQXFDLE1BQU0sQ0FBQyxJQUFQLEtBQWU7dUJBQXBEOztBQUFBOztpQkFBRCxDQUEyRCxDQUFBLENBQUE7RUFBckU7O2tCQUVSLEdBQUEsR0FBSyxTQUFDLElBQUQsRUFBTyxNQUFQO0FBRUgsUUFBQTtJQUFBLElBQUcsSUFBSSxDQUFDLE1BQVI7QUFDRSxXQUFBLHNDQUFBOztRQUFBLElBQUMsQ0FBQSxHQUFELENBQUssS0FBTDtBQUFBO0FBQ0EsYUFGRjs7SUFJQSxJQUF1RCxJQUFJLENBQUMsS0FBTCxJQUFlLENBQUMsTUFBdkU7QUFBQSxZQUFNLElBQUksS0FBSixDQUFVLG1DQUFWLEVBQU47O0lBRUEsSUFBSSxDQUFDLEtBQUwsR0FBYTtXQUNiLElBQUMsQ0FBQSxLQUFLLENBQUMsSUFBUCxDQUFZLElBQVo7RUFURzs7a0JBV0wsTUFBQSxHQUFRLFNBQUMsSUFBRCxFQUFPLE1BQVA7QUFDTixRQUFBO0lBQUEsSUFBRyxJQUFJLENBQUMsTUFBUjtBQUNFLFdBQUEsc0NBQUE7O1FBQUEsSUFBQyxDQUFBLE1BQUQsQ0FBUSxLQUFSO0FBQUE7QUFDQSxhQUZGOztJQUlBLElBQXFELElBQUksQ0FBQyxLQUFMLEtBQWMsSUFBbkU7QUFBQSxZQUFNLElBQUksS0FBSixDQUFVLGlDQUFWLEVBQU47O0lBRUEsTUFBQSxJQUFVLElBQUksQ0FBQyxVQUFMLENBQUE7SUFFVixJQUFDLENBQUEsS0FBSyxDQUFDLE1BQVAsQ0FBYyxJQUFDLENBQUEsS0FBSyxDQUFDLE9BQVAsQ0FBZSxJQUFmLENBQWQsRUFBb0MsQ0FBcEM7V0FDQSxJQUFJLENBQUMsS0FBTCxHQUFhO0VBVlA7O2tCQVlSLEtBQUEsR0FBTyxTQUFDLElBQUQ7QUFDTCxRQUFBO0lBQUEsSUFBRyxJQUFJLENBQUMsTUFBUjtBQUNFLFdBQUEsc0NBQUE7O1FBQUEsSUFBQyxDQUFBLEtBQUQsQ0FBTyxLQUFQO0FBQUE7QUFDQSxhQUZGOztJQUlBLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBWCxDQUFrQixJQUFsQixFQUF3QixJQUF4QjtXQUNBLElBQUMsQ0FBQyxHQUFGLENBQU0sSUFBTixFQUFZLElBQVo7RUFOSzs7Ozs7O0FBUVQsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{}],182:[function(require,module,exports){
exports.Graph = require('./graph');

exports.Node = require('./node');

exports.Outlet = require('./outlet');

exports.IN = exports.Graph.IN;

exports.OUT = exports.Graph.OUT;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXEdyYXBoXFxpbmRleC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHZlbmRvclxcc2hhZGVyZ3JhcGhcXHNyY1xcR3JhcGhcXGluZGV4LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLENBQUMsS0FBUixHQUFpQixPQUFBLENBQVEsU0FBUjs7QUFDakIsT0FBTyxDQUFDLElBQVIsR0FBaUIsT0FBQSxDQUFRLFFBQVI7O0FBQ2pCLE9BQU8sQ0FBQyxNQUFSLEdBQWlCLE9BQUEsQ0FBUSxVQUFSOztBQUVqQixPQUFPLENBQUMsRUFBUixHQUFjLE9BQU8sQ0FBQyxLQUFLLENBQUM7O0FBQzVCLE9BQU8sQ0FBQyxHQUFSLEdBQWMsT0FBTyxDQUFDLEtBQUssQ0FBQyJ9

},{"./graph":181,"./node":183,"./outlet":184}],183:[function(require,module,exports){
var Graph, Node, Outlet;

Graph = require('./graph');

Outlet = require('./outlet');


/*
 Node in graph.
 */

Node = (function() {
  Node.index = 0;

  Node.id = function(name) {
    return ++Node.index;
  };

  function Node(owner, outlets) {
    this.owner = owner;
    this.graph = null;
    this.inputs = [];
    this.outputs = [];
    this.all = [];
    this.outlets = null;
    this.id = Node.id();
    this.setOutlets(outlets);
  }

  Node.prototype.getIn = function(name) {
    var outlet;
    return ((function() {
      var i, len, ref, results;
      ref = this.inputs;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        outlet = ref[i];
        if (outlet.name === name) {
          results.push(outlet);
        }
      }
      return results;
    }).call(this))[0];
  };

  Node.prototype.getOut = function(name) {
    var outlet;
    return ((function() {
      var i, len, ref, results;
      ref = this.outputs;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        outlet = ref[i];
        if (outlet.name === name) {
          results.push(outlet);
        }
      }
      return results;
    }).call(this))[0];
  };

  Node.prototype.get = function(name) {
    return this.getIn(name) || this.getOut(name);
  };

  Node.prototype.setOutlets = function(outlets) {
    var existing, hash, i, j, k, key, len, len1, len2, match, outlet, ref;
    if (outlets != null) {
      if (this.outlets == null) {
        this.outlets = {};
        for (i = 0, len = outlets.length; i < len; i++) {
          outlet = outlets[i];
          if (!(outlet instanceof Outlet)) {
            outlet = Outlet.make(outlet);
          }
          this._add(outlet);
        }
        return;
      }
      hash = function(outlet) {
        return [outlet.name, outlet.inout, outlet.type].join('-');
      };
      match = {};
      for (j = 0, len1 = outlets.length; j < len1; j++) {
        outlet = outlets[j];
        match[hash(outlet)] = true;
      }
      ref = this.outlets;
      for (key in ref) {
        outlet = ref[key];
        key = hash(outlet);
        if (match[key]) {
          match[key] = outlet;
        } else {
          this._remove(outlet);
        }
      }
      for (k = 0, len2 = outlets.length; k < len2; k++) {
        outlet = outlets[k];
        existing = match[hash(outlet)];
        if (existing instanceof Outlet) {
          this._morph(existing, outlet);
        } else {
          if (!(outlet instanceof Outlet)) {
            outlet = Outlet.make(outlet);
          }
          this._add(outlet);
        }
      }
      this;
    }
    return this.outlets;
  };

  Node.prototype.connect = function(node, empty, force) {
    var dest, dests, hint, hints, i, j, k, len, len1, len2, list, outlets, ref, ref1, ref2, source, sources, type, typeHint;
    outlets = {};
    hints = {};
    typeHint = function(outlet) {
      return type + '/' + outlet.hint;
    };
    ref = node.inputs;
    for (i = 0, len = ref.length; i < len; i++) {
      dest = ref[i];
      if (!force && dest.input) {
        continue;
      }
      type = dest.type;
      hint = typeHint(dest);
      if (!hints[hint]) {
        hints[hint] = dest;
      }
      outlets[type] = list = outlets[type] || [];
      list.push(dest);
    }
    sources = this.outputs;
    sources = sources.filter(function(outlet) {
      return !(empty && outlet.output.length);
    });
    ref1 = sources.slice();
    for (j = 0, len1 = ref1.length; j < len1; j++) {
      source = ref1[j];
      type = source.type;
      hint = typeHint(source);
      dests = outlets[type];
      if (dest = hints[hint]) {
        source.connect(dest);
        delete hints[hint];
        dests.splice(dests.indexOf(dest), 1);
        sources.splice(sources.indexOf(source), 1);
      }
    }
    if (!sources.length) {
      return this;
    }
    ref2 = sources.slice();
    for (k = 0, len2 = ref2.length; k < len2; k++) {
      source = ref2[k];
      type = source.type;
      dests = outlets[type];
      if (dests && dests.length) {
        source.connect(dests.shift());
      }
    }
    return this;
  };

  Node.prototype.disconnect = function(node) {
    var i, j, len, len1, outlet, ref, ref1;
    ref = this.inputs;
    for (i = 0, len = ref.length; i < len; i++) {
      outlet = ref[i];
      outlet.disconnect();
    }
    ref1 = this.outputs;
    for (j = 0, len1 = ref1.length; j < len1; j++) {
      outlet = ref1[j];
      outlet.disconnect();
    }
    return this;
  };

  Node.prototype._key = function(outlet) {
    return [outlet.name, outlet.inout].join('-');
  };

  Node.prototype._add = function(outlet) {
    var key;
    key = this._key(outlet);
    if (outlet.node) {
      throw new Error("Adding outlet to two nodes at once.");
    }
    if (this.outlets[key]) {
      throw new Error("Adding two identical outlets to same node. (" + key + ")");
    }
    outlet.node = this;
    if (outlet.inout === Graph.IN) {
      this.inputs.push(outlet);
    }
    if (outlet.inout === Graph.OUT) {
      this.outputs.push(outlet);
    }
    this.all.push(outlet);
    return this.outlets[key] = outlet;
  };

  Node.prototype._morph = function(existing, outlet) {
    var key;
    key = this._key(outlet);
    delete this.outlets[key];
    existing.morph(outlet);
    key = this._key(outlet);
    return this.outlets[key] = outlet;
  };

  Node.prototype._remove = function(outlet) {
    var inout, key;
    key = this._key(outlet);
    inout = outlet.inout;
    if (outlet.node !== this) {
      throw new Error("Removing outlet from wrong node.");
    }
    outlet.disconnect();
    outlet.node = null;
    delete this.outlets[key];
    if (outlet.inout === Graph.IN) {
      this.inputs.splice(this.inputs.indexOf(outlet), 1);
    }
    if (outlet.inout === Graph.OUT) {
      this.outputs.splice(this.outputs.indexOf(outlet), 1);
    }
    this.all.splice(this.all.indexOf(outlet), 1);
    return this;
  };

  return Node;

})();

module.exports = Node;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXEdyYXBoXFxub2RlLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcdmVuZG9yXFxzaGFkZXJncmFwaFxcc3JjXFxHcmFwaFxcbm9kZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQTs7QUFBQSxLQUFBLEdBQVMsT0FBQSxDQUFRLFNBQVI7O0FBQ1QsTUFBQSxHQUFTLE9BQUEsQ0FBUSxVQUFSOzs7QUFFVDs7OztBQUdNO0VBQ0osSUFBQyxDQUFBLEtBQUQsR0FBUTs7RUFDUixJQUFDLENBQUEsRUFBRCxHQUFLLFNBQUMsSUFBRDtXQUFVLEVBQUUsSUFBSSxDQUFDO0VBQWpCOztFQUVRLGNBQUMsS0FBRCxFQUFTLE9BQVQ7SUFBQyxJQUFDLENBQUEsUUFBRDtJQUNaLElBQUMsQ0FBQSxLQUFELEdBQVc7SUFDWCxJQUFDLENBQUEsTUFBRCxHQUFXO0lBQ1gsSUFBQyxDQUFBLE9BQUQsR0FBVztJQUNYLElBQUMsQ0FBQSxHQUFELEdBQVc7SUFDWCxJQUFDLENBQUEsT0FBRCxHQUFXO0lBQ1gsSUFBQyxDQUFBLEVBQUQsR0FBVyxJQUFJLENBQUMsRUFBTCxDQUFBO0lBRVgsSUFBQyxDQUFBLFVBQUQsQ0FBWSxPQUFaO0VBUlc7O2lCQVdiLEtBQUEsR0FBTyxTQUFDLElBQUQ7QUFDTCxRQUFBO1dBQUE7O0FBQUM7QUFBQTtXQUFBLHFDQUFBOztZQUFrQyxNQUFNLENBQUMsSUFBUCxLQUFlO3VCQUFqRDs7QUFBQTs7aUJBQUQsQ0FBd0QsQ0FBQSxDQUFBO0VBRG5EOztpQkFJUCxNQUFBLEdBQVEsU0FBQyxJQUFEO0FBQ04sUUFBQTtXQUFBOztBQUFDO0FBQUE7V0FBQSxxQ0FBQTs7WUFBbUMsTUFBTSxDQUFDLElBQVAsS0FBZTt1QkFBbEQ7O0FB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

},{"./graph":181,"./outlet":184}],184:[function(require,module,exports){
var Graph, Outlet;

Graph = require('./graph');


/*
  In/out outlet on node
 */

Outlet = (function() {
  Outlet.make = function(outlet, extra) {
    var key, meta, ref, value;
    if (extra == null) {
      extra = {};
    }
    meta = extra;
    if (outlet.meta != null) {
      ref = outlet.meta;
      for (key in ref) {
        value = ref[key];
        meta[key] = value;
      }
    }
    return new Outlet(outlet.inout, outlet.name, outlet.hint, outlet.type, meta);
  };

  Outlet.index = 0;

  Outlet.id = function(name) {
    return "_io_" + (++Outlet.index) + "_" + name;
  };

  Outlet.hint = function(name) {
    name = name.replace(/^_io_[0-9]+_/, '');
    name = name.replace(/_i_o$/, '');
    return name = name.replace(/(In|Out|Inout|InOut)$/, '');
  };

  function Outlet(inout, name1, hint, type, meta1, id) {
    this.inout = inout;
    this.name = name1;
    this.hint = hint;
    this.type = type;
    this.meta = meta1 != null ? meta1 : {};
    this.id = id;
    if (this.hint == null) {
      this.hint = Outlet.hint(this.name);
    }
    this.node = null;
    this.input = null;
    this.output = [];
    if (this.id == null) {
      this.id = Outlet.id(this.hint);
    }
  }

  Outlet.prototype.morph = function(outlet) {
    this.inout = outlet.inout;
    this.name = outlet.name;
    this.hint = outlet.hint;
    this.type = outlet.type;
    return this.meta = outlet.meta;
  };

  Outlet.prototype.dupe = function(name) {
    var outlet;
    if (name == null) {
      name = this.id;
    }
    outlet = Outlet.make(this);
    outlet.name = name;
    return outlet;
  };

  Outlet.prototype.connect = function(outlet) {
    if (this.inout === Graph.IN && outlet.inout === Graph.OUT) {
      return outlet.connect(this);
    }
    if (this.inout !== Graph.OUT || outlet.inout !== Graph.IN) {
      throw new Error("Can only connect out to in.");
    }
    if (outlet.input === this) {
      return;
    }
    outlet.disconnect();
    outlet.input = this;
    return this.output.push(outlet);
  };

  Outlet.prototype.disconnect = function(outlet) {
    var i, index, len, ref;
    if (this.input) {
      this.input.disconnect(this);
    }
    if (this.output.length) {
      if (outlet) {
        index = this.output.indexOf(outlet);
        if (index >= 0) {
          this.output.splice(index, 1);
          return outlet.input = null;
        }
      } else {
        ref = this.output;
        for (i = 0, len = ref.length; i < len; i++) {
          outlet = ref[i];
          outlet.input = null;
        }
        return this.output = [];
      }
    }
  };

  return Outlet;

})();

module.exports = Outlet;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXEdyYXBoXFxvdXRsZXQuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXEdyYXBoXFxvdXRsZXQuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUE7O0FBQUEsS0FBQSxHQUFRLE9BQUEsQ0FBUSxTQUFSOzs7QUFFUjs7OztBQUdNO0VBQ0osTUFBQyxDQUFBLElBQUQsR0FBUSxTQUFDLE1BQUQsRUFBUyxLQUFUO0FBQ04sUUFBQTs7TUFEZSxRQUFROztJQUN2QixJQUFBLEdBQU87SUFDUCxJQUFtRCxtQkFBbkQ7QUFBQTtBQUFBLFdBQUEsVUFBQTs7UUFBQSxJQUFLLENBQUEsR0FBQSxDQUFMLEdBQVk7QUFBWixPQUFBOztXQUNBLElBQUksTUFBSixDQUFXLE1BQU0sQ0FBQyxLQUFsQixFQUNXLE1BQU0sQ0FBQyxJQURsQixFQUVXLE1BQU0sQ0FBQyxJQUZsQixFQUdXLE1BQU0sQ0FBQyxJQUhsQixFQUlXLElBSlg7RUFITTs7RUFTUixNQUFDLENBQUEsS0FBRCxHQUFTOztFQUNULE1BQUMsQ0FBQSxFQUFELEdBQU0sU0FBQyxJQUFEO1dBQ0osTUFBQSxHQUFNLENBQUMsRUFBRSxNQUFNLENBQUMsS0FBVixDQUFOLEdBQXNCLEdBQXRCLEdBQXlCO0VBRHJCOztFQUdOLE1BQUMsQ0FBQSxJQUFELEdBQVEsU0FBQyxJQUFEO0lBQ04sSUFBQSxHQUFPLElBQUksQ0FBQyxPQUFMLENBQWEsY0FBYixFQUE2QixFQUE3QjtJQUNQLElBQUEsR0FBTyxJQUFJLENBQUMsT0FBTCxDQUFhLE9BQWIsRUFBc0IsRUFBdEI7V0FDUCxJQUFBLEdBQU8sSUFBSSxDQUFDLE9BQUwsQ0FBYSx1QkFBYixFQUFzQyxFQUF0QztFQUhEOztFQUtLLGdCQUFDLEtBQUQsRUFBUyxLQUFULEVBQWdCLElBQWhCLEVBQXVCLElBQXZCLEVBQThCLEtBQTlCLEVBQTBDLEVBQTFDO0lBQUMsSUFBQyxDQUFBLFFBQUQ7SUFBUSxJQUFDLENBQUEsT0FBRDtJQUFPLElBQUMsQ0FBQSxPQUFEO0lBQU8sSUFBQyxDQUFBLE9BQUQ7SUFBTyxJQUFDLENBQUEsdUJBQUQsUUFBUTtJQUFJLElBQUMsQ0FBQSxLQUFEOztNQUNyRCxJQUFDLENBQUEsT0FBUyxNQUFNLENBQUMsSUFBUCxDQUFZLElBQUMsQ0FBQSxJQUFiOztJQUVWLElBQUMsQ0FBQSxJQUFELEdBQVU7SUFDVixJQUFDLENBQUEsS0FBRCxHQUFVO0lBQ1YsSUFBQyxDQUFBLE1BQUQsR0FBVTs7TUFDVixJQUFDLENBQUEsS0FBUyxNQUFNLENBQUMsRUFBUCxDQUFVLElBQUMsQ0FBQSxJQUFYOztFQU5DOzttQkFTYixLQUFBLEdBQU8sU0FBQyxNQUFEO0lBQ0wsSUFBQyxDQUFBLEtBQUQsR0FBUyxNQUFNLENBQUM7SUFDaEIsSUFBQyxDQUFBLElBQUQsR0FBUyxNQUFNLENBQUM7SUFDaEIsSUFBQyxDQUFBLElBQUQsR0FBUyxNQUFNLENBQUM7SUFDaEIsSUFBQyxDQUFBLElBQUQsR0FBUyxNQUFNLENBQUM7V0FDaEIsSUFBQyxDQUFBLElBQUQsR0FBUyxNQUFNLENBQUM7RUFMWDs7bUJBUVAsSUFBQSxHQUFNLFNBQUMsSUFBRDtBQUNKLFFBQUE7O01BREssT0FBTyxJQUFDLENBQUE7O0lBQ2IsTUFBQSxHQUFTLE1BQU0sQ0FBQyxJQUFQLENBQVksSUFBWjtJQUNULE1BQU0sQ0FBQyxJQUFQLEdBQWM7V0FDZDtFQUhJOzttQkFNTixPQUFBLEdBQVMsU0FBQyxNQUFEO0lBR1AsSUFBRyxJQUFDLENBQUEsS0FBRCxLQUFVLEtBQUssQ0FBQyxFQUFoQixJQUF1QixNQUFNLENBQUMsS0FBUCxLQUFnQixLQUFLLENBQUMsR0FBaEQ7QUFDRSxhQUFPLE1BQU0sQ0FBQyxPQUFQLENBQWUsSUFBZixFQURUOztJQUlBLElBQUcsSUFBQyxDQUFBLEtBQUQsS0FBVSxLQUFLLENBQUMsR0FBaEIsSUFBdUIsTUFBTSxDQUFDLEtBQVAsS0FBZ0IsS0FBSyxDQUFDLEVBQWhEO0FBQ0UsWUFBTSxJQUFJLEtBQUosQ0FBVSw2QkFBVixFQURSOztJQUlBLElBQVUsTUFBTSxDQUFDLEtBQVAsS0FBZ0IsSUFBMUI7QUFBQSxhQUFBOztJQUdBLE1BQU0sQ0FBQyxVQUFQLENBQUE7SUFHQSxNQUFNLENBQUMsS0FBUCxHQUFlO1dBQ2YsSUFBQyxDQUFBLE1BQU0sQ0FBQyxJQUFSLENBQWEsTUFBYjtFQWxCTzs7bUJBcUJULFVBQUEsR0FBWSxTQUFDLE1BQUQ7QUFFVixRQUFBO0lBQUEsSUFBRyxJQUFDLENBQUEsS0FBSjtNQUNFLElBQUMsQ0FBQSxLQUFLLENBQUMsVUFBUCxDQUFrQixJQUFsQixFQURGOztJQUdBLElBQUcsSUFBQyxDQUFBLE1BQU0sQ0FBQyxNQUFYO01BRUUsSUFBRyxNQUFIO1FBRUUsS0FBQSxHQUFRLElBQUMsQ0FBQSxNQUFNLENBQUMsT0FBUixDQUFnQixNQUFoQjtRQUNSLElBQUcsS0FBQSxJQUFTLENBQVo7VUFDRSxJQUFDLENBQUEsTUFBTSxDQUFDLE1BQVIsQ0FBZSxLQUFmLEVBQXNCLENBQXRCO2lCQUNBLE1BQU0sQ0FBQyxLQUFQLEdBQWUsS0FGakI7U0FIRjtPQUFBLE1BQUE7QUFTRTtBQUFBLGFBQUEscUNBQUE7O1VBQUEsTUFBTSxDQUFDLEtBQVAsR0FBZTtBQUFmO2VBQ0EsSUFBQyxDQUFBLE1BQUQsR0FBVSxHQVZaO09BRkY7O0VBTFU7Ozs7OztBQW1CZCxNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"./graph":181}],185:[function(require,module,exports){
var Block, Graph, Layout, OutletError, Program, debug;

Graph = require('../graph');

Program = require('../linker').Program;

Layout = require('../linker').Layout;

debug = false;

Block = (function() {
  Block.previous = function(outlet) {
    var ref;
    return (ref = outlet.input) != null ? ref.node.owner : void 0;
  };

  function Block() {
    var ref;
    if (this.namespace == null) {
      this.namespace = Program.entry();
    }
    this.node = new Graph.Node(this, (ref = typeof this.makeOutlets === "function" ? this.makeOutlets() : void 0) != null ? ref : {});
  }

  Block.prototype.refresh = function() {
    var ref;
    return this.node.setOutlets((ref = typeof this.makeOutlets === "function" ? this.makeOutlets() : void 0) != null ? ref : {});
  };

  Block.prototype.clone = function() {
    return new Block;
  };

  Block.prototype.compile = function(language, namespace) {
    var program;
    program = new Program(language, namespace != null ? namespace : Program.entry(), this.node.graph);
    this.call(program, 0);
    return program.assemble();
  };

  Block.prototype.link = function(language, namespace) {
    var layout, module;
    module = this.compile(language, namespace);
    layout = new Layout(language, this.node.graph);
    this._include(module, layout, 0);
    this["export"](layout, 0);
    return layout.link(module);
  };

  Block.prototype.call = function(program, depth) {};

  Block.prototype.callback = function(layout, depth, name, external, outlet) {};

  Block.prototype["export"] = function(layout, depth) {};

  Block.prototype._info = function(suffix) {
    var ref, ref1, string;
    string = (ref = (ref1 = this.node.owner.snippet) != null ? ref1._name : void 0) != null ? ref : this.node.owner.namespace;
    if (suffix != null) {
      return string += '.' + suffix;
    }
  };

  Block.prototype._outlet = function(def, props) {
    var outlet;
    outlet = Graph.Outlet.make(def, props);
    outlet.meta.def = def;
    return outlet;
  };

  Block.prototype._call = function(module, program, depth) {
    return program.call(this.node, module, depth);
  };

  Block.prototype._require = function(module, program) {
    return program.require(this.node, module);
  };

  Block.prototype._inputs = function(module, program, depth) {
    var arg, i, len, outlet, ref, ref1, results;
    ref = module.main.signature;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      arg = ref[i];
      outlet = this.node.get(arg.name);
      results.push((ref1 = Block.previous(outlet)) != null ? ref1.call(program, depth + 1) : void 0);
    }
    return results;
  };

  Block.prototype._callback = function(module, layout, depth, name, external, outlet) {
    return layout.callback(this.node, module, depth, name, external, outlet);
  };

  Block.prototype._include = function(module, layout, depth) {
    return layout.include(this.node, module, depth);
  };

  Block.prototype._link = function(module, layout, depth) {
    var block, ext, i, key, len, orig, outlet, parent, ref, ref1, ref2, results;
    debug && console.log('block::_link', this.toString(), module.namespace);
    ref = module.symbols;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      key = ref[i];
      ext = module.externals[key];
      outlet = this.node.get(ext.name);
      if (!outlet) {
        throw new OutletError("External not found on " + (this._info(ext.name)));
      }
      if (outlet.meta.child != null) {
        continue;
      }
      ref1 = [outlet, outlet, null], orig = ref1[0], parent = ref1[1], block = ref1[2];
      while (!block && parent) {
        ref2 = [outlet.meta.parent, parent], parent = ref2[0], outlet = ref2[1];
      }
      block = Block.previous(outlet);
      if (!block) {
        throw new OutletError("Missing connection on " + (this._info(ext.name)));
      }
      debug && console.log('callback -> ', this.toString(), ext.name, outlet);
      block.callback(layout, depth + 1, key, ext, outlet.input);
      results.push(block != null ? block["export"](layout, depth + 1) : void 0);
    }
    return results;
  };

  Block.prototype._trace = function(module, layout, depth) {
    var arg, i, len, outlet, ref, ref1, results;
    debug && console.log('block::_trace', this.toString(), module.namespace);
    ref = module.main.signature;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      arg = ref[i];
      outlet = this.node.get(arg.name);
      results.push((ref1 = Block.previous(outlet)) != null ? ref1["export"](layout, depth + 1) : void 0);
    }
    return results;
  };

  return Block;

})();

OutletError = function(message) {
  var e;
  e = new Error(message);
  e.name = 'OutletError';
  return e;
};

OutletError.prototype = new Error;

module.exports = Block;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGJsb2NrXFxibG9jay5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHZlbmRvclxcc2hhZGVyZ3JhcGhcXHNyY1xcYmxvY2tcXGJsb2NrLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBOztBQUFBLEtBQUEsR0FBVSxPQUFBLENBQVEsVUFBUjs7QUFDVixPQUFBLEdBQVUsT0FBQSxDQUFRLFdBQVIsQ0FBb0IsQ0FBQzs7QUFDL0IsTUFBQSxHQUFVLE9BQUEsQ0FBUSxXQUFSLENBQW9CLENBQUM7O0FBRS9CLEtBQUEsR0FBUTs7QUFFRjtFQUNKLEtBQUMsQ0FBQSxRQUFELEdBQVksU0FBQyxNQUFEO0FBQVksUUFBQTs2Q0FBWSxDQUFFLElBQUksQ0FBQztFQUEvQjs7RUFFQyxlQUFBO0FBQ1gsUUFBQTs7TUFBQSxJQUFDLENBQUEsWUFBYSxPQUFPLENBQUMsS0FBUixDQUFBOztJQUNkLElBQUMsQ0FBQSxJQUFELEdBQWMsSUFBSSxLQUFLLENBQUMsSUFBVixDQUFlLElBQWYsK0ZBQW9DLEVBQXBDO0VBRkg7O2tCQUliLE9BQUEsR0FBUyxTQUFBO0FBQ1AsUUFBQTtXQUFBLElBQUMsQ0FBQSxJQUFJLENBQUMsVUFBTiw4RkFBbUMsRUFBbkM7RUFETzs7a0JBR1QsS0FBQSxHQUFPLFNBQUE7V0FDTCxJQUFJO0VBREM7O2tCQUlQLE9BQUEsR0FBUyxTQUFDLFFBQUQsRUFBVyxTQUFYO0FBQ1AsUUFBQTtJQUFBLE9BQUEsR0FBVSxJQUFJLE9BQUosQ0FBWSxRQUFaLHNCQUFzQixZQUFZLE9BQU8sQ0FBQyxLQUFSLENBQUEsQ0FBbEMsRUFBbUQsSUFBQyxDQUFBLElBQUksQ0FBQyxLQUF6RDtJQUNWLElBQUMsQ0FBQSxJQUFELENBQU0sT0FBTixFQUFlLENBQWY7V0FDQSxPQUFPLENBQUMsUUFBUixDQUFBO0VBSE87O2tCQU1ULElBQUEsR0FBTSxTQUFDLFFBQUQsRUFBVyxTQUFYO0FBQ0osUUFBQTtJQUFBLE1BQUEsR0FBUyxJQUFDLENBQUEsT0FBRCxDQUFTLFFBQVQsRUFBbUIsU0FBbkI7SUFFVCxNQUFBLEdBQVMsSUFBSSxNQUFKLENBQVcsUUFBWCxFQUFxQixJQUFDLENBQUEsSUFBSSxDQUFDLEtBQTNCO0lBQ1QsSUFBQyxDQUFBLFFBQUQsQ0FBVSxNQUFWLEVBQWtCLE1BQWxCLEVBQTBCLENBQTFCO0lBQ0EsSUFBQyxFQUFBLE1BQUEsRUFBRCxDQUFVLE1BQVYsRUFBa0IsQ0FBbEI7V0FDQSxNQUFNLENBQUMsSUFBUCxDQUFZLE1BQVo7RUFOSTs7a0JBU04sSUFBQSxHQUFVLFNBQUMsT0FBRCxFQUFVLEtBQVYsR0FBQTs7a0JBQ1YsUUFBQSxHQUFVLFNBQUMsTUFBRCxFQUFTLEtBQVQsRUFBZ0IsSUFBaEIsRUFBc0IsUUFBdEIsRUFBZ0MsTUFBaEMsR0FBQTs7bUJBQ1YsUUFBQSxHQUFVLFNBQUMsTUFBRCxFQUFTLEtBQVQsR0FBQTs7a0JBR1YsS0FBQSxHQUFPLFNBQUMsTUFBRDtBQUNMLFFBQUE7SUFBQSxNQUFBLDBGQUFzQyxJQUFDLENBQUEsSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNsRCxJQUEwQixjQUExQjthQUFBLE1BQUEsSUFBVSxHQUFBLEdBQU0sT0FBaEI7O0VBRks7O2tCQUtQLE9BQUEsR0FBUyxTQUFDLEdBQUQsRUFBTSxLQUFOO0FBQ1AsUUFBQTtJQUFBLE1BQUEsR0FBUyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQWIsQ0FBa0IsR0FBbEIsRUFBdUIsS0FBdkI7SUFDVCxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQVosR0FBa0I7V0FDbEI7RUFITzs7a0JBTVQsS0FBQSxHQUFPLFNBQUMsTUFBRCxFQUFTLE9BQVQsRUFBa0IsS0FBbEI7V0FDTCxPQUFPLENBQUMsSUFBUixDQUFhLElBQUMsQ0FBQSxJQUFkLEVBQW9CLE1BQXBCLEVBQTRCLEtBQTVCO0VBREs7O2tCQUlQLFFBQUEsR0FBVSxTQUFDLE1BQUQsRUFBUyxPQUFUO1dBQ1IsT0FBTyxDQUFDLE9BQVIsQ0FBZ0IsSUFBQyxDQUFBLElBQWpCLEVBQXVCLE1BQXZCO0VBRFE7O2tCQUlWLE9BQUEsR0FBUyxTQUFDLE1BQUQsRUFBUyxPQUFULEVBQWtCLEtBQWxCO0FBQ1AsUUFBQTtBQUFBO0FBQUE7U0FBQSxxQ0FBQTs7TUFDRSxNQUFBLEdBQVMsSUFBQyxDQUFBLElBQUksQ0FBQyxHQUFOLENBQVUsR0FBRyxDQUFDLElBQWQ7aUVBQ2EsQ0FBRSxJQUF4QixDQUE2QixPQUE3QixFQUFzQyxLQUFBLEdBQVEsQ0FBOUM7QUFGRjs7RUFETzs7a0JBTVQsU0FBQSxHQUFXLFNBQUMsTUFBRCxFQUFTLE1BQVQsRUFBaUIsS0FBakIsRUFBd0IsSUFBeEIsRUFBOEIsUUFBOUIsRUFBd0MsTUFBeEM7V0FDVCxNQUFNLENBQUMsUUFBUCxDQUFnQixJQUFDLENBQUEsSUFBakIsRUFBdUIsTUFBdkIsRUFBK0IsS0FBL0IsRUFBc0MsSUFBdEMsRUFBNEMsUUFBNUMsRUFBc0QsTUFBdEQ7RUFEUzs7a0JBSVgsUUFBQSxHQUFVLFNBQUMsTUFBRCxFQUFTLE1BQVQsRUFBaUIsS0FBakI7V0FDUixNQUFNLENBQUMsT0FBUCxDQUFlLElBQUMsQ0FBQSxJQUFoQixFQUFzQixNQUF0QixFQUE4QixLQUE5QjtFQURROztrQkFJVixLQUFBLEdBQU8sU0FBQyxNQUFELEVBQVMsTUFBVCxFQUFpQixLQUFqQjtBQUNMLFFBQUE7SUFBQSxLQUFBLElBQVMsT0FBTyxDQUFDLEdBQVIsQ0FBWSxjQUFaLEVBQTRCLElBQUMsQ0FBQyxRQUFGLENBQUEsQ0FBNUIsRUFBMEMsTUFBTSxDQUFDLFNBQWpEO0FBQ1Q7QUFBQTtTQUFBLHFDQUFBOztNQUNFLEdBQUEsR0FBTSxNQUFNLENBQUMsU0FBVSxDQUFBLEdBQUE7TUFDdkIsTUFBQSxHQUFTLElBQUMsQ0FBQSxJQUFJLENBQUMsR0FBTixDQUFVLEdBQUcsQ0FBQyxJQUFkO01BQ1QsSUFBcUUsQ0FBQyxNQUF0RTtBQUFBLGNBQU0sSUFBSSxXQUFKLENBQWdCLHdCQUFBLEdBQXdCLENBQUMsSUFBQyxDQUFBLEtBQUQsQ0FBTyxHQUFHLENBQUMsSUFBWCxDQUFELENBQXhDLEVBQU47O01BRUEsSUFBWSx5QkFBWjtBQUFBLGlCQUFBOztNQUVBLE9BQXdCLENBQUMsTUFBRCxFQUFTLE1BQVQsRUFBaUIsSUFBakIsQ0FBeEIsRUFBQyxjQUFELEVBQU8sZ0JBQVAsRUFBZTtBQUNmLGFBQU0sQ0FBQyxLQUFELElBQVcsTUFBakI7UUFDRSxPQUFtQixDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBYixFQUFxQixNQUFyQixDQUFuQixFQUFDLGdCQUFELEVBQVM7TUFEWDtNQUdBLEtBQUEsR0FBUyxLQUFLLENBQUMsUUFBTixDQUFlLE1BQWY7TUFDVCxJQUFxRSxDQUFDLEtBQXRFO0FBQUEsY0FBTSxJQUFJLFdBQUosQ0FBZ0Isd0JBQUEsR0FBd0IsQ0FBQyxJQUFDLENBQUEsS0FBRCxDQUFPLEdBQUcsQ0FBQyxJQUFYLENBQUQsQ0FBeEMsRUFBTjs7TUFFQSxLQUFBLElBQVMsT0FBTyxDQUFDLEdBQVIsQ0FBWSxjQUFaLEVBQTRCLElBQUMsQ0FBQyxRQUFGLENBQUEsQ0FBNUIsRUFBMEMsR0FBRyxDQUFDLElBQTlDLEVBQW9ELE1BQXBEO01BQ1QsS0FBSyxDQUFDLFFBQU4sQ0FBZSxNQUFmLEVBQXVCLEtBQUEsR0FBUSxDQUEvQixFQUFrQyxHQUFsQyxFQUF1QyxHQUF2QyxFQUE0QyxNQUFNLENBQUMsS0FBbkQ7bUNBQ0EsS0FBSyxFQUFFLE1BQUYsRUFBTCxDQUFjLE1BQWQsRUFBc0IsS0FBQSxHQUFRLENBQTlCO0FBaEJGOztFQUZLOztrQkFxQlAsTUFBQSxHQUFRLFNBQUMsTUFBRCxFQUFTLE1BQVQsRUFBaUIsS0FBakI7QUFDTixRQUFBO0lBQUEsS0FBQSxJQUFTLE9BQU8sQ0FBQyxHQUFSLENBQVksZUFBWixFQUE2QixJQUFDLENBQUMsUUFBRixDQUFBLENBQTdCLEVBQTJDLE1BQU0sQ0FBQyxTQUFsRDtBQUNUO0FBQUE7U0FBQSxxQ0FBQTs7TUFDRSxNQUFBLEdBQVMsSUFBQyxDQUFBLElBQUksQ0FBQyxHQUFOLENBQVUsR0FBRyxDQUFDLElBQWQ7aUVBQ2EsRUFBRSxNQUFGLEVBQXRCLENBQStCLE1BQS9CLEVBQXVDLEtBQUEsR0FBUSxDQUEvQztBQUZGOztFQUZNOzs7Ozs7QUFNVixXQUFBLEdBQWMsU0FBQyxPQUFEO0FBQ1osTUFBQTtFQUFBLENBQUEsR0FBSSxJQUFJLEtBQUosQ0FBVSxPQUFWO0VBQ0osQ0FBQyxDQUFDLElBQUYsR0FBUztTQUNUO0FBSFk7O0FBS2QsV0FBVyxDQUFDLFNBQVosR0FBd0IsSUFBSTs7QUFFNUIsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"../graph":205,"../linker":210}],186:[function(require,module,exports){
var Block, Call,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Block = require('./block');

Call = (function(superClass) {
  extend(Call, superClass);

  function Call(snippet) {
    this.snippet = snippet;
    this.namespace = this.snippet.namespace;
    Call.__super__.constructor.apply(this, arguments);
  }

  Call.prototype.clone = function() {
    return new Call(this.snippet);
  };

  Call.prototype.makeOutlets = function() {
    var callbacks, externals, key, main, outlet, params, symbols;
    main = this.snippet.main.signature;
    externals = this.snippet.externals;
    symbols = this.snippet.symbols;
    params = (function() {
      var i, len, results;
      results = [];
      for (i = 0, len = main.length; i < len; i++) {
        outlet = main[i];
        results.push(this._outlet(outlet, {
          callback: false
        }));
      }
      return results;
    }).call(this);
    callbacks = (function() {
      var i, len, results;
      results = [];
      for (i = 0, len = symbols.length; i < len; i++) {
        key = symbols[i];
        results.push(this._outlet(externals[key], {
          callback: true
        }));
      }
      return results;
    }).call(this);
    return params.concat(callbacks);
  };

  Call.prototype.call = function(program, depth) {
    this._call(this.snippet, program, depth);
    return this._inputs(this.snippet, program, depth);
  };

  Call.prototype["export"] = function(layout, depth) {
    if (!layout.visit(this.namespace, depth)) {
      return;
    }
    this._link(this.snippet, layout, depth);
    return this._trace(this.snippet, layout, depth);
  };

  return Call;

})(Block);

module.exports = Call;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGJsb2NrXFxjYWxsLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcdmVuZG9yXFxzaGFkZXJncmFwaFxcc3JjXFxibG9ja1xcY2FsbC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxXQUFBO0VBQUE7OztBQUFBLEtBQUEsR0FBVSxPQUFBLENBQVEsU0FBUjs7QUFFSjs7O0VBQ1MsY0FBQyxPQUFEO0lBQUMsSUFBQyxDQUFBLFVBQUQ7SUFDWixJQUFDLENBQUEsU0FBRCxHQUFhLElBQUMsQ0FBQSxPQUFPLENBQUM7SUFDdEIsdUNBQUEsU0FBQTtFQUZXOztpQkFJYixLQUFBLEdBQU8sU0FBQTtXQUNMLElBQUksSUFBSixDQUFTLElBQUMsQ0FBQSxPQUFWO0VBREs7O2lCQUdQLFdBQUEsR0FBYSxTQUFBO0FBQ1gsUUFBQTtJQUFBLElBQUEsR0FBWSxJQUFDLENBQUEsT0FBTyxDQUFDLElBQUksQ0FBQztJQUMxQixTQUFBLEdBQVksSUFBQyxDQUFBLE9BQU8sQ0FBQztJQUNyQixPQUFBLEdBQVksSUFBQyxDQUFBLE9BQU8sQ0FBQztJQUVyQixNQUFBOztBQUFhO1dBQUEsc0NBQUE7O3FCQUFBLElBQUMsQ0FBQSxPQUFELENBQVMsTUFBVCxFQUF5QjtVQUFBLFFBQUEsRUFBVSxLQUFWO1NBQXpCO0FBQUE7OztJQUNiLFNBQUE7O0FBQWE7V0FBQSx5Q0FBQTs7cUJBQUEsSUFBQyxDQUFBLE9BQUQsQ0FBUyxTQUFVLENBQUEsR0FBQSxDQUFuQixFQUF5QjtVQUFBLFFBQUEsRUFBVSxJQUFWO1NBQXpCO0FBQUE7OztXQUViLE1BQU0sQ0FBQyxNQUFQLENBQWMsU0FBZDtFQVJXOztpQkFVYixJQUFBLEdBQU0sU0FBQyxPQUFELEVBQVUsS0FBVjtJQUNKLElBQUMsQ0FBQSxLQUFELENBQVMsSUFBQyxDQUFBLE9BQVYsRUFBbUIsT0FBbkIsRUFBNEIsS0FBNUI7V0FDQSxJQUFDLENBQUEsT0FBRCxDQUFTLElBQUMsQ0FBQSxPQUFWLEVBQW1CLE9BQW5CLEVBQTRCLEtBQTVCO0VBRkk7O2tCQUlOLFFBQUEsR0FBUSxTQUFDLE1BQUQsRUFBUyxLQUFUO0lBQ04sSUFBQSxDQUFjLE1BQU0sQ0FBQyxLQUFQLENBQWEsSUFBQyxDQUFBLFNBQWQsRUFBeUIsS0FBekIsQ0FBZDtBQUFBLGFBQUE7O0lBRUEsSUFBQyxDQUFBLEtBQUQsQ0FBUyxJQUFDLENBQUEsT0FBVixFQUFtQixNQUFuQixFQUEyQixLQUEzQjtXQUNBLElBQUMsQ0FBQSxNQUFELENBQVMsSUFBQyxDQUFBLE9BQVYsRUFBbUIsTUFBbkIsRUFBMkIsS0FBM0I7RUFKTTs7OztHQXRCUzs7QUE0Qm5CLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{"./block":185}],187:[function(require,module,exports){
var Block, Callback, Graph,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Graph = require('../graph');

Block = require('./block');


/*
  Re-use a subgraph as a callback
 */

Callback = (function(superClass) {
  extend(Callback, superClass);

  function Callback(graph) {
    this.graph = graph;
    Callback.__super__.constructor.apply(this, arguments);
  }

  Callback.prototype.refresh = function() {
    Callback.__super__.refresh.apply(this, arguments);
    return delete this.subroutine;
  };

  Callback.prototype.clone = function() {
    return new Callback(this.graph);
  };

  Callback.prototype.makeOutlets = function() {
    var handle, i, ins, j, len, len1, outlet, outlets, outs, ref, ref1, type;
    this.make();
    outlets = [];
    ins = [];
    outs = [];
    handle = (function(_this) {
      return function(outlet, list) {
        var base, dupe;
        if (outlet.meta.callback) {
          if (outlet.inout === Graph.IN) {
            dupe = outlet.dupe();
            if ((base = dupe.meta).child == null) {
              base.child = outlet;
            }
            outlet.meta.parent = dupe;
            return outlets.push(dupe);
          }
        } else {
          return list.push(outlet.type);
        }
      };
    })(this);
    ref = this.graph.inputs();
    for (i = 0, len = ref.length; i < len; i++) {
      outlet = ref[i];
      handle(outlet, ins);
    }
    ref1 = this.graph.outputs();
    for (j = 0, len1 = ref1.length; j < len1; j++) {
      outlet = ref1[j];
      handle(outlet, outs);
    }
    ins = ins.join(',');
    outs = outs.join(',');
    type = "(" + ins + ")(" + outs + ")";
    outlets.push({
      name: 'callback',
      type: type,
      inout: Graph.OUT,
      meta: {
        callback: true,
        def: this.subroutine.main
      }
    });
    return outlets;
  };

  Callback.prototype.make = function() {
    return this.subroutine = this.graph.compile(this.namespace);
  };

  Callback.prototype["export"] = function(layout, depth) {
    if (!layout.visit(this.namespace, depth)) {
      return;
    }
    this._link(this.subroutine, layout, depth);
    return this.graph["export"](layout, depth);
  };

  Callback.prototype.call = function(program, depth) {
    return this._require(this.subroutine, program, depth);
  };

  Callback.prototype.callback = function(layout, depth, name, external, outlet) {
    this._include(this.subroutine, layout, depth);
    return this._callback(this.subroutine, layout, depth, name, external, outlet);
  };

  return Callback;

})(Block);

module.exports = Callback;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGJsb2NrXFxjYWxsYmFjay5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHZlbmRvclxcc2hhZGVyZ3JhcGhcXHNyY1xcYmxvY2tcXGNhbGxiYWNrLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLHNCQUFBO0VBQUE7OztBQUFBLEtBQUEsR0FBVSxPQUFBLENBQVEsVUFBUjs7QUFDVixLQUFBLEdBQVUsT0FBQSxDQUFRLFNBQVI7OztBQUVWOzs7O0FBR007OztFQUNTLGtCQUFDLEtBQUQ7SUFBQyxJQUFDLENBQUEsUUFBRDtJQUNaLDJDQUFBLFNBQUE7RUFEVzs7cUJBR2IsT0FBQSxHQUFTLFNBQUE7SUFDUCx1Q0FBQSxTQUFBO1dBQ0EsT0FBTyxJQUFDLENBQUE7RUFGRDs7cUJBSVQsS0FBQSxHQUFPLFNBQUE7V0FDTCxJQUFJLFFBQUosQ0FBYSxJQUFDLENBQUEsS0FBZDtFQURLOztxQkFHUCxXQUFBLEdBQWEsU0FBQTtBQUNYLFFBQUE7SUFBQSxJQUFDLENBQUEsSUFBRCxDQUFBO0lBRUEsT0FBQSxHQUFVO0lBQ1YsR0FBQSxHQUFVO0lBQ1YsSUFBQSxHQUFVO0lBSVYsTUFBQSxHQUFTLENBQUEsU0FBQSxLQUFBO2FBQUEsU0FBQyxNQUFELEVBQVMsSUFBVDtBQUNQLFlBQUE7UUFBQSxJQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBZjtVQUNFLElBQUcsTUFBTSxDQUFDLEtBQVAsS0FBZ0IsS0FBSyxDQUFDLEVBQXpCO1lBRUUsSUFBQSxHQUFPLE1BQU0sQ0FBQyxJQUFQLENBQUE7O2tCQUNJLENBQUMsUUFBUzs7WUFDckIsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFaLEdBQXFCO21CQUVyQixPQUFPLENBQUMsSUFBUixDQUFhLElBQWIsRUFORjtXQURGO1NBQUEsTUFBQTtpQkFTRSxJQUFJLENBQUMsSUFBTCxDQUFVLE1BQU0sQ0FBQyxJQUFqQixFQVRGOztNQURPO0lBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQTtBQVlUO0FBQUEsU0FBQSxxQ0FBQTs7TUFBQSxNQUFBLENBQU8sTUFBUCxFQUFlLEdBQWY7QUFBQTtBQUNBO0FBQUEsU0FBQSx3Q0FBQTs7TUFBQSxNQUFBLENBQU8sTUFBUCxFQUFlLElBQWY7QUFBQTtJQUdBLEdBQUEsR0FBTyxHQUFHLENBQUMsSUFBSixDQUFVLEdBQVY7SUFDUCxJQUFBLEdBQU8sSUFBSSxDQUFDLElBQUwsQ0FBVSxHQUFWO0lBQ1AsSUFBQSxHQUFPLEdBQUEsR0FBSSxHQUFKLEdBQVEsSUFBUixHQUFZLElBQVosR0FBaUI7SUFFeEIsT0FBTyxDQUFDLElBQVIsQ0FDRTtNQUFBLElBQUEsRUFBTyxVQUFQO01BQ0EsSUFBQSxFQUFPLElBRFA7TUFFQSxLQUFBLEVBQU8sS0FBSyxDQUFDLEdBRmI7TUFHQSxJQUFBLEVBQ0U7UUFBQSxRQUFBLEVBQVUsSUFBVjtRQUNBLEdBQUEsRUFBSyxJQUFDLENBQUEsVUFBVSxDQUFDLElBRGpCO09BSkY7S0FERjtXQVFBO0VBckNXOztxQkF1Q2IsSUFBQSxHQUFNLFNBQUE7V0FDSixJQUFDLENBQUEsVUFBRCxHQUFjLElBQUMsQ0FBQSxLQUFLLENBQUMsT0FBUCxDQUFlLElBQUMsQ0FBQSxTQUFoQjtFQURWOztzQkFHTixRQUFBLEdBQVEsU0FBQyxNQUFELEVBQVMsS0FBVDtJQUNOLElBQUEsQ0FBYyxNQUFNLENBQUMsS0FBUCxDQUFhLElBQUMsQ0FBQSxTQUFkLEVBQXlCLEtBQXpCLENBQWQ7QUFBQSxhQUFBOztJQUVBLElBQUMsQ0FBQSxLQUFELENBQVcsSUFBQyxDQUFBLFVBQVosRUFBd0IsTUFBeEIsRUFBZ0MsS0FBaEM7V0FDQSxJQUFDLENBQUEsS0FBSyxFQUFDLE1BQUQsRUFBTixDQUFjLE1BQWQsRUFBc0IsS0FBdEI7RUFKTTs7cUJBTVIsSUFBQSxHQUFNLFNBQUMsT0FBRCxFQUFVLEtBQVY7V0FDSixJQUFDLENBQUEsUUFBRCxDQUFXLElBQUMsQ0FBQSxVQUFaLEVBQXdCLE9BQXhCLEVBQWlDLEtBQWpDO0VBREk7O3FCQUdOLFFBQUEsR0FBVSxTQUFDLE1BQUQsRUFBUyxLQUFULEVBQWdCLElBQWhCLEVBQXNCLFFBQXRCLEVBQWdDLE1BQWhDO0lBQ1IsSUFBQyxDQUFBLFFBQUQsQ0FBVyxJQUFDLENBQUEsVUFBWixFQUF3QixNQUF4QixFQUFnQyxLQUFoQztXQUNBLElBQUMsQ0FBQSxTQUFELENBQVcsSUFBQyxDQUFBLFVBQVosRUFBd0IsTUFBeEIsRUFBZ0MsS0FBaEMsRUFBdUMsSUFBdkMsRUFBNkMsUUFBN0MsRUFBdUQsTUFBdkQ7RUFGUTs7OztHQTlEVzs7QUFrRXZCLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{"../graph":205,"./block":185}],188:[function(require,module,exports){
exports.Block = require('./block');

exports.Call = require('./call');

exports.Callback = require('./callback');

exports.Isolate = require('./isolate');

exports.Join = require('./join');

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGJsb2NrXFxpbmRleC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHZlbmRvclxcc2hhZGVyZ3JhcGhcXHNyY1xcYmxvY2tcXGluZGV4LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLENBQUMsS0FBUixHQUFtQixPQUFBLENBQVEsU0FBUjs7QUFDbkIsT0FBTyxDQUFDLElBQVIsR0FBbUIsT0FBQSxDQUFRLFFBQVI7O0FBQ25CLE9BQU8sQ0FBQyxRQUFSLEdBQW1CLE9BQUEsQ0FBUSxZQUFSOztBQUNuQixPQUFPLENBQUMsT0FBUixHQUFtQixPQUFBLENBQVEsV0FBUjs7QUFDbkIsT0FBTyxDQUFDLElBQVIsR0FBbUIsT0FBQSxDQUFRLFFBQVIifQ==

},{"./block":185,"./call":186,"./callback":187,"./isolate":189,"./join":190}],189:[function(require,module,exports){
var Block, Graph, Isolate,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Graph = require('../graph');

Block = require('./block');


/*
  Isolate a subgraph as a single node
 */

Isolate = (function(superClass) {
  extend(Isolate, superClass);

  function Isolate(graph) {
    this.graph = graph;
    Isolate.__super__.constructor.apply(this, arguments);
  }

  Isolate.prototype.refresh = function() {
    Isolate.__super__.refresh.apply(this, arguments);
    return delete this.subroutine;
  };

  Isolate.prototype.clone = function() {
    return new Isolate(this.graph);
  };

  Isolate.prototype.makeOutlets = function() {
    var base, done, dupe, i, j, len, len1, name, outlet, outlets, ref, ref1, ref2, seen, set;
    this.make();
    outlets = [];
    seen = {};
    done = {};
    ref = ['inputs', 'outputs'];
    for (i = 0, len = ref.length; i < len; i++) {
      set = ref[i];
      ref1 = this.graph[set]();
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        outlet = ref1[j];
        name = void 0;
        if (((ref2 = outlet.hint) === 'return' || ref2 === 'callback') && outlet.inout === Graph.OUT) {
          name = outlet.hint;
        }
        if (seen[name] != null) {
          name = void 0;
        }
        dupe = outlet.dupe(name);
        if ((base = dupe.meta).child == null) {
          base.child = outlet;
        }
        outlet.meta.parent = dupe;
        if (name != null) {
          seen[name] = true;
        }
        done[outlet.name] = dupe;
        outlets.push(dupe);
      }
    }
    return outlets;
  };

  Isolate.prototype.make = function() {
    return this.subroutine = this.graph.compile(this.namespace);
  };

  Isolate.prototype.call = function(program, depth) {
    this._call(this.subroutine, program, depth);
    return this._inputs(this.subroutine, program, depth);
  };

  Isolate.prototype["export"] = function(layout, depth) {
    if (!layout.visit(this.namespace, depth)) {
      return;
    }
    this._link(this.subroutine, layout, depth);
    this._trace(this.subroutine, layout, depth);
    return this.graph["export"](layout, depth);
  };

  Isolate.prototype.callback = function(layout, depth, name, external, outlet) {
    outlet = outlet.meta.child;
    return outlet.node.owner.callback(layout, depth, name, external, outlet);
  };

  return Isolate;

})(Block);

module.exports = Isolate;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGJsb2NrXFxpc29sYXRlLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcdmVuZG9yXFxzaGFkZXJncmFwaFxcc3JjXFxibG9ja1xcaXNvbGF0ZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxxQkFBQTtFQUFBOzs7QUFBQSxLQUFBLEdBQVUsT0FBQSxDQUFRLFVBQVI7O0FBQ1YsS0FBQSxHQUFVLE9BQUEsQ0FBUSxTQUFSOzs7QUFFVjs7OztBQUdNOzs7RUFDUyxpQkFBQyxLQUFEO0lBQUMsSUFBQyxDQUFBLFFBQUQ7SUFDWiwwQ0FBQSxTQUFBO0VBRFc7O29CQUdiLE9BQUEsR0FBUyxTQUFBO0lBQ1Asc0NBQUEsU0FBQTtXQUNBLE9BQU8sSUFBQyxDQUFBO0VBRkQ7O29CQUlULEtBQUEsR0FBTyxTQUFBO1dBQ0wsSUFBSSxPQUFKLENBQVksSUFBQyxDQUFBLEtBQWI7RUFESzs7b0JBR1AsV0FBQSxHQUFhLFNBQUE7QUFDWCxRQUFBO0lBQUEsSUFBQyxDQUFBLElBQUQsQ0FBQTtJQUVBLE9BQUEsR0FBVTtJQUVWLElBQUEsR0FBTztJQUNQLElBQUEsR0FBTztBQUNQO0FBQUEsU0FBQSxxQ0FBQTs7QUFDRTtBQUFBLFdBQUEsd0NBQUE7O1FBRUUsSUFBQSxHQUFPO1FBQ1AsSUFBc0IsU0FBQSxNQUFNLENBQUMsS0FBUCxLQUFnQixRQUFoQixJQUFBLElBQUEsS0FBMEIsVUFBMUIsQ0FBQSxJQUNBLE1BQU0sQ0FBQyxLQUFQLEtBQWdCLEtBQUssQ0FBQyxHQUQ1QztVQUFBLElBQUEsR0FBTyxNQUFNLENBQUMsS0FBZDs7UUFJQSxJQUFxQixrQkFBckI7VUFBQSxJQUFBLEdBQU8sT0FBUDs7UUFHQSxJQUFBLEdBQU8sTUFBTSxDQUFDLElBQVAsQ0FBWSxJQUFaOztjQUNJLENBQUMsUUFBUzs7UUFDckIsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFaLEdBQXFCO1FBQ3JCLElBQXFCLFlBQXJCO1VBQUEsSUFBSyxDQUFBLElBQUEsQ0FBTCxHQUFhLEtBQWI7O1FBQ0EsSUFBSyxDQUFBLE1BQU0sQ0FBQyxJQUFQLENBQUwsR0FBb0I7UUFFcEIsT0FBTyxDQUFDLElBQVIsQ0FBYSxJQUFiO0FBaEJGO0FBREY7V0FtQkE7RUExQlc7O29CQTRCYixJQUFBLEdBQU0sU0FBQTtXQUNKLElBQUMsQ0FBQSxVQUFELEdBQWMsSUFBQyxDQUFBLEtBQUssQ0FBQyxPQUFQLENBQWUsSUFBQyxDQUFBLFNBQWhCO0VBRFY7O29CQUdOLElBQUEsR0FBTSxTQUFDLE9BQUQsRUFBVSxLQUFWO0lBQ0osSUFBQyxDQUFBLEtBQUQsQ0FBUyxJQUFDLENBQUEsVUFBVixFQUFzQixPQUF0QixFQUErQixLQUEvQjtXQUNBLElBQUMsQ0FBQSxPQUFELENBQVMsSUFBQyxDQUFBLFVBQVYsRUFBc0IsT0FBdEIsRUFBK0IsS0FBL0I7RUFGSTs7cUJBSU4sUUFBQSxHQUFRLFNBQUMsTUFBRCxFQUFTLEtBQVQ7SUFDTixJQUFBLENBQWMsTUFBTSxDQUFDLEtBQVAsQ0FBYSxJQUFDLENBQUEsU0FBZCxFQUF5QixLQUF6QixDQUFkO0FBQUEsYUFBQTs7SUFHQSxJQUFDLENBQUEsS0FBRCxDQUFTLElBQUMsQ0FBQSxVQUFWLEVBQXNCLE1BQXRCLEVBQThCLEtBQTlCO0lBQ0EsSUFBQyxDQUFBLE1BQUQsQ0FBUyxJQUFDLENBQUEsVUFBVixFQUFzQixNQUF0QixFQUE4QixLQUE5QjtXQUdBLElBQUMsQ0FBQSxLQUFLLEVBQUMsTUFBRCxFQUFOLENBQWMsTUFBZCxFQUFzQixLQUF0QjtFQVJNOztvQkFVUixRQUFBLEdBQVUsU0FBQyxNQUFELEVBQVMsS0FBVCxFQUFnQixJQUFoQixFQUFzQixRQUF0QixFQUFnQyxNQUFoQztJQUNSLE1BQUEsR0FBUyxNQUFNLENBQUMsSUFBSSxDQUFDO1dBQ3JCLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQWxCLENBQTJCLE1BQTNCLEVBQW1DLEtBQW5DLEVBQTBDLElBQTFDLEVBQWdELFFBQWhELEVBQTBELE1BQTFEO0VBRlE7Ozs7R0F4RFU7O0FBNER0QixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"../graph":205,"./block":185}],190:[function(require,module,exports){
var Block, Join,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Block = require('./block');


/*
  Join multiple disconnected nodes
 */

Join = (function(superClass) {
  extend(Join, superClass);

  function Join(nodes) {
    this.nodes = nodes;
    Join.__super__.constructor.apply(this, arguments);
  }

  Join.prototype.clone = function() {
    return new Join(this.nodes);
  };

  Join.prototype.makeOutlets = function() {
    return [];
  };

  Join.prototype.call = function(program, depth) {
    var block, i, len, node, ref, results;
    ref = this.nodes;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      node = ref[i];
      block = node.owner;
      results.push(block.call(program, depth));
    }
    return results;
  };

  Join.prototype["export"] = function(layout, depth) {
    var block, i, len, node, ref, results;
    ref = this.nodes;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      node = ref[i];
      block = node.owner;
      results.push(block["export"](layout, depth));
    }
    return results;
  };

  return Join;

})(Block);

module.exports = Join;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGJsb2NrXFxqb2luLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcdmVuZG9yXFxzaGFkZXJncmFwaFxcc3JjXFxibG9ja1xcam9pbi5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxXQUFBO0VBQUE7OztBQUFBLEtBQUEsR0FBVSxPQUFBLENBQVEsU0FBUjs7O0FBRVY7Ozs7QUFHTTs7O0VBQ1MsY0FBQyxLQUFEO0lBQUMsSUFBQyxDQUFBLFFBQUQ7SUFDWix1Q0FBQSxTQUFBO0VBRFc7O2lCQUdiLEtBQUEsR0FBTyxTQUFBO1dBQ0wsSUFBSSxJQUFKLENBQVMsSUFBQyxDQUFBLEtBQVY7RUFESzs7aUJBR1AsV0FBQSxHQUFhLFNBQUE7V0FBTTtFQUFOOztpQkFFYixJQUFBLEdBQU0sU0FBQyxPQUFELEVBQVUsS0FBVjtBQUNKLFFBQUE7QUFBQTtBQUFBO1NBQUEscUNBQUE7O01BQ0UsS0FBQSxHQUFRLElBQUksQ0FBQzttQkFDYixLQUFLLENBQUMsSUFBTixDQUFXLE9BQVgsRUFBb0IsS0FBcEI7QUFGRjs7RUFESTs7a0JBS04sUUFBQSxHQUFRLFNBQUMsTUFBRCxFQUFTLEtBQVQ7QUFDTixRQUFBO0FBQUE7QUFBQTtTQUFBLHFDQUFBOztNQUNFLEtBQUEsR0FBUSxJQUFJLENBQUM7bUJBQ2IsS0FBSyxFQUFDLE1BQUQsRUFBTCxDQUFhLE1BQWIsRUFBcUIsS0FBckI7QUFGRjs7RUFETTs7OztHQWRTOztBQW1CbkIsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"./block":185}],191:[function(require,module,exports){

/*
  Cache decorator  
  Fetches snippets once, clones for reuse
  Inline code is hashed to avoid bloat
 */
var cache, hash, queue;

queue = require('./queue');

hash = require('./hash');

cache = function(fetch) {
  var cached, push;
  cached = {};
  push = queue(100);
  return function(name) {
    var expire, key;
    key = name.length > 32 ? '##' + hash(name).toString(16) : name;
    expire = push(key);
    if (expire != null) {
      delete cached[expire];
    }
    if (cached[key] == null) {
      cached[key] = fetch(name);
    }
    return cached[key].clone();
  };
};

module.exports = cache;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGZhY3RvcnlcXGNhY2hlLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcdmVuZG9yXFxzaGFkZXJncmFwaFxcc3JjXFxmYWN0b3J5XFxjYWNoZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7OztBQUFBLElBQUE7O0FBS0EsS0FBQSxHQUFRLE9BQUEsQ0FBUSxTQUFSOztBQUNSLElBQUEsR0FBUSxPQUFBLENBQVEsUUFBUjs7QUFFUixLQUFBLEdBQVEsU0FBQyxLQUFEO0FBQ04sTUFBQTtFQUFBLE1BQUEsR0FBUztFQUNULElBQUEsR0FBUSxLQUFBLENBQU0sR0FBTjtTQUdSLFNBQUMsSUFBRDtBQUNFLFFBQUE7SUFBQSxHQUFBLEdBQVMsSUFBSSxDQUFDLE1BQUwsR0FBYyxFQUFqQixHQUF5QixJQUFBLEdBQU8sSUFBQSxDQUFLLElBQUwsQ0FBVSxDQUFDLFFBQVgsQ0FBb0IsRUFBcEIsQ0FBaEMsR0FBNkQ7SUFHbkUsTUFBQSxHQUFTLElBQUEsQ0FBSyxHQUFMO0lBQ1QsSUFBeUIsY0FBekI7TUFBQSxPQUFPLE1BQU8sQ0FBQSxNQUFBLEVBQWQ7O0lBR0EsSUFBNkIsbUJBQTdCO01BQUEsTUFBTyxDQUFBLEdBQUEsQ0FBUCxHQUFjLEtBQUEsQ0FBTSxJQUFOLEVBQWQ7O1dBQ0EsTUFBTyxDQUFBLEdBQUEsQ0FBSSxDQUFDLEtBQVosQ0FBQTtFQVRGO0FBTE07O0FBZ0JSLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{"./hash":193,"./queue":197}],192:[function(require,module,exports){
var Block, Factory, Graph, State, Visualize;

Graph = require('../graph').Graph;

Block = require('../block');

Visualize = require('../visualize');


/*
  Chainable factory
  
  Exposes methods to build a graph incrementally
 */

Factory = (function() {
  function Factory(language, fetch, config) {
    this.language = language;
    this.fetch = fetch;
    this.config = config;
    this.graph();
  }

  Factory.prototype.pipe = function(name, uniforms, namespace, defines) {
    if (name instanceof Factory) {
      this._concat(name);
    } else if (name != null) {
      this._call(name, uniforms, namespace, defines);
    }
    return this;
  };

  Factory.prototype.call = function(name, uniforms, namespace, defines) {
    return this.pipe(name, uniforms, namespace, defines);
  };

  Factory.prototype.require = function(name, uniforms, namespace, defines) {
    if (name instanceof Factory) {
      this._import(name);
    } else if (name != null) {
      this.callback();
      this._call(name, uniforms, namespace, defines);
      this.end();
    }
    return this;
  };

  Factory.prototype["import"] = function(name, uniforms, namespace, defines) {
    return this.require(name, uniforms, namespace, defines);
  };

  Factory.prototype.split = function() {
    this._group('_combine', true);
    return this;
  };

  Factory.prototype.fan = function() {
    this._group('_combine', false);
    return this;
  };

  Factory.prototype.isolate = function() {
    this._group('_isolate');
    return this;
  };

  Factory.prototype.callback = function() {
    this._group('_callback');
    return this;
  };

  Factory.prototype.next = function() {
    this._next();
    return this;
  };

  Factory.prototype.pass = function() {
    var pass;
    pass = this._stack[2].end;
    this.end();
    this._state.end = this._state.end.concat(pass);
    return this;
  };

  Factory.prototype.end = function() {
    var main, op, ref, sub;
    ref = this._exit(), sub = ref[0], main = ref[1];
    op = sub.op;
    if (this[op]) {
      this[op](sub, main);
    }
    return this;
  };

  Factory.prototype.join = function() {
    return this.end();
  };

  Factory.prototype.graph = function() {
    var graph, ref;
    while (((ref = this._stack) != null ? ref.length : void 0) > 1) {
      this.end();
    }
    if (this._graph) {
      this._tail(this._state, this._graph);
    }
    graph = this._graph;
    this._graph = new Graph;
    this._state = new State;
    this._stack = [this._state];
    return graph;
  };

  Factory.prototype.compile = function(namespace) {
    if (namespace == null) {
      namespace = 'main';
    }
    return this.graph().compile(namespace);
  };

  Factory.prototype.link = function(namespace) {
    if (namespace == null) {
      namespace = 'main';
    }
    return this.graph().link(namespace);
  };

  Factory.prototype.serialize = function() {
    return Visualize.serialize(this._graph);
  };

  Factory.prototype.empty = function() {
    return this._graph.nodes.length === 0;
  };

  Factory.prototype._concat = function(factory) {
    var block, error;
    if (factory._state.nodes.length === 0) {
      return this;
    }
    this._tail(factory._state, factory._graph);
    try {
      block = new Block.Isolate(factory._graph);
    } catch (error1) {
      error = error1;
      if (this.config.autoInspect) {
        Visualize.inspect(error, this._graph, factory);
      }
      throw error;
    }
    this._auto(block);
    return this;
  };

  Factory.prototype._import = function(factory) {
    var block, error;
    if (factory._state.nodes.length === 0) {
      throw "Can't import empty callback";
    }
    this._tail(factory._state, factory._graph);
    try {
      block = new Block.Callback(factory._graph);
    } catch (error1) {
      error = error1;
      if (this.config.autoInspect) {
        Visualize.inspect(error, this._graph, factory);
      }
      throw error;
    }
    this._auto(block);
    return this;
  };

  Factory.prototype._combine = function(sub, main) {
    var from, j, k, len, len1, ref, ref1, to;
    ref = sub.start;
    for (j = 0, len = ref.length; j < len; j++) {
      to = ref[j];
      ref1 = main.end;
      for (k = 0, len1 = ref1.length; k < len1; k++) {
        from = ref1[k];
        from.connect(to, sub.multi);
      }
    }
    main.end = sub.end;
    return main.nodes = main.nodes.concat(sub.nodes);
  };

  Factory.prototype._isolate = function(sub, main) {
    var block, error, subgraph;
    if (sub.nodes.length) {
      subgraph = this._subgraph(sub);
      this._tail(sub, subgraph);
      try {
        block = new Block.Isolate(subgraph);
      } catch (error1) {
        error = error1;
        if (this.config.autoInspect) {
          Visualize.inspect(error, this._graph, subgraph);
        }
        throw error;
      }
      return this._auto(block);
    }
  };

  Factory.prototype._callback = function(sub, main) {
    var block, error, subgraph;
    if (sub.nodes.length) {
      subgraph = this._subgraph(sub);
      this._tail(sub, subgraph);
      try {
        block = new Block.Callback(subgraph);
      } catch (error1) {
        error = error1;
        if (this.config.autoInspect) {
          Visualize.inspect(error, this._graph, subgraph);
        }
        throw error;
      }
      return this._auto(block);
    }
  };

  Factory.prototype._call = function(name, uniforms, namespace, defines) {
    var block, snippet;
    snippet = this.fetch(name);
    snippet.bind(this.config, uniforms, namespace, defines);
    block = new Block.Call(snippet);
    return this._auto(block);
  };

  Factory.prototype._subgraph = function(sub) {
    var subgraph;
    subgraph = new Graph(null, this._graph);
    subgraph.adopt(sub.nodes);
    return subgraph;
  };

  Factory.prototype._tail = function(state, graph) {
    var tail;
    tail = state.end.concat(state.tail);
    tail = tail.filter(function(node, i) {
      return tail.indexOf(node) === i;
    });
    if (tail.length > 1) {
      tail = new Block.Join(tail);
      tail = [tail.node];
      this._graph.add(tail);
    }
    graph.tail = tail[0];
    state.end = tail;
    state.tail = [];
    if (!graph.tail) {
      throw new Error("Cannot finalize empty graph");
    }
    graph.compile = (function(_this) {
      return function(namespace) {
        var error;
        if (namespace == null) {
          namespace = 'main';
        }
        try {
          return graph.tail.owner.compile(_this.language, namespace);
        } catch (error1) {
          error = error1;
          if (_this.config.autoInspect) {
            graph.inspect(error);
          }
          throw error;
        }
      };
    })(this);
    graph.link = (function(_this) {
      return function(namespace) {
        var error;
        if (namespace == null) {
          namespace = 'main';
        }
        try {
          return graph.tail.owner.link(_this.language, namespace);
        } catch (error1) {
          error = error1;
          if (_this.config.autoInspect) {
            graph.inspect(error);
          }
          throw error;
        }
      };
    })(this);
    graph["export"] = (function(_this) {
      return function(layout, depth) {
        return graph.tail.owner["export"](layout, depth);
      };
    })(this);
    return graph.inspect = function(message) {
      if (message == null) {
        message = null;
      }
      return Visualize.inspect(message, graph);
    };
  };

  Factory.prototype._group = function(op, multi) {
    this._push(op, multi);
    this._push();
    return this;
  };

  Factory.prototype._next = function() {
    var sub;
    sub = this._pop();
    this._state.start = this._state.start.concat(sub.start);
    this._state.end = this._state.end.concat(sub.end);
    this._state.nodes = this._state.nodes.concat(sub.nodes);
    this._state.tail = this._state.tail.concat(sub.tail);
    return this._push();
  };

  Factory.prototype._exit = function() {
    this._next();
    this._pop();
    return [this._pop(), this._state];
  };

  Factory.prototype._push = function(op, multi) {
    this._stack.unshift(new State(op, multi));
    return this._state = this._stack[0];
  };

  Factory.prototype._pop = function() {
    var ref;
    this._state = this._stack[1];
    if (this._state == null) {
      this._state = new State;
    }
    return (ref = this._stack.shift()) != null ? ref : new State;
  };

  Factory.prototype._auto = function(block) {
    if (block.node.inputs.length) {
      return this._append(block);
    } else {
      return this._insert(block);
    }
  };

  Factory.prototype._append = function(block) {
    var end, j, len, node, ref;
    node = block.node;
    this._graph.add(node);
    ref = this._state.end;
    for (j = 0, len = ref.length; j < len; j++) {
      end = ref[j];
      end.connect(node);
    }
    if (!this._state.start.length) {
      this._state.start = [node];
    }
    this._state.end = [node];
    this._state.nodes.push(node);
    if (!node.outputs.length) {
      return this._state.tail.push(node);
    }
  };

  Factory.prototype._prepend = function(block) {
    var j, len, node, ref, start;
    node = block.node;
    this._graph.add(node);
    ref = this._state.start;
    for (j = 0, len = ref.length; j < len; j++) {
      start = ref[j];
      node.connect(start);
    }
    if (!this._state.end.length) {
      this._state.end = [node];
    }
    this._state.start = [node];
    this._state.nodes.push(node);
    if (!node.outputs.length) {
      return this._state.tail.push(node);
    }
  };

  Factory.prototype._insert = function(block) {
    var node;
    node = block.node;
    this._graph.add(node);
    this._state.start.push(node);
    this._state.end.push(node);
    this._state.nodes.push(node);
    if (!node.outputs.length) {
      return this._state.tail.push(node);
    }
  };

  return Factory;

})();

State = (function() {
  function State(op1, multi1, start1, end1, nodes, tail1) {
    this.op = op1 != null ? op1 : null;
    this.multi = multi1 != null ? multi1 : false;
    this.start = start1 != null ? start1 : [];
    this.end = end1 != null ? end1 : [];
    this.nodes = nodes != null ? nodes : [];
    this.tail = tail1 != null ? tail1 : [];
  }

  return State;

})();

module.exports = Factory;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,

},{"../block":188,"../graph":205,"../visualize":216}],193:[function(require,module,exports){
var c1, c2, c3, c4, c5, hash, imul, test;

c1 = 0xcc9e2d51;

c2 = 0x1b873593;

c3 = 0xe6546b64;

c4 = 0x85ebca6b;

c5 = 0xc2b2ae35;

imul = function(a, b) {
  var ah, al, bh, bl;
  ah = (a >>> 16) & 0xffff;
  al = a & 0xffff;
  bh = (b >>> 16) & 0xffff;
  bl = b & 0xffff;
  return (al * bl) + (((ah * bl + al * bh) << 16) >>> 0) | 0;
};

if (Math.imul != null) {
  test = Math.imul(0xffffffff, 5);
  if (test === -5) {
    imul = Math.imul;
  }
}

hash = function(string) {
  var h, iterate, j, m, n, next;
  n = string.length;
  m = Math.floor(n / 2);
  j = h = 0;
  next = function() {
    return string.charCodeAt(j++);
  };
  iterate = function(a, b) {
    var k;
    k = a | (b << 16);
    k ^= k << 9;
    k = imul(k, c1);
    k = (k << 15) | (k >>> 17);
    k = imul(k, c2);
    h ^= k;
    h = (h << 13) | (h >>> 19);
    h = imul(h, 5);
    return h = (h + c3) | 0;
  };
  while (m--) {
    iterate(next(), next());
  }
  if (n & 1) {
    iterate(next(), 0);
  }
  h ^= n;
  h ^= h >>> 16;
  h = imul(h, c4);
  h ^= h >>> 13;
  h = imul(h, c5);
  return h ^= h >>> 16;
};

module.exports = hash;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGZhY3RvcnlcXGhhc2guY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGZhY3RvcnlcXGhhc2guY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLElBQUE7O0FBQUEsRUFBQSxHQUFLOztBQUNMLEVBQUEsR0FBSzs7QUFDTCxFQUFBLEdBQUs7O0FBQ0wsRUFBQSxHQUFLOztBQUNMLEVBQUEsR0FBSzs7QUFHTCxJQUFBLEdBQU8sU0FBQyxDQUFELEVBQUksQ0FBSjtBQUNMLE1BQUE7RUFBQSxFQUFBLEdBQUssQ0FBQyxDQUFBLEtBQU0sRUFBUCxDQUFBLEdBQWE7RUFDbEIsRUFBQSxHQUFLLENBQUEsR0FBSTtFQUNULEVBQUEsR0FBSyxDQUFDLENBQUEsS0FBTSxFQUFQLENBQUEsR0FBYTtFQUNsQixFQUFBLEdBQUssQ0FBQSxHQUFJO1NBQ1QsQ0FBQyxFQUFBLEdBQUssRUFBTixDQUFBLEdBQVksQ0FBQyxDQUFDLENBQUMsRUFBQSxHQUFLLEVBQUwsR0FBVSxFQUFBLEdBQUssRUFBaEIsQ0FBQSxJQUF1QixFQUF4QixDQUFBLEtBQWdDLENBQWpDLENBQVosR0FBa0Q7QUFMN0M7O0FBT1AsSUFBRyxpQkFBSDtFQUNFLElBQUEsR0FBTyxJQUFJLENBQUMsSUFBTCxDQUFVLFVBQVYsRUFBc0IsQ0FBdEI7RUFDUCxJQUFvQixJQUFBLEtBQVEsQ0FBQyxDQUE3QjtJQUFBLElBQUEsR0FBTyxJQUFJLENBQUMsS0FBWjtHQUZGOzs7QUFLQSxJQUFBLEdBQU8sU0FBQyxNQUFEO0FBQ0wsTUFBQTtFQUFBLENBQUEsR0FBSSxNQUFNLENBQUM7RUFDWCxDQUFBLEdBQUksSUFBSSxDQUFDLEtBQUwsQ0FBVyxDQUFBLEdBQUksQ0FBZjtFQUNKLENBQUEsR0FBSSxDQUFBLEdBQUk7RUFFUixJQUFBLEdBQU8sU0FBQTtXQUFNLE1BQU0sQ0FBQyxVQUFQLENBQWtCLENBQUEsRUFBbEI7RUFBTjtFQUNQLE9BQUEsR0FBVSxTQUFDLENBQUQsRUFBSSxDQUFKO0FBQ1IsUUFBQTtJQUFBLENBQUEsR0FBSyxDQUFBLEdBQUksQ0FBQyxDQUFBLElBQUssRUFBTjtJQUNULENBQUEsSUFBTSxDQUFBLElBQUs7SUFFWCxDQUFBLEdBQUssSUFBQSxDQUFLLENBQUwsRUFBUSxFQUFSO0lBQ0wsQ0FBQSxHQUFLLENBQUMsQ0FBQSxJQUFLLEVBQU4sQ0FBQSxHQUFZLENBQUMsQ0FBQSxLQUFNLEVBQVA7SUFDakIsQ0FBQSxHQUFLLElBQUEsQ0FBSyxDQUFMLEVBQVEsRUFBUjtJQUVMLENBQUEsSUFBSztJQUVMLENBQUEsR0FBSyxDQUFDLENBQUEsSUFBSyxFQUFOLENBQUEsR0FBWSxDQUFDLENBQUEsS0FBTSxFQUFQO0lBQ2pCLENBQUEsR0FBSyxJQUFBLENBQUssQ0FBTCxFQUFRLENBQVI7V0FDTCxDQUFBLEdBQUssQ0FBQyxDQUFBLEdBQUksRUFBTCxDQUFBLEdBQVc7RUFaUjtBQWNhLFNBQU0sQ0FBQSxFQUFOO0lBQXZCLE9BQUEsQ0FBUSxJQUFBLENBQUEsQ0FBUixFQUFnQixJQUFBLENBQUEsQ0FBaEI7RUFBdUI7RUFDdkIsSUFBMEIsQ0FBQSxHQUFJLENBQTlCO0lBQUEsT0FBQSxDQUFRLElBQUEsQ0FBQSxDQUFSLEVBQWdCLENBQWhCLEVBQUE7O0VBRUEsQ0FBQSxJQUFLO0VBQ0wsQ0FBQSxJQUFLLENBQUEsS0FBTTtFQUNYLENBQUEsR0FBSyxJQUFBLENBQUssQ0FBTCxFQUFRLEVBQVI7RUFDTCxDQUFBLElBQUssQ0FBQSxLQUFNO0VBQ1gsQ0FBQSxHQUFLLElBQUEsQ0FBSyxDQUFMLEVBQVEsRUFBUjtTQUNMLENBQUEsSUFBSyxDQUFBLEtBQU07QUE1Qk47O0FBOEJQLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{}],194:[function(require,module,exports){
exports.Factory = require('./factory');

exports.Material = require('./material');

exports.library = require('./library');

exports.cache = require('./cache');

exports.queue = require('./queue');

exports.hash = require('./hash');

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGZhY3RvcnlcXGluZGV4LmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcdmVuZG9yXFxzaGFkZXJncmFwaFxcc3JjXFxmYWN0b3J5XFxpbmRleC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxDQUFDLE9BQVIsR0FBbUIsT0FBQSxDQUFRLFdBQVI7O0FBQ25CLE9BQU8sQ0FBQyxRQUFSLEdBQW1CLE9BQUEsQ0FBUSxZQUFSOztBQUVuQixPQUFPLENBQUMsT0FBUixHQUFvQixPQUFBLENBQVEsV0FBUjs7QUFDcEIsT0FBTyxDQUFDLEtBQVIsR0FBb0IsT0FBQSxDQUFRLFNBQVI7O0FBQ3BCLE9BQU8sQ0FBQyxLQUFSLEdBQW9CLE9BQUEsQ0FBUSxTQUFSOztBQUNwQixPQUFPLENBQUMsSUFBUixHQUFvQixPQUFBLENBQVEsUUFBUiJ9

},{"./cache":191,"./factory":192,"./hash":193,"./library":195,"./material":196,"./queue":197}],195:[function(require,module,exports){

/*
  Snippet library
  
  Takes:
    - Hash of snippets: named library
    - (name) -> getter: dynamic lookup
    - nothing:          no library, only pass in inline source code
  
  If 'name' contains any of "{;(#" it is assumed to be direct GLSL code.
 */
var library;

library = function(language, snippets, load) {
  var callback, fetch, inline, used;
  callback = null;
  used = {};
  if (snippets != null) {
    if (typeof snippets === 'function') {
      callback = function(name) {
        return load(language, name, snippets(name));
      };
    } else if (typeof snippets === 'object') {
      callback = function(name) {
        if (snippets[name] == null) {
          throw new Error("Unknown snippet `" + name + "`");
        }
        return load(language, name, snippets[name]);
      };
    }
  }
  inline = function(code) {
    return load(language, '', code);
  };
  if (callback == null) {
    return inline;
  }
  fetch = function(name) {
    if (name.match(/[{;]/)) {
      return inline(name);
    }
    used[name] = true;
    return callback(name);
  };
  fetch.used = function(_used) {
    if (_used == null) {
      _used = used;
    }
    return used = _used;
  };
  return fetch;
};

module.exports = library;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGZhY3RvcnlcXGxpYnJhcnkuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGZhY3RvcnlcXGxpYnJhcnkuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7OztBQUFBLElBQUE7O0FBVUEsT0FBQSxHQUFVLFNBQUMsUUFBRCxFQUFXLFFBQVgsRUFBcUIsSUFBckI7QUFFUixNQUFBO0VBQUEsUUFBQSxHQUFXO0VBQ1gsSUFBQSxHQUFPO0VBRVAsSUFBRyxnQkFBSDtJQUNFLElBQUcsT0FBTyxRQUFQLEtBQW1CLFVBQXRCO01BQ0UsUUFBQSxHQUFXLFNBQUMsSUFBRDtlQUNULElBQUEsQ0FBSyxRQUFMLEVBQWUsSUFBZixFQUFxQixRQUFBLENBQVMsSUFBVCxDQUFyQjtNQURTLEVBRGI7S0FBQSxNQUdLLElBQUcsT0FBTyxRQUFQLEtBQW1CLFFBQXRCO01BQ0gsUUFBQSxHQUFXLFNBQUMsSUFBRDtRQUNULElBQWdELHNCQUFoRDtBQUFBLGdCQUFNLElBQUksS0FBSixDQUFVLG1CQUFBLEdBQW9CLElBQXBCLEdBQXlCLEdBQW5DLEVBQU47O2VBQ0EsSUFBQSxDQUFLLFFBQUwsRUFBZSxJQUFmLEVBQXFCLFFBQVMsQ0FBQSxJQUFBLENBQTlCO01BRlMsRUFEUjtLQUpQOztFQVNBLE1BQUEsR0FBUyxTQUFDLElBQUQ7V0FDUCxJQUFBLENBQUssUUFBTCxFQUFlLEVBQWYsRUFBbUIsSUFBbkI7RUFETztFQUdULElBQWtCLGdCQUFsQjtBQUFBLFdBQU8sT0FBUDs7RUFFQSxLQUFBLEdBQVEsU0FBQyxJQUFEO0lBQ04sSUFBc0IsSUFBSSxDQUFDLEtBQUwsQ0FBVyxNQUFYLENBQXRCO0FBQUEsYUFBTyxNQUFBLENBQU8sSUFBUCxFQUFQOztJQUNBLElBQUssQ0FBQSxJQUFBLENBQUwsR0FBYTtXQUNiLFFBQUEsQ0FBUyxJQUFUO0VBSE07RUFLUixLQUFLLENBQUMsSUFBTixHQUFhLFNBQUMsS0FBRDs7TUFBQyxRQUFROztXQUFTLElBQUEsR0FBTztFQUF6QjtTQUViO0FBMUJROztBQTZCVixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{}],196:[function(require,module,exports){
var Material, Visualize, debug, tick;

debug = false;

Visualize = require('../visualize');

tick = function() {
  var now;
  now = +(new Date);
  return function(label) {
    var delta;
    delta = +new Date() - now;
    console.log(label, delta + " ms");
    return delta;
  };
};

Material = (function() {
  function Material(vertex1, fragment1) {
    this.vertex = vertex1;
    this.fragment = fragment1;
    if (debug) {
      this.tock = tick();
    }
  }

  Material.prototype.build = function(options) {
    return this.link(options);
  };

  Material.prototype.link = function(options) {
    var attributes, fragment, i, key, len, ref, ref1, ref2, ref3, shader, uniforms, value, varyings, vertex;
    if (options == null) {
      options = {};
    }
    uniforms = {};
    varyings = {};
    attributes = {};
    vertex = this.vertex.link('main');
    fragment = this.fragment.link('main');
    ref = [vertex, fragment];
    for (i = 0, len = ref.length; i < len; i++) {
      shader = ref[i];
      ref1 = shader.uniforms;
      for (key in ref1) {
        value = ref1[key];
        uniforms[key] = value;
      }
      ref2 = shader.varyings;
      for (key in ref2) {
        value = ref2[key];
        varyings[key] = value;
      }
      ref3 = shader.attributes;
      for (key in ref3) {
        value = ref3[key];
        attributes[key] = value;
      }
    }
    options.vertexShader = vertex.code;
    options.vertexGraph = vertex.graph;
    options.fragmentShader = fragment.code;
    options.fragmentGraph = fragment.graph;
    options.attributes = attributes;
    options.uniforms = uniforms;
    options.varyings = varyings;
    options.inspect = function() {
      return Visualize.inspect('Vertex Shader', vertex, 'Fragment Shader', fragment.graph);
    };
    if (debug) {
      this.tock('Material build');
    }
    return options;
  };

  Material.prototype.inspect = function() {
    return Visualize.inspect('Vertex Shader', this.vertex, 'Fragment Shader', this.fragment.graph);
  };

  return Material;

})();

module.exports = Material;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGZhY3RvcnlcXG1hdGVyaWFsLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcdmVuZG9yXFxzaGFkZXJncmFwaFxcc3JjXFxmYWN0b3J5XFxtYXRlcmlhbC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQTs7QUFBQSxLQUFBLEdBQVE7O0FBQ1IsU0FBQSxHQUFZLE9BQUEsQ0FBUSxjQUFSOztBQUVaLElBQUEsR0FBTyxTQUFBO0FBQ0wsTUFBQTtFQUFBLEdBQUEsR0FBTSxFQUFDLElBQUk7QUFDWCxTQUFPLFNBQUMsS0FBRDtBQUNMLFFBQUE7SUFBQSxLQUFBLEdBQVEsQ0FBQyxJQUFJLElBQUosQ0FBQSxDQUFELEdBQWM7SUFDdEIsT0FBTyxDQUFDLEdBQVIsQ0FBWSxLQUFaLEVBQW1CLEtBQUEsR0FBUSxLQUEzQjtXQUNBO0VBSEs7QUFGRjs7QUFPRDtFQUNTLGtCQUFDLE9BQUQsRUFBVSxTQUFWO0lBQUMsSUFBQyxDQUFBLFNBQUQ7SUFBUyxJQUFDLENBQUEsV0FBRDtJQUNyQixJQUFrQixLQUFsQjtNQUFBLElBQUMsQ0FBQSxJQUFELEdBQVEsSUFBQSxDQUFBLEVBQVI7O0VBRFc7O3FCQUdiLEtBQUEsR0FBTyxTQUFDLE9BQUQ7V0FBYSxJQUFDLENBQUEsSUFBRCxDQUFNLE9BQU47RUFBYjs7cUJBQ1AsSUFBQSxHQUFNLFNBQUMsT0FBRDtBQUNKLFFBQUE7O01BREssVUFBVTs7SUFDZixRQUFBLEdBQWE7SUFDYixRQUFBLEdBQWE7SUFDYixVQUFBLEdBQWE7SUFFYixNQUFBLEdBQVcsSUFBQyxDQUFBLE1BQVEsQ0FBQyxJQUFWLENBQWUsTUFBZjtJQUNYLFFBQUEsR0FBVyxJQUFDLENBQUEsUUFBUSxDQUFDLElBQVYsQ0FBZSxNQUFmO0FBRVg7QUFBQSxTQUFBLHFDQUFBOztBQUNFO0FBQUEsV0FBQSxXQUFBOztRQUFDLFFBQVMsQ0FBQSxHQUFBLENBQVQsR0FBa0I7QUFBbkI7QUFDQTtBQUFBLFdBQUEsV0FBQTs7UUFBQyxRQUFTLENBQUEsR0FBQSxDQUFULEdBQWtCO0FBQW5CO0FBQ0E7QUFBQSxXQUFBLFdBQUE7O1FBQUMsVUFBVyxDQUFBLEdBQUEsQ0FBWCxHQUFrQjtBQUFuQjtBQUhGO0lBS0EsT0FBTyxDQUFDLFlBQVIsR0FBeUIsTUFBUSxDQUFDO0lBQ2xDLE9BQU8sQ0FBQyxXQUFSLEdBQXlCLE1BQVEsQ0FBQztJQUNsQyxPQUFPLENBQUMsY0FBUixHQUF5QixRQUFRLENBQUM7SUFDbEMsT0FBTyxDQUFDLGFBQVIsR0FBeUIsUUFBUSxDQUFDO0lBQ2xDLE9BQU8sQ0FBQyxVQUFSLEdBQXlCO0lBQ3pCLE9BQU8sQ0FBQyxRQUFSLEdBQXlCO0lBQ3pCLE9BQU8sQ0FBQyxRQUFSLEdBQXlCO0lBQ3pCLE9BQU8sQ0FBQyxPQUFSLEdBQXlCLFNBQUE7YUFDdkIsU0FBUyxDQUFDLE9BQVYsQ0FBa0IsZUFBbEIsRUFBbUMsTUFBbkMsRUFBMkMsaUJBQTNDLEVBQThELFFBQVEsQ0FBQyxLQUF2RTtJQUR1QjtJQUd6QixJQUEwQixLQUExQjtNQUFBLElBQUMsQ0FBQSxJQUFELENBQU0sZ0JBQU4sRUFBQTs7V0FFQTtFQXpCSTs7cUJBMkJOLE9BQUEsR0FBUyxTQUFBO1dBQ1AsU0FBUyxDQUFDLE9BQVYsQ0FBa0IsZUFBbEIsRUFBbUMsSUFBQyxDQUFBLE1BQXBDLEVBQTRDLGlCQUE1QyxFQUErRCxJQUFDLENBQUEsUUFBUSxDQUFDLEtBQXpFO0VBRE87Ozs7OztBQUdYLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{"../visualize":216}],197:[function(require,module,exports){
var queue;

queue = function(limit) {
  var add, count, head, map, remove, tail;
  if (limit == null) {
    limit = 100;
  }
  map = {};
  head = null;
  tail = null;
  count = 0;
  add = function(item) {
    item.prev = null;
    item.next = head;
    if (head != null) {
      head.prev = item;
    }
    head = item;
    if (tail == null) {
      return tail = item;
    }
  };
  remove = function(item) {
    var next, prev;
    prev = item.prev;
    next = item.next;
    if (prev != null) {
      prev.next = next;
    }
    if (next != null) {
      next.prev = prev;
    }
    if (head === item) {
      head = next;
    }
    if (tail === item) {
      return tail = prev;
    }
  };
  return function(key) {
    var dead, item;
    if (item = map[key] && item !== head) {
      remove(item);
      add(item);
    } else {
      if (count === limit) {
        dead = tail.key;
        remove(tail);
        delete map[dead];
      } else {
        count++;
      }
      item = {
        next: head,
        prev: null,
        key: key
      };
      add(item);
      map[key] = item;
    }
    return dead;
  };
};

module.exports = queue;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGZhY3RvcnlcXHF1ZXVlLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcdmVuZG9yXFxzaGFkZXJncmFwaFxcc3JjXFxmYWN0b3J5XFxxdWV1ZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsSUFBQTs7QUFBQSxLQUFBLEdBQVEsU0FBQyxLQUFEO0FBQ04sTUFBQTs7SUFETyxRQUFROztFQUNmLEdBQUEsR0FBTTtFQUVOLElBQUEsR0FBUTtFQUNSLElBQUEsR0FBUTtFQUNSLEtBQUEsR0FBUTtFQUdSLEdBQUEsR0FBTSxTQUFDLElBQUQ7SUFDSixJQUFJLENBQUMsSUFBTCxHQUFZO0lBQ1osSUFBSSxDQUFDLElBQUwsR0FBWTtJQUVaLElBQW9CLFlBQXBCO01BQUEsSUFBSSxDQUFDLElBQUwsR0FBWSxLQUFaOztJQUVBLElBQUEsR0FBWTtJQUNaLElBQXFCLFlBQXJCO2FBQUEsSUFBQSxHQUFZLEtBQVo7O0VBUEk7RUFVTixNQUFBLEdBQVMsU0FBQyxJQUFEO0FBQ1AsUUFBQTtJQUFBLElBQUEsR0FBTyxJQUFJLENBQUM7SUFDWixJQUFBLEdBQU8sSUFBSSxDQUFDO0lBRVosSUFBb0IsWUFBcEI7TUFBQSxJQUFJLENBQUMsSUFBTCxHQUFZLEtBQVo7O0lBQ0EsSUFBb0IsWUFBcEI7TUFBQSxJQUFJLENBQUMsSUFBTCxHQUFZLEtBQVo7O0lBRUEsSUFBb0IsSUFBQSxLQUFRLElBQTVCO01BQUEsSUFBQSxHQUFPLEtBQVA7O0lBQ0EsSUFBb0IsSUFBQSxLQUFRLElBQTVCO2FBQUEsSUFBQSxHQUFPLEtBQVA7O0VBUk87U0FXVCxTQUFDLEdBQUQ7QUFDRSxRQUFBO0lBQUEsSUFBRyxJQUFBLEdBQU8sR0FBSSxDQUFBLEdBQUEsQ0FBSixJQUFhLElBQUEsS0FBUSxJQUEvQjtNQUVFLE1BQUEsQ0FBTyxJQUFQO01BQ0EsR0FBQSxDQUFPLElBQVAsRUFIRjtLQUFBLE1BQUE7TUFPRSxJQUFHLEtBQUEsS0FBUyxLQUFaO1FBRUUsSUFBQSxHQUFPLElBQUksQ0FBQztRQUNaLE1BQUEsQ0FBTyxJQUFQO1FBR0EsT0FBTyxHQUFJLENBQUEsSUFBQSxFQU5iO09BQUEsTUFBQTtRQVFFLEtBQUEsR0FSRjs7TUFXQSxJQUFBLEdBQU87UUFBQSxJQUFBLEVBQU0sSUFBTjtRQUFZLElBQUEsRUFBTSxJQUFsQjtRQUF3QixHQUFBLEVBQUssR0FBN0I7O01BQ1AsR0FBQSxDQUFJLElBQUo7TUFHQSxHQUFJLENBQUEsR0FBQSxDQUFKLEdBQVcsS0F0QmI7O1dBeUJBO0VBMUJGO0FBN0JNOztBQXlEUixNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{}],198:[function(require,module,exports){

/*
  Compile snippet back into GLSL, but with certain symbols replaced by prefixes / placeholders
 */
var compile, replaced, string_compiler, tick;

compile = function(program) {
  var assembler, ast, code, placeholders, signatures;
  ast = program.ast, code = program.code, signatures = program.signatures;
  placeholders = replaced(signatures);
  assembler = string_compiler(code, placeholders);
  return [signatures, assembler];
};

tick = function() {
  var now;
  now = +(new Date);
  return function(label) {
    var delta;
    delta = +new Date() - now;
    console.log(label, delta + " ms");
    return delta;
  };
};

replaced = function(signatures) {
  var i, j, key, len, len1, out, ref, ref1, s, sig;
  out = {};
  s = function(sig) {
    return out[sig.name] = true;
  };
  s(signatures.main);
  ref = ['external', 'internal', 'varying', 'uniform', 'attribute'];
  for (i = 0, len = ref.length; i < len; i++) {
    key = ref[i];
    ref1 = signatures[key];
    for (j = 0, len1 = ref1.length; j < len1; j++) {
      sig = ref1[j];
      s(sig);
    }
  }
  return out;
};


/*
String-replacement based compiler
 */

string_compiler = function(code, placeholders) {
  var key, re;
  re = new RegExp('\\b(' + ((function() {
    var results;
    results = [];
    for (key in placeholders) {
      results.push(key);
    }
    return results;
  })()).join('|') + ')\\b', 'g');
  code = code.replace(/\/\/[^\n]*/g, '');
  code = code.replace(/\/\*([^*]|\*[^\/])*\*\//g, '');
  return function(prefix, exceptions, defines) {
    var compiled, defs, replace, value;
    if (prefix == null) {
      prefix = '';
    }
    if (exceptions == null) {
      exceptions = {};
    }
    if (defines == null) {
      defines = {};
    }
    replace = {};
    for (key in placeholders) {
      replace[key] = exceptions[key] != null ? key : prefix + key;
    }
    compiled = code.replace(re, function(key) {
      return replace[key];
    });
    defs = (function() {
      var results;
      results = [];
      for (key in defines) {
        value = defines[key];
        results.push("#define " + key + " " + value);
      }
      return results;
    })();
    if (defs.length) {
      defs.push('');
    }
    return defs.join("\n") + compiled;
  };
};

module.exports = compile;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGdsc2xcXGNvbXBpbGUuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGdsc2xcXGNvbXBpbGUuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7O0FBQUEsSUFBQTs7QUFJQSxPQUFBLEdBQVUsU0FBQyxPQUFEO0FBQ1IsTUFBQTtFQUFDLGlCQUFELEVBQU0sbUJBQU4sRUFBWTtFQUdaLFlBQUEsR0FBZSxRQUFBLENBQVMsVUFBVDtFQUdmLFNBQUEsR0FBWSxlQUFBLENBQWdCLElBQWhCLEVBQXNCLFlBQXRCO1NBRVosQ0FBQyxVQUFELEVBQWEsU0FBYjtBQVRROztBQWFWLElBQUEsR0FBTyxTQUFBO0FBQ0wsTUFBQTtFQUFBLEdBQUEsR0FBTSxFQUFDLElBQUk7QUFDWCxTQUFPLFNBQUMsS0FBRDtBQUNMLFFBQUE7SUFBQSxLQUFBLEdBQVEsQ0FBQyxJQUFJLElBQUosQ0FBQSxDQUFELEdBQWM7SUFDdEIsT0FBTyxDQUFDLEdBQVIsQ0FBWSxLQUFaLEVBQW1CLEtBQUEsR0FBUSxLQUEzQjtXQUNBO0VBSEs7QUFGRjs7QUFPUCxRQUFBLEdBQVcsU0FBQyxVQUFEO0FBQ1QsTUFBQTtFQUFBLEdBQUEsR0FBTTtFQUNOLENBQUEsR0FBSSxTQUFDLEdBQUQ7V0FBUyxHQUFJLENBQUEsR0FBRyxDQUFDLElBQUosQ0FBSixHQUFnQjtFQUF6QjtFQUVKLENBQUEsQ0FBRSxVQUFVLENBQUMsSUFBYjtBQUdBO0FBQUEsT0FBQSxxQ0FBQTs7QUFDRTtBQUFBLFNBQUEsd0NBQUE7O01BQUEsQ0FBQSxDQUFFLEdBQUY7QUFBQTtBQURGO1NBR0E7QUFWUzs7O0FBWVg7Ozs7QUFHQSxlQUFBLEdBQWtCLFNBQUMsSUFBRCxFQUFPLFlBQVA7QUFJaEIsTUFBQTtFQUFBLEVBQUEsR0FBSyxJQUFJLE1BQUosQ0FBVyxNQUFBLEdBQVM7O0FBQUM7U0FBQSxtQkFBQTttQkFBQTtBQUFBOztNQUFELENBQTZCLENBQUMsSUFBOUIsQ0FBbUMsR0FBbkMsQ0FBVCxHQUFtRCxNQUE5RCxFQUFzRSxHQUF0RTtFQUdMLElBQUEsR0FBTyxJQUFJLENBQUMsT0FBTCxDQUFhLGFBQWIsRUFBNEIsRUFBNUI7RUFDUCxJQUFBLEdBQU8sSUFBSSxDQUFDLE9BQUwsQ0FBYSwwQkFBYixFQUF5QyxFQUF6QztTQU9QLFNBQUMsTUFBRCxFQUFjLFVBQWQsRUFBK0IsT0FBL0I7QUFDRSxRQUFBOztNQURELFNBQVM7OztNQUFJLGFBQWE7OztNQUFJLFVBQVU7O0lBQ3ZDLE9BQUEsR0FBVTtBQUNWLFNBQUEsbUJBQUE7TUFDRSxPQUFRLENBQUEsR0FBQSxDQUFSLEdBQWtCLHVCQUFILEdBQXlCLEdBQXpCLEdBQWtDLE1BQUEsR0FBUztBQUQ1RDtJQUdBLFFBQUEsR0FBVyxJQUFJLENBQUMsT0FBTCxDQUFhLEVBQWIsRUFBaUIsU0FBQyxHQUFEO2FBQVMsT0FBUSxDQUFBLEdBQUE7SUFBakIsQ0FBakI7SUFFWCxJQUFBOztBQUFRO1dBQUEsY0FBQTs7cUJBQUEsVUFBQSxHQUFXLEdBQVgsR0FBZSxHQUFmLEdBQWtCO0FBQWxCOzs7SUFDUixJQUFnQixJQUFJLENBQUMsTUFBckI7TUFBQSxJQUFJLENBQUMsSUFBTCxDQUFVLEVBQVYsRUFBQTs7V0FDQSxJQUFJLENBQUMsSUFBTCxDQUFVLElBQVYsQ0FBQSxHQUFrQjtFQVRwQjtBQWZnQjs7QUEwQmxCLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{}],199:[function(require,module,exports){
module.exports = {
  SHADOW_ARG: '_i_o',
  RETURN_ARG: 'return'
};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGdsc2xcXGNvbnN0YW50cy5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHZlbmRvclxcc2hhZGVyZ3JhcGhcXHNyY1xcZ2xzbFxcY29uc3RhbnRzLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUMsT0FBUCxHQUNFO0VBQUEsVUFBQSxFQUFZLE1BQVo7RUFDQSxVQUFBLEVBQVksUUFEWiJ9

},{}],200:[function(require,module,exports){
var Definition, decl, defaults, get, three, threejs, win;

module.exports = decl = {};

decl["in"] = 0;

decl.out = 1;

decl.inout = 2;

get = function(n) {
  return n.token.data;
};

decl.node = function(node) {
  var ref, ref1;
  if (((ref = node.children[5]) != null ? ref.type : void 0) === 'function') {
    return decl["function"](node);
  } else if (((ref1 = node.token) != null ? ref1.type : void 0) === 'keyword') {
    return decl.external(node);
  }
};

decl.external = function(node) {
  var c, i, ident, j, len, list, next, out, quant, ref, storage, struct, type;
  c = node.children;
  storage = get(c[1]);
  struct = get(c[3]);
  type = get(c[4]);
  list = c[5];
  if (storage !== 'attribute' && storage !== 'uniform' && storage !== 'varying') {
    storage = 'global';
  }
  out = [];
  ref = list.children;
  for (i = j = 0, len = ref.length; j < len; i = ++j) {
    c = ref[i];
    if (c.type === 'ident') {
      ident = get(c);
      next = list.children[i + 1];
      quant = (next != null ? next.type : void 0) === 'quantifier';
      out.push({
        decl: 'external',
        storage: storage,
        type: type,
        ident: ident,
        quant: !!quant,
        count: quant
      });
    }
  }
  return out;
};

decl["function"] = function(node) {
  var args, body, c, child, decls, func, ident, storage, struct, type;
  c = node.children;
  storage = get(c[1]);
  struct = get(c[3]);
  type = get(c[4]);
  func = c[5];
  ident = get(func.children[0]);
  args = func.children[1];
  body = func.children[2];
  decls = (function() {
    var j, len, ref, results;
    ref = args.children;
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      child = ref[j];
      results.push(decl.argument(child));
    }
    return results;
  })();
  return [
    {
      decl: 'function',
      storage: storage,
      type: type,
      ident: ident,
      body: !!body,
      args: decls
    }
  ];
};

decl.argument = function(node) {
  var c, count, ident, inout, list, quant, storage, type;
  c = node.children;
  storage = get(c[1]);
  inout = get(c[2]);
  type = get(c[4]);
  list = c[5];
  ident = get(list.children[0]);
  quant = list.children[1];
  count = quant ? quant.children[0].token.data : void 0;
  return {
    decl: 'argument',
    storage: storage,
    inout: inout,
    type: type,
    ident: ident,
    quant: !!quant,
    count: count
  };
};

decl.param = function(dir, storage, spec, quant, count) {
  var f, prefix, suffix;
  prefix = [];
  if (storage != null) {
    prefix.push(storage);
  }
  if (spec != null) {
    prefix.push(spec);
  }
  prefix.push('');
  prefix = prefix.join(' ');
  suffix = quant ? '[' + count + ']' : '';
  if (dir !== '') {
    dir += ' ';
  }
  f = function(name, long) {
    return (long ? dir : '') + ("" + prefix + name + suffix);
  };
  f.split = function(dir) {
    return decl.param(dir, storage, spec, quant, count);
  };
  return f;
};

win = typeof window !== 'undefined';

threejs = win && !!window.THREE;

defaults = {
  int: 0,
  float: 0,
  vec2: threejs ? THREE.Vector2 : null,
  vec3: threejs ? THREE.Vector3 : null,
  vec4: threejs ? THREE.Vector4 : null,
  mat2: null,
  mat3: threejs ? THREE.Matrix3 : null,
  mat4: threejs ? THREE.Matrix4 : null,
  sampler2D: 0,
  samplerCube: 0
};

three = {
  int: 'i',
  float: 'f',
  vec2: 'v2',
  vec3: 'v3',
  vec4: 'v4',
  mat2: 'm2',
  mat3: 'm3',
  mat4: 'm4',
  sampler2D: 't',
  samplerCube: 't'
};

decl.type = function(name, spec, quant, count, dir, storage) {
  var dirs, inout, param, ref, storages, type, value;
  dirs = {
    "in": decl["in"],
    out: decl.out,
    inout: decl.inout
  };
  storages = {
    "const": 'const'
  };
  type = three[spec];
  if (quant) {
    type += 'v';
  }
  value = defaults[spec];
  if (value != null ? value.call : void 0) {
    value = new value;
  }
  if (quant) {
    value = [value];
  }
  inout = (ref = dirs[dir]) != null ? ref : dirs["in"];
  storage = storages[storage];
  param = decl.param(dir, storage, spec, quant, count);
  return new Definition(name, type, spec, param, value, inout);
};

Definition = (function() {
  function Definition(name1, type1, spec1, param1, value1, inout1, meta1) {
    this.name = name1;
    this.type = type1;
    this.spec = spec1;
    this.param = param1;
    this.value = value1;
    this.inout = inout1;
    this.meta = meta1;
  }

  Definition.prototype.split = function() {
    var dir, inout, isIn, param;
    isIn = this.meta.shadowed != null;
    dir = isIn ? 'in' : 'out';
    inout = isIn ? decl["in"] : decl.out;
    param = this.param.split(dir);
    return new Definition(this.name, this.type, this.spec, param, this.value, inout);
  };

  Definition.prototype.copy = function(name, meta) {
    var def;
    return def = new Definition(name != null ? name : this.name, this.type, this.spec, this.param, this.value, this.inout, meta);
  };

  return Definition;

})();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGdsc2xcXGRlY2wuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGdsc2xcXGRlY2wuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLElBQUE7O0FBQUEsTUFBTSxDQUFDLE9BQVAsR0FBaUIsSUFBQSxHQUFPOztBQUV4QixJQUFJLEVBQUMsRUFBRCxFQUFKLEdBQWE7O0FBQ2IsSUFBSSxDQUFDLEdBQUwsR0FBYTs7QUFDYixJQUFJLENBQUMsS0FBTCxHQUFhOztBQUViLEdBQUEsR0FBTSxTQUFDLENBQUQ7U0FBTyxDQUFDLENBQUMsS0FBSyxDQUFDO0FBQWY7O0FBRU4sSUFBSSxDQUFDLElBQUwsR0FBWSxTQUFDLElBQUQ7QUFFVixNQUFBO0VBQUEsMkNBQW1CLENBQUUsY0FBbEIsS0FBMEIsVUFBN0I7V0FDRSxJQUFJLEVBQUMsUUFBRCxFQUFKLENBQWMsSUFBZCxFQURGO0dBQUEsTUFHSyx1Q0FBYSxDQUFFLGNBQVosS0FBb0IsU0FBdkI7V0FDSCxJQUFJLENBQUMsUUFBTCxDQUFjLElBQWQsRUFERzs7QUFMSzs7QUFRWixJQUFJLENBQUMsUUFBTCxHQUFnQixTQUFDLElBQUQ7QUFFZCxNQUFBO0VBQUEsQ0FBQSxHQUFJLElBQUksQ0FBQztFQUVULE9BQUEsR0FBVSxHQUFBLENBQUksQ0FBRSxDQUFBLENBQUEsQ0FBTjtFQUNWLE1BQUEsR0FBVSxHQUFBLENBQUksQ0FBRSxDQUFBLENBQUEsQ0FBTjtFQUNWLElBQUEsR0FBVSxHQUFBLENBQUksQ0FBRSxDQUFBLENBQUEsQ0FBTjtFQUNWLElBQUEsR0FBVSxDQUFFLENBQUEsQ0FBQTtFQUVaLElBQXNCLE9BQUEsS0FBYSxXQUFiLElBQUEsT0FBQSxL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

},{}],201:[function(require,module,exports){
var $, Graph, _;

Graph = require('../graph');

$ = require('./constants');


/*
 GLSL code generator for compiler and linker stubs
 */

module.exports = _ = {
  unshadow: function(name) {
    var real;
    real = name.replace($.SHADOW_ARG, '');
    if (real !== name) {
      return real;
    } else {
      return null;
    }
  },
  lines: function(lines) {
    return lines.join('\n');
  },
  list: function(lines) {
    return lines.join(', ');
  },
  statements: function(lines) {
    return lines.join(';\n');
  },
  body: function(entry) {
    return {
      entry: entry,
      type: 'void',
      params: [],
      signature: [],
      "return": '',
      vars: {},
      calls: [],
      post: [],
      chain: {}
    };
  },
  define: function(a, b) {
    return "#define " + a + " " + b;
  },
  "function": function(type, entry, params, vars, calls) {
    return type + " " + entry + "(" + params + ") {\n" + vars + calls + "}";
  },
  invoke: function(ret, entry, args) {
    ret = ret ? ret + " = " : '';
    args = _.list(args);
    return "  " + ret + entry + "(" + args + ")";
  },
  same: function(a, b) {
    var A, B, i, k, len;
    for (i = k = 0, len = a.length; k < len; i = ++k) {
      A = a[i];
      B = b[i];
      if (!B) {
        return false;
      }
      if (A.type !== B.type) {
        return false;
      }
      if ((A.name === $.RETURN_ARG) !== (B.name === $.RETURN_ARG)) {
        return false;
      }
    }
    return true;
  },
  call: function(lookup, dangling, entry, signature, body) {
    var arg, args, copy, id, inout, isReturn, k, len, meta, name, omit, op, other, ref, ref1, ret, rets, shadow;
    args = [];
    ret = '';
    rets = 1;
    for (k = 0, len = signature.length; k < len; k++) {
      arg = signature[k];
      name = arg.name;
      copy = id = lookup(name);
      other = null;
      meta = null;
      omit = false;
      inout = arg.inout;
      isReturn = name === $.RETURN_ARG;
      if (shadow = (ref = arg.meta) != null ? ref.shadowed : void 0) {
        other = lookup(shadow);
        if (other) {
          body.vars[other] = "  " + arg.param(other);
          body.calls.push("  " + other + " = " + id);
          if (!dangling(shadow)) {
            arg = arg.split();
          } else {
            meta = {
              shadowed: other
            };
          }
        }
      }
      if (shadow = (ref1 = arg.meta) != null ? ref1.shadow : void 0) {
        other = lookup(shadow);
        if (other) {
          if (!dangling(shadow)) {
            arg = arg.split();
            omit = true;
          } else {
            meta = {
              shadow: other
            };
            continue;
          }
        }
      }
      if (isReturn) {
        ret = id;
      } else if (!omit) {
        args.push(other != null ? other : id);
      }
      if (dangling(name)) {
        op = 'push';
        if (isReturn) {
          if (body["return"] === '') {
            op = 'unshift';
            copy = name;
            body.type = arg.spec;
            body["return"] = "  return " + id;
            body.vars[id] = "  " + arg.param(id);
          } else {
            body.vars[id] = "  " + arg.param(id);
            body.params.push(arg.param(id, true));
          }
        } else {
          body.params.push(arg.param(id, true));
        }
        arg = arg.copy(copy, meta);
        body.signature[op](arg);
      } else {
        body.vars[id] = "  " + arg.param(id);
      }
    }
    return body.calls.push(_.invoke(ret, entry, args));
  },
  build: function(body, calls) {
    var a, b, code, decl, entry, params, post, ret, type, v, vars;
    entry = body.entry;
    code = null;
    if (calls && calls.length === 1 && entry !== 'main') {
      a = body;
      b = calls[0].module;
      if (_.same(body.signature, b.main.signature)) {
        code = _.define(entry, b.entry);
      }
    }
    if (code == null) {
      vars = (function() {
        var ref, results;
        ref = body.vars;
        results = [];
        for (v in ref) {
          decl = ref[v];
          results.push(decl);
        }
        return results;
      })();
      calls = body.calls;
      post = body.post;
      params = body.params;
      type = body.type;
      ret = body["return"];
      calls = calls.concat(post);
      if (ret !== '') {
        calls.push(ret);
      }
      calls.push('');
      if (vars.length) {
        vars.push('');
        vars = _.statements(vars) + '\n';
      } else {
        vars = '';
      }
      calls = _.statements(calls);
      params = _.list(params);
      code = _["function"](type, entry, params, vars, calls);
    }
    return {
      signature: body.signature,
      code: code,
      name: entry
    };
  },
  links: function(links) {
    var k, l, len, out;
    out = {
      defs: [],
      bodies: []
    };
    for (k = 0, len = links.length; k < len; k++) {
      l = links[k];
      _.link(l, out);
    }
    out.defs = _.lines(out.defs);
    out.bodies = _.statements(out.bodies);
    if (out.defs === '') {
      delete out.defs;
    }
    if (out.bodies === '') {
      delete out.bodies;
    }
    return out;
  },
  link: (function(_this) {
    return function(link, out) {
      var _dangling, _lookup, _name, arg, entry, external, inner, ins, k, len, len1, list, main, map, module, n, name, other, outer, outs, ref, ref1, returnVar, wrapper;
      module = link.module, name = link.name, external = link.external;
      main = module.main;
      entry = module.entry;
      if (_.same(main.signature, external.signature)) {
        return out.defs.push(_.define(name, entry));
      }
      ins = [];
      outs = [];
      map = {};
      returnVar = [module.namespace, $.RETURN_ARG].join('');
      ref = external.signature;
      for (k = 0, len = ref.length; k < len; k++) {
        arg = ref[k];
        list = arg.inout === Graph.IN ? ins : outs;
        list.push(arg);
      }
      ref1 = main.signature;
      for (n = 0, len1 = ref1.length; n < len1; n++) {
        arg = ref1[n];
        list = arg.inout === Graph.IN ? ins : outs;
        other = list.shift();
        _name = other.name;
        if (_name === $.RETURN_ARG) {
          _name = returnVar;
        }
        map[arg.name] = _name;
      }
      _lookup = function(name) {
        return map[name];
      };
      _dangling = function() {
        return true;
      };
      inner = _.body();
      _.call(_lookup, _dangling, entry, main.signature, inner);
      inner.entry = entry;
      map = {
        "return": returnVar
      };
      _lookup = function(name) {
        var ref2;
        return (ref2 = map[name]) != null ? ref2 : name;
      };
      outer = _.body();
      wrapper = _.call(_lookup, _dangling, entry, external.signature, outer);
      outer.calls = inner.calls;
      outer.entry = name;
      out.bodies.push(_.build(inner).code.split(' {')[0]);
      return out.bodies.push(_.build(outer).code);
    };
  })(this),
  defuse: function(code) {
    var b, blocks, hash, head, i, j, k, len, len1, level, line, n, re, rest, strip;
    re = /([A-Za-z0-9_]+\s+)?[A-Za-z0-9_]+\s+[A-Za-z0-9_]+\s*\([^)]*\)\s*;\s*/mg;
    strip = function(code) {
      return code.replace(re, function(m) {
        return '';
      });
    };
    blocks = code.split(/(?=[{}])/g);
    level = 0;
    for (i = k = 0, len = blocks.length; k < len; i = ++k) {
      b = blocks[i];
      switch (b[0]) {
        case '{':
          level++;
          break;
        case '}':
          level--;
      }
      if (level === 0) {
        hash = b.split(/^[ \t]*#/m);
        for (j = n = 0, len1 = hash.length; n < len1; j = ++n) {
          line = hash[j];
          if (j > 0) {
            line = line.split(/\n/);
            head = line.shift();
            rest = line.join("\n");
            hash[j] = [head, strip(rest)].join('\n');
          } else {
            hash[j] = strip(line);
          }
        }
        blocks[i] = hash.join('#');
      }
    }
    return code = blocks.join('');
  },
  dedupe: function(code) {
    var map, re;
    map = {};
    re = /((attribute|uniform|varying)\s+)[A-Za-z0-9_]+\s+([A-Za-z0-9_]+)\s*(\[[^\]]*\]\s*)?;\s*/mg;
    return code.replace(re, function(m, qual, type, name, struct) {
      if (map[name]) {
        return '';
      }
      map[name] = true;
      return m;
    });
  },
  hoist: function(code) {
    var defs, k, len, line, lines, list, out, re;
    re = /^#define ([^ ]+ _pg_[0-9]+_|_pg_[0-9]+_ [^ ]+)$/;
    lines = code.split(/\n/g);
    defs = [];
    out = [];
    for (k = 0, len = lines.length; k < len; k++) {
      line = lines[k];
      list = line.match(re) ? defs : out;
      list.push(line);
    }
    return defs.concat(out).join("\n");
  }
};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGdsc2xcXGdlbmVyYXRlLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcdmVuZG9yXFxzaGFkZXJncmFwaFxcc3JjXFxnbHNsXFxnZW5lcmF0ZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQTs7QUFBQSxLQUFBLEdBQVEsT0FBQSxDQUFRLFVBQVI7O0FBQ1IsQ0FBQSxHQUFRLE9BQUEsQ0FBUSxhQUFSOzs7QUFFUjs7OztBQUlBLE1BQU0sQ0FBQyxPQUFQLEdBQWlCLENBQUEsR0FHZjtFQUFBLFFBQUEsRUFBVSxTQUFDLElBQUQ7QUFDUixRQUFBO0lBQUEsSUFBQSxHQUFPLElBQUksQ0FBQyxPQUFMLENBQWEsQ0FBQyxDQUFDLFVBQWYsRUFBMkIsRUFBM0I7SUFDUCxJQUFHLElBQUEsS0FBUSxJQUFYO2FBQXFCLEtBQXJCO0tBQUEsTUFBQTthQUErQixLQUEvQjs7RUFGUSxDQUFWO0VBS0EsS0FBQSxFQUFZLFNBQUMsS0FBRDtXQUFXLEtBQUssQ0FBQyxJQUFOLENBQVcsSUFBWDtFQUFYLENBTFo7RUFNQSxJQUFBLEVBQVksU0FBQyxLQUFEO1dBQVcsS0FBSyxDQUFDLElBQU4sQ0FBVyxJQUFYO0VBQVgsQ0FOWjtFQU9BLFVBQUEsRUFBWSxTQUFDLEtBQUQ7V0FBVyxLQUFLLENBQUMsSUFBTixDQUFXLEtBQVg7RUFBWCxDQVBaO0VBVUEsSUFBQSxFQUFNLFNBQUMsS0FBRDtXQUNKO01BQUEsS0FBQSxFQUFXLEtBQVg7TUFDQSxJQUFBLEVBQVcsTUFEWDtNQUVBLE1BQUEsRUFBVyxFQUZYO01BR0EsU0FBQSxFQUFXLEVBSFg7TUFJQSxDQUFBLE1BQUEsQ0FBQSxFQUFXLEVBSlg7TUFLQSxJQUFBLEVBQVcsRUFMWDtNQU1BLEtBQUEsRUFB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

},{"../graph":205,"./constants":199}],202:[function(require,module,exports){
var i, k, len, ref, v;

exports.compile = require('./compile');

exports.parse = require('./parse');

exports.generate = require('./generate');

ref = require('./constants');
for (v = i = 0, len = ref.length; i < len; v = ++i) {
  k = ref[v];
  exports[k] = v;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGdsc2xcXGluZGV4LmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcdmVuZG9yXFxzaGFkZXJncmFwaFxcc3JjXFxnbHNsXFxpbmRleC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQTs7QUFBQSxPQUFPLENBQUMsT0FBUixHQUFtQixPQUFBLENBQVEsV0FBUjs7QUFDbkIsT0FBTyxDQUFDLEtBQVIsR0FBbUIsT0FBQSxDQUFRLFNBQVI7O0FBQ25CLE9BQU8sQ0FBQyxRQUFSLEdBQW1CLE9BQUEsQ0FBUSxZQUFSOztBQUVuQjtBQUFBLEtBQUEsNkNBQUE7O0VBQUEsT0FBUSxDQUFBLENBQUEsQ0FBUixHQUFhO0FBQWIifQ==

},{"./compile":198,"./constants":199,"./generate":201,"./parse":203}],203:[function(require,module,exports){
var $, collect, debug, decl, extractSignatures, mapSymbols, parse, parseGLSL, parser, processAST, sortSymbols, tick, tokenizer, walk;

tokenizer = require('../../vendor/glsl-tokenizer');

parser = require('../../vendor/glsl-parser');

decl = require('./decl');

$ = require('./constants');

debug = false;


/*
parse GLSL into AST
extract all global symbols and make type signatures
 */

parse = function(name, code) {
  var ast, program;
  ast = parseGLSL(name, code);
  return program = processAST(ast, code);
};

parseGLSL = function(name, code) {
  var ast, e, error, errors, fmt, j, len, ref, ref1, tock;
  if (debug) {
    tock = tick();
  }
  try {
    ref = tokenizer().process(parser(), code), (ref1 = ref[0], ast = ref1[0]), errors = ref[1];
  } catch (error1) {
    e = error1;
    errors = [
      {
        message: e
      }
    ];
  }
  if (debug) {
    tock('GLSL Tokenize & Parse');
  }
  fmt = function(code) {
    var max, pad;
    code = code.split("\n");
    max = ("" + code.length).length;
    pad = function(v) {
      if ((v = "" + v).length < max) {
        return ("       " + v).slice(-max);
      } else {
        return v;
      }
    };
    return code.map(function(line, i) {
      return (pad(i + 1)) + ": " + line;
    }).join("\n");
  };
  if (!ast || errors.length) {
    if (!name) {
      name = '(inline code)';
    }
    console.warn(fmt(code));
    for (j = 0, len = errors.length; j < len; j++) {
      error = errors[j];
      console.error(name + " -", error.message);
    }
    throw new Error("GLSL parse error");
  }
  return ast;
};

processAST = function(ast, code) {
  var externals, internals, main, ref, signatures, symbols, tock;
  if (debug) {
    tock = tick();
  }
  symbols = [];
  walk(mapSymbols, collect(symbols), ast, '');
  ref = sortSymbols(symbols), main = ref[0], internals = ref[1], externals = ref[2];
  signatures = extractSignatures(main, internals, externals);
  if (debug) {
    tock('GLSL AST');
  }
  return {
    ast: ast,
    code: code,
    signatures: signatures
  };
};

mapSymbols = function(node, collect) {
  switch (node.type) {
    case 'decl':
      collect(decl.node(node));
      return false;
  }
  return true;
};

collect = function(out) {
  return function(value) {
    var j, len, obj, results;
    if (value != null) {
      results = [];
      for (j = 0, len = value.length; j < len; j++) {
        obj = value[j];
        results.push(out.push(obj));
      }
      return results;
    }
  };
};

sortSymbols = function(symbols) {
  var e, externals, found, internals, j, len, main, maybe, s;
  main = null;
  internals = [];
  externals = [];
  maybe = {};
  found = false;
  for (j = 0, len = symbols.length; j < len; j++) {
    s = symbols[j];
    if (!s.body) {
      if (s.storage === 'global') {
        internals.push(s);
      } else {
        externals.push(s);
        maybe[s.ident] = true;
      }
    } else {
      if (maybe[s.ident]) {
        externals = (function() {
          var k, len1, results;
          results = [];
          for (k = 0, len1 = externals.length; k < len1; k++) {
            e = externals[k];
            if (e.ident !== s.ident) {
              results.push(e);
            }
          }
          return results;
        })();
        delete maybe[s.ident];
      }
      internals.push(s);
      if (s.ident === 'main') {
        main = s;
        found = true;
      } else if (!found) {
        main = s;
      }
    }
  }
  return [main, internals, externals];
};

extractSignatures = function(main, internals, externals) {
  var def, defn, func, j, k, len, len1, sigs, symbol;
  sigs = {
    uniform: [],
    attribute: [],
    varying: [],
    external: [],
    internal: [],
    global: [],
    main: null
  };
  defn = function(symbol) {
    return decl.type(symbol.ident, symbol.type, symbol.quant, symbol.count, symbol.inout, symbol.storage);
  };
  func = function(symbol, inout) {
    var a, arg, b, d, def, inTypes, j, len, outTypes, signature, type;
    signature = (function() {
      var j, len, ref, results;
      ref = symbol.args;
      results = [];
      for (j = 0, len = ref.length; j < len; j++) {
        arg = ref[j];
        results.push(defn(arg));
      }
      return results;
    })();
    for (j = 0, len = signature.length; j < len; j++) {
      d = signature[j];
      if (!(d.inout === decl.inout)) {
        continue;
      }
      a = d;
      b = d.copy();
      a.inout = decl["in"];
      b.inout = decl.out;
      b.meta = {
        shadow: a.name
      };
      b.name += $.SHADOW_ARG;
      a.meta = {
        shadowed: b.name
      };
      signature.push(b);
    }
    if (symbol.type !== 'void') {
      signature.unshift(decl.type($.RETURN_ARG, symbol.type, false, '', 'out'));
    }
    inTypes = ((function() {
      var k, len1, results;
      results = [];
      for (k = 0, len1 = signature.length; k < len1; k++) {
        d = signature[k];
        if (d.inout === decl["in"]) {
          results.push(d.type);
        }
      }
      return results;
    })()).join(',');
    outTypes = ((function() {
      var k, len1, results;
      results = [];
      for (k = 0, len1 = signature.length; k < len1; k++) {
        d = signature[k];
        if (d.inout === decl.out) {
          results.push(d.type);
        }
      }
      return results;
    })()).join(',');
    type = "(" + inTypes + ")(" + outTypes + ")";
    return def = {
      name: symbol.ident,
      type: type,
      signature: signature,
      inout: inout,
      spec: symbol.type
    };
  };
  sigs.main = func(main, decl.out);
  for (j = 0, len = internals.length; j < len; j++) {
    symbol = internals[j];
    sigs.internal.push({
      name: symbol.ident
    });
  }
  for (k = 0, len1 = externals.length; k < len1; k++) {
    symbol = externals[k];
    switch (symbol.decl) {
      case 'external':
        def = defn(symbol);
        sigs[symbol.storage].push(def);
        break;
      case 'function':
        def = func(symbol, decl["in"]);
        sigs.external.push(def);
    }
  }
  return sigs;
};

debug = false;

walk = function(map, collect, node, indent) {
  var child, i, j, len, recurse, ref, ref1, ref2;
  debug && console.log(indent, node.type, (ref = node.token) != null ? ref.data : void 0, (ref1 = node.token) != null ? ref1.type : void 0);
  recurse = map(node, collect);
  if (recurse) {
    ref2 = node.children;
    for (i = j = 0, len = ref2.length; j < len; i = ++j) {
      child = ref2[i];
      walk(map, collect, child, indent + '  ', debug);
    }
  }
  return null;
};

tick = function() {
  var now;
  now = +(new Date);
  return function(label) {
    var delta;
    delta = +new Date() - now;
    console.log(label, delta + " ms");
    return delta;
  };
};

module.exports = walk;

module.exports = parse;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGdsc2xcXHBhcnNlLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcdmVuZG9yXFxzaGFkZXJncmFwaFxcc3JjXFxnbHNsXFxwYXJzZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQTs7QUFBQSxTQUFBLEdBQVksT0FBQSxDQUFRLDZCQUFSOztBQUNaLE1BQUEsR0FBWSxPQUFBLENBQVEsMEJBQVI7O0FBQ1osSUFBQSxHQUFZLE9BQUEsQ0FBUSxRQUFSOztBQUNaLENBQUEsR0FBWSxPQUFBLENBQVEsYUFBUjs7QUFFWixLQUFBLEdBQVE7OztBQUVSOzs7OztBQUtBLEtBQUEsR0FBUSxTQUFDLElBQUQsRUFBTyxJQUFQO0FBQ04sTUFBQTtFQUFBLEdBQUEsR0FBYSxTQUFBLENBQVUsSUFBVixFQUFnQixJQUFoQjtTQUNiLE9BQUEsR0FBYSxVQUFBLENBQVcsR0FBWCxFQUFnQixJQUFoQjtBQUZQOztBQUtSLFNBQUEsR0FBWSxTQUFDLElBQUQsRUFBTyxJQUFQO0FBRVYsTUFBQTtFQUFBLElBQWlCLEtBQWpCO0lBQUEsSUFBQSxHQUFPLElBQUEsQ0FBQSxFQUFQOztBQUdBO0lBQ0UsTUFBa0IsU0FBQSxDQUFBLENBQVcsQ0FBQyxPQUFaLENBQW9CLE1BQUEsQ0FBQSxDQUFwQixFQUE4QixJQUE5QixDQUFsQixrQkFBRSxjQUFGLEVBQVEsZ0JBRFY7R0FBQSxjQUFBO0lBRU07SUFDSixNQUFBLEdBQVM7TUFBQztRQUFDLE9BQUEsRUFBUSxDQUFUO09BQUQ7TUFIWDs7RUFLQSxJQUFnQyxLQUFoQztJQUFBLElBQUEsQ0FBSyx1QkFBTCxFQUFBOztFQUVBLEdBQUEsR0FBTSxTQUFDLElBQUQ7QUFDSixRQUFBO0lBQUEsSUFBQSxHQUFPLElBQUks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

},{"../../vendor/glsl-parser":219,"../../vendor/glsl-tokenizer":223,"./constants":199,"./decl":200}],204:[function(require,module,exports){

/*
  Graph of nodes with outlets
 */
var Graph;

Graph = (function() {
  Graph.index = 0;

  Graph.id = function(name) {
    return ++Graph.index;
  };

  Graph.IN = 0;

  Graph.OUT = 1;

  function Graph(nodes, parent) {
    this.parent = parent != null ? parent : null;
    this.id = Graph.id();
    this.nodes = [];
    nodes && this.add(nodes);
  }

  Graph.prototype.inputs = function() {
    var i, inputs, j, len, len1, node, outlet, ref, ref1;
    inputs = [];
    ref = this.nodes;
    for (i = 0, len = ref.length; i < len; i++) {
      node = ref[i];
      ref1 = node.inputs;
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        outlet = ref1[j];
        if (outlet.input === null) {
          inputs.push(outlet);
        }
      }
    }
    return inputs;
  };

  Graph.prototype.outputs = function() {
    var i, j, len, len1, node, outlet, outputs, ref, ref1;
    outputs = [];
    ref = this.nodes;
    for (i = 0, len = ref.length; i < len; i++) {
      node = ref[i];
      ref1 = node.outputs;
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        outlet = ref1[j];
        if (outlet.output.length === 0) {
          outputs.push(outlet);
        }
      }
    }
    return outputs;
  };

  Graph.prototype.getIn = function(name) {
    var outlet;
    return ((function() {
      var i, len, ref, results;
      ref = this.inputs();
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        outlet = ref[i];
        if (outlet.name === name) {
          results.push(outlet);
        }
      }
      return results;
    }).call(this))[0];
  };

  Graph.prototype.getOut = function(name) {
    var outlet;
    return ((function() {
      var i, len, ref, results;
      ref = this.outputs();
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        outlet = ref[i];
        if (outlet.name === name) {
          results.push(outlet);
        }
      }
      return results;
    }).call(this))[0];
  };

  Graph.prototype.add = function(node, ignore) {
    var _node, i, len;
    if (node.length) {
      for (i = 0, len = node.length; i < len; i++) {
        _node = node[i];
        this.add(_node);
      }
      return;
    }
    if (node.graph && !ignore) {
      throw new Error("Adding node to two graphs at once");
    }
    node.graph = this;
    return this.nodes.push(node);
  };

  Graph.prototype.remove = function(node, ignore) {
    var _node, i, len;
    if (node.length) {
      for (i = 0, len = node.length; i < len; i++) {
        _node = node[i];
        this.remove(_node);
      }
      return;
    }
    if (node.graph !== this) {
      throw new Error("Removing node from wrong graph.");
    }
    ignore || node.disconnect();
    this.nodes.splice(this.nodes.indexOf(node), 1);
    return node.graph = null;
  };

  Graph.prototype.adopt = function(node) {
    var _node, i, len;
    if (node.length) {
      for (i = 0, len = node.length; i < len; i++) {
        _node = node[i];
        this.adopt(_node);
      }
      return;
    }
    node.graph.remove(node, true);
    return this.add(node, true);
  };

  return Graph;

})();

module.exports = Graph;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGdyYXBoXFxncmFwaC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHZlbmRvclxcc2hhZGVyZ3JhcGhcXHNyY1xcZ3JhcGhcXGdyYXBoLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7OztBQUFBLElBQUE7O0FBR007RUFDSixLQUFDLENBQUEsS0FBRCxHQUFROztFQUNSLEtBQUMsQ0FBQSxFQUFELEdBQUssU0FBQyxJQUFEO1dBQVUsRUFBRSxLQUFLLENBQUM7RUFBbEI7O0VBRUwsS0FBQyxDQUFBLEVBQUQsR0FBSzs7RUFDTCxLQUFDLENBQUEsR0FBRCxHQUFNOztFQUVPLGVBQUMsS0FBRCxFQUFRLE1BQVI7SUFBUSxJQUFDLENBQUEsMEJBQUQsU0FBVTtJQUM3QixJQUFDLENBQUEsRUFBRCxHQUFTLEtBQUssQ0FBQyxFQUFOLENBQUE7SUFDVCxJQUFDLENBQUEsS0FBRCxHQUFTO0lBQ1QsS0FBQSxJQUFTLElBQUMsQ0FBQSxHQUFELENBQUssS0FBTDtFQUhFOztrQkFLYixNQUFBLEdBQVEsU0FBQTtBQUNOLFFBQUE7SUFBQSxNQUFBLEdBQVM7QUFDVDtBQUFBLFNBQUEscUNBQUE7O0FBQ0U7QUFBQSxXQUFBLHdDQUFBOztZQUFtRCxNQUFNLENBQUMsS0FBUCxLQUFnQjtVQUFuRSxNQUFNLENBQUMsSUFBUCxDQUFZLE1BQVo7O0FBQUE7QUFERjtBQUVBLFdBQU87RUFKRDs7a0JBTVIsT0FBQSxHQUFTLFNBQUE7QUFDUCxRQUFBO0lBQUEsT0FBQSxHQUFVO0FBQ1Y7QUFBQSxTQUFBLHFDQUFBOztBQUNFO0FBQUEsV0FBQSx3Q0FBQTs7WUFBcUQsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFkLEtBQXdCO1VBQTdFLE9BQU8sQ0FBQyxJQUFSLENBQWEsTUFBYjs7QUFBQTtBQURGO0FBRUEsV0FBTztFQUpBOztrQkFNVCxLQUFBLEdBQVEsU0FBQyxJQUFEO0FBQVUsUUFBQTtXQUFBOztBQUFDO0FBQUE7V0FBQSxxQ0FBQTs7WUFBcUMsTUFBTSxDQUFDLElBQVAsS0FBZTt1QkFBcEQ7O0FBQUE7O2lCQUFELENBQTJELENBQUEsQ0FBQTtFQUFyRTs7a0JBQ1IsTUFBQSxHQUFRLFNBQUMsSUFBRDtBQUFVLFFBQUE7V0FBQTs7QUFBQztBQUFBO1dBQUEscUNBQUE7O1lBQXFDLE1BQU0sQ0FBQyxJQUFQLEtBQWU7dUJBQXBEOztBQUFBOztpQkFBRCxDQUEyRCxDQUFBLENBQUE7RUFBckU7O2tCQUVSLEdBQUEsR0FBSyxTQUFDLElBQUQsRUFBTyxNQUFQO0FBRUgsUUFBQTtJQUFBLElBQUcsSUFBSSxDQUFDLE1BQVI7QUFDRSxXQUFBLHNDQUFBOztRQUFBLElBQUMsQ0FBQSxHQUFELENBQUssS0FBTDtBQUFBO0FBQ0EsYUFGRjs7SUFJQSxJQUF1RCxJQUFJLENBQUMsS0FBTCxJQUFlLENBQUMsTUFBdkU7QUFBQSxZQUFNLElBQUksS0FBSixDQUFVLG1DQUFWLEVBQU47O0lBRUEsSUFBSSxDQUFDLEtBQUwsR0FBYTtXQUNiLElBQUMsQ0FBQSxLQUFLLENBQUMsSUFBUCxDQUFZLElBQVo7RUFURzs7a0JBV0wsTUFBQSxHQUFRLFNBQUMsSUFBRCxFQUFPLE1BQVA7QUFDTixRQUFBO0lBQUEsSUFBRyxJQUFJLENBQUMsTUFBUjtBQUNFLFdBQUEsc0NBQUE7O1FBQUEsSUFBQyxDQUFBLE1BQUQsQ0FBUSxLQUFSO0FBQUE7QUFDQSxhQUZGOztJQUlBLElBQXFELElBQUksQ0FBQyxLQUFMLEtBQWMsSUFBbkU7QUFBQSxZQUFNLElBQUksS0FBSixDQUFVLGlDQUFWLEVBQU47O0lBRUEsTUFBQSxJQUFVLElBQUksQ0FBQyxVQUFMLENBQUE7SUFFVixJQUFDLENBQUEsS0FBSyxDQUFDLE1BQVAsQ0FBYyxJQUFDLENBQUEsS0FBSyxDQUFDLE9BQVAsQ0FBZSxJQUFmLENBQWQsRUFBb0MsQ0FBcEM7V0FDQSxJQUFJLENBQUMsS0FBTCxHQUFhO0VBVlA7O2tCQVlSLEtBQUEsR0FBTyxTQUFDLElBQUQ7QUFDTCxRQUFBO0lBQUEsSUFBRyxJQUFJLENBQUMsTUFBUjtBQUNFLFdBQUEsc0NBQUE7O1FBQUEsSUFBQyxDQUFBLEtBQUQsQ0FBTyxLQUFQO0FBQUE7QUFDQSxhQUZGOztJQUlBLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBWCxDQUFrQixJQUFsQixFQUF3QixJQUF4QjtXQUNBLElBQUMsQ0FBQyxHQUFGLENBQU0sSUFBTixFQUFZLElBQVo7RUFOSzs7Ozs7O0FBUVQsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{}],205:[function(require,module,exports){
exports.Graph = require('./graph');

exports.Node = require('./node');

exports.Outlet = require('./outlet');

exports.IN = exports.Graph.IN;

exports.OUT = exports.Graph.OUT;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGdyYXBoXFxpbmRleC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHZlbmRvclxcc2hhZGVyZ3JhcGhcXHNyY1xcZ3JhcGhcXGluZGV4LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLENBQUMsS0FBUixHQUFpQixPQUFBLENBQVEsU0FBUjs7QUFDakIsT0FBTyxDQUFDLElBQVIsR0FBaUIsT0FBQSxDQUFRLFFBQVI7O0FBQ2pCLE9BQU8sQ0FBQyxNQUFSLEdBQWlCLE9BQUEsQ0FBUSxVQUFSOztBQUVqQixPQUFPLENBQUMsRUFBUixHQUFjLE9BQU8sQ0FBQyxLQUFLLENBQUM7O0FBQzVCLE9BQU8sQ0FBQyxHQUFSLEdBQWMsT0FBTyxDQUFDLEtBQUssQ0FBQyJ9

},{"./graph":204,"./node":206,"./outlet":207}],206:[function(require,module,exports){
var Graph, Node, Outlet;

Graph = require('./graph');

Outlet = require('./outlet');


/*
 Node in graph.
 */

Node = (function() {
  Node.index = 0;

  Node.id = function(name) {
    return ++Node.index;
  };

  function Node(owner, outlets) {
    this.owner = owner;
    this.graph = null;
    this.inputs = [];
    this.outputs = [];
    this.all = [];
    this.outlets = null;
    this.id = Node.id();
    this.setOutlets(outlets);
  }

  Node.prototype.getIn = function(name) {
    var outlet;
    return ((function() {
      var i, len, ref, results;
      ref = this.inputs;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        outlet = ref[i];
        if (outlet.name === name) {
          results.push(outlet);
        }
      }
      return results;
    }).call(this))[0];
  };

  Node.prototype.getOut = function(name) {
    var outlet;
    return ((function() {
      var i, len, ref, results;
      ref = this.outputs;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        outlet = ref[i];
        if (outlet.name === name) {
          results.push(outlet);
        }
      }
      return results;
    }).call(this))[0];
  };

  Node.prototype.get = function(name) {
    return this.getIn(name) || this.getOut(name);
  };

  Node.prototype.setOutlets = function(outlets) {
    var existing, hash, i, j, k, key, len, len1, len2, match, outlet, ref;
    if (outlets != null) {
      if (this.outlets == null) {
        this.outlets = {};
        for (i = 0, len = outlets.length; i < len; i++) {
          outlet = outlets[i];
          if (!(outlet instanceof Outlet)) {
            outlet = Outlet.make(outlet);
          }
          this._add(outlet);
        }
        return;
      }
      hash = function(outlet) {
        return [outlet.name, outlet.inout, outlet.type].join('-');
      };
      match = {};
      for (j = 0, len1 = outlets.length; j < len1; j++) {
        outlet = outlets[j];
        match[hash(outlet)] = true;
      }
      ref = this.outlets;
      for (key in ref) {
        outlet = ref[key];
        key = hash(outlet);
        if (match[key]) {
          match[key] = outlet;
        } else {
          this._remove(outlet);
        }
      }
      for (k = 0, len2 = outlets.length; k < len2; k++) {
        outlet = outlets[k];
        existing = match[hash(outlet)];
        if (existing instanceof Outlet) {
          this._morph(existing, outlet);
        } else {
          if (!(outlet instanceof Outlet)) {
            outlet = Outlet.make(outlet);
          }
          this._add(outlet);
        }
      }
      this;
    }
    return this.outlets;
  };

  Node.prototype.connect = function(node, empty, force) {
    var dest, dests, hint, hints, i, j, k, len, len1, len2, list, outlets, ref, ref1, ref2, source, sources, type, typeHint;
    outlets = {};
    hints = {};
    typeHint = function(outlet) {
      return type + '/' + outlet.hint;
    };
    ref = node.inputs;
    for (i = 0, len = ref.length; i < len; i++) {
      dest = ref[i];
      if (!force && dest.input) {
        continue;
      }
      type = dest.type;
      hint = typeHint(dest);
      if (!hints[hint]) {
        hints[hint] = dest;
      }
      outlets[type] = list = outlets[type] || [];
      list.push(dest);
    }
    sources = this.outputs;
    sources = sources.filter(function(outlet) {
      return !(empty && outlet.output.length);
    });
    ref1 = sources.slice();
    for (j = 0, len1 = ref1.length; j < len1; j++) {
      source = ref1[j];
      type = source.type;
      hint = typeHint(source);
      dests = outlets[type];
      if (dest = hints[hint]) {
        source.connect(dest);
        delete hints[hint];
        dests.splice(dests.indexOf(dest), 1);
        sources.splice(sources.indexOf(source), 1);
      }
    }
    if (!sources.length) {
      return this;
    }
    ref2 = sources.slice();
    for (k = 0, len2 = ref2.length; k < len2; k++) {
      source = ref2[k];
      type = source.type;
      dests = outlets[type];
      if (dests && dests.length) {
        source.connect(dests.shift());
      }
    }
    return this;
  };

  Node.prototype.disconnect = function(node) {
    var i, j, len, len1, outlet, ref, ref1;
    ref = this.inputs;
    for (i = 0, len = ref.length; i < len; i++) {
      outlet = ref[i];
      outlet.disconnect();
    }
    ref1 = this.outputs;
    for (j = 0, len1 = ref1.length; j < len1; j++) {
      outlet = ref1[j];
      outlet.disconnect();
    }
    return this;
  };

  Node.prototype._key = function(outlet) {
    return [outlet.name, outlet.inout].join('-');
  };

  Node.prototype._add = function(outlet) {
    var key;
    key = this._key(outlet);
    if (outlet.node) {
      throw new Error("Adding outlet to two nodes at once.");
    }
    if (this.outlets[key]) {
      throw new Error("Adding two identical outlets to same node. (" + key + ")");
    }
    outlet.node = this;
    if (outlet.inout === Graph.IN) {
      this.inputs.push(outlet);
    }
    if (outlet.inout === Graph.OUT) {
      this.outputs.push(outlet);
    }
    this.all.push(outlet);
    return this.outlets[key] = outlet;
  };

  Node.prototype._morph = function(existing, outlet) {
    var key;
    key = this._key(outlet);
    delete this.outlets[key];
    existing.morph(outlet);
    key = this._key(outlet);
    return this.outlets[key] = outlet;
  };

  Node.prototype._remove = function(outlet) {
    var inout, key;
    key = this._key(outlet);
    inout = outlet.inout;
    if (outlet.node !== this) {
      throw new Error("Removing outlet from wrong node.");
    }
    outlet.disconnect();
    outlet.node = null;
    delete this.outlets[key];
    if (outlet.inout === Graph.IN) {
      this.inputs.splice(this.inputs.indexOf(outlet), 1);
    }
    if (outlet.inout === Graph.OUT) {
      this.outputs.splice(this.outputs.indexOf(outlet), 1);
    }
    this.all.splice(this.all.indexOf(outlet), 1);
    return this;
  };

  return Node;

})();

module.exports = Node;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGdyYXBoXFxub2RlLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcdmVuZG9yXFxzaGFkZXJncmFwaFxcc3JjXFxncmFwaFxcbm9kZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQTs7QUFBQSxLQUFBLEdBQVMsT0FBQSxDQUFRLFNBQVI7O0FBQ1QsTUFBQSxHQUFTLE9BQUEsQ0FBUSxVQUFSOzs7QUFFVDs7OztBQUdNO0VBQ0osSUFBQyxDQUFBLEtBQUQsR0FBUTs7RUFDUixJQUFDLENBQUEsRUFBRCxHQUFLLFNBQUMsSUFBRDtXQUFVLEVBQUUsSUFBSSxDQUFDO0VBQWpCOztFQUVRLGNBQUMsS0FBRCxFQUFTLE9BQVQ7SUFBQyxJQUFDLENBQUEsUUFBRDtJQUNaLElBQUMsQ0FBQSxLQUFELEdBQVc7SUFDWCxJQUFDLENBQUEsTUFBRCxHQUFXO0lBQ1gsSUFBQyxDQUFBLE9BQUQsR0FBVztJQUNYLElBQUMsQ0FBQSxHQUFELEdBQVc7SUFDWCxJQUFDLENBQUEsT0FBRCxHQUFXO0lBQ1gsSUFBQyxDQUFBLEVBQUQsR0FBVyxJQUFJLENBQUMsRUFBTCxDQUFBO0lBRVgsSUFBQyxDQUFBLFVBQUQsQ0FBWSxPQUFaO0VBUlc7O2lCQVdiLEtBQUEsR0FBTyxTQUFDLElBQUQ7QUFDTCxRQUFBO1dBQUE7O0FBQUM7QUFBQTtXQUFBLHFDQUFBOztZQUFrQyxNQUFNLENBQUMsSUFBUCxLQUFlO3VCQUFqRDs7QUFBQTs7aUJBQUQsQ0FBd0QsQ0FBQSxDQUFBO0VBRG5EOztpQkFJUCxNQUFBLEdBQVEsU0FBQyxJQUFEO0FBQ04sUUFBQTtXQUFBOztBQUFDO0FBQUE7V0FBQSxxQ0FBQTs7WUFBbUMsTUFBTSxDQUFDLElBQVAsS0FBZTt1QkFBbEQ7O0FB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

},{"./graph":204,"./outlet":207}],207:[function(require,module,exports){
var Graph, Outlet;

Graph = require('./graph');


/*
  In/out outlet on node
 */

Outlet = (function() {
  Outlet.make = function(outlet, extra) {
    var key, meta, ref, value;
    if (extra == null) {
      extra = {};
    }
    meta = extra;
    if (outlet.meta != null) {
      ref = outlet.meta;
      for (key in ref) {
        value = ref[key];
        meta[key] = value;
      }
    }
    return new Outlet(outlet.inout, outlet.name, outlet.hint, outlet.type, meta);
  };

  Outlet.index = 0;

  Outlet.id = function(name) {
    return "_io_" + (++Outlet.index) + "_" + name;
  };

  Outlet.hint = function(name) {
    name = name.replace(/^_io_[0-9]+_/, '');
    name = name.replace(/_i_o$/, '');
    return name = name.replace(/(In|Out|Inout|InOut)$/, '');
  };

  function Outlet(inout, name1, hint, type, meta1, id) {
    this.inout = inout;
    this.name = name1;
    this.hint = hint;
    this.type = type;
    this.meta = meta1 != null ? meta1 : {};
    this.id = id;
    if (this.hint == null) {
      this.hint = Outlet.hint(this.name);
    }
    this.node = null;
    this.input = null;
    this.output = [];
    if (this.id == null) {
      this.id = Outlet.id(this.hint);
    }
  }

  Outlet.prototype.morph = function(outlet) {
    this.inout = outlet.inout;
    this.name = outlet.name;
    this.hint = outlet.hint;
    this.type = outlet.type;
    return this.meta = outlet.meta;
  };

  Outlet.prototype.dupe = function(name) {
    var outlet;
    if (name == null) {
      name = this.id;
    }
    outlet = Outlet.make(this);
    outlet.name = name;
    return outlet;
  };

  Outlet.prototype.connect = function(outlet) {
    if (this.inout === Graph.IN && outlet.inout === Graph.OUT) {
      return outlet.connect(this);
    }
    if (this.inout !== Graph.OUT || outlet.inout !== Graph.IN) {
      throw new Error("Can only connect out to in.");
    }
    if (outlet.input === this) {
      return;
    }
    outlet.disconnect();
    outlet.input = this;
    return this.output.push(outlet);
  };

  Outlet.prototype.disconnect = function(outlet) {
    var i, index, len, ref;
    if (this.input) {
      this.input.disconnect(this);
    }
    if (this.output.length) {
      if (outlet) {
        index = this.output.indexOf(outlet);
        if (index >= 0) {
          this.output.splice(index, 1);
          return outlet.input = null;
        }
      } else {
        ref = this.output;
        for (i = 0, len = ref.length; i < len; i++) {
          outlet = ref[i];
          outlet.input = null;
        }
        return this.output = [];
      }
    }
  };

  return Outlet;

})();

module.exports = Outlet;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGdyYXBoXFxvdXRsZXQuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGdyYXBoXFxvdXRsZXQuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUE7O0FBQUEsS0FBQSxHQUFRLE9BQUEsQ0FBUSxTQUFSOzs7QUFFUjs7OztBQUdNO0VBQ0osTUFBQyxDQUFBLElBQUQsR0FBUSxTQUFDLE1BQUQsRUFBUyxLQUFUO0FBQ04sUUFBQTs7TUFEZSxRQUFROztJQUN2QixJQUFBLEdBQU87SUFDUCxJQUFtRCxtQkFBbkQ7QUFBQTtBQUFBLFdBQUEsVUFBQTs7UUFBQSxJQUFLLENBQUEsR0FBQSxDQUFMLEdBQVk7QUFBWixPQUFBOztXQUNBLElBQUksTUFBSixDQUFXLE1BQU0sQ0FBQyxLQUFsQixFQUNXLE1BQU0sQ0FBQyxJQURsQixFQUVXLE1BQU0sQ0FBQyxJQUZsQixFQUdXLE1BQU0sQ0FBQyxJQUhsQixFQUlXLElBSlg7RUFITTs7RUFTUixNQUFDLENBQUEsS0FBRCxHQUFTOztFQUNULE1BQUMsQ0FBQSxFQUFELEdBQU0sU0FBQyxJQUFEO1dBQ0osTUFBQSxHQUFNLENBQUMsRUFBRSxNQUFNLENBQUMsS0FBVixDQUFOLEdBQXNCLEdBQXRCLEdBQXlCO0VBRHJCOztFQUdOLE1BQUMsQ0FBQSxJQUFELEdBQVEsU0FBQyxJQUFEO0lBQ04sSUFBQSxHQUFPLElBQUksQ0FBQyxPQUFMLENBQWEsY0FBYixFQUE2QixFQUE3QjtJQUNQLElBQUEsR0FBTyxJQUFJLENBQUMsT0FBTCxDQUFhLE9BQWIsRUFBc0IsRUFBdEI7V0FDUCxJQUFBLEdBQU8sSUFBSSxDQUFDLE9BQUwsQ0FBYSx1QkFBYixFQUFzQyxFQUF0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

},{"./graph":204}],208:[function(require,module,exports){
var Block, Factory, GLSL, Graph, Linker, ShaderGraph, Snippet, Visualize, cache, inspect, library, merge, visualize;

Block = require('./block');

Factory = require('./factory');

GLSL = require('./glsl');

Graph = require('./graph');

Linker = require('./linker');

Visualize = require('./visualize');

library = Factory.library;

cache = Factory.cache;

visualize = Visualize.visualize;

inspect = Visualize.inspect;

Snippet = Linker.Snippet;

merge = function(a, b) {
  var key, out, ref, value;
  if (b == null) {
    b = {};
  }
  out = {};
  for (key in a) {
    value = a[key];
    out[key] = (ref = b[key]) != null ? ref : a[key];
  }
  return out;
};

ShaderGraph = (function() {
  function ShaderGraph(snippets, config) {
    var defaults;
    if (!(this instanceof ShaderGraph)) {
      return new ShaderGraph(snippets, config);
    }
    defaults = {
      globalUniforms: false,
      globalVaryings: true,
      globalAttributes: true,
      globals: [],
      autoInspect: false
    };
    this.config = merge(defaults, config);
    this.fetch = cache(library(GLSL, snippets, Snippet.load));
  }

  ShaderGraph.prototype.shader = function(config) {
    var _config;
    if (config == null) {
      config = {};
    }
    _config = merge(this.config, config);
    return new Factory.Factory(GLSL, this.fetch, _config);
  };

  ShaderGraph.prototype.material = function(config) {
    return new Factory.Material(this.shader(config), this.shader(config));
  };

  ShaderGraph.prototype.overlay = function(shader) {
    return ShaderGraph.overlay(shader);
  };

  ShaderGraph.prototype.visualize = function(shader) {
    return ShaderGraph.visualize(shader);
  };

  ShaderGraph.Block = Block;

  ShaderGraph.Factory = Factory;

  ShaderGraph.GLSL = GLSL;

  ShaderGraph.Graph = Graph;

  ShaderGraph.Linker = Linker;

  ShaderGraph.Visualize = Visualize;

  ShaderGraph.inspect = function(shader) {
    return inspect(shader);
  };

  ShaderGraph.visualize = function(shader) {
    return visualize(shader);
  };

  return ShaderGraph;

})();

module.exports = ShaderGraph;

if (typeof window !== 'undefined') {
  window.ShaderGraph = ShaderGraph;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGluZGV4LmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcdmVuZG9yXFxzaGFkZXJncmFwaFxcc3JjXFxpbmRleC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQTs7QUFBQSxLQUFBLEdBQVksT0FBQSxDQUFRLFNBQVI7O0FBQ1osT0FBQSxHQUFZLE9BQUEsQ0FBUSxXQUFSOztBQUNaLElBQUEsR0FBWSxPQUFBLENBQVEsUUFBUjs7QUFDWixLQUFBLEdBQVksT0FBQSxDQUFRLFNBQVI7O0FBQ1osTUFBQSxHQUFZLE9BQUEsQ0FBUSxVQUFSOztBQUNaLFNBQUEsR0FBWSxPQUFBLENBQVEsYUFBUjs7QUFFWixPQUFBLEdBQVksT0FBTyxDQUFDOztBQUNwQixLQUFBLEdBQVksT0FBTyxDQUFDOztBQUNwQixTQUFBLEdBQVksU0FBUyxDQUFDOztBQUN0QixPQUFBLEdBQVksU0FBUyxDQUFDOztBQUV0QixPQUFBLEdBQVksTUFBTSxDQUFDOztBQUVuQixLQUFBLEdBQVEsU0FBQyxDQUFELEVBQUksQ0FBSjtBQUNOLE1BQUE7O0lBRFUsSUFBSTs7RUFDZCxHQUFBLEdBQU07QUFDTixPQUFBLFFBQUE7O0lBQUEsR0FBSSxDQUFBLEdBQUEsQ0FBSixrQ0FBb0IsQ0FBRSxDQUFBLEdBQUE7QUFBdEI7U0FDQTtBQUhNOztBQUtGO0VBQ1MscUJBQUMsUUFBRCxFQUFXLE1BQVg7QUFDWCxRQUFBO0lBQUEsSUFBMkMsQ0FBQSxDQUFBLElBQUEsWUFBYyxXQUFkLENBQTNDO0FBQUEsYUFBTyxJQUFJLFdBQUosQ0FBZ0IsUUFBaEIsRUFBMEIsTUFBMUIsRUFBUDs7SUFFQSxRQUFBLEdBQ0U7TUFBQSxjQUFBLEVBQWtCLEtBQWxCO01BQ0EsY0FBQSxFQUFrQixJQURsQjtNQUVBLGdCQUFBLEVBQWtCLElBRmxCO01BR0EsT0FBQSxFQUFrQixFQUhsQjtNQUlBLFdBQUEsRUFBa0IsS0FKbEI7O0lBTUYsSUFBQyxDQUFBLE1BQUQsR0FBVSxLQUFBLENBQU0sUUFBTixFQUFnQixNQUFoQjtJQUNWLElBQUMsQ0FBQSxLQUFELEdBQVUsS0FBQSxDQUFNLE9BQUEsQ0FBUSxJQUFSLEVBQWMsUUFBZCxFQUF3QixPQUFPLENBQUMsSUFBaEMsQ0FBTjtFQVhDOzt3QkFhYixNQUFBLEdBQVEsU0FBQyxNQUFEO0FBQ04sUUFBQTs7TUFETyxTQUFTOztJQUNoQixPQUFBLEdBQVUsS0FBQSxDQUFNLElBQUMsQ0FBQSxNQUFQLEVBQWUsTUFBZjtXQUNWLElBQUksT0FBTyxDQUFDLE9BQVosQ0FBb0IsSUFBcEIsRUFBMEIsSUFBQyxDQUFBLEtBQTNCLEVBQWtDLE9BQWxDO0VBRk07O3dCQUlSLFFBQUEsR0FBVSxTQUFDLE1BQUQ7V0FDUixJQUFJLE9BQU8sQ0FBQyxRQUFaLENBQXFCLElBQUMsQ0FBQSxNQUFELENBQVEsTUFBUixDQUFyQixFQUFzQyxJQUFDLENBQUEsTUFBRCxDQUFRLE1BQVIsQ0FBdEM7RUFEUTs7d0JBR1YsT0FBQSxHQUFXLFNBQUMsTUFBRDtXQUFZLFdBQVcsQ0FBQyxPQUFaLENBQXNCLE1BQXRCO0VBQVo7O3dCQUNYLFNBQUEsR0FBVyxTQUFDLE1BQUQ7V0FBWSxXQUFXLENBQUMsU0FBWixDQUFzQixNQUF0QjtFQUFaOztFQUdYLFdBQUMsQ0FBQSxLQUFELEdBQVk7O0VBQ1osV0FBQyxDQUFBLE9BQUQsR0FBWTs7RUFDWixXQUFDLENBQUEsSUFBRCxHQUFZOztFQUNaLFdBQUMsQ0FBQSxLQUFELEdBQVk7O0VBQ1osV0FBQyxDQUFBLE1BQUQsR0FBWTs7RUFDWixXQUFDLENBQUEsU0FBRCxHQUFZOztFQUdaLFdBQUMsQ0FBQSxPQUFELEdBQWEsU0FBQyxNQUFEO1dBQVksT0FBQSxDQUFRLE1BQVI7RUFBWjs7RUFDYixXQUFDLENBQUEsU0FBRCxHQUFhLFNBQUMsTUFBRDtXQUFZLFNBQUEsQ0FBVSxNQUFWO0VBQVo7Ozs7OztBQUVmLE1BQU0sQ0FBQyxPQUFQLEdBQWlCOztBQUNqQixJQUFvQyxPQUFPLE1BQVAsS0FBaUIsV0FBckQ7RUFBQSxNQUFNLENBQUMsV0FBUCxHQUFxQixZQUFyQiJ9

},{"./block":188,"./factory":194,"./glsl":202,"./graph":205,"./linker":210,"./visualize":216}],209:[function(require,module,exports){
var Graph, Priority, assemble;

Graph = require('../graph');

Priority = require('./priority');


/*
  Program assembler

  Builds composite program that can act as new module/snippet
  Unconnected input/outputs and undefined callbacks are exposed in the new global/main scope
  If there is only one call with an identical call signature, a #define is output instead.
 */

assemble = function(language, namespace, calls, requires) {
  var adopt, attributes, externals, generate, handle, include, isDangling, library, lookup, process, required, symbols, uniforms, varyings;
  generate = language.generate;
  externals = {};
  symbols = [];
  uniforms = {};
  varyings = {};
  attributes = {};
  library = {};
  process = function() {
    var body, code, includes, lib, main, ns, r, ref, sorted;
    for (ns in requires) {
      r = requires[ns];
      required(r.node, r.module);
    }
    ref = handle(calls), body = ref[0], calls = ref[1];
    if (namespace != null) {
      body.entry = namespace;
    }
    main = generate.build(body, calls);
    sorted = ((function() {
      var results;
      results = [];
      for (ns in library) {
        lib = library[ns];
        results.push(lib);
      }
      return results;
    })()).sort(function(a, b) {
      return Priority.compare(a.priority, b.priority);
    });
    includes = sorted.map(function(x) {
      return x.code;
    });
    includes.push(main.code);
    code = generate.lines(includes);
    return {
      namespace: main.name,
      library: library,
      body: main.code,
      code: code,
      main: main,
      entry: main.name,
      symbols: symbols,
      externals: externals,
      uniforms: uniforms,
      varyings: varyings,
      attributes: attributes
    };
  };
  handle = (function(_this) {
    return function(calls) {
      var body, c, call, i, len, ns;
      calls = (function() {
        var results;
        results = [];
        for (ns in calls) {
          c = calls[ns];
          results.push(c);
        }
        return results;
      })();
      calls.sort(function(a, b) {
        return b.priority - a.priority;
      });
      call = function(node, module, priority) {
        var _dangling, _lookup, entry, main;
        include(node, module, priority);
        main = module.main;
        entry = module.entry;
        _lookup = function(name) {
          return lookup(node, name);
        };
        _dangling = function(name) {
          return isDangling(node, name);
        };
        return generate.call(_lookup, _dangling, entry, main.signature, body);
      };
      body = generate.body();
      for (i = 0, len = calls.length; i < len; i++) {
        c = calls[i];
        call(c.node, c.module, c.priority);
      }
      return [body, calls];
    };
  })(this);
  adopt = function(namespace, code, priority) {
    var record;
    record = library[namespace];
    if (record != null) {
      return record.priority = Priority.max(record.priority, priority);
    } else {
      return library[namespace] = {
        code: code,
        priority: priority
      };
    }
  };
  include = function(node, module, priority) {
    var def, key, lib, ns, ref, ref1, ref2, ref3;
    priority = Priority.make(priority);
    ref = module.library;
    for (ns in ref) {
      lib = ref[ns];
      adopt(ns, lib.code, Priority.nest(priority, lib.priority));
    }
    adopt(module.namespace, module.body, priority);
    ref1 = module.uniforms;
    for (key in ref1) {
      def = ref1[key];
      uniforms[key] = def;
    }
    ref2 = module.varyings;
    for (key in ref2) {
      def = ref2[key];
      varyings[key] = def;
    }
    ref3 = module.attributes;
    for (key in ref3) {
      def = ref3[key];
      attributes[key] = def;
    }
    return required(node, module);
  };
  required = function(node, module) {
    var copy, ext, i, k, key, len, ref, results, v;
    ref = module.symbols;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      key = ref[i];
      ext = module.externals[key];
      if (isDangling(node, ext.name)) {
        copy = {};
        for (k in ext) {
          v = ext[k];
          copy[k] = v;
        }
        copy.name = lookup(node, ext.name);
        externals[key] = copy;
        results.push(symbols.push(key));
      } else {
        results.push(void 0);
      }
    }
    return results;
  };
  isDangling = function(node, name) {
    var outlet;
    outlet = node.get(name);
    if (outlet.inout === Graph.IN) {
      return outlet.input === null;
    } else if (outlet.inout === Graph.OUT) {
      return outlet.output.length === 0;
    }
  };
  lookup = function(node, name) {
    var outlet;
    outlet = node.get(name);
    if (!outlet) {
      return null;
    }
    if (outlet.input) {
      outlet = outlet.input;
    }
    name = outlet.name;
    return outlet.id;
  };
  return process();
};

module.exports = assemble;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGxpbmtlclxcYXNzZW1ibGUuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGxpbmtlclxcYXNzZW1ibGUuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUE7O0FBQUEsS0FBQSxHQUFhLE9BQUEsQ0FBUSxVQUFSOztBQUNiLFFBQUEsR0FBYSxPQUFBLENBQVEsWUFBUjs7O0FBRWI7Ozs7Ozs7O0FBT0EsUUFBQSxHQUFXLFNBQUMsUUFBRCxFQUFXLFNBQVgsRUFBc0IsS0FBdEIsRUFBNkIsUUFBN0I7QUFFVCxNQUFBO0VBQUEsUUFBQSxHQUFXLFFBQVEsQ0FBQztFQUVwQixTQUFBLEdBQWE7RUFDYixPQUFBLEdBQWE7RUFDYixRQUFBLEdBQWE7RUFDYixRQUFBLEdBQWE7RUFDYixVQUFBLEdBQWE7RUFDYixPQUFBLEdBQWE7RUFFYixPQUFBLEdBQVUsU0FBQTtBQUVSLFFBQUE7QUFBQSxTQUFBLGNBQUE7O01BQUEsUUFBQSxDQUFTLENBQUMsQ0FBQyxJQUFYLEVBQWlCLENBQUMsQ0FBQyxNQUFuQjtBQUFBO0lBRUEsTUFBZ0IsTUFBQSxDQUFPLEtBQVAsQ0FBaEIsRUFBQyxhQUFELEVBQU87SUFDUCxJQUE2QixpQkFBN0I7TUFBQSxJQUFJLENBQUMsS0FBTCxHQUFnQixVQUFoQjs7SUFDQSxJQUFBLEdBQWdCLFFBQVEsQ0FBQyxLQUFULENBQWUsSUFBZixFQUFxQixLQUFyQjtJQUVoQixNQUFBLEdBQVc7O0FBQUM7V0FBQSxhQUFBOztxQkFBQTtBQUFBOztRQUFELENBQTRCLENBQUMsSUFBN0IsQ0FBa0MsU0FBQyxDQUFELEVBQUksQ0FBSjthQUFVLFFBQVEsQ0FBQyxPQUFULENBQWlCLENBQUMs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

},{"../graph":205,"./priority":213}],210:[function(require,module,exports){
exports.Snippet = require('./snippet');

exports.Program = require('./program');

exports.Layout = require('./layout');

exports.assemble = require('./assemble');

exports.link = require('./link');

exports.priority = require('./priority');

exports.load = exports.Snippet.load;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGxpbmtlclxcaW5kZXguY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGxpbmtlclxcaW5kZXguY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sQ0FBQyxPQUFSLEdBQW1CLE9BQUEsQ0FBUSxXQUFSOztBQUNuQixPQUFPLENBQUMsT0FBUixHQUFtQixPQUFBLENBQVEsV0FBUjs7QUFDbkIsT0FBTyxDQUFDLE1BQVIsR0FBbUIsT0FBQSxDQUFRLFVBQVI7O0FBQ25CLE9BQU8sQ0FBQyxRQUFSLEdBQW1CLE9BQUEsQ0FBUSxZQUFSOztBQUNuQixPQUFPLENBQUMsSUFBUixHQUFtQixPQUFBLENBQVEsUUFBUjs7QUFDbkIsT0FBTyxDQUFDLFFBQVIsR0FBbUIsT0FBQSxDQUFRLFlBQVI7O0FBRW5CLE9BQU8sQ0FBQyxJQUFSLEdBQWUsT0FBTyxDQUFDLE9BQU8sQ0FBQyJ9

},{"./assemble":209,"./layout":211,"./link":212,"./priority":213,"./program":214,"./snippet":215}],211:[function(require,module,exports){
var Layout, Snippet, debug, link;

Snippet = require('./snippet');

link = require('./link');

debug = false;


/*
  Program linkage layout
  
  Entry points are added to its dependency graph
  Callbacks are linked either with a go-between function
  or a #define if the signatures are identical.
 */

Layout = (function() {
  function Layout(language, graph) {
    this.language = language;
    this.graph = graph;
    this.links = [];
    this.includes = [];
    this.modules = {};
    this.visits = {};
  }

  Layout.prototype.callback = function(node, module, priority, name, external) {
    return this.links.push({
      node: node,
      module: module,
      priority: priority,
      name: name,
      external: external
    });
  };

  Layout.prototype.include = function(node, module, priority) {
    var m;
    if ((m = this.modules[module.namespace]) != null) {
      return m.priority = Math.max(priority, m.priority);
    } else {
      this.modules[module.namespace] = true;
      return this.includes.push({
        node: node,
        module: module,
        priority: priority
      });
    }
  };

  Layout.prototype.visit = function(namespace) {
    debug && console.log('Visit', namespace, !this.visits[namespace]);
    if (this.visits[namespace]) {
      return false;
    }
    return this.visits[namespace] = true;
  };

  Layout.prototype.link = function(module) {
    var data, key, snippet;
    data = link(this.language, this.links, this.includes, module);
    snippet = new Snippet;
    for (key in data) {
      snippet[key] = data[key];
    }
    snippet.graph = this.graph;
    return snippet;
  };

  return Layout;

})();

module.exports = Layout;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGxpbmtlclxcbGF5b3V0LmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcdmVuZG9yXFxzaGFkZXJncmFwaFxcc3JjXFxsaW5rZXJcXGxheW91dC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQTs7QUFBQSxPQUFBLEdBQVcsT0FBQSxDQUFRLFdBQVI7O0FBQ1gsSUFBQSxHQUFXLE9BQUEsQ0FBUSxRQUFSOztBQUVYLEtBQUEsR0FBUTs7O0FBRVI7Ozs7Ozs7O0FBT007RUFFUyxnQkFBQyxRQUFELEVBQVksS0FBWjtJQUFDLElBQUMsQ0FBQSxXQUFEO0lBQVcsSUFBQyxDQUFBLFFBQUQ7SUFDdkIsSUFBQyxDQUFBLEtBQUQsR0FBWTtJQUNaLElBQUMsQ0FBQSxRQUFELEdBQVk7SUFDWixJQUFDLENBQUEsT0FBRCxHQUFZO0lBQ1osSUFBQyxDQUFBLE1BQUQsR0FBWTtFQUpEOzttQkFPYixRQUFBLEdBQVUsU0FBQyxJQUFELEVBQU8sTUFBUCxFQUFlLFFBQWYsRUFBeUIsSUFBekIsRUFBK0IsUUFBL0I7V0FDUixJQUFDLENBQUEsS0FBSyxDQUFDLElBQVAsQ0FBWTtNQUFDLE1BQUEsSUFBRDtNQUFPLFFBQUEsTUFBUDtNQUFlLFVBQUEsUUFBZjtNQUF5QixNQUFBLElBQXpCO01BQStCLFVBQUEsUUFBL0I7S0FBWjtFQURROzttQkFJVixPQUFBLEdBQVMsU0FBQyxJQUFELEVBQU8sTUFBUCxFQUFlLFFBQWY7QUFDUCxRQUFBO0lBQUEsSUFBRyw0Q0FBSDthQUNFLENBQUMsQ0FBQyxRQUFGLEdBQWEsSUFBSSxDQUFDLEdBQUwsQ0FBUyxRQUFULEVBQW1CLENBQUMsQ0FBQyxRQUFyQixFQURmO0tBQUEsTUFBQTtNQUdFLElBQUMsQ0FBQSxPQUFRLENBQUEsTUFBTSxDQUFDLFNBQVAsQ0FBVCxHQUE2QjthQUM3QixJQUFDLENBQUEsUUFBUSxDQUFDLElBQVYsQ0FBZTtRQUFDLE1BQUEsSUFBRDtRQUFPLFFBQUEsTUFBUDtRQUFlLFVBQUEsUUFBZjtPQUFmLEVBSkY7O0VBRE87O21CQVFULEtBQUEsR0FBTyxTQUFDLFNBQUQ7SUFDTCxLQUFBLElBQVMsT0FBTyxDQUFDLEdBQVIsQ0FBWSxPQUFaLEVBQXFCLFNBQXJCLEVBQWdDLENBQUMsSUFBQyxDQUFBLE1BQU8sQ0FBQSxTQUFBLENBQXpDO0lBQ1QsSUFBZ0IsSUFBQyxDQUFBLE1BQU8sQ0FBQSxTQUFBLENBQXhCO0FBQUEsYUFBTyxNQUFQOztXQUNBLElBQUMsQ0FBQSxNQUFPLENBQUEsU0FBQSxDQUFSLEdBQXFCO0VBSGhCOzttQkFNUCxJQUFBLEdBQU0sU0FBQyxNQUFEO0FBQ0osUUFBQTtJQUFBLElBQUEsR0FBZ0IsSUFBQSxDQUFLLElBQUMsQ0FBQSxRQUFOLEVBQWdCLElBQUMsQ0FBQSxLQUFqQixFQUF3QixJQUFDLENBQUEsUUFBekIsRUFBbUMsTUFBbkM7SUFDaEIsT0FBQSxHQUFnQixJQUFJO0FBQ3BCLFNBQUEsV0FBQTtNQUFBLE9BQVEsQ0FBQSxHQUFBLENBQVIsR0FBZ0IsSUFBSyxDQUFBLEdBQUE7QUFBckI7SUFDQSxPQUFPLENBQUMsS0FBUixHQUFnQixJQUFDLENBQUE7V0FDakI7RUFMSTs7Ozs7O0FBUVIsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"./link":212,"./snippet":215}],212:[function(require,module,exports){
var Graph, Priority, link;

Graph = require('../graph');

Priority = require('./priority');


/*
 Callback linker
 
 Imports given modules and generates linkages for registered callbacks.

 Builds composite program with single module as exported entry point
 */

link = function(language, links, modules, exported) {
  var adopt, attributes, externals, generate, include, includes, isDangling, library, process, symbols, uniforms, varyings;
  generate = language.generate;
  includes = [];
  symbols = [];
  externals = {};
  uniforms = {};
  attributes = {};
  varyings = {};
  library = {};
  process = function() {
    var code, e, exports, header, i, len, lib, m, ns, sorted;
    exports = generate.links(links);
    header = [];
    if (exports.defs != null) {
      header.push(exports.defs);
    }
    if (exports.bodies != null) {
      header.push(exports.bodies);
    }
    for (i = 0, len = modules.length; i < len; i++) {
      m = modules[i];
      include(m.node, m.module, m.priority);
    }
    sorted = ((function() {
      var results;
      results = [];
      for (ns in library) {
        lib = library[ns];
        results.push(lib);
      }
      return results;
    })()).sort(function(a, b) {
      return Priority.compare(a.priority, b.priority);
    });
    includes = sorted.map(function(x) {
      return x.code;
    });
    code = generate.lines(includes);
    code = generate.defuse(code);
    if (header.length) {
      code = [generate.lines(header), code].join("\n");
    }
    code = generate.hoist(code);
    code = generate.dedupe(code);
    e = exported;
    return {
      namespace: e.main.name,
      code: code,
      main: e.main,
      entry: e.main.name,
      externals: externals,
      uniforms: uniforms,
      attributes: attributes,
      varyings: varyings
    };
  };
  adopt = function(namespace, code, priority) {
    var record;
    record = library[namespace];
    if (record != null) {
      return record.priority = Priority.max(record.priority, priority);
    } else {
      return library[namespace] = {
        code: code,
        priority: priority
      };
    }
  };
  include = function(node, module, priority) {
    var def, ext, i, key, len, lib, ns, ref, ref1, ref2, ref3, ref4, results;
    priority = Priority.make(priority);
    ref = module.library;
    for (ns in ref) {
      lib = ref[ns];
      adopt(ns, lib.code, Priority.nest(priority, lib.priority));
    }
    adopt(module.namespace, module.body, priority);
    ref1 = module.uniforms;
    for (key in ref1) {
      def = ref1[key];
      uniforms[key] = def;
    }
    ref2 = module.varyings;
    for (key in ref2) {
      def = ref2[key];
      varyings[key] = def;
    }
    ref3 = module.attributes;
    for (key in ref3) {
      def = ref3[key];
      attributes[key] = def;
    }
    ref4 = module.symbols;
    results = [];
    for (i = 0, len = ref4.length; i < len; i++) {
      key = ref4[i];
      ext = module.externals[key];
      if (isDangling(node, ext.name)) {
        externals[key] = ext;
        results.push(symbols.push(key));
      } else {
        results.push(void 0);
      }
    }
    return results;
  };
  isDangling = function(node, name) {
    var module, outlet, ref, ref1;
    outlet = node.get(name);
    if (!outlet) {
      module = (ref = (ref1 = node.owner.snippet) != null ? ref1._name : void 0) != null ? ref : node.owner.namespace;
      throw new Error("Unable to link program. Unlinked callback `" + name + "` on `" + module + "`");
    }
    if (outlet.inout === Graph.IN) {
      return outlet.input === null;
    } else if (outlet.inout === Graph.OUT) {
      return outlet.output.length === 0;
    }
  };
  return process();
};

module.exports = link;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGxpbmtlclxcbGluay5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHZlbmRvclxcc2hhZGVyZ3JhcGhcXHNyY1xcbGlua2VyXFxsaW5rLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBOztBQUFBLEtBQUEsR0FBYSxPQUFBLENBQVEsVUFBUjs7QUFDYixRQUFBLEdBQWEsT0FBQSxDQUFRLFlBQVI7OztBQUViOzs7Ozs7OztBQVFBLElBQUEsR0FBTyxTQUFDLFFBQUQsRUFBVyxLQUFYLEVBQWtCLE9BQWxCLEVBQTJCLFFBQTNCO0FBRUwsTUFBQTtFQUFBLFFBQUEsR0FBVyxRQUFRLENBQUM7RUFDcEIsUUFBQSxHQUFhO0VBRWIsT0FBQSxHQUFhO0VBQ2IsU0FBQSxHQUFhO0VBQ2IsUUFBQSxHQUFhO0VBQ2IsVUFBQSxHQUFhO0VBQ2IsUUFBQSxHQUFhO0VBQ2IsT0FBQSxHQUFhO0VBRWIsT0FBQSxHQUFVLFNBQUE7QUFFUixRQUFBO0lBQUEsT0FBQSxHQUFVLFFBQVEsQ0FBQyxLQUFULENBQWUsS0FBZjtJQUVWLE1BQUEsR0FBUztJQUNULElBQThCLG9CQUE5QjtNQUFBLE1BQU0sQ0FBQyxJQUFQLENBQVksT0FBTyxDQUFDLElBQXBCLEVBQUE7O0lBQ0EsSUFBOEIsc0JBQTlCO01BQUEsTUFBTSxDQUFDLElBQVAsQ0FBWSxPQUFPLENBQUMsTUFBcEIsRUFBQTs7QUFFQSxTQUFBLHlDQUFBOztNQUFBLE9BQUEsQ0FBUSxDQUFDLENBQUMsSUFBVixFQUFnQixDQUFDLENBQUMsTUFBbEIsRUFBMEIsQ0FBQyxDQUFDLFFBQTVCO0FBQUE7SUFDQSxNQUFBLEdBQVc7O0FBQUM7V0FBQSxhQUFBOztxQkFBQTtBQUFBOztRQUFELENBQTRCLENBQUMsSUFBN0IsQ0FBa0MsU0FBQyxDQUFELEVBQUksQ0FBSjthQUFVLFFBQVEsQ0FBQyxPQUFULENBQWlCLENBQUMsQ0FBQyxRQUFuQixFQUE2QixDQUFDLENBQUMsUUFBL0I7SUFBVixDQUFsQztJQUNYLFFBQUEsR0FBVyxNQUFNLENBQUMsR0FBUCxDQUFXLFNBQUMsQ0FBRDthQUFPLENBQUMsQ0FBQztJQUFULENBQVg7SUFFWCxJQUFBLEdBQVEsUUFBUSxDQUFDLEtBQVQsQ0FBZSxRQUFmO0lBQ1IsSUFBQSxHQUFRLFFBQVEsQ0FBQyxNQUFULENBQWdCLElBQWhCO0lBQ1IsSUFBbUQsTUFBTSxDQUFDLE1BQTFEO01BQUEsSUFBQSxHQUFPLENBQUMsUUFBUSxDQUFDLEtBQVQsQ0FBZSxNQUFmLENBQUQsRUFBeUIsSUFBekIsQ0FBOEIsQ0FBQyxJQUEvQixDQUFvQyxJQUFwQyxFQUFQOztJQUNBLElBQUEsR0FBUSxRQUFRLENBQUMsS0FBVCxDQUFnQixJQUFoQjtJQUNSLElBQUEsR0FBUSxRQUFRLENBQUMsTUFBVCxDQUFnQixJQUFoQjtJQUdSLENBQUEsR0FBSTtXQUNKO01BQUEsU0FBQSxFQUFhLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBcEI7TUFDQSxJQUFBLEVBQWEsSUFEYjtNQUVBLElBQUEsRUFBYSxDQUFDLENBQUMsSUFGZjtNQUdBLEtBQUEsRUFBYSxDQUFDLENBQUMsSUFBSSxDQUFDLElBSHBCO01BSUEsU0FBQSxFQUFhLFNBSmI7TUFLQSxRQUFBLEVBQWEsUUFMYjtNQU1BLFVBQUEsRUFBYSxVQU5iO01BT0EsUUFBQSxFQUFhLFFBUGI7O0VBcEJRO0VBOEJWLEtBQUEsR0FBUSxTQUFDLFNBQUQsRUFBWSxJQUFaLEVBQWtCLFFBQWxCO0FBQ04sUUFBQTtJQUFBLE1BQUEsR0FBUyxPQUFRLENBQUEsU0FBQTtJQUNqQixJQUFHLGNBQUg7YUFDRSxNQUFNLENBQUMsUUFBUCxHQUFrQixRQUFRLENBQUMsR0FBVCxDQUFhLE1BQU0sQ0FBQyxRQUFwQixFQUE4QixRQUE5QixFQURwQjtLQUFBLE1BQUE7YUFHRSxPQUFRLENBQUEsU0FBQSxDQUFSLEdBQXFCO1FBQUMsTUFBQSxJQUFEO1FBQU8sVUFBQSxRQUFQO1FBSHZCOztFQUZNO0VBUVIsT0FBQSxHQUFVLFNBQUMsSUFBRCxFQUFPLE1BQVAsRUFBZSxRQUFmO0FBQ1IsUUFBQTtJQUFBLFFBQUEsR0FBVyxRQUFRLENBQUMsSUFBVCxDQUFjLFFBQWQ7QUFHWDtBQUFBLFNBQUEsU0FBQTs7TUFBQSxLQUFBLENBQU0sRUFBTixFQUFVLEdBQUcsQ0FBQyxJQUFkLEVBQW9CLFFBQVEsQ0FBQyxJQUFULENBQWMsUUFBZCxFQUF3QixHQUFHLENBQUMsUUFBNUIsQ0FBcEI7QUFBQTtJQUdBLEtBQUEsQ0FBTSxNQUFNLENBQUMsU0FBYixFQUF3QixNQUFNLENBQUMsSUFBL0IsRUFBcUMsUUFBckM7QUFHQTtBQUFBLFNBQUEsV0FBQTs7TUFBQyxRQUFTLENBQUEsR0FBQSxDQUFULEdBQWtCO0FBQW5CO0FBQ0E7QUFBQSxTQUFBLFdBQUE7O01BQUMsUUFBUyxDQUFBLEdBQUEsQ0FBVCxHQUFrQjtBQUFuQjtBQUNBO0FBQUEsU0FBQSxXQUFBOztNQUFDLFVBQVcsQ0FBQSxHQUFBLENBQVgsR0FBa0I7QUFBbkI7QUFFQTtBQUFBO1NBQUEsc0NBQUE7O01BQ0UsR0FBQSxHQUFNLE1BQU0sQ0FBQyxTQUFVLENBQUEsR0FBQTtNQUN2QixJQUFHLFVBQUEsQ0FBVyxJQUFYLEVBQWlCLEdBQUcsQ0FBQyxJQUFyQixDQUFIO1FBQ0UsU0FBVSxDQUFBLEdBQUEsQ0FBVixHQUFpQjtxQkFDakIsT0FBTyxDQUFDLElBQVIsQ0FBYSxHQUFiLEdBRkY7T0FBQSxNQUFBOzZCQUFBOztBQUZGOztFQWRRO0VBcUJWLFVBQUEsR0FBYSxTQUFDLElBQUQsRUFBTyxJQUFQO0FBQ1gsUUFBQTtJQUFBLE1BQUEsR0FBUyxJQUFJLENBQUMsR0FBTCxDQUFTLElBQVQ7SUFFVCxJQUFHLENBQUMsTUFBSjtNQUNFLE1BQUEscUZBQXFDLElBQUksQ0FBQyxLQUFLLENBQUM7QUFDaEQsWUFBTSxJQUFJLEtBQUosQ0FBVSw2Q0FBQSxHQUE4QyxJQUE5QyxHQUFtRCxRQUFuRCxHQUEyRCxNQUEzRCxHQUFrRSxHQUE1RSxFQUZSOztJQUlBLElBQUcsTUFBTSxDQUFDLEtBQVAsS0FBZ0IsS0FBSyxDQUFDLEVBQXpCO2FBQ0UsTUFBTSxDQUFDLEtBQVAsS0FBZ0IsS0FEbEI7S0FBQSxNQUdLLElBQUcsTUFBTSxDQUFDLEtBQVAsS0FBZ0IsS0FBSyxDQUFDLEdBQXpCO2FBQ0gsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFkLEtBQXdCLEVBRHJCOztFQVZNO1NBYWIsT0FBQSxDQUFBO0FBcEZLOztBQXVGUCxNQUFNLENBQUMsT0FBUCxHQUFpQiJ9

},{"../graph":205,"./priority":213}],213:[function(require,module,exports){
exports.make = function(x) {
  var ref;
  if (x == null) {
    x = [];
  }
  if (!(x instanceof Array)) {
    x = [(ref = +x) != null ? ref : 0];
  }
  return x;
};

exports.nest = function(a, b) {
  return a.concat(b);
};

exports.compare = function(a, b) {
  var i, j, n, p, q, ref;
  n = Math.min(a.length, b.length);
  for (i = j = 0, ref = n; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
    p = a[i];
    q = b[i];
    if (p > q) {
      return -1;
    }
    if (p < q) {
      return 1;
    }
  }
  a = a.length;
  b = b.length;
  if (a > b) {
    return -1;
  } else if (a < b) {
    return 1;
  } else {
    return 0;
  }
};

exports.max = function(a, b) {
  if (exports.compare(a, b) > 0) {
    return b;
  } else {
    return a;
  }
};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGxpbmtlclxccHJpb3JpdHkuY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGxpbmtlclxccHJpb3JpdHkuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sQ0FBQyxJQUFSLEdBQWUsU0FBQyxDQUFEO0FBQ2IsTUFBQTtFQUFBLElBQVksU0FBWjtJQUFBLENBQUEsR0FBSSxHQUFKOztFQUNBLElBQWdCLENBQUEsQ0FBQSxDQUFBLFlBQWMsS0FBZCxDQUFoQjtJQUFBLENBQUEsR0FBSSw0QkFBTSxDQUFOLEVBQUo7O1NBQ0E7QUFIYTs7QUFLZixPQUFPLENBQUMsSUFBUixHQUFlLFNBQUMsQ0FBRCxFQUFJLENBQUo7U0FDYixDQUFDLENBQUMsTUFBRixDQUFTLENBQVQ7QUFEYTs7QUFHZixPQUFPLENBQUMsT0FBUixHQUFrQixTQUFDLENBQUQsRUFBSSxDQUFKO0FBQ2hCLE1BQUE7RUFBQSxDQUFBLEdBQUksSUFBSSxDQUFDLEdBQUwsQ0FBUyxDQUFDLENBQUMsTUFBWCxFQUFtQixDQUFDLENBQUMsTUFBckI7QUFDSixPQUFTLDBFQUFUO0lBQ0UsQ0FBQSxHQUFJLENBQUUsQ0FBQSxDQUFBO0lBQ04sQ0FBQSxHQUFJLENBQUUsQ0FBQSxDQUFBO0lBQ04sSUFBRyxDQUFBLEdBQUksQ0FBUDtBQUNFLGFBQU8sQ0FBQyxFQURWOztJQUVBLElBQUcsQ0FBQSxHQUFJLENBQVA7QUFDRSxhQUFPLEVBRFQ7O0FBTEY7RUFPQSxDQUFBLEdBQUksQ0FBQyxDQUFDO0VBQ04sQ0FBQSxHQUFJLENBQUMsQ0FBQztFQUNDLElBQUcsQ0FBQSxHQUFJLENBQVA7V0FBYyxDQUFDLEVBQWY7R0FBQSxNQUFzQixJQUFHLENBQUEsR0FBSSxDQUFQO1dBQWMsRUFBZDtHQUFBLE1BQUE7V0FBcUIsRUFBckI7O0FBWGI7O0FBYWxCLE9BQU8sQ0FBQyxHQUFSLEdBQWUsU0FBQyxDQUFELEVBQUksQ0FBSjtFQUNOLElBQUcsT0FBTyxDQUFDLE9BQVIsQ0FBZ0IsQ0FBaEIsRUFBbUIsQ0FBbkIsQ0FBQSxHQUF3QixDQUEzQjtXQUFrQyxFQUFsQztHQUFBLE1BQUE7V0FBeUMsRUFBekM7O0FBRE0ifQ==

},{}],214:[function(require,module,exports){
var Program, Snippet, assemble;

Snippet = require('./snippet');

assemble = require('./assemble');


/*
  Program assembly model
  
  Snippets are added to its queue, registering calls and code includes.
  Calls are de-duped and scheduled at the earliest point required for correct data flow.
  
  When assemble() is called, it builds a main() function to
  execute all calls in final order.
  
  The result is a new instance of Snippet that acts as if it
  was parsed from the combined source of the component
  nodes.
 */

Program = (function() {
  Program.index = 0;

  Program.entry = function() {
    return "_pg_" + (++Program.index) + "_";
  };

  function Program(language, namespace, graph) {
    this.language = language;
    this.namespace = namespace;
    this.graph = graph;
    this.calls = {};
    this.requires = {};
  }

  Program.prototype.call = function(node, module, priority) {
    var exists, ns;
    ns = module.namespace;
    if (exists = this.calls[ns]) {
      exists.priority = Math.max(exists.priority, priority);
    } else {
      this.calls[ns] = {
        node: node,
        module: module,
        priority: priority
      };
    }
    return this;
  };

  Program.prototype.require = function(node, module) {
    var ns;
    ns = module.namespace;
    return this.requires[ns] = {
      node: node,
      module: module
    };
  };

  Program.prototype.assemble = function() {
    var data, key, ref, snippet;
    data = assemble(this.language, (ref = this.namespace) != null ? ref : Program.entry, this.calls, this.requires);
    snippet = new Snippet;
    for (key in data) {
      snippet[key] = data[key];
    }
    snippet.graph = this.graph;
    return snippet;
  };

  return Program;

})();

module.exports = Program;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGxpbmtlclxccHJvZ3JhbS5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHZlbmRvclxcc2hhZGVyZ3JhcGhcXHNyY1xcbGlua2VyXFxwcm9ncmFtLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBOztBQUFBLE9BQUEsR0FBVyxPQUFBLENBQVEsV0FBUjs7QUFDWCxRQUFBLEdBQVcsT0FBQSxDQUFRLFlBQVI7OztBQUVYOzs7Ozs7Ozs7Ozs7OztBQWFNO0VBQ0osT0FBQyxDQUFBLEtBQUQsR0FBUTs7RUFDUixPQUFDLENBQUEsS0FBRCxHQUFRLFNBQUE7V0FBTSxNQUFBLEdBQU0sQ0FBQyxFQUFFLE9BQU8sQ0FBQyxLQUFYLENBQU4sR0FBdUI7RUFBN0I7O0VBR0ssaUJBQUMsUUFBRCxFQUFZLFNBQVosRUFBd0IsS0FBeEI7SUFBQyxJQUFDLENBQUEsV0FBRDtJQUFXLElBQUMsQ0FBQSxZQUFEO0lBQVksSUFBQyxDQUFBLFFBQUQ7SUFDbkMsSUFBQyxDQUFBLEtBQUQsR0FBYztJQUNkLElBQUMsQ0FBQSxRQUFELEdBQWM7RUFGSDs7b0JBS2IsSUFBQSxHQUFNLFNBQUMsSUFBRCxFQUFPLE1BQVAsRUFBZSxRQUFmO0FBQ0osUUFBQTtJQUFBLEVBQUEsR0FBSyxNQUFNLENBQUM7SUFHWixJQUFHLE1BQUEsR0FBUyxJQUFDLENBQUEsS0FBTSxDQUFBLEVBQUEsQ0FBbkI7TUFDRSxNQUFNLENBQUMsUUFBUCxHQUFrQixJQUFJLENBQUMsR0FBTCxDQUFTLE1BQU0sQ0FBQyxRQUFoQixFQUEwQixRQUExQixFQURwQjtLQUFBLE1BQUE7TUFHRSxJQUFDLENBQUEsS0FBTSxDQUFBLEVBQUEsQ0FBUCxHQUFhO1FBQUMsTUFBQSxJQUFEO1FBQU8sUUFBQSxNQUFQO1FBQWUsVUFBQSxRQUFmO1FBSGY7O1dBS0E7RUFUSTs7b0JBWU4sT0FBQSxHQUFTLFNBQUMsSUFBRCxFQUFPLE1BQVA7QUFDUCxRQUFBO0lBQUEsRUFBQSxHQUFLLE1BQU0sQ0FBQztXQUNaLElBQUMsQ0FBQSxRQUFTLENBQUEsRUFBQSxDQUFWLEdBQWdCO01BQUMsTUFBQSxJQUFEO01BQU8sUUFBQSxNQUFQOztFQUZUOztvQkFLVCxRQUFBLEdBQVUsU0FBQTtBQUNSLFFBQUE7SUFBQSxJQUFBLEdBQWdCLFFBQUEsQ0FBUyxJQUFDLENBQUEsUUFBVix5Q0FBaUMsT0FBTyxDQUFDLEtBQXpDLEVBQWdELElBQUMsQ0FBQSxLQUFqRCxFQUF3RCxJQUFDLENBQUEsUUFBekQ7SUFDaEIsT0FBQSxHQUFnQixJQUFJO0FBQ3BCLFNBQUEsV0FBQTtNQUFBLE9BQVEsQ0FBQSxHQUFBLENBQVIsR0FBZ0IsSUFBSyxDQUFBLEdBQUE7QUFBckI7SUFDQSxPQUFPLENBQUMsS0FBUixHQUFnQixJQUFDLENBQUE7V0FDakI7RUFMUTs7Ozs7O0FBT1osTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==

},{"./assemble":209,"./snippet":215}],215:[function(require,module,exports){
var Snippet;

Snippet = (function() {
  Snippet.index = 0;

  Snippet.namespace = function() {
    return "_sn_" + (++Snippet.index) + "_";
  };

  Snippet.load = function(language, name, code) {
    var compiler, program, ref, sigs;
    program = language.parse(name, code);
    ref = language.compile(program), sigs = ref[0], compiler = ref[1];
    return new Snippet(language, sigs, compiler, name, code);
  };

  function Snippet(language1, _signatures, _compiler, _name, _original) {
    var ref;
    this.language = language1;
    this._signatures = _signatures;
    this._compiler = _compiler;
    this._name = _name;
    this._original = _original;
    this.namespace = null;
    this.code = null;
    this.main = null;
    this.entry = null;
    this.uniforms = null;
    this.externals = null;
    this.symbols = null;
    this.attributes = null;
    this.varyings = null;
    if (!this.language) {
      delete this.language;
    }
    if (!this._signatures) {
      delete this._signatures;
    }
    if (!this._compiler) {
      delete this._compiler;
    }
    if (!this._original) {
      delete this._original;
    }
    if (!this._name) {
      this._name = (ref = this._signatures) != null ? ref.main.name : void 0;
    }
  }

  Snippet.prototype.clone = function() {
    return new Snippet(this.language, this._signatures, this._compiler, this._name, this._original);
  };

  Snippet.prototype.bind = function(config, uniforms, namespace, defines) {
    var _a, _e, _u, _v, a, def, defs, e, exceptions, exist, global, i, j, k, key, l, len, len1, len2, len3, len4, len5, local, m, n, name, o, redef, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, u, v, x;
    if (uniforms === '' + uniforms) {
      ref = [uniforms, namespace != null ? namespace : {}, defines != null ? defines : {}], namespace = ref[0], uniforms = ref[1], defines = ref[2];
    } else if (namespace !== '' + namespace) {
      ref1 = [namespace != null ? namespace : {}, void 0], defines = ref1[0], namespace = ref1[1];
    }
    this.main = this._signatures.main;
    this.namespace = (ref2 = namespace != null ? namespace : this.namespace) != null ? ref2 : Snippet.namespace();
    this.entry = this.namespace + this.main.name;
    this.uniforms = {};
    this.varyings = {};
    this.attributes = {};
    this.externals = {};
    this.symbols = [];
    exist = {};
    exceptions = {};
    global = function(name) {
      exceptions[name] = true;
      return name;
    };
    local = (function(_this) {
      return function(name) {
        return _this.namespace + name;
      };
    })(this);
    if (config.globals) {
      ref3 = config.globals;
      for (i = 0, len = ref3.length; i < len; i++) {
        key = ref3[i];
        global(key);
      }
    }
    _u = config.globalUniforms ? global : local;
    _v = config.globalVaryings ? global : local;
    _a = config.globalAttributes ? global : local;
    _e = local;
    x = (function(_this) {
      return function(def) {
        return exist[def.name] = true;
      };
    })(this);
    u = (function(_this) {
      return function(def, name) {
        return _this.uniforms[_u(name != null ? name : def.name)] = def;
      };
    })(this);
    v = (function(_this) {
      return function(def) {
        return _this.varyings[_v(def.name)] = def;
      };
    })(this);
    a = (function(_this) {
      return function(def) {
        return _this.attributes[_a(def.name)] = def;
      };
    })(this);
    e = (function(_this) {
      return function(def) {
        var name;
        name = _e(def.name);
        _this.externals[name] = def;
        return _this.symbols.push(name);
      };
    })(this);
    redef = function(def) {
      return {
        type: def.type,
        name: def.name,
        value: def.value
      };
    };
    ref4 = this._signatures.uniform;
    for (j = 0, len1 = ref4.length; j < len1; j++) {
      def = ref4[j];
      x(def);
    }
    ref5 = this._signatures.uniform;
    for (l = 0, len2 = ref5.length; l < len2; l++) {
      def = ref5[l];
      u(redef(def));
    }
    ref6 = this._signatures.varying;
    for (m = 0, len3 = ref6.length; m < len3; m++) {
      def = ref6[m];
      v(redef(def));
    }
    ref7 = this._signatures.external;
    for (n = 0, len4 = ref7.length; n < len4; n++) {
      def = ref7[n];
      e(def);
    }
    ref8 = this._signatures.attribute;
    for (o = 0, len5 = ref8.length; o < len5; o++) {
      def = ref8[o];
      a(redef(def));
    }
    for (name in uniforms) {
      def = uniforms[name];
      if (exist[name]) {
        u(def, name);
      }
    }
    this.body = this.code = this._compiler(this.namespace, exceptions, defines);
    if (defines) {
      defs = ((function() {
        var results;
        results = [];
        for (k in defines) {
          v = defines[k];
          results.push("#define " + k + " " + v);
        }
        return results;
      })()).join('\n');
      if (defs.length) {
        this._original = [defs, "//----------------------------------------", this._original].join("\n");
      }
    }
    return null;
  };

  return Snippet;

})();

module.exports = Snippet;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXGxpbmtlclxcc25pcHBldC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDOlxccHJvamVjdHNcXHJlcG9zXFxtYXRoYm94LXVwZGF0ZWRcXHZlbmRvclxcc2hhZGVyZ3JhcGhcXHNyY1xcbGlua2VyXFxzbmlwcGV0LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBOztBQUFNO0VBQ0osT0FBQyxDQUFBLEtBQUQsR0FBUTs7RUFDUixPQUFDLENBQUEsU0FBRCxHQUFZLFNBQUE7V0FBTSxNQUFBLEdBQU0sQ0FBQyxFQUFFLE9BQU8sQ0FBQyxLQUFYLENBQU4sR0FBdUI7RUFBN0I7O0VBRVosT0FBQyxDQUFBLElBQUQsR0FBTyxTQUFDLFFBQUQsRUFBVyxJQUFYLEVBQWlCLElBQWpCO0FBQ0wsUUFBQTtJQUFBLE9BQUEsR0FBbUIsUUFBUSxDQUFDLEtBQVQsQ0FBaUIsSUFBakIsRUFBdUIsSUFBdkI7SUFDbkIsTUFBbUIsUUFBUSxDQUFDLE9BQVQsQ0FBaUIsT0FBakIsQ0FBbkIsRUFBQyxhQUFELEVBQU87V0FDUCxJQUFJLE9BQUosQ0FBWSxRQUFaLEVBQXNCLElBQXRCLEVBQTRCLFFBQTVCLEVBQXNDLElBQXRDLEVBQTRDLElBQTVDO0VBSEs7O0VBS00saUJBQUMsU0FBRCxFQUFZLFdBQVosRUFBMEIsU0FBMUIsRUFBc0MsS0FBdEMsRUFBOEMsU0FBOUM7QUFDWCxRQUFBO0lBRFksSUFBQyxDQUFBLFdBQUQ7SUFBVyxJQUFDLENBQUEsY0FBRDtJQUFjLElBQUMsQ0FBQSxZQUFEO0lBQVksSUFBQyxDQUFBLFFBQUQ7SUFBUSxJQUFDLENBQUEsWUFBRDtJQUN6RCxJQUFDLENBQUEsU0FBRCxHQUFjO0lBQ2QsSUFBQyxDQUFBLElBQUQsR0FBYztJQUVkLElBQUMsQ0FBQSxJQUFELEdBQWM7SUFDZCxJQUFDLENB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

},{}],216:[function(require,module,exports){
var Graph, markup, merge, resolve, serialize, visualize;

Graph = require('../Graph').Graph;

exports.serialize = serialize = require('./serialize');

exports.markup = markup = require('./markup');

visualize = function(graph) {
  var data;
  if (!graph) {
    return;
  }
  if (!graph.nodes) {
    return graph;
  }
  data = serialize(graph);
  return markup.process(data);
};

resolve = function(arg) {
  if (arg == null) {
    return arg;
  }
  if (arg instanceof Array) {
    return arg.map(resolve);
  }
  if ((arg.vertex != null) && (arg.fragment != null)) {
    return [resolve(arg.vertex, resolve(arg.fragment))];
  }
  if (arg._graph != null) {
    return arg._graph;
  }
  if (arg.graph != null) {
    return arg.graph;
  }
  return arg;
};

merge = function(args) {
  var arg, i, len, out;
  out = [];
  for (i = 0, len = args.length; i < len; i++) {
    arg = args[i];
    if (arg instanceof Array) {
      out = out.concat(merge(arg));
    } else if (arg != null) {
      out.push(arg);
    }
  }
  return out;
};

exports.visualize = function() {
  var graph, list;
  list = merge(resolve([].slice.call(arguments)));
  return markup.merge((function() {
    var i, len, results;
    results = [];
    for (i = 0, len = list.length; i < len; i++) {
      graph = list[i];
      if (graph) {
        results.push(visualize(graph));
      }
    }
    return results;
  })());
};

exports.inspect = function() {
  var contents, el, element, i, len, ref;
  contents = exports.visualize.apply(null, arguments);
  element = markup.overlay(contents);
  ref = document.querySelectorAll('.shadergraph-overlay');
  for (i = 0, len = ref.length; i < len; i++) {
    el = ref[i];
    el.remove();
  }
  document.body.appendChild(element);
  contents.update();
  return element;
};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXHZpc3VhbGl6ZVxcaW5kZXguY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXHZpc3VhbGl6ZVxcaW5kZXguY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUE7O0FBQUEsS0FBQSxHQUFRLE9BQUEsQ0FBUSxVQUFSLENBQW1CLENBQUM7O0FBRTVCLE9BQU8sQ0FBQyxTQUFSLEdBQW9CLFNBQUEsR0FBWSxPQUFBLENBQVEsYUFBUjs7QUFDaEMsT0FBTyxDQUFDLE1BQVIsR0FBb0IsTUFBQSxHQUFZLE9BQUEsQ0FBUSxVQUFSOztBQUVoQyxTQUFBLEdBQVksU0FBQyxLQUFEO0FBQ1YsTUFBQTtFQUFBLElBQUEsQ0FBYyxLQUFkO0FBQUEsV0FBQTs7RUFDQSxJQUFnQixDQUFDLEtBQUssQ0FBQyxLQUF2QjtBQUFBLFdBQU8sTUFBUDs7RUFFQSxJQUFBLEdBQVMsU0FBQSxDQUFlLEtBQWY7U0FDVCxNQUFNLENBQUMsT0FBUCxDQUFlLElBQWY7QUFMVTs7QUFPWixPQUFBLEdBQVUsU0FBQyxHQUFEO0VBQ1IsSUFBZSxXQUFmO0FBQUEsV0FBTyxJQUFQOztFQUNBLElBQTBCLEdBQUEsWUFBZSxLQUF6QztBQUFBLFdBQU8sR0FBRyxDQUFDLEdBQUosQ0FBUSxPQUFSLEVBQVA7O0VBQ0EsSUFBcUQsb0JBQUEsSUFBZSxzQkFBcEU7QUFBQSxXQUFPLENBQUMsT0FBQSxDQUFRLEdBQUcsQ0FBQyxNQUFaLEVBQW9CLE9BQUEsQ0FBUSxHQUFHLENBQUMsUUFBWixDQUFwQixDQUFELEVBQVA7O0VBQ0EsSUFBcUIsa0JBQXJCO0FBQUEsV0FBTyxHQUFHLENBQUMsT0FBWDs7RUFDQSxJQUFxQixpQkFBckI7QUFBQSxXQUFPLEdBQUcsQ0FBQyxNQUFYOztBQUNBLFNBQU87QUFOQzs7QUFRVixLQUFBLEdBQVEsU0FBQyxJQUFEO0FBQ04sTUFBQTtFQUFBLEdBQUEsR0FBTTtBQUNOLE9BQUEsc0NBQUE7O0lBQ0UsSUFBRyxHQUFBLFlBQWUsS0FBbEI7TUFDRSxHQUFBLEdBQU0sR0FBRyxDQUFDLE1BQUosQ0FBVyxLQUFBLENBQU0sR0FBTixDQUFYLEVBRFI7S0FBQSxNQUVLLElBQUcsV0FBSDtNQUNILEdBQUcsQ0FBQyxJQUFKLENBQVMsR0FBVCxFQURHOztBQUhQO1NBS0E7QUFQTTs7QUFTUixPQUFPLENBQUMsU0FBUixHQUFvQixTQUFBO0FBQ2xCLE1BQUE7RUFBQSxJQUFBLEdBQU8sS0FBQSxDQUFNLE9BQUEsQ0FBUSxFQUFFLENBQUMsS0FBSyxDQUFDLElBQVQsQ0FBYyxTQUFkLENBQVIsQ0FBTjtTQUNQLE1BQU0sQ0FBQyxLQUFQOztBQUFjO1NBQUEsc0NBQUE7O1VBQXVDO3FCQUF2QyxTQUFBLENBQVUsS0FBVjs7QUFBQTs7TUFBZDtBQUZrQjs7QUFJcEIsT0FBTyxDQUFDLE9BQVIsR0FBa0IsU0FBQTtBQUNoQixNQUFBO0VBQUEsUUFBQSxHQUFXLE9BQU8sQ0FBQyxTQUFTLENBQUMsS0FBbEIsQ0FBd0IsSUFBeEIsRUFBOEIsU0FBOUI7RUFDWCxPQUFBLEdBQVcsTUFBTSxDQUFDLE9BQVAsQ0FBZSxRQUFmO0FBRVg7QUFBQSxPQUFBLHFDQUFBOztJQUFBLEVBQUUsQ0FBQyxNQUFILENBQUE7QUFBQTtFQUNBLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBZCxDQUEwQixPQUExQjtFQUNBLFFBQVEsQ0FBQyxNQUFULENBQUE7U0FFQTtBQVJnQiJ9

},{"../Graph":182,"./markup":217,"./serialize":218}],217:[function(require,module,exports){
var _activate, _markup, _order, connect, cssColor, escapeText, hash, hashColor, makeSVG, merge, overlay, path, process, sqr, trim, wrap;

hash = require('../factory/hash');

trim = function(string) {
  return ("" + string).replace(/^\s+|\s+$/g, '');
};

cssColor = function(r, g, b, alpha) {
  return 'rgba(' + [r, g, b, alpha].join(', ') + ')';
};

hashColor = function(string, alpha) {
  var b, color, g, max, min, norm, r;
  if (alpha == null) {
    alpha = 1;
  }
  color = hash(string) ^ 0x123456;
  r = color & 0xFF;
  g = (color >>> 8) & 0xFF;
  b = (color >>> 16) & 0xFF;
  max = Math.max(r, g, b);
  norm = 140 / max;
  min = Math.round(max / 3);
  r = Math.min(255, Math.round(norm * Math.max(r, min)));
  g = Math.min(255, Math.round(norm * Math.max(g, min)));
  b = Math.min(255, Math.round(norm * Math.max(b, min)));
  return cssColor(r, g, b, alpha);
};

escapeText = function(string) {
  string = string != null ? string : "";
  return string.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/'/g, '&#39;').replace(/"/g, '&quot;');
};

process = function(data) {
  var el, links;
  links = [];
  el = _markup(data, links);
  el.update = function() {
    return connect(el, links);
  };
  _activate(el);
  return el;
};

_activate = function(el) {
  var code, codes, i, len, results;
  codes = el.querySelectorAll('.shadergraph-code');
  results = [];
  for (i = 0, len = codes.length; i < len; i++) {
    code = codes[i];
    results.push((function() {
      var popup;
      popup = code;
      popup.parentNode.classList.add('shadergraph-has-code');
      return popup.parentNode.addEventListener('click', function(event) {
        return popup.style.display = {
          block: 'none',
          none: 'block'
        }[popup.style.display || 'none'];
      });
    })());
  }
  return results;
};

_order = function(data) {
  var i, j, k, len, len1, len2, link, linkMap, name, node, nodeMap, recurse, ref1, ref2, ref3;
  nodeMap = {};
  linkMap = {};
  ref1 = data.nodes;
  for (i = 0, len = ref1.length; i < len; i++) {
    node = ref1[i];
    nodeMap[node.id] = node;
  }
  ref2 = data.links;
  for (j = 0, len1 = ref2.length; j < len1; j++) {
    link = ref2[j];
    if (linkMap[name = link.from] == null) {
      linkMap[name] = [];
    }
    linkMap[link.from].push(link);
  }
  recurse = function(node, depth) {
    var k, len2, next, ref3;
    if (depth == null) {
      depth = 0;
    }
    node.depth = Math.max((ref3 = node.depth) != null ? ref3 : 0, depth);
    if (next = linkMap[node.id]) {
      for (k = 0, len2 = next.length; k < len2; k++) {
        link = next[k];
        recurse(nodeMap[link.to], depth + 1);
      }
    }
    return null;
  };
  ref3 = data.nodes;
  for (k = 0, len2 = ref3.length; k < len2; k++) {
    node = ref3[k];
    if (node.depth == null) {
      recurse(node);
    }
  }
  return null;
};

_markup = function(data, links) {
  var addOutlet, block, clear, color, column, columns, div, i, j, k, l, len, len1, len2, len3, len4, link, m, node, outlet, outlets, ref1, ref2, ref3, ref4, wrapper;
  _order(data);
  wrapper = document.createElement('div');
  wrapper.classList.add('shadergraph-graph');
  columns = [];
  outlets = {};
  ref1 = data.nodes;
  for (i = 0, len = ref1.length; i < len; i++) {
    node = ref1[i];
    block = document.createElement('div');
    block.classList.add("shadergraph-node");
    block.classList.add("shadergraph-node-" + node.type);
    block.innerHTML = "<div class=\"shadergraph-header\">" + (escapeText(node.name)) + "</div>";
    addOutlet = function(outlet, inout) {
      var color, div;
      color = hashColor(outlet.type);
      div = document.createElement('div');
      div.classList.add('shadergraph-outlet');
      div.classList.add("shadergraph-outlet-" + inout);
      div.innerHTML = "<div class=\"shadergraph-point\" style=\"background: " + color + "\"></div>\n<div class=\"shadergraph-type\" style=\"color: " + color + "\">" + (escapeText(outlet.type)) + "</div>\n<div class=\"shadergraph-name\">" + (escapeText(outlet.name)) + "</div>";
      block.appendChild(div);
      return outlets[outlet.id] = div.querySelector('.shadergraph-point');
    };
    ref2 = node.inputs;
    for (j = 0, len1 = ref2.length; j < len1; j++) {
      outlet = ref2[j];
      addOutlet(outlet, 'in');
    }
    ref3 = node.outputs;
    for (k = 0, len2 = ref3.length; k < len2; k++) {
      outlet = ref3[k];
      addOutlet(outlet, 'out');
    }
    if (node.graph != null) {
      block.appendChild(_markup(node.graph, links));
    } else {
      clear = document.createElement('div');
      clear.classList.add('shadergraph-clear');
      block.appendChild(clear);
    }
    if (node.code != null) {
      div = document.createElement('div');
      div.classList.add('shadergraph-code');
      div.innerHTML = escapeText(trim(node.code));
      block.appendChild(div);
    }
    column = columns[node.depth];
    if (column == null) {
      column = document.createElement('div');
      column.classList.add('shadergraph-column');
      columns[node.depth] = column;
    }
    column.appendChild(block);
  }
  for (l = 0, len3 = columns.length; l < len3; l++) {
    column = columns[l];
    if (column != null) {
      wrapper.appendChild(column);
    }
  }
  ref4 = data.links;
  for (m = 0, len4 = ref4.length; m < len4; m++) {
    link = ref4[m];
    color = hashColor(link.type);
    links.push({
      color: color,
      out: outlets[link.out],
      "in": outlets[link["in"]]
    });
  }
  return wrapper;
};

sqr = function(x) {
  return x * x;
};

path = function(x1, y1, x2, y2) {
  var d, dx, dy, f, h, mx, my, vert;
  dx = x2 - x1;
  dy = y2 - y1;
  d = Math.sqrt(sqr(dx) + sqr(dy));
  vert = Math.abs(dy) > Math.abs(dx);
  if (vert) {
    mx = (x1 + x2) / 2;
    my = (y1 + y2) / 2;
    f = dy > 0 ? .3 : -.3;
    h = Math.min(Math.abs(dx) / 2, 20 + d / 8);
    return ['M', x1, y1, 'C', x1 + h, y1 + ',', mx, my - d * f, mx, my, 'C', mx, my + d * f, x2 - h, y2 + ',', x2, y2].join(' ');
  } else {
    h = Math.min(Math.abs(dx) / 2.5, 20 + d / 4);
    return ['M', x1, y1, 'C', x1 + h, y1 + ',', x2 - h, y2 + ',', x2, y2].join(' ');
  }
};

makeSVG = function(tag) {
  if (tag == null) {
    tag = 'svg';
  }
  return document.createElementNS('http://www.w3.org/2000/svg', tag);
};

connect = function(element, links) {
  var a, b, box, c, i, j, len, len1, line, link, ref, svg;
  if (element.parentNode == null) {
    return;
  }
  ref = element.getBoundingClientRect();
  for (i = 0, len = links.length; i < len; i++) {
    link = links[i];
    a = link.out.getBoundingClientRect();
    b = link["in"].getBoundingClientRect();
    link.coords = {
      x1: (a.left + a.right) / 2 - ref.left,
      y1: (a.top + a.bottom) / 2 - ref.top,
      x2: (b.left + b.right) / 2 - ref.left,
      y2: (b.top + b.bottom) / 2 - ref.top
    };
  }
  svg = element.querySelector('svg');
  if (svg != null) {
    element.removeChild(svg);
  }
  box = element;
  while (box.parentNode && box.offsetHeight === 0) {
    box = box.parentNode;
  }
  svg = makeSVG();
  svg.setAttribute('width', box.offsetWidth);
  svg.setAttribute('height', box.offsetHeight);
  for (j = 0, len1 = links.length; j < len1; j++) {
    link = links[j];
    c = link.coords;
    line = makeSVG('path');
    line.setAttribute('d', path(c.x1, c.y1, c.x2, c.y2));
    line.setAttribute('stroke', link.color);
    line.setAttribute('stroke-width', 3);
    line.setAttribute('fill', 'transparent');
    svg.appendChild(line);
  }
  return element.appendChild(svg);
};

overlay = function(contents) {
  var close, div, inside, view;
  div = document.createElement('div');
  div.setAttribute('class', 'shadergraph-overlay');
  close = document.createElement('div');
  close.setAttribute('class', 'shadergraph-close');
  close.innerHTML = '&times;';
  view = document.createElement('div');
  view.setAttribute('class', 'shadergraph-view');
  inside = document.createElement('div');
  inside.setAttribute('class', 'shadergraph-inside');
  inside.appendChild(contents);
  view.appendChild(inside);
  div.appendChild(view);
  div.appendChild(close);
  close.addEventListener('click', function() {
    return div.parentNode.removeChild(div);
  });
  return div;
};

wrap = function(markup) {
  var p;
  if (markup instanceof Node) {
    return markup;
  }
  p = document.createElement('span');
  p.innerText = markup != null ? markup : '';
  return p;
};

merge = function(markup) {
  var div, el, i, len;
  if (markup.length !== 1) {
    div = document.createElement('div');
    for (i = 0, len = markup.length; i < len; i++) {
      el = markup[i];
      div.appendChild(wrap(el));
    }
    div.update = function() {
      var j, len1, results;
      results = [];
      for (j = 0, len1 = markup.length; j < len1; j++) {
        el = markup[j];
        results.push(typeof el.update === "function" ? el.update() : void 0);
      }
      return results;
    };
    return div;
  } else {
    return wrap(markup[0]);
  }
};

module.exports = {
  process: process,
  merge: merge,
  overlay: overlay
};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,

},{"../factory/hash":193}],218:[function(require,module,exports){
var Block, isCallback, serialize;

Block = require('../block');

isCallback = function(outlet) {
  return outlet.type[0] === '(';
};

serialize = function(graph) {
  var block, format, i, inputs, j, k, l, len, len1, len2, len3, links, node, nodes, other, outlet, outputs, record, ref, ref1, ref2, ref3, ref4;
  nodes = [];
  links = [];
  ref = graph.nodes;
  for (i = 0, len = ref.length; i < len; i++) {
    node = ref[i];
    record = {
      id: node.id,
      name: null,
      type: null,
      depth: null,
      graph: null,
      inputs: [],
      outputs: []
    };
    nodes.push(record);
    inputs = record.inputs;
    outputs = record.outputs;
    block = node.owner;
    if (block instanceof Block.Call) {
      record.name = block.snippet._name;
      record.type = 'call';
      record.code = block.snippet._original;
    } else if (block instanceof Block.Callback) {
      record.name = "Callback";
      record.type = 'callback';
      record.graph = serialize(block.graph);
    } else if (block instanceof Block.Isolate) {
      record.name = 'Isolate';
      record.type = 'isolate';
      record.graph = serialize(block.graph);
    } else if (block instanceof Block.Join) {
      record.name = 'Join';
      record.type = 'join';
    } else if (block != null) {
      if (record.name == null) {
        record.name = (ref1 = block.name) != null ? ref1 : block.type;
      }
      if (record.type == null) {
        record.type = block.type;
      }
      if (record.code == null) {
        record.code = block.code;
      }
      if (block.graph != null) {
        record.graph = serialize(block.graph);
      }
    }
    format = function(type) {
      type = type.replace(")(", ")→(");
      return type = type.replace("()", "");
    };
    ref2 = node.inputs;
    for (j = 0, len1 = ref2.length; j < len1; j++) {
      outlet = ref2[j];
      inputs.push({
        id: outlet.id,
        name: outlet.name,
        type: format(outlet.type),
        open: outlet.input == null
      });
    }
    ref3 = node.outputs;
    for (k = 0, len2 = ref3.length; k < len2; k++) {
      outlet = ref3[k];
      outputs.push({
        id: outlet.id,
        name: outlet.name,
        type: format(outlet.type),
        open: !outlet.output.length
      });
      ref4 = outlet.output;
      for (l = 0, len3 = ref4.length; l < len3; l++) {
        other = ref4[l];
        links.push({
          from: node.id,
          out: outlet.id,
          to: other.node.id,
          "in": other.id,
          type: format(outlet.type)
        });
      }
    }
  }
  return {
    nodes: nodes,
    links: links
  };
};

module.exports = serialize;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFxzcmNcXHZpc3VhbGl6ZVxcc2VyaWFsaXplLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkM6XFxwcm9qZWN0c1xccmVwb3NcXG1hdGhib3gtdXBkYXRlZFxcdmVuZG9yXFxzaGFkZXJncmFwaFxcc3JjXFx2aXN1YWxpemVcXHNlcmlhbGl6ZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsSUFBQTs7QUFBQSxLQUFBLEdBQVEsT0FBQSxDQUFRLFVBQVI7O0FBRVIsVUFBQSxHQUFhLFNBQUMsTUFBRDtTQUFZLE1BQU0sQ0FBQyxJQUFLLENBQUEsQ0FBQSxDQUFaLEtBQWtCO0FBQTlCOztBQUViLFNBQUEsR0FBWSxTQUFDLEtBQUQ7QUFFVixNQUFBO0VBQUEsS0FBQSxHQUFRO0VBQ1IsS0FBQSxHQUFRO0FBRVI7QUFBQSxPQUFBLHFDQUFBOztJQUNFLE1BQUEsR0FFRTtNQUFBLEVBQUEsRUFBTyxJQUFJLENBQUMsRUFBWjtNQUNBLElBQUEsRUFBTyxJQURQO01BRUEsSUFBQSxFQUFPLElBRlA7TUFHQSxLQUFBLEVBQU8sSUFIUDtNQUlBLEtBQUEsRUFBTyxJQUpQO01BS0EsTUFBQSxFQUFTLEVBTFQ7TUFNQSxPQUFBLEVBQVMsRUFOVDs7SUFRRixLQUFLLENBQUMsSUFBTixDQUFXLE1BQVg7SUFFQSxNQUFBLEdBQVUsTUFBTSxDQUFDO0lBQ2pCLE9BQUEsR0FBVSxNQUFNLENBQUM7SUFFakIsS0FBQSxHQUFRLElBQUksQ0FBQztJQUViLElBQVEsS0FBQSxZQUFpQixLQUFLLENBQUMsSUFBL0I7TUFDRSxNQUFNLENBQUMsSUFBUCxHQUFlLEtBQUssQ0FBQyxPQUFPLENBQUM7TUFDN0IsTUFBTSxDQUFDLElBQVAsR0FBZTtNQUNmLE1BQU0sQ0FBQyxJQUFQLEdBQWUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxVQUgvQjtLQUFBLE1BS0ssSUFBRyxLQUFBLFlBQWlCLEtBQUssQ0FBQyxRQUExQjtNQUNILE1BQU0sQ0FBQyxJQUFQLEdBQWU7TUFDZixNQUFNLENBQUMsSUFBUCxHQUFlO01BQ2YsTUFBTSxDQUFDLEtBQVAsR0FBZSxTQUFBLENBQVUsS0FBSyxDQUFDLEtBQWhCLEVBSFo7S0FBQSxNQUtBLElBQUcsS0FBQSxZQUFpQixLQUFLLENBQUMsT0FBMUI7TUFDSCxNQUFNLENBQUMsSUFBUCxHQUFlO01BQ2YsTUFBTSxDQUFDLElBQVAsR0FBZTtNQUNmLE1BQU0sQ0FBQyxLQUFQLEdBQWUsU0FBQSxDQUFVLEtBQUssQ0FBQyxLQUFoQixFQUhaO0tBQUEsTUFLQSxJQUFHLEtBQUEsWUFBaUIsS0FBSyxDQUFDLElBQTFCO01BQ0gsTUFBTSxDQUFDLElBQVAsR0FBZTtNQUNmLE1BQU0sQ0FBQyxJQUFQLEdBQWUsT0FGWjtLQUFBLE1BSUEsSUFBRyxhQUFIOztRQUNILE1BQU0sQ0FBQyw0Q0FBcUIsS0FBSyxDQUFDOzs7UUFDbEMsTUFBTSxDQUFDLE9BQVEsS0FBSyxDQUFDOzs7UUFDckIsTUFBTSxDQUFDLE9BQVEsS0FBSyxDQUFDOztNQUNyQixJQUF3QyxtQkFBeEM7UUFBQSxNQUFNLENBQUMsS0FBUCxHQUFlLFNBQUEsQ0FBVSxLQUFLLENBQUMsS0FBaEIsRUFBZjtPQUpHOztJQU1MLE1BQUEsR0FBUyxTQUFDLElBQUQ7TUFDUCxJQUFBLEdBQU8sSUFBSSxDQUFDLE9BQUwsQ0FBYSxJQUFiLEVBQW1CLEtBQW5CO2FBQ1AsSUFBQSxHQUFPLElBQUksQ0FBQyxPQUFMLENBQWEsSUFBYixFQUFtQixFQUFuQjtJQUZBO0FBSVQ7QUFBQSxTQUFBLHdDQUFBOztNQUNFLE1BQU0sQ0FBQyxJQUFQLENBQ0U7UUFBQSxFQUFBLEVBQU0sTUFBTSxDQUFDLEVBQWI7UUFDQSxJQUFBLEVBQU0sTUFBTSxDQUFDLElBRGI7UUFFQSxJQUFBLEVBQU0sTUFBQSxDQUFPLE1BQU0sQ0FBQyxJQUFkLENBRk47UUFHQSxJQUFBLEVBQU8sb0JBSFA7T0FERjtBQURGO0FBT0E7QUFBQSxTQUFBLHdDQUFBOztNQUNFLE9BQU8sQ0FBQyxJQUFSLENBQ0U7UUFBQSxFQUFBLEVBQU0sTUFBTSxDQUFDLEVBQWI7UUFDQSxJQUFBLEVBQU0sTUFBTSxDQUFDLElBRGI7UUFFQSxJQUFBLEVBQU0sTUFBQSxDQUFPLE1BQU0sQ0FBQyxJQUFkLENBRk47UUFHQSxJQUFBLEVBQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BSHJCO09BREY7QUFNQTtBQUFBLFdBQUEsd0NBQUE7O1FBQ0UsS0FBSyxDQUFDLElBQU4sQ0FDRTtVQUFBLElBQUEsRUFBTSxJQUFJLENBQUMsRUFBWDtVQUNBLEdBQUEsRUFBTSxNQUFNLENBQUMsRUFEYjtVQUVBLEVBQUEsRUFBTSxLQUFLLENBQUMsSUFBSSxDQUFDLEVBRmpCO1VBR0EsQ0FBQSxFQUFBLENBQUEsRUFBTSxLQUFLLENBQUMsRUFIWjtVQUlBLElBQUEsRUFBTSxNQUFBLENBQU8sTUFBTSxDQUFDLElBQWQsQ0FKTjtTQURGO0FBREY7QUFQRjtBQXRERjtTQXFFQTtJQUFDLE9BQUEsS0FBRDtJQUFRLE9BQUEsS0FBUjs7QUExRVU7O0FBNEVaLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{"../block":188}],219:[function(require,module,exports){
module.exports = require('./lib/index')

},{"./lib/index":221}],220:[function(require,module,exports){
var state
  , token
  , tokens
  , idx

var original_symbol = {
    nud: function() { return this.children && this.children.length ? this : fail('unexpected')() }
  , led: fail('missing operator')
}

var symbol_table = {}

function itself() {
  return this
}

symbol('(ident)').nud = itself
symbol('(keyword)').nud = itself
symbol('(builtin)').nud = itself
symbol('(literal)').nud = itself
symbol('(end)')

symbol(':')
symbol(';')
symbol(',')
symbol(')')
symbol(']')
symbol('}')

infixr('&&', 30)
infixr('||', 30)
infix('|', 43)
infix('^', 44)
infix('&', 45)
infix('==', 46)
infix('!=', 46)
infix('<', 47)
infix('<=', 47)
infix('>', 47)
infix('>=', 47)
infix('>>', 48)
infix('<<', 48)
infix('+', 50)
infix('-', 50)
infix('*', 60)
infix('/', 60)
infix('%', 60)
infix('?', 20, function(left) {
  this.children = [left, expression(0), (advance(':'), expression(0))]
  this.type = 'ternary'
  return this
})
infix('.', 80, function(left) {
  token.type = 'literal'
  state.fake(token)
  this.children = [left, token]
  advance()
  return this
})
infix('[', 80, function(left) {
  this.children = [left, expression(0)]
  this.type = 'binary'
  advance(']')
  return this
})
infix('(', 80, function(left) {
  this.children = [left]
  this.type = 'call'

  if(token.data !== ')') while(1) {
    this.children.push(expression(0))
    if(token.data !== ',') break
    advance(',')
  }
  advance(')')
  return this
})

prefix('-')
prefix('+')
prefix('!')
prefix('~')
prefix('defined')
prefix('(', function() {
  this.type = 'group'
  this.children = [expression(0)]
  advance(')')
  return this 
})
prefix('++')
prefix('--')
suffix('++')
suffix('--')

assignment('=')
assignment('+=')
assignment('-=')
assignment('*=')
assignment('/=')
assignment('%=')
assignment('&=')
assignment('|=')
assignment('^=')
assignment('>>=')
assignment('<<=')

module.exports = function(incoming_state, incoming_tokens) {
  state = incoming_state
  tokens = incoming_tokens
  idx = 0
  var result

  if(!tokens.length) return

  advance()
  result = expression(0)
  result.parent = state[0]
  emit(result)

  if(idx < tokens.length) {
    throw new Error('did not use all tokens')
  }

  result.parent.children = [result]

  function emit(node) {
    state.unshift(node, false)
    for(var i = 0, len = node.children.length; i < len; ++i) {
      emit(node.children[i])
    }
    state.shift()
  }

}

function symbol(id, binding_power) {
  var sym = symbol_table[id]
  binding_power = binding_power || 0
  if(sym) {
    if(binding_power > sym.lbp) {
      sym.lbp = binding_power
    }
  } else {
    sym = Object.create(original_symbol)
    sym.id = id 
    sym.lbp = binding_power
    symbol_table[id] = sym
  }
  return sym
}

function expression(rbp) {
  var left, t = token
  advance()

  left = t.nud()
  while(rbp < token.lbp) {
    t = token
    advance()
    left = t.led(left)
  }
  return left
}

function infix(id, bp, led) {
  var sym = symbol(id, bp)
  sym.led = led || function(left) {
    this.children = [left, expression(bp)]
    this.type = 'binary'
    return this
  }
}

function infixr(id, bp, led) {
  var sym = symbol(id, bp)
  sym.led = led || function(left) {
    this.children = [left, expression(bp - 1)]
    this.type = 'binary'
    return this
  }
  return sym
}

function prefix(id, nud) {
  var sym = symbol(id)
  sym.nud = nud || function() {
    this.children = [expression(70)]
    this.type = 'unary'
    return this
  }
  return sym
}

function suffix(id) {
  var sym = symbol(id, 150)
  sym.led = function(left) {
    this.children = [left]
    this.type = 'suffix'
    return this
  }
}

function assignment(id) {
  return infixr(id, 10, function(left) {
    this.children = [left, expression(9)]
    this.assignment = true
    this.type = 'assign'
    return this
  })
}

function advance(id) {
  var next
    , value
    , type
    , output

  if(id && token.data !== id) {
    return state.unexpected('expected `'+ id + '`, got `'+token.data+'`')
  }

  if(idx >= tokens.length) {
    token = symbol_table['(end)']
    return
  }

  next = tokens[idx++]
  value = next.data
  type = next.type

  if(type === 'ident') {
    output = state.scope.find(value) || state.create_node()
    type = output.type
  } else if(type === 'builtin') {
    output = symbol_table['(builtin)']
  } else if(type === 'keyword') {
    output = symbol_table['(keyword)']
  } else if(type === 'operator') {
    output = symbol_table[value]
    if(!output) {
      return state.unexpected('unknown operator `'+value+'`')
    }
  } else if(type === 'float' || type === 'integer') {
    type = 'literal'
    output = symbol_table['(literal)']
  } else {
    return state.unexpected('unexpected token.')
  }

  if(output) {
    if(!output.nud) { output.nud = itself }
    if(!output.children) { output.children = [] }
  }

  output = Object.create(output)
  output.token = next
  output.type = type
  if(!output.data) output.data = value

  return token = output
}

function fail(message) {
  return function() { return state.unexpected(message) }
}

},{}],221:[function(require,module,exports){
module.exports = parser

var through = require('../../through')
  , full_parse_expr = require('./expr')
  , Scope = require('./scope')

// singleton!
var Advance = new Object

var DEBUG = false

var _ = 0
  , IDENT = _++
  , STMT = _++
  , STMTLIST = _++
  , STRUCT = _++
  , FUNCTION = _++
  , FUNCTIONARGS = _++
  , DECL = _++
  , DECLLIST = _++
  , FORLOOP = _++
  , WHILELOOP = _++
  , IF = _++
  , EXPR = _++
  , PRECISION = _++
  , COMMENT = _++
  , PREPROCESSOR = _++
  , KEYWORD = _++
  , KEYWORD_OR_IDENT = _++
  , RETURN = _++
  , BREAK = _++
  , CONTINUE = _++
  , DISCARD = _++
  , DOWHILELOOP = _++
  , PLACEHOLDER = _++
  , QUANTIFIER = _++

var DECL_ALLOW_ASSIGN = 0x1
  , DECL_ALLOW_COMMA = 0x2
  , DECL_REQUIRE_NAME = 0x4
  , DECL_ALLOW_INVARIANT = 0x8
  , DECL_ALLOW_STORAGE = 0x10
  , DECL_NO_INOUT = 0x20
  , DECL_ALLOW_STRUCT = 0x40
  , DECL_STATEMENT = 0xFF
  , DECL_FUNCTION = DECL_STATEMENT & ~(DECL_ALLOW_ASSIGN | DECL_ALLOW_COMMA | DECL_NO_INOUT | DECL_ALLOW_INVARIANT | DECL_REQUIRE_NAME)
  , DECL_STRUCT = DECL_STATEMENT & ~(DECL_ALLOW_ASSIGN | DECL_ALLOW_INVARIANT | DECL_ALLOW_STORAGE | DECL_ALLOW_STRUCT)

var QUALIFIERS = ['const', 'attribute', 'uniform', 'varying']

var NO_ASSIGN_ALLOWED = false
  , NO_COMMA_ALLOWED = false

// map of tokens to stmt types
var token_map = {
    'block-comment': COMMENT
  , 'line-comment': COMMENT
  , 'preprocessor': PREPROCESSOR
}

// map of stmt types to human
var stmt_type = _ = [ 
    'ident'
  , 'stmt'
  , 'stmtlist'
  , 'struct'
  , 'function'
  , 'functionargs'
  , 'decl'
  , 'decllist'
  , 'forloop'
  , 'whileloop'
  , 'i'+'f'
  , 'expr'
  , 'precision'
  , 'comment'
  , 'preprocessor'
  , 'keyword'
  , 'keyword_or_ident'
  , 'return'
  , 'break'
  , 'continue'
  , 'discard'
  , 'do-while'
  , 'placeholder'
  , 'quantifier'
]

function parser() {
  var stmtlist = n(STMTLIST)
    , stmt = n(STMT)
    , decllist = n(DECLLIST)
    , precision = n(PRECISION)
    , ident = n(IDENT)
    , keyword_or_ident = n(KEYWORD_OR_IDENT)
    , fn = n(FUNCTION)
    , fnargs = n(FUNCTIONARGS)
    , forstmt = n(FORLOOP)
    , ifstmt = n(IF)
    , whilestmt = n(WHILELOOP)
    , returnstmt = n(RETURN)
    , dowhilestmt = n(DOWHILELOOP)
    , quantifier = n(QUANTIFIER)

  var parse_struct
    , parse_precision
    , parse_quantifier
    , parse_forloop
    , parse_if
    , parse_return
    , parse_whileloop
    , parse_dowhileloop
    , parse_function
    , parse_function_args

  var stream = through(write, end)
    , check = arguments.length ? [].slice.call(arguments) : []
    , depth = 0
    , state = []
    , tokens = []
    , whitespace = []
    , errored = false
    , program
    , token
    , node

  // setup state
  state.shift = special_shift
  state.unshift = special_unshift
  state.fake = special_fake
  state.unexpected = unexpected
  state.scope = new Scope(state)
  state.create_node = function() {
    var n = mknode(IDENT, token)
    n.parent = stream.program
    return n
  }

  setup_stative_parsers()

  // setup root node
  node = stmtlist()
  node.expecting = '(eof)'
  node.mode = STMTLIST
  node.token = {type: '(program)', data: '(program)'}
  program = node

  stream.program = program
  stream.scope = function(scope) {
    if(arguments.length === 1) {
      state.scope = scope
    }
    return state.scope
  }

  state.unshift(node)
  return stream

  // stream functions ---------------------------------------------

  function write(input) {
    if(input.type === 'whitespace' || input.type === 'line-comment' || input.type === 'block-comment') {

      whitespace.push(input)
      return
    }
    tokens.push(input)
    token = token || tokens[0]

    if(token && whitespace.length) {
      token.preceding = token.preceding || []
      token.preceding = token.preceding.concat(whitespace)
      whitespace = []
    }

    while(take()) switch(state[0].mode) {
      case STMT: parse_stmt(); break
      case STMTLIST: parse_stmtlist(); break
      case DECL: parse_decl(); break
      case DECLLIST: parse_decllist(); break
      case EXPR: parse_expr(); break
      case STRUCT: parse_struct(true, true); break
      case PRECISION: parse_precision(); break
      case IDENT: parse_ident(); break
      case KEYWORD: parse_keyword(); break
      case KEYWORD_OR_IDENT: parse_keyword_or_ident(); break
      case FUNCTION: parse_function(); break
      case FUNCTIONARGS: parse_function_args(); break
      case FORLOOP: parse_forloop(); break
      case WHILELOOP: parse_whileloop(); break
      case DOWHILELOOP: parse_dowhileloop(); break
      case RETURN: parse_return(); break
      case IF: parse_if(); break
      case QUANTIFIER: parse_quantifier(); break
    }
  }
  
  function end(tokens) {
    if(arguments.length) {
      write(tokens)
    }

    if(state.length > 1) {
      unexpected('unexpected EOF')
      return
    }

    stream.emit('end')
  }

  function take() {
    if(errored || !state.length)
      return false

    return (token = tokens[0]) && !stream.paused
  }

  // ----- state manipulation --------

  function special_fake(x) {
    state.unshift(x)
    state.shift()
  }

  function special_unshift(_node, add_child) {
    _node.parent = state[0]

    var ret = [].unshift.call(this, _node)

    add_child = add_child === undefined ? true : add_child

    if(DEBUG) {
      var pad = ''
      for(var i = 0, len = this.length - 1; i < len; ++i) {
        pad += ' |'
      }
      console.log(pad, '\\'+_node.type, _node.token.data)
    }

    if(add_child && node !== _node) node.children.push(_node)
    node = _node

    return ret
  }

  function special_shift() {
    var _node = [].shift.call(this)
      , okay = check[this.length]
      , emit = false

    if(DEBUG) {
      var pad = ''
      for(var i = 0, len = this.length; i < len; ++i) {
        pad += ' |'
      }
      console.log(pad, '/'+_node.type)
    }

    if(check.length) { 
      if(typeof check[0] === 'function') {
        emit = check[0](_node)
      } else if(okay !== undefined) {
        emit = okay.test ? okay.test(_node.type) : okay === _node.type
      }
    } else {
      emit = true
    }

    if(emit) stream.emit('data', _node) 
  
    node = _node.parent
    return _node
  }

  // parse states ---------------

  function parse_stmtlist() {
    // determine the type of the statement
    // and then start parsing
    return stative(
      function() { state.scope.enter(); return Advance }
    , normal_mode
    )()

    function normal_mode() {
      if(token.data === state[0].expecting) {
        return state.scope.exit(), state.shift()
      }
      switch(token.type) {
        case 'preprocessor':
          state.fake(adhoc())
          tokens.shift()
        return
        default:
          state.unshift(stmt())
        return 
      }
    }
  }

  function parse_stmt() {
    if(state[0].brace) {
      if(token.data !== '}') {
        return unexpected('expected `}`, got '+token.data)
      }
      state[0].brace = false
      return tokens.shift(), state.shift()
    }
    switch(token.type) {
      case 'eof': return state.shift()
      case 'keyword': 
        switch(token.data) {
          case 'for': return state.unshift(forstmt());
          case 'if': return state.unshift(ifstmt());
          case 'while': return state.unshift(whilestmt());
          case 'do': return state.unshift(dowhilestmt());
          case 'break': return state.fake(mknode(BREAK, token)), tokens.shift()
          case 'continue': return state.fake(mknode(CONTINUE, token)), tokens.shift()
          case 'discard': return state.fake(mknode(DISCARD, token)), tokens.shift()
          case 'return': return state.unshift(returnstmt());
          case 'precision': return state.unshift(precision());
        }
        return state.unshift(decl(DECL_STATEMENT))
      case 'ident':
        var lookup
        if(lookup = state.scope.find(token.data)) {
          if(lookup.parent.type === 'struct') {
            // this is strictly untrue, you could have an
            // expr that starts with a struct constructor.
            //      ... sigh
            return state.unshift(decl(DECL_STATEMENT))
          }
          return state.unshift(expr(';'))
        }
      case 'operator':
        if(token.data === '{') {
          state[0].brace = true
          var n = stmtlist()
          n.expecting = '}'
          return tokens.shift(), state.unshift(n)
        }
        if(token.data === ';') {
          return tokens.shift(), state.shift()
        }
      default: return state.unshift(expr(';'))
    }
  }

  function parse_decl() {
    var stmt = state[0]

    return stative(
      invariant_or_not,
      storage_or_not,
      parameter_or_not,
      precision_or_not,
      struct_or_type,
      maybe_name,
      maybe_lparen,     // lparen means we're a function
      is_decllist,
      done
    )()

    function invariant_or_not() {
      if(token.data === 'invariant') {
        if(stmt.flags & DECL_ALLOW_INVARIANT) {
          state.unshift(keyword())
          return Advance
        } else {
          return unexpected('`invariant` is not allowed here') 
        }
      } else {
        state.fake(mknode(PLACEHOLDER, {data: '', position: token.position}))
        return Advance
      }
    }

    function storage_or_not() {
      if(is_storage(token)) {
        if(stmt.flags & DECL_ALLOW_STORAGE) {
          state.unshift(keyword()) 
          return Advance
        } else {
          return unexpected('storage is not allowed here') 
        }
      } else {
        state.fake(mknode(PLACEHOLDER, {data: '', position: token.position}))
        return Advance
      }
    }

    function parameter_or_not() {
      if(is_parameter(token)) {
        if(!(stmt.flags & DECL_NO_INOUT)) {
          state.unshift(keyword()) 
          return Advance
        } else {
          return unexpected('parameter is not allowed here') 
        }
      } else {
        state.fake(mknode(PLACEHOLDER, {data: '', position: token.position}))
        return Advance
      }
    }

    function precision_or_not() {
      if(is_precision(token)) {
        state.unshift(keyword())
        return Advance
      } else {
        state.fake(mknode(PLACEHOLDER, {data: '', position: token.position}))
        return Advance
      }
    }

    function struct_or_type() {
      if(token.data === 'struct') {
        if(!(stmt.flags & DECL_ALLOW_STRUCT)) {
          return unexpected('cannot nest structs')
        }
        state.unshift(struct())
        return Advance
      }

      if(token.type === 'keyword') {
        state.unshift(keyword())
        return Advance
      }

      var lookup = state.scope.find(token.data)

      if(lookup) {
        state.fake(Object.create(lookup))
        tokens.shift()
        return Advance  
      }
      return unexpected('expected user defined type, struct or keyword, got '+token.data)
    }

    function maybe_name() {
      if(token.data === ',' && !(stmt.flags & DECL_ALLOW_COMMA)) {
        return state.shift()
      }

      if(token.data === '[') {
        // oh lord.
        state.unshift(quantifier())
        return
      }

      if(token.data === ')') return state.shift()

      if(token.data === ';') {
        return stmt.stage + 3
      }

      if(token.type !== 'ident') {
        console.log(token);
        return unexpected('expected identifier, got '+token.data)
      }

      stmt.collected_name = tokens.shift()
      return Advance      
    }

    function maybe_lparen() {
      if(token.data === '(') {
        tokens.unshift(stmt.collected_name)
        delete stmt.collected_name
        state.unshift(fn())
        return stmt.stage + 2 
      }
      return Advance
    }

    function is_decllist() {
      tokens.unshift(stmt.collected_name)
      delete stmt.collected_name
      state.unshift(decllist())
      return Advance
    }

    function done() {
      return state.shift()
    }
  }
  
  function parse_decllist() {
    // grab ident

    if(token.type === 'ident') {
      var name = token.data
      state.unshift(ident())
      state.scope.define(name)
      return
    }

    if(token.type === 'operator') {

      if(token.data === ',') {
        // multi-decl!
        if(!(state[1].flags & DECL_ALLOW_COMMA)) {
          return state.shift()
        }

        return tokens.shift()
      } else if(token.data === '=') {
        if(!(state[1].flags & DECL_ALLOW_ASSIGN)) return unexpected('`=` is not allowed here.')

        tokens.shift()

        state.unshift(expr(',', ';'))
        return
      } else if(token.data === '[') {
        state.unshift(quantifier())
        return
      }
    }
    return state.shift()
  }

  function parse_keyword_or_ident() {
    if(token.type === 'keyword') {
      state[0].type = 'keyword'
      state[0].mode = KEYWORD
      return
    }

    if(token.type === 'ident') {
      state[0].type = 'ident'
      state[0].mode = IDENT
      return
    }

    return unexpected('expected keyword or user-defined name, got '+token.data)
  }

  function parse_keyword() {
    if(token.type !== 'keyword') {
      return unexpected('expected keyword, got '+token.data)
    }

    return state.shift(), tokens.shift()
  }

  function parse_ident() {
    if(token.type !== 'ident') {
      return unexpected('expected user-defined name, got '+token.data)
    }

    state[0].data = token.data
    return state.shift(), tokens.shift()
  }


  function parse_expr() {
    var expecting = state[0].expecting

    state[0].tokens = state[0].tokens || []

    if(state[0].parenlevel === undefined) {
      state[0].parenlevel = 0
      state[0].bracelevel = 0
    }
    if(state[0].parenlevel < 1 && expecting.indexOf(token.data) > -1) {
      return parseexpr(state[0].tokens)
    }
    if(token.data === '(') {
      ++state[0].parenlevel
    } else if(token.data === ')') {
      --state[0].parenlevel
    }

    switch(token.data) {
      case '{': ++state[0].bracelevel; break
      case '}': --state[0].bracelevel; break
      case '(': ++state[0].parenlevel; break
      case ')': --state[0].parenlevel; break
    }

    if(state[0].parenlevel < 0) return unexpected('unexpected `)`')
    if(state[0].bracelevel < 0) return unexpected('unexpected `}`')

    state[0].tokens.push(tokens.shift())
    return

    function parseexpr(tokens) {
      return full_parse_expr(state, tokens), state.shift()
    }
  }

  // node types ---------------

  function n(type) {
    // this is a function factory that suffices for most kinds of expressions and statements
    return function() {
      return mknode(type, token)
    }
  }

  function adhoc() {
    return mknode(token_map[token.type], token, node)
  }

  function decl(flags) {
    var _ = mknode(DECL, token, node)
    _.flags = flags

    return _
  }

  function struct(allow_assign, allow_comma) {
    var _ = mknode(STRUCT, token, node)
    _.allow_assign = allow_assign === undefined ? true : allow_assign
    _.allow_comma = allow_comma === undefined ? true : allow_comma
    return _
  }

  function expr() {
    var n = mknode(EXPR, token, node)

    n.expecting = [].slice.call(arguments)
    return n
  }
  
  function keyword(default_value) {
    var t = token
    if(default_value) {
      t = {'type': '(implied)', data: '(default)', position: t.position} 
    }
    return mknode(KEYWORD, t, node)
  }

  // utils ----------------------------

  function unexpected(str) {
    errored = true
    stream.emit('error', new Error(
      (str || 'unexpected '+state) +
      ' at line '+state[0].token.line
    ))
  }

  function assert(type, data) {
    return 1,
      assert_null_string_or_array(type, token.type) && 
      assert_null_string_or_array(data, token.data)
  }

  function assert_null_string_or_array(x, y) {
    switch(typeof x) {
      case 'string': if(y !== x) {
        unexpected('expected `'+x+'`, got '+y+'\n'+token.data);
      } return !errored

      case 'object': if(x && x.indexOf(y) === -1) {
        unexpected('expected one of `'+x.join('`, `')+'`, got '+y);
      } return !errored
    }
    return true
  }

  // stative ----------------------------

  function stative() {
    var steps = [].slice.call(arguments)
      , step
      , result

    return function() {
      var current = state[0]

      current.stage || (current.stage = 0)

      step = steps[current.stage]
      if(!step) return unexpected('parser in undefined state!')

      result = step()

      if(result === Advance) return ++current.stage
      if(result === undefined) return
      current.stage = result
    } 
  }

  function advance(op, t) {
    t = t || 'operator'
    return function() {
      if(!assert(t, op)) return

      var last = tokens.shift()
        , children = state[0].children
        , last_node = children[children.length - 1]

      if(last_node && last_node.token && last.preceding) {
        last_node.token.succeeding = last_node.token.succeeding || []
        last_node.token.succeeding = last_node.token.succeeding.concat(last.preceding)
      }
      return Advance
    }
  }

  function advance_expr(until) {
    return function() { return state.unshift(expr(until)), Advance }
  }

  function advance_ident(declare) {
    return declare ? function() {
      var name = token.data
      return assert('ident') && (state.unshift(ident()), state.scope.define(name), Advance)
    } :  function() {
      if(!assert('ident')) return

      var s = Object.create(state.scope.find(token.data))
      s.token = token

      return (tokens.shift(), Advance)
    }
  }

  function advance_stmtlist() {
    return function() {
      var n = stmtlist()
      n.expecting = '}'
      return state.unshift(n), Advance
    }
  }

  function maybe_stmtlist(skip) {
    return function() {
      var current = state[0].stage
      if(token.data !== '{') { return state.unshift(stmt()), current + skip }
      return tokens.shift(), Advance
    }
  }

  function popstmt() {
    return function() { return state.shift(), state.shift() }
  }


  function setup_stative_parsers() {

    // could also be
    // struct { } decllist
    parse_struct =
        stative(
          advance('struct', 'keyword')
        , function() {
            if(token.data === '{') {
              state.fake(mknode(IDENT, {data:'', position: token.position, type:'ident'}))
              return Advance
            }

            return advance_ident(true)()
          }
        , function() { state.scope.enter(); return Advance }
        , advance('{')
        , function() {
            if(token.data === '}') {
              state.scope.exit()
              tokens.shift()
              return state.shift()
            }
            if(token.data === ';') { tokens.shift(); return }
            state.unshift(decl(DECL_STRUCT))
          }
        )

    parse_precision =
        stative(
          function() { return tokens.shift(), Advance }
        , function() { 
            return assert(
            'keyword', ['lowp', 'mediump', 'highp']
            ) && (state.unshift(keyword()), Advance) 
          }
        , function() { return (state.unshift(keyword()), Advance) }
        , function() { return state.shift() } 
        )

    parse_quantifier =
        stative(
          advance('[')
        , advance_expr(']')
        , advance(']')
        , function() { return state.shift() }
        )

    parse_forloop = 
        stative(
          advance('for', 'keyword')
        , advance('(')
        , function() {
            var lookup
            if(token.type === 'ident') {
              if(!(lookup = state.scope.find(token.data))) {
                lookup = state.create_node()
              }
             
              if(lookup.parent.type === 'struct') {
                return state.unshift(decl(DECL_STATEMENT)), Advance
              }
            } else if(token.type === 'builtin' || token.type === 'keyword') {
              return state.unshift(decl(DECL_STATEMENT)), Advance
            }
            return advance_expr(';')()
          }
        , advance(';')
        , advance_expr(';')
        , advance(';')
        , advance_expr(')')
        , advance(')')
        , maybe_stmtlist(3)
        , advance_stmtlist()
        , advance('}')
        , popstmt()
        )

    parse_if = 
        stative(
          advance('if', 'keyword')
        , advance('(')
        , advance_expr(')')
        , advance(')')
        , maybe_stmtlist(3)
        , advance_stmtlist()
        , advance('}')
        , function() {
            if(token.data === 'else') {
              return tokens.shift(), state.unshift(stmt()), Advance
            }
            return popstmt()()
          }
        , popstmt()
        )

    parse_return =
        stative(
          advance('return', 'keyword')
        , function() {
            if(token.data === ';') return Advance
            return state.unshift(expr(';')), Advance
          }
        , function() { tokens.shift(), popstmt()() } 
        )

    parse_whileloop =
        stative(
          advance('while', 'keyword')
        , advance('(')
        , advance_expr(')')
        , advance(')')
        , maybe_stmtlist(3)
        , advance_stmtlist()
        , advance('}')
        , popstmt()
        )

    parse_dowhileloop = 
      stative(
        advance('do', 'keyword')
      , maybe_stmtlist(3)
      , advance_stmtlist()
      , advance('}')
      , advance('while', 'keyword')
      , advance('(')
      , advance_expr(')')
      , advance(')')
      , popstmt()
      )

    parse_function =
      stative(
        function() {
          for(var i = 1, len = state.length; i < len; ++i) if(state[i].mode === FUNCTION) {
            return unexpected('function definition is not allowed within another function')
          }

          return Advance
        }
      , function() {
          if(!assert("ident")) return

          var name = token.data
            , lookup = state.scope.find(name)

          state.unshift(ident())
          state.scope.define(name)

          state.scope.enter(lookup ? lookup.scope : null)
          return Advance
        }
      , advance('(')
      , function() { return state.unshift(fnargs()), Advance }
      , advance(')')
      , function() { 
          // forward decl
          if(token.data === ';') {
            return state.scope.exit(), state.shift(), state.shift()
          }
          return Advance
        }
      , advance('{')
      , advance_stmtlist()
      , advance('}')
      , function() { state.scope.exit(); return Advance } 
      , function() { return state.shift(), state.shift(), state.shift() }
      )

    parse_function_args =
      stative(
        function() {
          if(token.data === 'void') { state.fake(keyword()); tokens.shift(); return Advance }
          if(token.data === ')') { state.shift(); return }
          if(token.data === 'struct') {
            state.unshift(struct(NO_ASSIGN_ALLOWED, NO_COMMA_ALLOWED))
            return Advance
          }
          state.unshift(decl(DECL_FUNCTION))
          return Advance
        }
      , function() {
          if(token.data === ',') { tokens.shift(); return 0 }
          if(token.data === ')') { state.shift(); return }
          unexpected('expected one of `,` or `)`, got '+token.data)
        }
      )
  }
}

function mknode(mode, sourcetoken) {
  return {
      mode: mode
    , token: sourcetoken
    , children: []
    , type: stmt_type[mode]
//    , id: (Math.random() * 0xFFFFFFFF).toString(16)
  }
}

function is_storage(token) {
  return token.data === 'const' ||
         token.data === 'attribute' ||
         token.data === 'uniform' ||
         token.data === 'varying'
}

function is_parameter(token) {
  return token.data === 'in' ||
         token.data === 'inout' ||
         token.data === 'out'
}

function is_precision(token) {
  return token.data === 'highp' ||
         token.data === 'mediump' ||
         token.data === 'lowp'
}

},{"../../through":227,"./expr":220,"./scope":222}],222:[function(require,module,exports){
module.exports = scope

function scope(state) {
  if(this.constructor !== scope)
    return new scope(state)

  this.state = state
  this.scopes = []
  this.current = null
}

var cons = scope
  , proto = cons.prototype

proto.enter = function(s) {
  this.scopes.push(
    this.current = this.state[0].scope = s || {}
  )
}

proto.exit = function() {
  this.scopes.pop()
  this.current = this.scopes[this.scopes.length - 1]
}

proto.define = function(str) {
  this.current[str] = this.state[0]
}

proto.find = function(name, fail) {
  for(var i = this.scopes.length - 1; i > -1; --i) {
    if(this.scopes[i].hasOwnProperty(name)) {
      return this.scopes[i][name]
    }
  }

  return null
}

},{}],223:[function(require,module,exports){
module.exports = tokenize

var through = require('../through')

var literals = require('./lib/literals')
  , operators = require('./lib/operators')
  , builtins = require('./lib/builtins')

var NORMAL = 999          // <-- never emitted
  , TOKEN = 9999          // <-- never emitted 
  , BLOCK_COMMENT = 0 
  , LINE_COMMENT = 1
  , PREPROCESSOR = 2
  , OPERATOR = 3
  , INTEGER = 4
  , FLOAT = 5
  , IDENT = 6
  , BUILTIN = 7
  , KEYWORD = 8
  , WHITESPACE = 9
  , EOF = 10 
  , HEX = 11

var map = [
    'block-comment'
  , 'line-comment'
  , 'preprocessor'
  , 'operator'
  , 'integer'
  , 'float'
  , 'ident'
  , 'builtin'
  , 'keyword'
  , 'whitespace'
  , 'eof'
  , 'integer'
]

function tokenize() {
  var stream = through(write, end)

  var i = 0
    , total = 0
    , mode = NORMAL 
    , c
    , last
    , content = []
    , token_idx = 0
    , token_offs = 0
    , line = 1
    , start = 0
    , isnum = false
    , isoperator = false
    , input = ''
    , len

  return stream

  function token(data) {
    if(data.length) {
      stream.queue({
        type: map[mode]
      , data: data
      , position: start
      , line: line
      })
    }
  }

  function write(chunk) {
    i = 0
    input += chunk.toString()
    len = input.length

    while(c = input[i], i < len) switch(mode) {
      case BLOCK_COMMENT: i = block_comment(); break
      case LINE_COMMENT: i = line_comment(); break
      case PREPROCESSOR: i = preprocessor(); break 
      case OPERATOR: i = operator(); break
      case INTEGER: i = integer(); break
      case HEX: i = hex(); break
      case FLOAT: i = decimal(); break
      case TOKEN: i = readtoken(); break
      case WHITESPACE: i = whitespace(); break
      case NORMAL: i = normal(); break
    }

    total += i
    input = input.slice(i)
  } 

  function end(chunk) {
    if(content.length) {
      token(content.join(''))
    }

    mode = EOF
    token('(eof)')

    stream.queue(null)
  }

  function normal() {
    content = content.length ? [] : content

    if(last === '/' && c === '*') {
      start = total + i - 1
      mode = BLOCK_COMMENT
      last = c
      return i + 1
    }

    if(last === '/' && c === '/') {
      start = total + i - 1
      mode = LINE_COMMENT
      last = c
      return i + 1
    }

    if(c === '#') {
      mode = PREPROCESSOR
      start = total + i
      return i
    }

    if(/\s/.test(c)) {
      mode = WHITESPACE
      start = total + i
      return i
    }

    isnum = /\d/.test(c)
    isoperator = /[^\w_]/.test(c)

    start = total + i
    mode = isnum ? INTEGER : isoperator ? OPERATOR : TOKEN
    return i
  }

  function whitespace() {
    if(c === '\n') ++line

    if(/[^\s]/g.test(c)) {
      token(content.join(''))
      mode = NORMAL
      return i
    }
    content.push(c)
    last = c
    return i + 1
  }

  function preprocessor() {
    if(c === '\n') ++line

    if(c === '\n' && last !== '\\') {
      token(content.join(''))
      mode = NORMAL
      return i
    }
    content.push(c)
    last = c
    return i + 1
  }

  function line_comment() {
    return preprocessor()
  }

  function block_comment() {
    if(c === '/' && last === '*') {
      content.push(c)
      token(content.join(''))
      mode = NORMAL
      return i + 1
    }

    if(c === '\n') ++line

    content.push(c)
    last = c
    return i + 1
  }

  function operator() {
    if(last === '.' && /\d/.test(c)) {
      mode = FLOAT
      return i
    }

    if(last === '/' && c === '*') {
      mode = BLOCK_COMMENT
      return i
    }

    if(last === '/' && c === '/') {
      mode = LINE_COMMENT
      return i
    }

    if(c === '.' && content.length) {
      while(determine_operator(content));
      
      mode = FLOAT
      return i
    }

    if(c === ';') {
      if(content.length) while(determine_operator(content));
      token(c)
      mode = NORMAL
      return i + 1
    }

    var is_composite_operator = content.length === 2 && c !== '='
    if(/[\w_\d\s]/.test(c) || is_composite_operator) {
      while(determine_operator(content));
      mode = NORMAL
      return i
    }

    content.push(c)
    last = c
    return i + 1
  }

  function determine_operator(buf) {
    var j = 0
      , k = buf.length
      , idx

    do {
      idx = operators.indexOf(buf.slice(0, buf.length + j).join(''))
      if(idx === -1) { 
        j -= 1
        k -= 1
        if (k < 0) return 0
        continue
      }
      
      token(operators[idx])

      start += operators[idx].length
      content = content.slice(operators[idx].length)
      return content.length
    } while(1)
  }

  function hex() {
    if(/[^a-fA-F0-9]/.test(c)) {
      token(content.join(''))
      mode = NORMAL
      return i
    }

    content.push(c)
    last = c
    return i + 1    
  }

  function integer() {
    if(c === '.') {
      content.push(c)
      mode = FLOAT
      last = c
      return i + 1
    }

    if(/[eE]/.test(c)) {
      content.push(c)
      mode = FLOAT
      last = c
      return i + 1
    }

    if(c === 'x' && content.length === 1 && content[0] === '0') {
      mode = HEX
      content.push(c)
      last = c
      return i + 1
    }

    if(/[^\d]/.test(c)) {
      token(content.join(''))
      mode = NORMAL
      return i
    }

    content.push(c)
    last = c
    return i + 1
  }

  function decimal() {
    if(c === 'f') {
      content.push(c)
      last = c
      i += 1
    }

    if(/[eE]/.test(c)) {
      content.push(c)
      last = c
      return i + 1
    }

    if(/[^\d]/.test(c)) {
      token(content.join(''))
      mode = NORMAL
      return i
    }
    content.push(c)
    last = c
    return i + 1
  }

  function readtoken() {
    if(/[^\d\w_]/.test(c)) {
      var contentstr = content.join('')
      if(literals.indexOf(contentstr) > -1) {
        mode = KEYWORD
      } else if(builtins.indexOf(contentstr) > -1) {
        mode = BUILTIN
      } else {
        mode = IDENT
      }
      token(content.join(''))
      mode = NORMAL
      return i
    }
    content.push(c)
    last = c
    return i + 1
  }
}

},{"../through":227,"./lib/builtins":224,"./lib/literals":225,"./lib/operators":226}],224:[function(require,module,exports){
module.exports = [
    'gl_Position'
  , 'gl_PointSize'
  , 'gl_ClipVertex'
  , 'gl_FragCoord'
  , 'gl_FrontFacing'
  , 'gl_FragColor'
  , 'gl_FragData'
  , 'gl_FragDepth'
  , 'gl_Color'
  , 'gl_SecondaryColor'
  , 'gl_Normal'
  , 'gl_Vertex'
  , 'gl_MultiTexCoord0'
  , 'gl_MultiTexCoord1'
  , 'gl_MultiTexCoord2'
  , 'gl_MultiTexCoord3'
  , 'gl_MultiTexCoord4'
  , 'gl_MultiTexCoord5'
  , 'gl_MultiTexCoord6'
  , 'gl_MultiTexCoord7'
  , 'gl_FogCoord'
  , 'gl_MaxLights'
  , 'gl_MaxClipPlanes'
  , 'gl_MaxTextureUnits'
  , 'gl_MaxTextureCoords'
  , 'gl_MaxVertexAttribs'
  , 'gl_MaxVertexUniformComponents'
  , 'gl_MaxVaryingFloats'
  , 'gl_MaxVertexTextureImageUnits'
  , 'gl_MaxCombinedTextureImageUnits'
  , 'gl_MaxTextureImageUnits'
  , 'gl_MaxFragmentUniformComponents'
  , 'gl_MaxDrawBuffers'
  , 'gl_ModelViewMatrix'
  , 'gl_ProjectionMatrix'
  , 'gl_ModelViewProjectionMatrix'
  , 'gl_TextureMatrix'
  , 'gl_NormalMatrix'
  , 'gl_ModelViewMatrixInverse'
  , 'gl_ProjectionMatrixInverse'
  , 'gl_ModelViewProjectionMatrixInverse'
  , 'gl_TextureMatrixInverse'
  , 'gl_ModelViewMatrixTranspose'
  , 'gl_ProjectionMatrixTranspose'
  , 'gl_ModelViewProjectionMatrixTranspose'
  , 'gl_TextureMatrixTranspose'
  , 'gl_ModelViewMatrixInverseTranspose'
  , 'gl_ProjectionMatrixInverseTranspose'
  , 'gl_ModelViewProjectionMatrixInverseTranspose'
  , 'gl_TextureMatrixInverseTranspose'
  , 'gl_NormalScale'
  , 'gl_DepthRangeParameters'
  , 'gl_DepthRange'
  , 'gl_ClipPlane'
  , 'gl_PointParameters'
  , 'gl_Point'
  , 'gl_MaterialParameters'
  , 'gl_FrontMaterial'
  , 'gl_BackMaterial'
  , 'gl_LightSourceParameters'
  , 'gl_LightSource'
  , 'gl_LightModelParameters'
  , 'gl_LightModel'
  , 'gl_LightModelProducts'
  , 'gl_FrontLightModelProduct'
  , 'gl_BackLightModelProduct'
  , 'gl_LightProducts'
  , 'gl_FrontLightProduct'
  , 'gl_BackLightProduct'
  , 'gl_FogParameters'
  , 'gl_Fog'
  , 'gl_TextureEnvColor'
  , 'gl_EyePlaneS'
  , 'gl_EyePlaneT'
  , 'gl_EyePlaneR'
  , 'gl_EyePlaneQ'
  , 'gl_ObjectPlaneS'
  , 'gl_ObjectPlaneT'
  , 'gl_ObjectPlaneR'
  , 'gl_ObjectPlaneQ'
  , 'gl_FrontColor'
  , 'gl_BackColor'
  , 'gl_FrontSecondaryColor'
  , 'gl_BackSecondaryColor'
  , 'gl_TexCoord'
  , 'gl_FogFragCoord'
  , 'gl_Color'
  , 'gl_SecondaryColor'
  , 'gl_TexCoord'
  , 'gl_FogFragCoord'
  , 'gl_PointCoord'
  , 'radians'
  , 'degrees'
  , 'sin'
  , 'cos'
  , 'tan'
  , 'asin'
  , 'acos'
  , 'atan'
  , 'pow'
  , 'exp'
  , 'log'
  , 'exp2'
  , 'log2'
  , 'sqrt'
  , 'inversesqrt'
  , 'abs'
  , 'sign'
  , 'floor'
  , 'ceil'
  , 'fract'
  , 'mod'
  , 'min'
  , 'max'
  , 'clamp'
  , 'mix'
  , 'step'
  , 'smoothstep'
  , 'length'
  , 'distance'
  , 'dot'
  , 'cross'
  , 'normalize'
  , 'faceforward'
  , 'reflect'
  , 'refract'
  , 'matrixCompMult'
  , 'lessThan'
  , 'lessThanEqual'
  , 'greaterThan'
  , 'greaterThanEqual'
  , 'equal'
  , 'notEqual'
  , 'any'
  , 'all'
  , 'not'
  , 'texture2D'
  , 'texture2DProj'
  , 'texture2DLod'
  , 'texture2DProjLod'
  , 'textureCube'
  , 'textureCubeLod'
]

},{}],225:[function(require,module,exports){
module.exports = [
  // current
    'precision'
  , 'highp'
  , 'mediump'
  , 'lowp'
  , 'attribute'
  , 'const'
  , 'uniform'
  , 'varying'
  , 'break'
  , 'continue'
  , 'do'
  , 'fo'+'r'
  , 'whi'+'le'
  , 'i'+'f'
  , 'else'
  , 'in'
  , 'out'
  , 'inout'
  , 'float'
  , 'int'
  , 'void'
  , 'bool'
  , 'true'
  , 'false'
  , 'discard'
  , 'return'
  , 'mat2'
  , 'mat3'
  , 'mat4'
  , 'vec2'
  , 'vec3'
  , 'vec4'
  , 'ivec2'
  , 'ivec3'
  , 'ivec4'
  , 'bvec2'
  , 'bvec3'
  , 'bvec4'
  , 'sampler1D'
  , 'sampler2D'
  , 'sampler3D'
  , 'samplerCube'
  , 'sampler1DShadow'
  , 'sampler2DShadow'
  , 'struct'

  // future
  , 'asm'
  , 'class'
  , 'union'
  , 'enum'
  , 'typedef'
  , 'template'
  , 'this'
  , 'packed'
  , 'goto'
  , 'switch'
  , 'default'
  , 'inline'
  , 'noinline'
  , 'volatile'
  , 'public'
  , 'static'
  , 'extern'
  , 'external'
  , 'interface'
  , 'long'
  , 'short'
  , 'double'
  , 'half'
  , 'fixed'
  , 'unsigned'
  , 'input'
  , 'output'
  , 'hvec2'
  , 'hvec3'
  , 'hvec4'
  , 'dvec2'
  , 'dvec3'
  , 'dvec4'
  , 'fvec2'
  , 'fvec3'
  , 'fvec4'
  , 'sampler2DRect'
  , 'sampler3DRect'
  , 'sampler2DRectShadow'
  , 'sizeof'
  , 'cast'
  , 'namespace'
  , 'using'
]

},{}],226:[function(require,module,exports){
module.exports = [
    '<<='
  , '>>='
  , '++'
  , '--'
  , '<<'
  , '>>'
  , '<='
  , '>='
  , '=='
  , '!='
  , '&&'
  , '||'
  , '+='
  , '-='
  , '*='
  , '/='
  , '%='
  , '&='
  , '^='
  , '|='
  , '('
  , ')'
  , '['
  , ']'
  , '.'
  , '!'
  , '~'
  , '*'
  , '/'
  , '%'
  , '+'
  , '-'
  , '<'
  , '>'
  , '&'
  , '^'
  , '|'
  , '?'
  , ':'
  , '='
  , ','
  , ';'
  , '{'
  , '}'
]

},{}],227:[function(require,module,exports){
var through;

through = function(write, end) {
  var errors, output;
  output = [];
  errors = [];
  return {
    output: output,
    parser: null,
    write: write,
    end: end,
    process: function(parser, data) {
      this.parser = parser;
      write(data);
      this.flush();
      return this.parser.flush();
    },
    flush: function() {
      end();
      return [output, errors];
    },
    queue: function(obj) {
      var ref;
      if (obj != null) {
        return (ref = this.parser) != null ? ref.write(obj) : void 0;
      }
    },
    emit: function(type, node) {
      if (type === 'data') {
        if (node.parent == null) {
          output.push(node);
        }
      }
      if (type === 'error') {
        return errors.push(node);
      }
    }
  };
};

module.exports = through;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFx2ZW5kb3JcXHRocm91Z2guY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQzpcXHByb2plY3RzXFxyZXBvc1xcbWF0aGJveC11cGRhdGVkXFx2ZW5kb3JcXHNoYWRlcmdyYXBoXFx2ZW5kb3JcXHRocm91Z2guY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLElBQUE7O0FBQUEsT0FBQSxHQUFVLFNBQUMsS0FBRCxFQUFRLEdBQVI7QUFDUixNQUFBO0VBQUEsTUFBQSxHQUFTO0VBQ1QsTUFBQSxHQUFTO1NBRVQ7SUFBQSxNQUFBLEVBQVEsTUFBUjtJQUNBLE1BQUEsRUFBUSxJQURSO0lBRUEsS0FBQSxFQUFPLEtBRlA7SUFHQSxHQUFBLEVBQUssR0FITDtJQUtBLE9BQUEsRUFBUyxTQUFDLE1BQUQsRUFBVSxJQUFWO01BQUMsSUFBQyxDQUFBLFNBQUQ7TUFDUixLQUFBLENBQU0sSUFBTjtNQUNBLElBQUMsQ0FBQSxLQUFELENBQUE7YUFDQSxJQUFDLENBQUEsTUFBTSxDQUFDLEtBQVIsQ0FBQTtJQUhPLENBTFQ7SUFVQSxLQUFBLEVBQU8sU0FBQTtNQUNMLEdBQUEsQ0FBQTthQUNBLENBQUMsTUFBRCxFQUFTLE1BQVQ7SUFGSyxDQVZQO0lBZUEsS0FBQSxFQUFPLFNBQUMsR0FBRDtBQUNMLFVBQUE7TUFBQSxJQUFzQixXQUF0QjtnREFBTyxDQUFFLEtBQVQsQ0FBZSxHQUFmLFdBQUE7O0lBREssQ0FmUDtJQW1CQSxJQUFBLEVBQU0sU0FBQyxJQUFELEVBQU8sSUFBUDtNQUNKLElBQUcsSUFBQSxLQUFRLE1BQVg7UUFDRSxJQUFJLG1CQUFKO1VBQ0UsTUFBTSxDQUFDLElBQVAsQ0FBWSxJQUFaLEVBREY7U0FERjs7TUFHQSxJQUFHLElBQUEsS0FBUSxPQUFYO2VBQ0UsTUFBTSxDQUFDLElBQVAsQ0FBWSxJQUFaLEVBREY7O0lBSkksQ0FuQk47O0FBSlE7O0FBOEJWLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=

},{}]},{},[30])